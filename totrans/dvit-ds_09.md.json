["```py\nimport pandas as pd\nimport numpy as np\ninteraction=pd.read_csv('https://bradfordtuckfield.com/purchasehistory1.csv')\ninteraction.set_index(\"Unnamed: 0\", inplace = True)\nprint(interaction)\n```", "```py\n Unnamed: 0  user1  user2  user3  user4  user5\n0      item1      1      1      0      1      1\n1      item2      1      0      1      1      0\n2      item3      1      1      0      1      1\n3      item4      1      0      1      0      1\n4      item5      1      1      0      0      1\n```", "```py\ninteraction_withcounts=interaction.copy()\ninteraction_withcounts.loc[:,'counts']=interaction_withcounts.sum(axis=1)\ninteraction_withcounts=interaction_withcounts.sort_values(by='counts',ascending=False)\nprint(list(interaction_withcounts.index))\n```", "```py\n['item1', 'item3', 'item2', 'item4', 'item5']\n```", "```py\ndef popularity_based(interaction):\n    interaction_withcounts=interaction.copy()\n    interaction_withcounts.loc[:,'counts']=interaction_withcounts.sum(axis=1)\n    sorted = interaction_withcounts.sort_values(by='counts',ascending=False)\n    most_popular=list(sorted.index)\n    return(most_popular)\n```", "```py\n Unnamed: 0  user1  user2  user3  user4  user5\n0      item1      1      1      0      1      1\n1      item2      1      0      1      1      0\n2      item3      1      1      0      1      1\n3      item4      1      0      1      0      1\n4      item5      1      1      0      0      1\n```", "```py\nprint(list(interaction.loc['item1',:]))\n```", "```py\n[1,1,0,1,1]\n```", "```py\ndef dot_product(vector1,vector2):\n    thedotproduct=np.sum([vector1[k]*vector2[k] for k in range(0,len(vector1))])\n    return(thedotproduct)\n```", "```py\ndef vector_norm(vector):\n    thenorm=np.sqrt(dot_product(vector,vector))\n    return(thenorm)\n```", "```py\ndef cosine_similarity(vector1,vector2):\n    thedotproduct=dot_product(vector1,vector2)\n    thecosine=thedotproduct/(vector_norm(vector1)*vector_norm(vector2))\n    thecosine=np.round(thecosine,4)\n    return(thecosine)\n```", "```py\nimport numpy as np\nitem1=interaction.loc['item1',:]\nitem3=interaction.loc['item3',:]\nprint(cosine_similarity(item1,item3))\n```", "```py\n1.0\n```", "```py\nitem2=list(interaction.loc['item2',:])\nitem5=list(interaction.loc['item5',:])\nprint(cosine_similarity(item2,item5))\n```", "```py\nouritem='item1'\notherrows=[rowname for rowname in interaction.index if rowname!=ouritem]\notheritems=interaction.loc[otherrows,:]\ntheitem=interaction.loc[ouritem,:]\n```", "```py\nsimilarities=[]\nfor items in otheritems.index:\n    similarities.append(cosine_similarity(theitem,otheritems.loc[items,:]))\n\notheritems['similarities']=similarities\nrecommendations = list(otheritems.sort_values(by='similarities',ascending=False).index)\n```", "```py\n['item3', 'item5', 'item2', 'item4']\n```", "```py\ndef get_item_recommendations(interaction,itemname):\n    otherrows=[rowname for rowname in interaction.index if rowname!=itemname]\n    otheritems=interaction.loc[otherrows,:]\n    theitem=list(interaction.loc[itemname,:])\n    similarities=[]\n    for items in otheritems.index:\n        similarities.append(cosine_similarity(theitem,list(otheritems.loc[items,:])))\n    otheritems['similarities']=similarities\n    return list(otheritems.sort_values(by='similarities',ascending=False).index)\n```", "```py\n Unnamed: 0  user1  user2  user3  user4  user5\n0      item1      1      1      0      1      1\n1      item2      1      0      1      1      0\n2      item3      1      1      0      1      1\n3      item4      1      0      1      0      1\n4      item5      1      1      0      0      1\n```", "```py\nuser2=interaction.loc[:,'user2']\nuser5=interaction.loc[:,'user5']\nprint(cosine_similarity(user2,user5))\n```", "```py\nuser3=interaction.loc[:,'user3']\nuser5=interaction.loc[:,'user5']\nprint(cosine_similarity(user3,user5))\n```", "```py\ndef get_similar_users(interaction,username):\n    othercolumns=[columnname for columnname in interaction.columns if columnname!=username]\n    otherusers=interaction[othercolumns]\n    theuser=list(interaction[username])\n    similarities=[]\n    for users in otherusers.columns:\n        similarities.append(cosine_similarity(theuser,list(otherusers.loc[:,users])))\n    otherusers.loc['similarities',:]=similarities\n    return list(otherusers.sort_values(by='similarities',axis=1,ascending=False).columns)\n```", "```py\ndef get_user_recommendations(interaction,username):\n    similar_users=get_similar_users(interaction,username)\n    purchase_history=interaction[similar_users[0]]\n    purchased=list(purchase_history.loc[purchase_history==1].index)\n purchased2=list(interaction.loc[interaction[username]==1,:].index)\n    recs=sorted(list(set(purchased) - set(purchased2)))\n    return(recs)\n```", "```py\n['item4']\n```", "```py\nimport pandas as pd\nlastfm = pd.read_csv(\"https://bradfordtuckfield.com/lastfm-matrix-germany.csv\")\nprint(lastfm.head())\n```", "```py\n user  a perfect circle  abba  ...  underoath  volbeat  yann tiersen\n0     1                 0     0  ...          0        0             0\n1    33                 0     0  ...          0        0             0\n2    42                 0     0  ...          0        0             0\n3    51                 0     0  ...          0        0             0\n4    62                 0     0  ...          0        0             0\n```", "```py\nlastfm.drop(['user'],axis=1,inplace=True)\n```", "```py\nlastfmt=lastfm.T\n```", "```py\nprint(lastfmt.shape)\n```", "```py\nget_item_recommendations(lastfmt,'abba')[0:10]\n```", "```py\n['madonna', 'robbie williams', 'elvis presley', 'michael jackson', 'queen',\n'the beatles', 'kelly clarkson', 'groove coverage', 'duffy', 'mika']\n```", "```py\nprint(get_user_recommendations(lastfmt,0)[0:3])\n```", "```py\n['billy talent', 'bob marley', 'die toten hosen']\n```"]