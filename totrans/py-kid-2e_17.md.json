["```py\nfrom tkinter import *\nimport random\nimport time  \n\nclass Game:\n    def __init__(self):\n        self.tk = Tk()\n        self.tk.title('Mr. Stick Man Races for the Exit')\n        self.tk.resizable(0, 0)\n        self.tk.wm_attributes('-topmost', 1)\n        self.canvas = Canvas(self.tk, width=500, height=500,\n                             highlightthickness=0)\n        self.canvas.pack()\n        self.tk.update()\n        self.canvas_height = self.canvas.winfo_height()\n        self.canvas_width = self.canvas.winfo_width()\n\n```", "```py\n        self.tk.update()\n        self.canvas_height = self.canvas.winfo_height()\n        self.canvas_width = self.canvas.winfo_width()\n        self.bg = PhotoImage(file='background.gif')\n        w = self.bg.width()\n        h = self.bg.height()\n     ➊ for x in range(0, 5):\n         ➋ for y in range(0, 5):\n                self.canvas.create_image(x * w, y * h, \n                        image=self.bg, anchor='nw')\n        self.sprites = []\n        self.running = True\n\n```", "```py\n        for x in range(0, 5):\n            for y in range(0, 5):\n                self.canvas.create_image(x * w, y * h, \n                        image=self.bg, anchor='nw')\n        self.sprites = []\n        self.running = True\n\n    def mainloop(self):\n        while True:\n           if self.running == True:\n               for sprite in self.sprites:\n                   sprite.move()\n            self.tk.update_idletasks()\n            self.tk.update()\n            time.sleep(0.01)\n\n```", "```py\ng = Game()\ng.mainloop()\n```", "```py\nclass Coords:\n    def __init__(self, x1=0, y1=0, x2=0, y2=0):\n        self.x1 = x1\n        self.y1 = y1\n        self.x2 = x2\n        self.y2 = y2\n\n```", "```py\nclass Coords:\n    def __init__(self, x1=0, y1=0, x2=0, y2=0):\n        self.x1 = x1\n        self.y1 = y1\n        self.x2 = x2\n        self.y2 = y2\n\ndef within_x(co1, co2):\n ➊ if co1.x1 > co2.x1 and co1.x1 < co2.x2:\n        return True\n ➋ elif co1.x2 > co2.x1 and co1.x2 < co2.x2:\n        return True\n    elif co2.x1 > co1.x1 and co2.x1 < co1.x2:\n        return True\n    elif co2.x2 > co1.x1 and co2.x2 < co1.x2:\n        return True\n    else:\n        return False\n\n```", "```py\n>>> c1 = Coords(50, 50, 100, 100)\n>>> c2 = Coords(40, 40, 150, 150)\n>>> print(within_x(c1, c2))\nTrue\n\n```", "```py\ndef within_x(co1, co2):\n    if (co1.x1 > co2.x1 and co1.x1 < co2.x2) \\\n            or (co1.x2 > co2.x1 and co1.x2 < co2.x2) \\\n            or (co2.x1 > co1.x1 and co2.x1 < co1.x2) \\\n            or (co2.x2 > co1.x1 and co2.x2 < co1.x2):\n        return True\n    else:\n        return False\n\n```", "```py\ndef within_y(co1, co2):\n    if (co1.y1 > co2.y1 and co1.y1 < co2.y2) \\\n            or (co1.y2 > co2.y1 and co1.y2 < co2.y2) \\\n            or (co2.y1 > co1.y1 and co2.y1 < co1.y2) \\\n            or (co2.y2 > co1.y1 and co2.y2 < co1.y2):\n        return True\n    else:\n        return False\n\n```", "```py\ndef collided_left(co1, co2):\n    if within_y(co1, co2):\n        if co1.x1 >= co2.x1 and co1.x1 <= co2.x2:\n            return True\n    return False\n\n```", "```py\ndef collided_right(co1, co2):\n    if within_y(co1, co2):\n        if co1.x2 >= co2.x1 and co1.x2 <= co2.x2:\n            return True\n    return False\n\n```", "```py\ndef collided_top(co1, co2):\n    if within_x(co1, co2):\n        if co1.y1 >= co2.y1 and co1.y1 <= co2.y2:\n            return True\n    return False\n\n```", "```py\ndef collided_bottom(y, co1, co2):\n    if within_x(co1, co2):\n        y_calc = co1.y2 + y\n     ➊ if y_calc >= co2.y1 and y_calc <= co2.y2:\n            return True\n     return False\n\n```", "```py\nclass Sprite:\n    def __init__(self, game):\n self.game = game\n        self.endgame = False\n        self.coordinates = None\n\n    def move(self):\n        pass\n\n    def coords(self):\n        return self.coordinates \n```", "```py\nclass PlatformSprite(Sprite):\n    def __init__(self, game, photo_image, x, y, width, height):\n        Sprite.__init__(self, game)\n        self.photo_image = photo_image\n        self.image = game.canvas.create_image(x, y, \n                image=self.photo_image, anchor='nw')\n        self.coordinates = Coords(x, y, x + width, y + height)\n\n```", "```py\n   g = Game()\n➊ platform1 = PlatformSprite(g, PhotoImage(file='platform1.gif'), \n                              0, 480, 100, 10)\n➋ g.sprites.append(platform1)\n   g.mainloop()\n\n```", "```py\ng = Game()\nplatform1 = PlatformSprite(g, PhotoImage(file='platform1.gif'), \n                           0, 480, 100, 10)\nplatform2 = PlatformSprite(g, PhotoImage(file='platform1.gif'), \n                           150, 440, 100, 10)\nplatform3 = PlatformSprite(g, PhotoImage(file='platform1.gif'), \n                           300, 400, 100, 10)\nplatform4 = PlatformSprite(g, PhotoImage(file='platform1.gif'), \n                           300, 160, 100, 10)\nplatform5 = PlatformSprite(g, PhotoImage(file='platform2.gif'), \n                           175, 350, 66, 10)\nplatform6 = PlatformSprite(g, PhotoImage(file='platform2.gif'), \n                           50, 300, 66, 10)\nplatform7 = PlatformSprite(g, PhotoImage(file='platform2.gif'), \n                           170, 120, 66, 10)\nplatform8 = PlatformSprite(g, PhotoImage(file='platform2.gif'), \n                           45, 60, 66, 10)\nplatform9 = PlatformSprite(g, PhotoImage(file='platform3.gif'), \n                           170, 250, 32, 10)\nplatform10 = PlatformSprite(g, PhotoImage(file='platform3.gif'), \n                            230, 200, 32, 10)\ng.sprites.append(platform1)\ng.sprites.append(platform2)\ng.sprites.append(platform3)\ng.sprites.append(platform4)\ng.sprites.append(platform5)\ng.sprites.append(platform6)\ng.sprites.append(platform7)\ng.sprites.append(platform8)\ng.sprites.append(platform9)\ng.sprites.append(platform10)\ng.mainloop()\n\n```"]