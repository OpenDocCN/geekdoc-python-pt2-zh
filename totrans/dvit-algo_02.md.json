["```py\nimport math\ndef revenue(tax):\n    return(100 * (math.log(tax+1) - (tax - 0.2)**2 + 0.04))\n```", "```py\nimport matplotlib.pyplot as plt\nxs = [x/1000 for x in range(1001)]    \nys = [revenue(x) for x in xs]\nplt.plot(xs,ys)\nplt.title('Tax Rates and Revenue')\nplt.xlabel('Tax Rate')\nplt.ylabel('Revenue')\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nxs = [x/1000 for x in range(1001)]    \nys = [revenue(x) for x in xs]\nplt.plot(xs,ys)\ncurrent_rate = 0.7\nplt.plot(current_rate,revenue(current_rate),'ro')\nplt.title('Tax Rates and Revenue')\nplt.xlabel('Tax Rate')\nplt.ylabel('Revenue')\nplt.show()\n```", "```py\ndef revenue_derivative(tax):\n    return(100 * (1/(tax + 1) - 2 * (tax - 0.2)))\n```", "```py\nprint(revenue_derivative(0.7))\n```", "```py\nstep_size = 0.001\n```", "```py\ncurrent_rate = current_rate + step_size * revenue_derivative(current_rate)\n```", "```py\ncurrent_rate = current_rate + step_size * revenue_derivative(current_rate)\n```", "```py\nthreshold = 0.0001\n```", "```py\nthreshold = 0.0001\nmaximum_iterations = 100000\n\nkeep_going = True\niterations = 0\nwhile(keep_going):\n    rate_change = step_size * revenue_derivative(current_rate)\n    current_rate = current_rate + rate_change\n\n    if(abs(rate_change) < threshold):\n        keep_going = False\n\n    if(iterations >= maximum_iterations):\n        keep_going = False\n\n    iterations = iterations+1\n```", "```py\nimport math\ndef income(edu_yrs):\n    return(math.sin((edu_yrs - 10.6) * (2 * math.pi/4)) + (edu_yrs - 11)/2)\n```", "```py\nimport matplotlib.pyplot as plt\nxs = [11 + x/100 for x in list(range(901))]    \nys = [income(x) for x in xs]\nplt.plot(xs,ys)\ncurrent_edu = 12.5\nplt.plot(current_edu,income(current_edu),'ro')\nplt.title('Education and Income')\nplt.xlabel('Years of Education')\nplt.ylabel('Lifetime Income')\nplt.show()\n```", "```py\ndef income_derivative(edu_yrs):\n    return(math.cos((edu_yrs - 10.6) * (2 * math.pi/4)) + 1/2)\n\nthreshold = 0.0001\nmaximum_iterations = 100000\n\ncurrent_education = 12.5\nstep_size = 0.001\n\nkeep_going = True\niterations = 0\nwhile(keep_going):\n    education_change = step_size * income_derivative(current_education)\n    current_education = current_education + education_change\n    if(abs(education_change) < threshold):\n        keep_going = False\n    if(iterations >= maximum_iterations):\n        keep_going=False\n    iterations = iterations + 1\n```", "```py\ndef revenue_flipped(tax):\n    return(0 - revenue(tax))\n```", "```py\nimport matplotlib.pyplot as plt\nxs = [x/1000 for x in range(1001)]    \nys = [revenue_flipped(x) for x in xs]\nplt.plot(xs,ys)\nplt.title('The Tax/Revenue Curve - Flipped')\nplt.xlabel('Current Tax Rate')\nplt.ylabel('Revenue - Flipped')\nplt.show()\n```", "```py\nthreshold = 0.0001\nmaximum_iterations = 10000\n\n**def revenue_derivative_flipped(tax):**\n    **return(0-revenue_derivative(tax))**\n\ncurrent_rate = 0.7\n\nkeep_going = True\niterations = 0\nwhile(keep_going):\n    rate_change = step_size * revenue_derivative_flipped(current_rate)\n    **current_rate = current_rate - rate_change**\n    if(abs(rate_change) < threshold):\n        keep_going = False\n    if(iterations >= maximum_iterations):\n        keep_going = False\n    iterations = iterations + 1\n```"]