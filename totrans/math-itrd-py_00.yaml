- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![image](../images/fintro-01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/fintro-01.jpg)'
- en: Which approach shown in [Figure 1](ch00.xhtml#ch00fig1) would you prefer? On
    the left, you see an example of a traditional approach to teaching math, involving
    definitions, propositions, and proofs. This method requires a lot of reading and
    odd symbols. You’d never guess this had anything to do with geometric figures.
    In fact, this text explains how to find the *centroid*, or the center, of a triangle.
    But traditional approaches like this don’t tell us *why* we should be interested
    in finding the center of a triangle in the first place.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你更倾向于选择[图 1](ch00.xhtml#ch00fig1)中的哪种方法？左边是传统数学教学方法的例子，包括定义、命题和证明。这种方法需要大量的阅读和各种奇怪的符号。你永远不会猜到这与几何图形有什么关系。事实上，这段文字在讲解如何找到三角形的*质心*，或者说三角形的中心。但像这样的传统方法并没有告诉我们，为什么我们一开始就应该对找到三角形的中心感兴趣。
- en: '![image](../images/fxviii-01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/fxviii-01.jpg)'
- en: '*Figure 1: Two approaches to teaching about the centroid*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 1：关于质心的两种教学方法*'
- en: Next to this text, you see a picture of a dynamic sketch with a hundred or so
    rotating triangles. It’s a challenging programming project, and if you want it
    to rotate the right way (and look cool), you have to find the centroid of the
    triangle. In many situations, making cool graphics is nearly impossible without
    knowing the math behind geometry, for example. As you’ll see in this book, knowing
    a little of the math behind triangles, like the centroid, will make it easy to
    create our artworks. A student who knows math and can create cool designs is more
    likely to delve into a little geometry and put up with a few square roots or a
    trig function or two. A student who doesn’t see any outcome, and is only doing
    homework from a textbook, probably doesn’t have much motivation to learn geometry.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段文字旁边，你看到了一张动态草图，草图中大约有一百个旋转的三角形。这是一个具有挑战性的编程项目，如果你希望它旋转得正确（并且看起来很酷），你必须找到三角形的质心。在许多情况下，制作酷炫的图形几乎是不可能的，除非你了解几何学背后的数学原理。例如，正如你将在本书中看到的，了解三角形背后的数学知识，像是质心，就能让我们轻松创造出艺术作品。一个懂数学并能设计酷炫图形的学生，更有可能深入研究几何学，忍受一些平方根或三角函数。而一个看不出任何结果、只是在做教科书上的作业的学生，可能没有太大的动力去学习几何学。
- en: In my eight years of experience as a math teacher and three years of experience
    as a computer science teacher, I’ve met many more math learners who prefer the
    visual approach to the academic one. In the process of creating something interesting,
    you come to understand that math is not just following steps to solve an equation.
    You see that exploring math with programming allows for many ways to solve interesting
    problems, with many unforeseen mistakes and opportunities for improvements along the
    way.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在我作为数学教师的八年经验和三年计算机科学教师的经验中，我遇到了更多倾向于视觉方法的数学学习者。在创造有趣的东西的过程中，你会发现数学不仅仅是按步骤解方程。你会看到，运用编程来探索数学，可以有多种方法解决有趣的问题，并且在过程中会有许多意想不到的错误和改进的机会。
- en: This is the difference between school math and real math.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是学校数学与真实数学之间的区别。
- en: THE PROBLEM WITH SCHOOL MATH
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学校数学的问题
- en: What do I mean by “school math” exactly? In the US in the 1860s, school math
    was preparation for a job as a clerk, adding columns of numbers by hand. Today,
    jobs are different, and the preparation for these jobs needs to change, too.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我所说的“学校数学”到底是什么意思？在19世纪60年代的美国，学校数学是为成为一名职员准备的，帮助人们手工加总一列数字。而今天，工作不同了，为这些工作做准备也需要改变。
- en: People learn best by doing. This hasn’t been a daily practice in schools, though,
    which tend to favor passive learning. “Doing” in English and history classes might
    mean students write papers or give presentations, and science students perform
    experiments, but what do math students do? It used to be that all you could actively
    “do” in math class was solve equations, factor polynomials, and graph functions.
    But now that computers can do most of those calculations for us, these practices
    are no longer sufficient.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 人们通过实践学习得最好。然而，在学校中，这种方式并没有得到日常的应用，学校更倾向于被动学习。在英语和历史课上，“做”可能意味着学生写论文或做演讲，科学课上学生做实验，但数学学生做什么呢？过去，在数学课上，你能做的主动“做”的事情就是解方程、因式分解和画图。但现在，计算机可以为我们做大部分计算，这些做法已经不再足够了。
- en: Simply learning how to automate solving, factoring, and graphing is not the
    final goal. Once a student has learned to automate a process, they can go further
    and deeper into a topic than was ever possible before.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 单纯学习如何自动化解决问题、因式分解和绘制图形并不是最终目标。一旦学生学会了自动化某个过程，他们就能比以往更深入地探讨某个主题。
- en: '[Figure 2](ch00.xhtml#ch00fig2) shows a typical math problem you’d find in
    a textbook, asking students to define a function, “f(x),” and evaluate it for
    a ton of values.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[图2](ch00.xhtml#ch00fig2)展示了你在教科书中会遇到的典型数学问题，要求学生定义一个函数“f(x)”并为许多值进行求值。'
- en: '![image](../images/fxix-01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxix-01.jpg)'
- en: '*Figure 2: A traditional approach to teaching functions*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2：传统的函数教学方法*'
- en: 'This same format goes on for 18 more questions! This kind of exercise is a
    trivial problem for a programming language like Python. We could simply define
    the function `f(x)` and then plug in the values by iterating over a list, like
    this:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这种格式在接下来的18个问题中依然适用！这种类型的练习对于像Python这样的编程语言来说是个微不足道的问题。我们可以简单地定义函数`f(x)`，然后通过遍历一个列表来插入数值，像这样：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The last line just makes the output pretty while rounding all the solutions
    to three decimal places, as shown here:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一行只是为了让输出更加美观，并将所有解答四舍五入到小数点后三位，如下所示：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'In programming languages like Python, JavaScript, Java, and so on, functions
    are a vitally important tool for transforming numbers and other objects—even other
    functions! Using Python, you can give a descriptive name to a function, so it’s
    easier to understand what’s going on. For example, you can name a function that
    calculates the area of a rectangle by calling it `calculateArea()`, like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在像Python、JavaScript、Java等编程语言中，函数是转化数字和其他对象（甚至其他函数）的一项至关重要的工具。使用Python，你可以给函数一个描述性的名称，这样更容易理解其功能。例如，你可以命名一个计算矩形面积的函数为`calculateArea()`，像这样：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: A math textbook published in the 21st century, decades after Benoit Mandelbrot
    first generated his famous fractal on a computer when working for IBM, shows a
    picture of the Mandelbrot set and gushes over the discovery. The textbook describes
    the Mandelbrot set, which is shown in [Figure 3](ch00.xhtml#ch00fig3), as “a fascinating
    mathematical object derived from the complex numbers. Its beautiful boundary illustrates
    chaotic behavior.”
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一本在21世纪出版的数学教科书，在Benoit Mandelbrot首次为IBM工作时通过计算机生成他的著名分形图像几十年后，展示了曼德尔布罗特集的图像，并对这一发现赞不绝口。教科书描述曼德尔布罗特集，如[图3](ch00.xhtml#ch00fig3)所示，称其为“一个来自复数的迷人数学对象。其美丽的边界展示了混沌行为。”
- en: '![image](../images/fxx-01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxx-01.jpg)'
- en: '*Figure 3: The Mandelbrot set*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*图3：曼德尔布罗特集*'
- en: The textbook then takes the reader through a painstaking “exploration” to show
    how to transform a point in the complex plane. But the student is only shown how
    to do this on a calculator, which means only two points can be transformed (iterated
    seven times) in a reasonable amount of time. Two points.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 教科书随后带领读者进行一项艰苦的“探索”，展示如何在复平面中转换一个点。但学生仅仅是被教如何在计算器上完成此操作，这意味着只有两个点能够在合理时间内被转换（迭代七次）。仅仅是两个点。
- en: In this book, you’ll learn how to do this in Python, and you’ll make the program
    transform hundreds of thousands of points automatically and even *create* the
    Mandelbrot set you see above!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你将学习如何在Python中实现这一点，并让程序自动化地转换数十万个点，甚至*创建*你上面看到的曼德尔布罗特集！
- en: ABOUT THIS BOOK
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于本书
- en: This book is about using programming tools to make math fun and relevant, while
    still being challenging. You’ll make graphs to show all the possible outputs of
    a function. You’ll make dynamic, interactive works of art. You’ll even make an
    ecosystem with sheep that move around, eat grass, and multiply, and you’ll create
    virtual organisms that try to find the shortest route through a bunch of cities
    while you watch!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在通过使用编程工具使数学变得有趣且相关，同时仍保持一定挑战性。你将制作图表展示一个函数的所有可能输出。你将创作动态的、互动的艺术作品。你甚至会创建一个生态系统，里面有会移动、吃草和繁殖的羊群，你还将创建虚拟生物，它们会在你观察的过程中，尝试找到一条穿越一系列城市的最短路径！
- en: You’ll do this using Python and Processing in order to supercharge what you
    can do in math class. This book is not about skipping the math; it’s about using
    the newest, coolest tools out there to get creative and learn real computer skills
    while discovering the connections between math, art, science, and technology.
    Processing will provide the graphics, shapes, motion, and colors, while Python
    does the calculating and follows your instructions behind the scenes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你将使用Python和Processing来增强你在数学课上的能力。本书不是要跳过数学，而是利用最新、最酷的工具来进行创意探索，同时学习真正的计算机技能，并发现数学、艺术、科学和技术之间的联系。Processing将提供图形、形状、运动和颜色，而Python则负责计算，并在背后执行你的指令。
- en: For each of the projects in this book, you’ll build the code up from scratch,
    starting from a blank file, and checking your progress at every step. Through
    making mistakes and debugging your own programs, you’ll get a much deeper understanding
    of what each block of code does.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本书中的每个项目，你将从零开始构建代码，从一个空白文件开始，并在每个步骤检查自己的进度。通过犯错和调试自己的程序，你将更深入地理解每一段代码的作用。
- en: WHO SHOULD USE THIS BOOK
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书适合谁使用
- en: This book is for anyone who’s learning math or who wants to use the most modern
    tools available to approach math topics like trigonometry and algebra. If you’re
    learning Python, you can use this book to apply your growing programming skills
    to nontrivial projects like cellular automata, genetic algorithms, and computational
    art.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适合任何正在学习数学的人，或是想要使用最现代工具来接触数学主题，如三角学和代数的人。如果你正在学习Python，你可以利用本书，将你不断提升的编程技能应用于一些复杂项目，如元胞自动机、遗传算法和计算艺术。
- en: Teachers can use the projects in this book to challenge their students or to
    make math more approachable and relevant. What better way to teach matrices than
    to save a bunch of points to a matrix and use them to draw a 3D figure? When you
    know Python, you can do this and much more.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 教师可以使用本书中的项目来挑战学生，或让数学变得更易接近和更有意义。还有什么比通过将一堆点保存到矩阵并用它们来绘制三维图形更好的教矩阵的方式呢？掌握Python后，你可以做到这一切，甚至更多。
- en: WHAT’S IN THIS BOOK?
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书内容
- en: This book begins with three chapters that cover basic Python concepts you’ll
    build on to explore more complicated math. The next nine chapters explore math
    concepts and problems that you can visualize and solve using Python and Processing.
    You can try the exercises peppered throughout the book to apply what you learned
    and challenge yourself.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书从三章基本的Python概念开始，你将通过这些内容为探索更复杂的数学做准备。接下来的九章将探索数学概念和问题，你可以通过Python和Processing来可视化并解决这些问题。你可以尝试书中的练习，以应用所学内容并挑战自己。
- en: '**[Chapter 1: Drawing Polygons with Turtles](ch01.xhtml#ch01)** teaches basic
    programming concepts like loops, variables, and functions using Python’s built-in
    `turtle` module.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第1章：用海龟画多边形](ch01.xhtml#ch01)** 使用Python内建的`turtle`模块教授基本的编程概念，如循环、变量和函数。'
- en: '**[Chapter 2: Making Tedious Arithmetic Fun with Lists and Loops](ch02.xhtml#ch02)**
    goes deeper into programming concepts like lists and Booleans.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2章：通过列表和循环让枯燥的算术变得有趣](ch02.xhtml#ch02)** 深入探讨编程概念，如列表和布尔值。'
- en: '**[Chapter 3: Guessing and Checking with Conditionals](ch03.xhtml#ch03)** applies
    your growing Python skills to problems like factoring numbers and making an interactive
    number-guessing game.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第3章：用条件语句猜测与验证](ch03.xhtml#ch03)** 将你不断提升的Python技能应用于像因式分解和制作交互式猜数字游戏等问题。'
- en: '**[Chapter 4: Transforming and Storing Numbers with Algebra](ch04.xhtml#ch04)**
    ramps up from solving simple equations to solving cubic equations numerically
    and by graphing.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第4章：用代数变换和存储数字](ch04.xhtml#ch04)** 从解简单方程逐步到通过数值和图形解三次方程。'
- en: '**[Chapter 5: Transforming Shapes with Geometry](ch05.xhtml#ch05)** shows you
    how to create shapes and then multiply, rotate, and spread them all over the screen.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章：用几何变换形状](ch05.xhtml#ch05)** 教你如何创建形状，然后将它们乘法、旋转并分布到屏幕上。'
- en: '**[Chapter 6: Creating Oscillations with Trigonometry](ch06.xhtml#ch06)** goes
    beyond right triangles and lets you create oscillating shapes and waves.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章：用三角函数创建振荡](ch06.xhtml#ch06)** 不仅仅局限于直角三角形，它还让你创建振荡形状和波动。'
- en: '**[Chapter 7: Complex Numbers](ch07.xhtml#ch07)** teaches you how to use complex
    numbers to move points around the screen, creating designs like the Mandelbrot
    set.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章：复数](ch07.xhtml#ch07)** 教你如何使用复数在屏幕上移动点，从而创建类似曼德尔布罗集的图形。'
- en: '**[Chapter 8: Using Matrices for Computer Graphics and Systems of Equations](ch08.xhtml#ch08)**
    takes you into the third dimension, where you’ll translate and rotate 3D shapes
    and solve huge systems of equations with one program.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 8 章：使用矩阵进行计算机图形学和方程组求解](ch08.xhtml#ch08)** 带你进入三维空间，你将在其中转换和旋转三维形状，并使用一个程序解决庞大的方程组。'
- en: '**[Chapter 9: Building Objects with Classes](ch09.xhtml#ch09)** covers how
    to create one object, or as many as your computer can handle, with roaming sheep
    and delicious grass locked in a battle for survival.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 9 章：使用类构建对象](ch09.xhtml#ch09)** 讲解了如何创建一个对象，或者根据你的电脑处理能力创建任意多个对象，里面有游动的绵羊和美味的草，它们为了生存展开了激烈的斗争。'
- en: '**[Chapter 10: Creating Fractals Using Recursion](ch10.xhtml#ch10)** shows
    how recursion can be used as a whole new way to measure distances and create wildly
    unexpected designs.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 10 章：使用递归创建分形](ch10.xhtml#ch10)** 展示了如何使用递归作为一种全新的方式来测量距离并创造出意想不到的设计。'
- en: '**[Chapter 11: Cellular Automata](ch11.xhtml#ch11)** teaches you how to generate
    and program cellular automata to behave according to rules you make.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 11 章：元胞自动机](ch11.xhtml#ch11)** 教你如何生成并编程让元胞自动机根据你设定的规则行为。'
- en: '**[Chapter 12: Solving Problems Using Genetic Algorithms](ch12.xhtml#ch12)**
    shows you how to harness the theory of natural selection to solve problems we
    couldn’t solve in a million years otherwise!'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 12 章：使用遗传算法解决问题](ch12.xhtml#ch12)** 展示了如何利用自然选择理论来解决那些我们在一百万年内也无法解决的问题！'
- en: DOWNLOADING AND INSTALLING PYTHON
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载和安装 Python
- en: The easiest way to get started is to use the Python 3 software distribution,
    which is available for free at [*https://www.python.org/*](https://www.python.org/).
    Python has become one of the most popular programming languages in the world.
    It’s used to create websites like Google, YouTube, and Instagram, and researchers
    at universities all over the world use it to crunch numbers in various fields,
    from astronomy to zoology. The latest version released to date is Python 3.7\.
    Go to [*https://www.python.org/downloads/*](https://www.python.org/downloads/)
    and choose the latest version of Python 3, as shown in [Figure 4](ch00.xhtml#ch00fig4).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的入门方式是使用 Python 3 软件分发版，可以免费从 [*https://www.python.org/*](https://www.python.org/)
    下载。Python 已经成为全球最受欢迎的编程语言之一。它被用来创建像 Google、YouTube 和 Instagram 这样的网页，全球各地的研究人员也使用它来处理各个领域的数字，从天文学到动物学。至今发布的最新版本是
    Python 3.7。请访问 [*https://www.python.org/downloads/*](https://www.python.org/downloads/)
    并选择最新的 Python 3 版本，如 [图 4](ch00.xhtml#ch00fig4) 所示。
- en: '![image](../images/fxxii-01.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxxii-01.jpg)'
- en: '*Figure 4: The official website of the Python Software Foundation*'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4：Python 软件基金会的官方网站*'
- en: '![image](../images/fxxiii-01a.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxxiii-01a.jpg)'
- en: '*Figure 5: Click the downloaded file to start the install*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5：点击下载的文件开始安装*'
- en: You can choose the version for your operating system. The site detected that
    I was using Windows. Click the file when the download is complete, as shown in
    [Figure 5](ch00.xhtml#ch00fig5).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以选择适合你操作系统的版本。网站已检测到我正在使用 Windows。下载完成后，点击文件，如 [图 5](ch00.xhtml#ch00fig5)
    所示。
- en: Follow the directions, and always choose the default options. It might take
    a few minutes to install. After that, search your system for “IDLE.” That’s the
    Python IDE, or *integrated development environment*, which is what you’ll need
    to write Python code. Why “IDLE”? The Python programming language was named after
    the Monty Python comedy troupe, and one of the members is Eric Idle.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 按照说明进行操作，并始终选择默认选项。安装可能需要几分钟时间。安装完成后，搜索系统中的“IDLE”。那就是 Python 的 IDE，或称*集成开发环境*，你将需要它来编写
    Python 代码。为什么叫“IDLE”？Python 编程语言的名称来源于蒙提·派森喜剧团（Monty Python），其中一位成员是 Eric Idle。
- en: STARTING IDLE
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 启动 IDLE
- en: Find IDLE on your system and open it.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统中找到 IDLE 并打开它。
- en: '![image](../images/fxxiii-01.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxxiii-01.jpg)'
- en: '*Figure 6: Opening IDLE on Windows*'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 6：在 Windows 上打开 IDLE*'
- en: A screen called a “shell” will appear. You can use this for the interactive
    coding environment, but you’ll want to save your code. Click **File**▸**New File**
    or press ALT-N, and a file will appear (see [Figure 7](ch00.xhtml#ch00fig7)).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一个名为“shell”的窗口将会出现。你可以在这里使用交互式编程环境，但你会想保存你的代码。点击 **文件**▸**新建文件**，或者按 ALT-N，一个文件将会打开（如
    [图 7](ch00.xhtml#ch00fig7) 所示）。
- en: '![image](../images/fxxiii-02.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxxiii-02.jpg)'
- en: '*Figure 7: Python’s interactive shell (left) and a new module (file) window,
    ready for code!*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 7：Python 的交互式 shell（左）和一个新的模块（文件）窗口，准备好编写代码！*'
- en: This is where you’ll write your Python code. We will also use Processing, so
    let’s go over how to download and install Processing next.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是你将编写Python代码的地方。我们还将使用Processing，接下来我们来看看如何下载和安装Processing。
- en: INSTALLING PROCESSING
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装PROCESSING
- en: There’s a lot you can do with Python, and we’ll use IDLE a lot. But when we
    want to do some heavy-duty graphics, we’re going to use Processing. Processing
    is a professional-level graphics library used by coders and artists to make dynamic,
    interactive artwork and graphics.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Python你可以做很多事情，我们会经常使用IDLE。但当我们需要进行一些复杂的图形处理时，我们将使用Processing。Processing是一个专业级的图形库，程序员和艺术家都使用它来创作动态的互动艺术和图形。
- en: Go to [*https://processing.org/download/*](https://processing.org/download/)
    and choose your operating system, as shown in [Figure 8](ch00.xhtml#ch00fig8).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[*https://processing.org/download/*](https://processing.org/download/)，选择你的操作系统，如[图8](ch00.xhtml#ch00fig8)所示。
- en: '![image](../images/fxxiv-01.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxxiv-01.jpg)'
- en: '*Figure 8: The Processing website*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8：Processing官网*'
- en: '![image](../images/fxxiv-02.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fxxiv-02.jpg)'
- en: '*Figure 9: Where to find other Processing modes, like the Python mode we’ll
    be using*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*图9：如何找到其他Processing模式，比如我们将使用的Python模式*'
- en: Download the installer for your operating system by clicking it and following
    the instructions. Double-click the icon to start Processing. This defaults to
    Java mode. Click **Java** to open the drop-down menu, as shown in [Figure 9](ch00.xhtml#ch00fig9),
    and then click **Add Mode**.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 点击并按照指示下载适合你操作系统的安装程序。双击图标启动Processing。默认情况下，它是Java模式。点击**Java**以打开下拉菜单，如[图9](ch00.xhtml#ch00fig9)所示，然后点击**添加模式**。
- en: Select **Python Mode**▸**Install**. It should take a minute or two, but after
    this you’ll be able to code in Python with Processing.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**Python模式**▸**安装**。这应该只需一两分钟，但完成后你就可以使用Processing进行Python编程了。
- en: Now that you’ve set up Python and Processing, you’re ready to start exploring
    math!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经设置好了Python和Processing，你可以开始探索数学了！
