- en: Index
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please note that index links to approximate location of each term.
  prefs: []
  type: TYPE_NORMAL
- en: '**Symbols**'
  prefs: []
  type: TYPE_NORMAL
- en: '`!=` (not equals) operator, [49](c03.xhtml#Page_49)'
  prefs: []
  type: TYPE_NORMAL
- en: '`!a` (ASCII flag), [58](c03.xhtml#Page_58)'
  prefs: []
  type: TYPE_NORMAL
- en: '`!r` (representation flag), [58](c03.xhtml#Page_58)'
  prefs: []
  type: TYPE_NORMAL
- en: '`!s` (string flag), [58](c03.xhtml#Page_58)'
  prefs: []
  type: TYPE_NORMAL
- en: '`"` (single quotes), [43](c03.xhtml#Page_43), [54](c03.xhtml#Page_54)'
  prefs: []
  type: TYPE_NORMAL
- en: '`""` (double quotes), [43](c03.xhtml#Page_43), [54](c03.xhtml#Page_54)'
  prefs: []
  type: TYPE_NORMAL
- en: '`"""` (triple quotes), [43](c03.xhtml#Page_43), [54](c03.xhtml#Page_54)–[55](c03.xhtml#Page_55),
    [57](c03.xhtml#Page_57)'
  prefs: []
  type: TYPE_NORMAL
- en: '`#` operator'
  prefs: []
  type: TYPE_NORMAL
- en: alternative form flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: hash or octothorpe, [42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: '`#!` (haSH-BANG or shebang) command, [24](c02.xhtml#Page_24)–[25](c02.xhtml#Page_25)'
  prefs: []
  type: TYPE_NORMAL
- en: '`$` string notation, [61](c03.xhtml#Page_61)'
  prefs: []
  type: TYPE_NORMAL
- en: '`%` operator'
  prefs: []
  type: TYPE_NORMAL
- en: modulo, [46](c03.xhtml#Page_46), [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: string notation, [59](c03.xhtml#Page_59)–[60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: '`%`-interpolation, [346](c12.xhtml#Page_346)'
  prefs: []
  type: TYPE_NORMAL
- en: '`&` (and/intersection) operator, [47](c03.xhtml#Page_47), [221](c09.xhtml#Page_221),
    [343](c12.xhtml#Page_343)–[344](c12.xhtml#Page_344), [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: '`()` (parentheses) operator, [46](c03.xhtml#Page_46)'
  prefs: []
  type: TYPE_NORMAL
- en: '`*` operator'
  prefs: []
  type: TYPE_NORMAL
- en: multiplication, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: starred expression, [226](c09.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: variadic parameter, [130](c06.xhtml#Page_130)–[131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: wildcard, [527](c18.xhtml#Page_527)
  prefs: []
  type: TYPE_NORMAL
- en: '`**` operator'
  prefs: []
  type: TYPE_NORMAL
- en: exponent, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: keyword variadic parameter, [131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: '`+` operator'
  prefs: []
  type: TYPE_NORMAL
- en: addition, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: concatenation, [56](c03.xhtml#Page_56), [62](c03.xhtml#Page_62)
  prefs: []
  type: TYPE_NORMAL
- en: flag, [58](c03.xhtml#Page_58), [298](c11.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: '`,` (trailing comma), [126](c06.xhtml#Page_126), [217](c09.xhtml#Page_217),
    [226](c09.xhtml#Page_226)'
  prefs: []
  type: TYPE_NORMAL
- en: '`-` operator'
  prefs: []
  type: TYPE_NORMAL
- en: sign flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: subtraction/difference, [46](c03.xhtml#Page_46), [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: '`->` (return type annotation) operator, [146](c06.xhtml#Page_146)'
  prefs: []
  type: TYPE_NORMAL
- en: '`.` (current directory), [322](c11.xhtml#Page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: '`.` (dot) operator, [58](c03.xhtml#Page_58), [64](c03.xhtml#Page_64), [152](c07.xhtml#Page_152),
    [429](c15.xhtml#Page_429)'
  prefs: []
  type: TYPE_NORMAL
- en: '`..` (parent directory), [84](c04.xhtml#Page_84), [322](c11.xhtml#Page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: '`...` (Ellipsis), [53](c03.xhtml#Page_53), [146](c06.xhtml#Page_146)'
  prefs: []
  type: TYPE_NORMAL
- en: '`...` prompt, [18](c02.xhtml#Page_18)'
  prefs: []
  type: TYPE_NORMAL
- en: '`/` (forward slash) operator'
  prefs: []
  type: TYPE_NORMAL
- en: division, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: in paths, [318](c11.xhtml#Page_318), [321](c11.xhtml#Page_321)
  prefs: []
  type: TYPE_NORMAL
- en: in positional parameters, [133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: '`//` (floor division) operator, [46](c03.xhtml#Page_46), [47](c03.xhtml#Page_47)'
  prefs: []
  type: TYPE_NORMAL
- en: '`:` (colon), [42](c03.xhtml#Page_42), [63](c03.xhtml#Page_63), [222](c09.xhtml#Page_222),
    [279](c10.xhtml#Page_279)'
  prefs: []
  type: TYPE_NORMAL
- en: '`:=` (assignment expression/walrus) operator, [52](c03.xhtml#Page_52)–[53](c03.xhtml#Page_53)'
  prefs: []
  type: TYPE_NORMAL
- en: '`;` (semicolon), [40](c03.xhtml#Page_40)'
  prefs: []
  type: TYPE_NORMAL
- en: '`<` operator'
  prefs: []
  type: TYPE_NORMAL
- en: align left flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: less than, [49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: '`<=` (less than or equals) operator, [49](c03.xhtml#Page_49)'
  prefs: []
  type: TYPE_NORMAL
- en: '`<<` (left shift) operator, [47](c03.xhtml#Page_47), [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: '`==` (equals) operator, [49](c03.xhtml#Page_49), [97](c05.xhtml#Page_97)–[98](c05.xhtml#Page_98)'
  prefs: []
  type: TYPE_NORMAL
- en: '`=` operator'
  prefs: []
  type: TYPE_NORMAL
- en: alignment flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: assignment, [44](c03.xhtml#Page_44), [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '`>` operator'
  prefs: []
  type: TYPE_NORMAL
- en: align right flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: greater than, [49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: '`>=` (greater than or equals) operator, [49](c03.xhtml#Page_49)'
  prefs: []
  type: TYPE_NORMAL
- en: '`>>` (right shift) operator, [47](c03.xhtml#Page_47), [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: '`@` operator, [47](c03.xhtml#Page_47), [144](c06.xhtml#Page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: '`[]` (square brackets), [65](c03.xhtml#Page_65)–[66](c03.xhtml#Page_66), [222](c09.xhtml#Page_222),
    [277](c10.xhtml#Page_277)'
  prefs: []
  type: TYPE_NORMAL
- en: '`\` (backslash) character, [54](c03.xhtml#Page_54), [55](c03.xhtml#Page_55)–[56](c03.xhtml#Page_56)'
  prefs: []
  type: TYPE_NORMAL
- en: '`\n` (newline), [55](c03.xhtml#Page_55), [56](c03.xhtml#Page_56), [294](c11.xhtml#Page_294),
    [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '`\t` (tab), [293](c11.xhtml#Page_293)–[294](c11.xhtml#Page_294)'
  prefs: []
  type: TYPE_NORMAL
- en: '`\r` (carriage return), [294](c11.xhtml#Page_294), [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '`^` operator'
  prefs: []
  type: TYPE_NORMAL
- en: align center flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: exclusive or/symmetric difference, [47](c03.xhtml#Page_47), [221](c09.xhtml#Page_221),
    [344](c12.xhtml#Page_344), [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: '`_ (`underscore) character'
  prefs: []
  type: TYPE_NORMAL
- en: as name, [226](c09.xhtml#Page_226), [227](c09.xhtml#Page_227)
  prefs: []
  type: TYPE_NORMAL
- en: nonpublic flag, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: as wildcard, [68](c03.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: '`__` (naming convention), [157](c07.xhtml#Page_157), [167](c07.xhtml#Page_167)'
  prefs: []
  type: TYPE_NORMAL
- en: '`{}` (curly braces), [57](c03.xhtml#Page_57), [61](c03.xhtml#Page_61), [220](c09.xhtml#Page_220),
    [222](c09.xhtml#Page_222), [278](c10.xhtml#Page_278), [279](c10.xhtml#Page_279)'
  prefs: []
  type: TYPE_NORMAL
- en: '`|` (or/union) operator, [47](c03.xhtml#Page_47), [221](c09.xhtml#Page_221),
    [344](c12.xhtml#Page_344), [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: '`~` (tilde) character'
  prefs: []
  type: TYPE_NORMAL
- en: bitwise inversion operator, [47](c03.xhtml#Page_47), [344](c12.xhtml#Page_344)–[345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: in UNIX folder system, [321](c11.xhtml#Page_321)–[322](c11.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: '`0` (leading zeros flag), [58](c03.xhtml#Page_58)'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**'
  prefs: []
  type: TYPE_NORMAL
- en: '`abs()` (absolute) function, [46](c03.xhtml#Page_46)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__abs__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: absolute imports, [83](c04.xhtml#Page_83)
  prefs: []
  type: TYPE_NORMAL
- en: absolute paths, [316](c11.xhtml#Page_316)–[320](c11.xhtml#Page_320), [325](c11.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: abstract base classes (ABCs)
  prefs: []
  type: TYPE_NORMAL
- en: about, [410](c14.xhtml#Page_410)–[411](c14.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: built-in, [411](c14.xhtml#Page_411)–[412](c14.xhtml#Page_412)
  prefs: []
  type: TYPE_NORMAL
- en: custom, [415](c14.xhtml#Page_415)–[417](c14.xhtml#Page_417)
  prefs: []
  type: TYPE_NORMAL
- en: deriving from, [412](c14.xhtml#Page_412)–[415](c14.xhtml#Page_415)
  prefs: []
  type: TYPE_NORMAL
- en: abstract syntax tree (AST), [571](c19.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: '`@abstractmethod` decorator, [415](c14.xhtml#Page_415)'
  prefs: []
  type: TYPE_NORMAL
- en: accelerator modules, [629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: '`accumulate()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`acquire()` method, [493](c17.xhtml#Page_493)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__add__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: '`add()` method, [220](c09.xhtml#Page_220), [250](c09.xhtml#Page_250)–[251](c09.xhtml#Page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: addition (`+`) operator, [46](c03.xhtml#Page_46), [298](c11.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: '`__aenter__()` method, [475](c16.xhtml#Page_475), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: Aesera, [625](c21.xhtml#Page_625)–[626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: '`__aexit__()` method, [475](c16.xhtml#Page_475), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`aioconsole` library, [469](c16.xhtml#Page_469)–[470](c16.xhtml#Page_470)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__aiter__()` method, [473](c16.xhtml#Page_473), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: aliases and aliasing
  prefs: []
  type: TYPE_NORMAL
- en: about, [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: function names, [80](c04.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: mutable data types, [108](c05.xhtml#Page_108), [110](c05.xhtml#Page_110)
  prefs: []
  type: TYPE_NORMAL
- en: with type hints, [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: alignment flags, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: '`all()` function, [248](c09.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda, [35](c02.xhtml#Page_35)–[36](c02.xhtml#Page_36), [624](c21.xhtml#Page_624),
    [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: anchors, [316](c11.xhtml#Page_316)–[317](c11.xhtml#Page_317)
  prefs: []
  type: TYPE_NORMAL
- en: '`__and__()` method, [174](c07.xhtml#Page_174), [345](c12.xhtml#Page_345), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`and` operator, [51](c03.xhtml#Page_51)–[52](c03.xhtml#Page_52)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__anext__()` method, [473](c16.xhtml#Page_473), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: annotations, [145](c06.xhtml#Page_145)–[147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: '`__annotations__` attribute, [146](c06.xhtml#Page_146), [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: anonymous callables, [652](b03.xhtml#Page_652)
  prefs: []
  type: TYPE_NORMAL
- en: anti-pattern examples, [86](c04.xhtml#Page_86), [131](c06.xhtml#Page_131), [150](c07.xhtml#Page_150),
    [190](c08.xhtml#Page_190)–[192](c08.xhtml#Page_192), [374](c12.xhtml#Page_374),
    [385](c13.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: '`any()` function, [248](c09.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: '`append()` method, [218](c09.xhtml#Page_218)'
  prefs: []
  type: TYPE_NORMAL
- en: append writing, [298](c11.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: '`appendleft()` method, [220](c09.xhtml#Page_220)'
  prefs: []
  type: TYPE_NORMAL
- en: AppImage, [538](c18.xhtml#Page_538)–[539](c18.xhtml#Page_539)
  prefs: []
  type: TYPE_NORMAL
- en: Appium-Python-Client, [602](c20.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: application development, [621](c21.xhtml#Page_621)–[622](c21.xhtml#Page_622)
  prefs: []
  type: TYPE_NORMAL
- en: arbitrary arguments lists. *See* variadic arguments
  prefs: []
  type: TYPE_NORMAL
- en: arbitrary execution, [454](c15.xhtml#Page_454)–[456](c15.xhtml#Page_456), [652](b03.xhtml#Page_652)
  prefs: []
  type: TYPE_NORMAL
- en: '`argparse`, [554](c19.xhtml#Page_554)'
  prefs: []
  type: TYPE_NORMAL
- en: arguments
  prefs: []
  type: TYPE_NORMAL
- en: about, [123](c06.xhtml#Page_123), [652](b03.xhtml#Page_652)
  prefs: []
  type: TYPE_NORMAL
- en: default values, [126](c06.xhtml#Page_126)–[128](c06.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: keyword and positional, [128](c06.xhtml#Page_128)–[129](c06.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: variadic, [130](c06.xhtml#Page_130)–[132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: arithmetic shift operations, [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: '`ArithmeticError` class, [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: Arnold, Tim, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: arrays, [219](c09.xhtml#Page_219)
  prefs: []
  type: TYPE_NORMAL
- en: artifacts, [652](b03.xhtml#Page_652)
  prefs: []
  type: TYPE_NORMAL
- en: '`as` (alias) keyword, [80](c04.xhtml#Page_80)'
  prefs: []
  type: TYPE_NORMAL
- en: ASCII characters, [58](c03.xhtml#Page_58), [346](c12.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: '`ascii()` function, [61](c03.xhtml#Page_61)'
  prefs: []
  type: TYPE_NORMAL
- en: Åsheim, Eiríkr, [486](c17.xhtml#Page_486)
  prefs: []
  type: TYPE_NORMAL
- en: assembled languages, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: assembling, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`AssertionError`, [556](c19.xhtml#Page_556)–[557](c19.xhtml#Page_557)'
  prefs: []
  type: TYPE_NORMAL
- en: assertions (`assert` statements), [556](c19.xhtml#Page_556)–[560](c19.xhtml#Page_560),
    [653](b03.xhtml#Page_653)
  prefs: []
  type: TYPE_NORMAL
- en: assignment, [107](c05.xhtml#Page_107)–[109](c05.xhtml#Page_109), [117](c05.xhtml#Page_117).
    *See also* binding
  prefs: []
  type: TYPE_NORMAL
- en: assignment expressions, [44](c03.xhtml#Page_44), [47](c03.xhtml#Page_47), [52](c03.xhtml#Page_52)–[53](c03.xhtml#Page_53),
    [369](c12.xhtml#Page_369)–[370](c12.xhtml#Page_370)
  prefs: []
  type: TYPE_NORMAL
- en: '`async for` statement, [474](c16.xhtml#Page_474)'
  prefs: []
  type: TYPE_NORMAL
- en: '`async` keyword, [464](c16.xhtml#Page_464), [653](b03.xhtml#Page_653)'
  prefs: []
  type: TYPE_NORMAL
- en: '`async with` statement, [475](c16.xhtml#Page_475)'
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous context managers, [475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous generators, [475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous iteration, [472](c16.xhtml#Page_472)–[475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: asynchrony
  prefs: []
  type: TYPE_NORMAL
- en: advanced concepts, [475](c16.xhtml#Page_475)–[476](c16.xhtml#Page_476)
  prefs: []
  type: TYPE_NORMAL
- en: and coding safety, [486](c17.xhtml#Page_486)
  prefs: []
  type: TYPE_NORMAL
- en: in Collatz game example, [465](c16.xhtml#Page_465)–[469](c16.xhtml#Page_469)
  prefs: []
  type: TYPE_NORMAL
- en: with context managers, [475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: with generators, [475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: with iterations, [472](c16.xhtml#Page_472)–[475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: in Python, [459](c16.xhtml#Page_459)–[460](c16.xhtml#Page_460)
  prefs: []
  type: TYPE_NORMAL
- en: scheduling and execution flow, [470](c16.xhtml#Page_470)–[472](c16.xhtml#Page_472)
  prefs: []
  type: TYPE_NORMAL
- en: vs. threading, [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: uses of, [463](c16.xhtml#Page_463)–[464](c16.xhtml#Page_464)
  prefs: []
  type: TYPE_NORMAL
- en: '`asyncio` module, [460](c16.xhtml#Page_460), [464](c16.xhtml#Page_464)–[468](c16.xhtml#Page_468)'
  prefs: []
  type: TYPE_NORMAL
- en: '`atexit` module, [102](c05.xhtml#Page_102)'
  prefs: []
  type: TYPE_NORMAL
- en: atomic operators, [488](c17.xhtml#Page_488)
  prefs: []
  type: TYPE_NORMAL
- en: '`AttributeError`, [157](c07.xhtml#Page_157), [164](c07.xhtml#Page_164), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: attributes
  prefs: []
  type: TYPE_NORMAL
- en: about, [150](c07.xhtml#Page_150), [154](c07.xhtml#Page_154), [653](b03.xhtml#Page_653)–[654](b03.xhtml#Page_654)
  prefs: []
  type: TYPE_NORMAL
- en: checking for, [408](c14.xhtml#Page_408)–[410](c14.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: class, [105](c05.xhtml#Page_105)–[106](c05.xhtml#Page_106), [154](c07.xhtml#Page_154),
    [155](c07.xhtml#Page_155)–[156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: deleting, [433](c15.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: of functions, [433](c15.xhtml#Page_433)–[436](c15.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: inspecting, [426](c15.xhtml#Page_426)–[431](c15.xhtml#Page_431)
  prefs: []
  type: TYPE_NORMAL
- en: instance, [151](c07.xhtml#Page_151), [152](c07.xhtml#Page_152), [154](c07.xhtml#Page_154)–[155](c07.xhtml#Page_155)
  prefs: []
  type: TYPE_NORMAL
- en: scope naming conventions, [156](c07.xhtml#Page_156)–[157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: setting, [431](c15.xhtml#Page_431)–[433](c15.xhtml#Page_433)
  prefs: []
  type: TYPE_NORMAL
- en: and structural pattern matching, [177](c07.xhtml#Page_177)–[180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: Atwood, Jeff, [185](c08.xhtml#Page_185)
  prefs: []
  type: TYPE_NORMAL
- en: augmented assignment operators, [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: automation development, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: autopep8 tool, [33](c02.xhtml#Page_33)
  prefs: []
  type: TYPE_NORMAL
- en: autouse fixtures, [603](c20.xhtml#Page_603)–[604](c20.xhtml#Page_604), [665](b03.xhtml#Page_665)
  prefs: []
  type: TYPE_NORMAL
- en: '`await` keyword, [464](c16.xhtml#Page_464)–[465](c16.xhtml#Page_465)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__await__()` method, [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: awaitables, [464](c16.xhtml#Page_464)
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs: []
  type: TYPE_NORMAL
- en: backslash (`\`) character, [54](c03.xhtml#Page_54), [55](c03.xhtml#Page_55)–[56](c03.xhtml#Page_56),
    [347](c12.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: Bandit, [571](c19.xhtml#Page_571)–[574](c19.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: bare getters and setters, [150](c07.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: '`BaseException` class, [207](c08.xhtml#Page_207), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__bases__` attribute, [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: '`basicConfig()` (`logging` module) function, [196](c08.xhtml#Page_196), [199](c08.xhtml#Page_199)'
  prefs: []
  type: TYPE_NORMAL
- en: Batchelder, Ned, [95](c05.xhtml#Page_95), [99](c05.xhtml#Page_99), [107](c05.xhtml#Page_107),
    [456](c15.xhtml#Page_456), [609](c20.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: bdist (built distribution), [516](c18.xhtml#Page_516), [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: Beazley, David, [460](c16.xhtml#Page_460)
  prefs: []
  type: TYPE_NORMAL
- en: benchmarking, [611](c20.xhtml#Page_611), [612](c20.xhtml#Page_612)–[613](c20.xhtml#Page_613)
  prefs: []
  type: TYPE_NORMAL
- en: big data, [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: big-endian byte order, [342](c12.xhtml#Page_342)–[343](c12.xhtml#Page_343),
    [349](c12.xhtml#Page_349)
  prefs: []
  type: TYPE_NORMAL
- en: '`bin()` function, [341](c12.xhtml#Page_341), [343](c12.xhtml#Page_343)'
  prefs: []
  type: TYPE_NORMAL
- en: binary extension modules, [629](c21.xhtml#Page_629)–[630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: binary notation, [338](c12.xhtml#Page_338)–[343](c12.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: binary operator special methods, [173](c07.xhtml#Page_173)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: binary streams
  prefs: []
  type: TYPE_NORMAL
- en: about, [295](c11.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: '`BufferedRWPair` stream, [372](c12.xhtml#Page_372)'
  prefs: []
  type: TYPE_NORMAL
- en: changing stream positions, [371](c12.xhtml#Page_371)
  prefs: []
  type: TYPE_NORMAL
- en: custom format example, [364](c12.xhtml#Page_364)–[368](c12.xhtml#Page_368)
  prefs: []
  type: TYPE_NORMAL
- en: modes, [298](c11.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: opening, [363](c12.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: reading from, [368](c12.xhtml#Page_368)–[370](c12.xhtml#Page_370)
  prefs: []
  type: TYPE_NORMAL
- en: binding. *See also* assignment
  prefs: []
  type: TYPE_NORMAL
- en: about, [117](c05.xhtml#Page_117), [654](b03.xhtml#Page_654)
  prefs: []
  type: TYPE_NORMAL
- en: to copies, [111](c05.xhtml#Page_111)–[114](c05.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: names and values, [97](c05.xhtml#Page_97)–[98](c05.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: references, [109](c05.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: weakly bound, [44](c03.xhtml#Page_44)
  prefs: []
  type: TYPE_NORMAL
- en: binding behavior, [436](c15.xhtml#Page_436), [655](b03.xhtml#Page_655)
  prefs: []
  type: TYPE_NORMAL
- en: bitmasks, [341](c12.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: bits, [338](c12.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: bitwise operations
  prefs: []
  type: TYPE_NORMAL
- en: on bytes-like objects, [357](c12.xhtml#Page_357)–[361](c12.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: and custom classes, [346](c12.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: operators, [47](c03.xhtml#Page_47), [343](c12.xhtml#Page_343)–[346](c12.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: black box behaviors, [150](c07.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: Black tool, [34](c02.xhtml#Page_34)
  prefs: []
  type: TYPE_NORMAL
- en: boilerplate code, [151](c07.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: '`bool()` function, [237](c09.xhtml#Page_237)–[238](c09.xhtml#Page_238)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__bool__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: boolean values, [51](c03.xhtml#Page_51), [237](c09.xhtml#Page_237)–[238](c09.xhtml#Page_238),
    [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: boolean variables, [50](c03.xhtml#Page_50)–[51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: '`break` statement, [67](c03.xhtml#Page_67), [214](c09.xhtml#Page_214)'
  prefs: []
  type: TYPE_NORMAL
- en: breakpoints, [561](c19.xhtml#Page_561)
  prefs: []
  type: TYPE_NORMAL
- en: brittle code, [247](c09.xhtml#Page_247), [556](c19.xhtml#Page_556)
  prefs: []
  type: TYPE_NORMAL
- en: Brython (Browser Python), [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: BSON serialization format, [376](c12.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: bubbling up, [199](c08.xhtml#Page_199)–[200](c08.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: buffer protocol, [361](c12.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: '`BufferedRWPair` stream, [372](c12.xhtml#Page_372)'
  prefs: []
  type: TYPE_NORMAL
- en: '`BufferError`, [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: buffers, [291](c11.xhtml#Page_291)–[292](c11.xhtml#Page_292), [655](b03.xhtml#Page_655)
  prefs: []
  type: TYPE_NORMAL
- en: build system (*pyproject.toml*), [529](c18.xhtml#Page_529)–[530](c18.xhtml#Page_530)
  prefs: []
  type: TYPE_NORMAL
- en: built distribution (bdist), [516](c18.xhtml#Page_516), [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: built-in importer, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`__builtins__`, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: bullet journal example, [385](c13.xhtml#Page_385)–[388](c13.xhtml#Page_388)
  prefs: []
  type: TYPE_NORMAL
- en: '`bytearray` objects, [348](c12.xhtml#Page_348), [363](c12.xhtml#Page_363)'
  prefs: []
  type: TYPE_NORMAL
- en: bytecode, [6](c01.xhtml#Page_6), [91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: '`byteorder` attribute, [349](c12.xhtml#Page_349)'
  prefs: []
  type: TYPE_NORMAL
- en: bytes
  prefs: []
  type: TYPE_NORMAL
- en: defined, [338](c12.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: order, [342](c12.xhtml#Page_342)–[343](c12.xhtml#Page_343), [349](c12.xhtml#Page_349)–[350](c12.xhtml#Page_350),
    [352](c12.xhtml#Page_352), [656](b03.xhtml#Page_656)
  prefs: []
  type: TYPE_NORMAL
- en: '`bytes()` method, [348](c12.xhtml#Page_348)–[349](c12.xhtml#Page_349)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__bytes__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: bytes-like objects
  prefs: []
  type: TYPE_NORMAL
- en: about, [347](c12.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: bitwise operations on, [357](c12.xhtml#Page_357)–[361](c12.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: '`bytes` vs. `bytearray`, [348](c12.xhtml#Page_348)'
  prefs: []
  type: TYPE_NORMAL
- en: creating, [348](c12.xhtml#Page_348)–[349](c12.xhtml#Page_349)
  prefs: []
  type: TYPE_NORMAL
- en: and integer conversions, [349](c12.xhtml#Page_349)–[351](c12.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: and memory consumption, [361](c12.xhtml#Page_361)–[363](c12.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: sequence operations, [351](c12.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: and `struct` module, [352](c12.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: bytes literals, [346](c12.xhtml#Page_346)–[347](c12.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: '`BytesWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs: []
  type: TYPE_NORMAL
- en: C Foreign Function Interface (CFFI), [629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: C3 Method Resolution Order (C3 MRO), [389](c13.xhtml#Page_389)–[392](c13.xhtml#Page_392),
    [395](c13.xhtml#Page_395)
  prefs: []
  type: TYPE_NORMAL
- en: '`__cached__` attribute, [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: cached bytecode, [91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: Call for Proposals (CFPs), [634](c21.xhtml#Page_634)
  prefs: []
  type: TYPE_NORMAL
- en: '`__call__()` method, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: call stacks, [186](c08.xhtml#Page_186)–[187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: callable instances, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: callable objects (callables), [131](c06.xhtml#Page_131)–[132](c06.xhtml#Page_132),
    [656](b03.xhtml#Page_656)
  prefs: []
  type: TYPE_NORMAL
- en: callbacks, [465](c16.xhtml#Page_465)
  prefs: []
  type: TYPE_NORMAL
- en: camel case, [656](b03.xhtml#Page_656)
  prefs: []
  type: TYPE_NORMAL
- en: canonical string representation, [61](c03.xhtml#Page_61), [168](c07.xhtml#Page_168)–[169](c07.xhtml#Page_169)
  prefs: []
  type: TYPE_NORMAL
- en: capture patterns, [69](c03.xhtml#Page_69)–[70](c03.xhtml#Page_70)
  prefs: []
  type: TYPE_NORMAL
- en: cargo cult programming, [514](c18.xhtml#Page_514), [657](b03.xhtml#Page_657)
  prefs: []
  type: TYPE_NORMAL
- en: carriage return (`\r`), [294](c11.xhtml#Page_294), [307](c11.xhtml#Page_307)
  prefs: []
  type: TYPE_NORMAL
- en: CBOR (Concise Binary Object Representation) serialization format, [376](c12.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: '`__ceil__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`chain()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`chr()` function, [161](c07.xhtml#Page_161)'
  prefs: []
  type: TYPE_NORMAL
- en: chunking, [501](c17.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: CircuitPython, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '`__class__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: class attributes, [105](c05.xhtml#Page_105)–[106](c05.xhtml#Page_106), [646](b01.xhtml#Page_646)
  prefs: []
  type: TYPE_NORMAL
- en: '`__class_getitem__()` method, [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: class methods, [158](c07.xhtml#Page_158)–[159](c07.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: classes. *See also* abstract base classes (ABCs); inheritance; metaclasses;
    virtual subclasses
  prefs: []
  type: TYPE_NORMAL
- en: about, [150](c07.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: base vs. derived, [384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: and bitwise operations, [346](c12.xhtml#Page_346)
  prefs: []
  type: TYPE_NORMAL
- en: decisions about using, [181](c07.xhtml#Page_181)–[182](c07.xhtml#Page_182)
  prefs: []
  type: TYPE_NORMAL
- en: declaring, [151](c07.xhtml#Page_151)–[154](c07.xhtml#Page_154)
  prefs: []
  type: TYPE_NORMAL
- en: as immutable, [447](c15.xhtml#Page_447)–[449](c15.xhtml#Page_449)
  prefs: []
  type: TYPE_NORMAL
- en: and SOLID principles, [382](c13.xhtml#Page_382)–[384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: syntax, [63](c03.xhtml#Page_63)–[64](c03.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: classifiers (PyPI), [522](c18.xhtml#Page_522)–[523](c18.xhtml#Page_523)
  prefs: []
  type: TYPE_NORMAL
- en: '`@classmethod` decorator, [159](c07.xhtml#Page_159)'
  prefs: []
  type: TYPE_NORMAL
- en: clauses, [657](b03.xhtml#Page_657)
  prefs: []
  type: TYPE_NORMAL
- en: '`click` module, [579](c20.xhtml#Page_579)–[580](c20.xhtml#Page_580), [615](c20.xhtml#Page_615)'
  prefs: []
  type: TYPE_NORMAL
- en: '`close()` method, [265](c10.xhtml#Page_265), [296](c11.xhtml#Page_296), [297](c11.xhtml#Page_297)'
  prefs: []
  type: TYPE_NORMAL
- en: closing generators, [264](c10.xhtml#Page_264)–[266](c10.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: '`__closure__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: closures, [135](c06.xhtml#Page_135)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: coarse-grained locking, [487](c17.xhtml#Page_487)–[488](c17.xhtml#Page_488)
  prefs: []
  type: TYPE_NORMAL
- en: code
  prefs: []
  type: TYPE_NORMAL
- en: autoformatting, [33](c02.xhtml#Page_33)–[34](c02.xhtml#Page_34)
  prefs: []
  type: TYPE_NORMAL
- en: boilerplate, [151](c07.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: brittle, [247](c09.xhtml#Page_247), [556](c19.xhtml#Page_556)
  prefs: []
  type: TYPE_NORMAL
- en: “dead”, [608](c20.xhtml#Page_608)
  prefs: []
  type: TYPE_NORMAL
- en: editors, [34](c02.xhtml#Page_34)–[36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: frozen, [666](b03.xhtml#Page_666)
  prefs: []
  type: TYPE_NORMAL
- en: security evaluation, [571](c19.xhtml#Page_571)–[574](c19.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: style, [27](c02.xhtml#Page_27)–[29](c02.xhtml#Page_29), [31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: testing frameworks, [34](c02.xhtml#Page_34)
  prefs: []
  type: TYPE_NORMAL
- en: and thread safety, [486](c17.xhtml#Page_486)–[488](c17.xhtml#Page_488)
  prefs: []
  type: TYPE_NORMAL
- en: tightly coupled, [120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '`__code__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: code coverage, [607](c20.xhtml#Page_607)–[609](c20.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: code injection, [455](c15.xhtml#Page_455)
  prefs: []
  type: TYPE_NORMAL
- en: coercion, [114](c05.xhtml#Page_114), [117](c05.xhtml#Page_117), [658](b03.xhtml#Page_658)
  prefs: []
  type: TYPE_NORMAL
- en: Collatz game example
  prefs: []
  type: TYPE_NORMAL
- en: with asynchronous iterable, [472](c16.xhtml#Page_472)–[473](c16.xhtml#Page_473)
  prefs: []
  type: TYPE_NORMAL
- en: with coroutines, [465](c16.xhtml#Page_465)–[472](c16.xhtml#Page_472)
  prefs: []
  type: TYPE_NORMAL
- en: with futures, [483](c17.xhtml#Page_483)–[486](c17.xhtml#Page_486), [496](c17.xhtml#Page_496)–[497](c17.xhtml#Page_497)
  prefs: []
  type: TYPE_NORMAL
- en: with multiprocessing, [500](c17.xhtml#Page_500)–[501](c17.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: producer/consumer implementation, [502](c17.xhtml#Page_502)–[507](c17.xhtml#Page_507)
  prefs: []
  type: TYPE_NORMAL
- en: with queue, [495](c17.xhtml#Page_495)–[496](c17.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: with race conditions, [489](c17.xhtml#Page_489)–[493](c17.xhtml#Page_493)
  prefs: []
  type: TYPE_NORMAL
- en: synchronous version, [461](c16.xhtml#Page_461)–[463](c16.xhtml#Page_463)
  prefs: []
  type: TYPE_NORMAL
- en: threading, [479](c17.xhtml#Page_479)–[481](c17.xhtml#Page_481), [482](c17.xhtml#Page_482)
  prefs: []
  type: TYPE_NORMAL
- en: collections
  prefs: []
  type: TYPE_NORMAL
- en: about, [65](c03.xhtml#Page_65), [66](c03.xhtml#Page_66), [216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: checking for values in, [236](c09.xhtml#Page_236)–[237](c09.xhtml#Page_237)
  prefs: []
  type: TYPE_NORMAL
- en: deques, [219](c09.xhtml#Page_219)–[220](c09.xhtml#Page_220)
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [222](c09.xhtml#Page_222)–[225](c09.xhtml#Page_225)
  prefs: []
  type: TYPE_NORMAL
- en: length, [237](c09.xhtml#Page_237)–[238](c09.xhtml#Page_238)
  prefs: []
  type: TYPE_NORMAL
- en: lists, [218](c09.xhtml#Page_218)–[219](c09.xhtml#Page_219)
  prefs: []
  type: TYPE_NORMAL
- en: and references, [109](c05.xhtml#Page_109)–[114](c05.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: sets, [220](c09.xhtml#Page_220)–[222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: subscriptable, [231](c09.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [216](c09.xhtml#Page_216)–[218](c09.xhtml#Page_218)
  prefs: []
  type: TYPE_NORMAL
- en: unpacking, [225](c09.xhtml#Page_225)–[228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: '`collections` module, [217](c09.xhtml#Page_217), [411](c14.xhtml#Page_411)'
  prefs: []
  type: TYPE_NORMAL
- en: '`combinations()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: command line prompts, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: comments, [42](c03.xhtml#Page_42)–[43](c03.xhtml#Page_43)
  prefs: []
  type: TYPE_NORMAL
- en: comparison methods, [171](c07.xhtml#Page_171)–[173](c07.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: comparison operators, [49](c03.xhtml#Page_49)
  prefs: []
  type: TYPE_NORMAL
- en: '`compile()` function, [454](c15.xhtml#Page_454)–[456](c15.xhtml#Page_456)'
  prefs: []
  type: TYPE_NORMAL
- en: compiling, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`__complex__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: complex numbers (`complex`), [45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: compositions, [150](c07.xhtml#Page_150)–[151](c07.xhtml#Page_151), [181](c07.xhtml#Page_181),
    [384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: compound statements, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: concatenations
  prefs: []
  type: TYPE_NORMAL
- en: in printing, [292](c11.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: string literals, [55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [56](c03.xhtml#Page_56), [62](c03.xhtml#Page_62)
  prefs: []
  type: TYPE_NORMAL
- en: concrete exceptions, [209](c08.xhtml#Page_209)–[210](c08.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: concrete paths, [316](c11.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: concurrency, [458](c16.xhtml#Page_458), [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: '`concurrent.futures` module, [483](c17.xhtml#Page_483)–[486](c17.xhtml#Page_486),
    [496](c17.xhtml#Page_496)–[497](c17.xhtml#Page_497), [508](c17.xhtml#Page_508)'
  prefs: []
  type: TYPE_NORMAL
- en: conditionals, [41](c03.xhtml#Page_41), [49](c03.xhtml#Page_49), [273](c10.xhtml#Page_273)–[276](c10.xhtml#Page_276).
    *See also* ternary expressions
  prefs: []
  type: TYPE_NORMAL
- en: conferences, [634](c21.xhtml#Page_634)
  prefs: []
  type: TYPE_NORMAL
- en: '`configobj` library, [333](c11.xhtml#Page_333)'
  prefs: []
  type: TYPE_NORMAL
- en: '`configparser` module, [332](c11.xhtml#Page_332)'
  prefs: []
  type: TYPE_NORMAL
- en: configuration files, [332](c11.xhtml#Page_332)–[333](c11.xhtml#Page_333), [334](c11.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: constants, [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45), [47](c03.xhtml#Page_47)–[48](c03.xhtml#Page_48)
  prefs: []
  type: TYPE_NORMAL
- en: constructors, [152](c07.xhtml#Page_152)–[153](c07.xhtml#Page_153)
  prefs: []
  type: TYPE_NORMAL
- en: containers, [537](c18.xhtml#Page_537)–[539](c18.xhtml#Page_539)
  prefs: []
  type: TYPE_NORMAL
- en: '`__contains__()` method, [237](c09.xhtml#Page_237), [254](c09.xhtml#Page_254),
    [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: context management protocol, [309](c11.xhtml#Page_309)–[314](c11.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: context managers
  prefs: []
  type: TYPE_NORMAL
- en: about, [296](c11.xhtml#Page_296)–[297](c11.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous, [475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: operations, [308](c11.xhtml#Page_308)–[314](c11.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: context variables (`contextvars`), [476](c16.xhtml#Page_476)
  prefs: []
  type: TYPE_NORMAL
- en: '`continue` statement, [67](c03.xhtml#Page_67)'
  prefs: []
  type: TYPE_NORMAL
- en: controller classes, [384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: conversions, [114](c05.xhtml#Page_114)–[115](c05.xhtml#Page_115), [117](c05.xhtml#Page_117),
    [168](c07.xhtml#Page_168)–[171](c07.xhtml#Page_171)
  prefs: []
  type: TYPE_NORMAL
- en: '`copy()` function, [111](c05.xhtml#Page_111)'
  prefs: []
  type: TYPE_NORMAL
- en: copying, [111](c05.xhtml#Page_111)–[114](c05.xhtml#Page_114), [117](c05.xhtml#Page_117),
    [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: core developers, [631](c21.xhtml#Page_631), [659](b03.xhtml#Page_659)
  prefs: []
  type: TYPE_NORMAL
- en: coroutines
  prefs: []
  type: TYPE_NORMAL
- en: about, [282](c10.xhtml#Page_282)–[283](c10.xhtml#Page_283), [287](c10.xhtml#Page_287)
  prefs: []
  type: TYPE_NORMAL
- en: native, [464](c16.xhtml#Page_464)–[466](c16.xhtml#Page_466)
  prefs: []
  type: TYPE_NORMAL
- en: simple, [283](c10.xhtml#Page_283)–[286](c10.xhtml#Page_286)
  prefs: []
  type: TYPE_NORMAL
- en: '`count()` (`itertools` module) function, [258](c10.xhtml#Page_258)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Counter`, [224](c09.xhtml#Page_224)'
  prefs: []
  type: TYPE_NORMAL
- en: coverage.py tool, [607](c20.xhtml#Page_607)
  prefs: []
  type: TYPE_NORMAL
- en: '`cprofile` module, [613](c20.xhtml#Page_613)–[617](c20.xhtml#Page_617)'
  prefs: []
  type: TYPE_NORMAL
- en: CPU-bound tasks, [463](c16.xhtml#Page_463), [497](c17.xhtml#Page_497)–[498](c17.xhtml#Page_498)
  prefs: []
  type: TYPE_NORMAL
- en: CPython, [5](c01.xhtml#Page_5), [627](c21.xhtml#Page_627), [628](c21.xhtml#Page_628)
  prefs: []
  type: TYPE_NORMAL
- en: CSV (comma-separated values) file format, [332](c11.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: '`ctrace` module, [607](c20.xhtml#Page_607)'
  prefs: []
  type: TYPE_NORMAL
- en: cumulative runtime, [614](c20.xhtml#Page_614)
  prefs: []
  type: TYPE_NORMAL
- en: Curio library, [460](c16.xhtml#Page_460), [466](c16.xhtml#Page_466), [468](c16.xhtml#Page_468)
  prefs: []
  type: TYPE_NORMAL
- en: current working directory, [322](c11.xhtml#Page_322), [324](c11.xhtml#Page_324)–[325](c11.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: cx_Freeze, [5](c01.xhtml#Page_5), [6](c01.xhtml#Page_6), [536](c18.xhtml#Page_536)
  prefs: []
  type: TYPE_NORMAL
- en: '`cycle()` (`itertools` module) function, [258](c10.xhtml#Page_258)'
  prefs: []
  type: TYPE_NORMAL
- en: Cython transpiler, [5](c01.xhtml#Page_5), [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs: []
  type: TYPE_NORMAL
- en: daemonic threads, [482](c17.xhtml#Page_482)–[483](c17.xhtml#Page_483), [660](b03.xhtml#Page_660)
  prefs: []
  type: TYPE_NORMAL
- en: Dask, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: data
  prefs: []
  type: TYPE_NORMAL
- en: defined, [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: as packaged files, [524](c18.xhtml#Page_524)
  prefs: []
  type: TYPE_NORMAL
- en: picklable, [499](c17.xhtml#Page_499)
  prefs: []
  type: TYPE_NORMAL
- en: data descriptors, [437](c15.xhtml#Page_437)
  prefs: []
  type: TYPE_NORMAL
- en: data hiding, [157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: data science, [623](c21.xhtml#Page_623)–[625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: data types
  prefs: []
  type: TYPE_NORMAL
- en: in binary data conversions, [353](c12.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: mutable and immutable, [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107)
  prefs: []
  type: TYPE_NORMAL
- en: treatment in Python, [44](c03.xhtml#Page_44), [98](c05.xhtml#Page_98)–[100](c05.xhtml#Page_100)
  prefs: []
  type: TYPE_NORMAL
- en: data validation vs. assertion, [558](c19.xhtml#Page_558)–[559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: dataclasses, [449](c15.xhtml#Page_449)
  prefs: []
  type: TYPE_NORMAL
- en: dataframes, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: '`deactivate` command, [20](c02.xhtml#Page_20)'
  prefs: []
  type: TYPE_NORMAL
- en: deadlocks, [493](c17.xhtml#Page_493)–[494](c17.xhtml#Page_494)
  prefs: []
  type: TYPE_NORMAL
- en: debugging. *See also* logging; Python Debugger (pdb)
  prefs: []
  type: TYPE_NORMAL
- en: and assertions, [556](c19.xhtml#Page_556)–[560](c19.xhtml#Page_560)
  prefs: []
  type: TYPE_NORMAL
- en: example, [561](c19.xhtml#Page_561)–[562](c19.xhtml#Page_562)
  prefs: []
  type: TYPE_NORMAL
- en: loops vs. generator expressions, [281](c10.xhtml#Page_281)–[282](c10.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: and packaging, [514](c18.xhtml#Page_514)–[515](c18.xhtml#Page_515)
  prefs: []
  type: TYPE_NORMAL
- en: tools, [560](c19.xhtml#Page_560)–[561](c19.xhtml#Page_561)
  prefs: []
  type: TYPE_NORMAL
- en: undefined behavior, [570](c19.xhtml#Page_570)–[571](c19.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: and warnings, [544](c19.xhtml#Page_544)–[548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: '`Decimal` number type, [45](c03.xhtml#Page_45)–[46](c03.xhtml#Page_46)'
  prefs: []
  type: TYPE_NORMAL
- en: declarative programming, [120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '`decode()` method, [368](c12.xhtml#Page_368)'
  prefs: []
  type: TYPE_NORMAL
- en: decorators
  prefs: []
  type: TYPE_NORMAL
- en: about, [660](b03.xhtml#Page_660)
  prefs: []
  type: TYPE_NORMAL
- en: class, [176](c07.xhtml#Page_176)–[177](c07.xhtml#Page_177)
  prefs: []
  type: TYPE_NORMAL
- en: defining properties with, [164](c07.xhtml#Page_164)–[166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: on functions, [142](c06.xhtml#Page_142)–[145](c06.xhtml#Page_145), [436](c15.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: deep copy (`deepcopy()`), [113](c05.xhtml#Page_113)–[114](c05.xhtml#Page_114),
    [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: '`def` keyword, [63](c03.xhtml#Page_63)'
  prefs: []
  type: TYPE_NORMAL
- en: default argument values, [126](c06.xhtml#Page_126)–[128](c06.xhtml#Page_128),
    [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`defaultdict`, [224](c09.xhtml#Page_224)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__defaults__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__del__()` method, [154](c07.xhtml#Page_154), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`del` operator, [154](c07.xhtml#Page_154), [223](c09.xhtml#Page_223)'
  prefs: []
  type: TYPE_NORMAL
- en: '`delattr()` method, [433](c15.xhtml#Page_433)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__delattr__()` method, [433](c15.xhtml#Page_433), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__delete__()` method, [437](c15.xhtml#Page_437), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: deleters, [162](c07.xhtml#Page_162)–[163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: '`__delitem__()` method, [231](c09.xhtml#Page_231), [235](c09.xhtml#Page_235),
    [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: dependencies, [15](c02.xhtml#Page_15)–[16](c02.xhtml#Page_16), [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23),
    [524](c18.xhtml#Page_524)–[525](c18.xhtml#Page_525), [537](c18.xhtml#Page_537)–[539](c18.xhtml#Page_539)
  prefs: []
  type: TYPE_NORMAL
- en: dependency injections, [587](c20.xhtml#Page_587)
  prefs: []
  type: TYPE_NORMAL
- en: Dependency Inversion Principle, [383](c13.xhtml#Page_383)–[384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: '`DeprecationWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: deques (`deque`), [219](c09.xhtml#Page_219)–[220](c09.xhtml#Page_220), [495](c17.xhtml#Page_495)
  prefs: []
  type: TYPE_NORMAL
- en: descriptors
  prefs: []
  type: TYPE_NORMAL
- en: about, [436](c15.xhtml#Page_436)–[437](c15.xhtml#Page_437), [661](b03.xhtml#Page_661)
  prefs: []
  type: TYPE_NORMAL
- en: using multiple, [442](c15.xhtml#Page_442)–[444](c15.xhtml#Page_444)
  prefs: []
  type: TYPE_NORMAL
- en: writing, [437](c15.xhtml#Page_437)–[442](c15.xhtml#Page_442)
  prefs: []
  type: TYPE_NORMAL
- en: deserialization. *See* serialization
  prefs: []
  type: TYPE_NORMAL
- en: design patterns, [373](c12.xhtml#Page_373), [407](c14.xhtml#Page_407)–[408](c14.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: development environments. *See also* IDEs (integrated development environments)
  prefs: []
  type: TYPE_NORMAL
- en: and *requirements.txt* file, [528](c18.xhtml#Page_528)–[529](c18.xhtml#Page_529)
  prefs: []
  type: TYPE_NORMAL
- en: dialects, [332](c11.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: diamond inheritance problem, [389](c13.xhtml#Page_389)
  prefs: []
  type: TYPE_NORMAL
- en: diaper anti-pattern, [190](c08.xhtml#Page_190)–[192](c08.xhtml#Page_192)
  prefs: []
  type: TYPE_NORMAL
- en: dice roll program example
  prefs: []
  type: TYPE_NORMAL
- en: basic function, [122](c06.xhtml#Page_122)–[123](c06.xhtml#Page_123)
  prefs: []
  type: TYPE_NORMAL
- en: closures, [135](c06.xhtml#Page_135)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: with default arguments, [125](c06.xhtml#Page_125)–[128](c06.xhtml#Page_128)
  prefs: []
  type: TYPE_NORMAL
- en: with keyword arguments, [128](c06.xhtml#Page_128)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: with recursion, [124](c06.xhtml#Page_124)–[125](c06.xhtml#Page_125), [134](c06.xhtml#Page_134)–[135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: with type hints, [145](c06.xhtml#Page_145)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`__dict__` attribute'
  prefs: []
  type: TYPE_NORMAL
- en: about, [426](c15.xhtml#Page_426)–[428](c15.xhtml#Page_428), [645](b01.xhtml#Page_645),
    [646](b01.xhtml#Page_646)
  prefs: []
  type: TYPE_NORMAL
- en: listing, [428](c15.xhtml#Page_428)–[429](c15.xhtml#Page_429)
  prefs: []
  type: TYPE_NORMAL
- en: vs. slots, [444](c15.xhtml#Page_444)–[445](c15.xhtml#Page_445)
  prefs: []
  type: TYPE_NORMAL
- en: '`dict` type, [222](c09.xhtml#Page_222)'
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries
  prefs: []
  type: TYPE_NORMAL
- en: about, [222](c09.xhtml#Page_222)–[224](c09.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: unpacking, [227](c09.xhtml#Page_227)–[228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: variants, [224](c09.xhtml#Page_224)–[225](c09.xhtml#Page_225)
  prefs: []
  type: TYPE_NORMAL
- en: dictionary comprehensions, [279](c10.xhtml#Page_279)
  prefs: []
  type: TYPE_NORMAL
- en: difference (`-`) set operator, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: '`dir()` function, [429](c15.xhtml#Page_429)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__dir__()` method, [429](c15.xhtml#Page_429), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: directories. *See also* paths
  prefs: []
  type: TYPE_NORMAL
- en: '*dist/*, [531](c18.xhtml#Page_531)'
  prefs: []
  type: TYPE_NORMAL
- en: and project structure, [74](c04.xhtml#Page_74)–[77](c04.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: '*src/*, [517](c18.xhtml#Page_517)–[518](c18.xhtml#Page_518), [580](c20.xhtml#Page_580)'
  prefs: []
  type: TYPE_NORMAL
- en: virtual environment, [19](c02.xhtml#Page_19), [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: '`discard()` method, [221](c09.xhtml#Page_221)'
  prefs: []
  type: TYPE_NORMAL
- en: '*dist/* directory, [531](c18.xhtml#Page_531)'
  prefs: []
  type: TYPE_NORMAL
- en: division (`/`) operator, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: '`divmod()` function, [47](c03.xhtml#Page_47)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__divmod__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: Django, [622](c21.xhtml#Page_622)
  prefs: []
  type: TYPE_NORMAL
- en: '`__doc__` attribute, [644](b01.xhtml#Page_644), [645](b01.xhtml#Page_645),
    [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: Docker, [539](c18.xhtml#Page_539)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings, [43](c03.xhtml#Page_43), [58](c03.xhtml#Page_58), [434](c15.xhtml#Page_434),
    [541](c18.xhtml#Page_541), [662](b03.xhtml#Page_662)
  prefs: []
  type: TYPE_NORMAL
- en: documentation
  prefs: []
  type: TYPE_NORMAL
- en: project, [540](c18.xhtml#Page_540)–[541](c18.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: Python, [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: with type hints and annotations, [145](c06.xhtml#Page_145)–[147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: dot operator (`.`), [64](c03.xhtml#Page_64), [105](c05.xhtml#Page_105), [152](c07.xhtml#Page_152),
    [429](c15.xhtml#Page_429)
  prefs: []
  type: TYPE_NORMAL
- en: drive (in path names), [318](c11.xhtml#Page_318), [319](c11.xhtml#Page_319)
  prefs: []
  type: TYPE_NORMAL
- en: '`dropwhile()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: duck typing, [100](c05.xhtml#Page_100), [114](c05.xhtml#Page_114), [146](c06.xhtml#Page_146)–[147](c06.xhtml#Page_147),
    [384](c13.xhtml#Page_384), [408](c14.xhtml#Page_408)–[410](c14.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: '`dump()` (`json` module) function, [329](c11.xhtml#Page_329)–[330](c11.xhtml#Page_330)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dumps()` (`json` module) function, [329](c11.xhtml#Page_329)–[330](c11.xhtml#Page_330)'
  prefs: []
  type: TYPE_NORMAL
- en: dunder methods. *See* special methods
  prefs: []
  type: TYPE_NORMAL
- en: dynamic vs. static typing, [6](c01.xhtml#Page_6), [44](c03.xhtml#Page_44), [98](c05.xhtml#Page_98)–[99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs: []
  type: TYPE_NORMAL
- en: '`e` (Euler’s number) constant, [48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: EAFP (Easier to Ask Forgiveness than Permission)
  prefs: []
  type: TYPE_NORMAL
- en: catching exceptions, [223](c09.xhtml#Page_223), [408](c14.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: philosophy, [187](c08.xhtml#Page_187)–[188](c08.xhtml#Page_188)
  prefs: []
  type: TYPE_NORMAL
- en: eager iterables, [258](c10.xhtml#Page_258), [662](b03.xhtml#Page_662)
  prefs: []
  type: TYPE_NORMAL
- en: Eclipse, [36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: editable package installations, [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: eggs (format), [516](c18.xhtml#Page_516)
  prefs: []
  type: TYPE_NORMAL
- en: '`Element` class example'
  prefs: []
  type: TYPE_NORMAL
- en: definition, [445](c15.xhtml#Page_445)–[446](c15.xhtml#Page_446)
  prefs: []
  type: TYPE_NORMAL
- en: functions, [449](c15.xhtml#Page_449)–[452](c15.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: as immutable, [447](c15.xhtml#Page_447)–[449](c15.xhtml#Page_449)
  prefs: []
  type: TYPE_NORMAL
- en: usage, [452](c15.xhtml#Page_452)–[454](c15.xhtml#Page_454)
  prefs: []
  type: TYPE_NORMAL
- en: '`elif` statements, [49](c03.xhtml#Page_49)'
  prefs: []
  type: TYPE_NORMAL
- en: Ellipsis (`...`), [53](c03.xhtml#Page_53), [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`else` clause, [41](c03.xhtml#Page_41), [49](c03.xhtml#Page_49), [202](c08.xhtml#Page_202)–[204](c08.xhtml#Page_204),
    [215](c09.xhtml#Page_215)–[216](c09.xhtml#Page_216)'
  prefs: []
  type: TYPE_NORMAL
- en: Emacs, [34](c02.xhtml#Page_34)–[35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: embedded development, [626](c21.xhtml#Page_626)–[627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '`empty()` method, [505](c17.xhtml#Page_505), [506](c17.xhtml#Page_506)'
  prefs: []
  type: TYPE_NORMAL
- en: empty sets, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: encapsulation, [150](c07.xhtml#Page_150), [182](c07.xhtml#Page_182), [663](b03.xhtml#Page_663)
  prefs: []
  type: TYPE_NORMAL
- en: enclosing scope, [105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: '`encode()` method, [365](c12.xhtml#Page_365)'
  prefs: []
  type: TYPE_NORMAL
- en: '`encoding=` keyword, [349](c12.xhtml#Page_349)'
  prefs: []
  type: TYPE_NORMAL
- en: encryption, [373](c12.xhtml#Page_373)–[374](c12.xhtml#Page_374)
  prefs: []
  type: TYPE_NORMAL
- en: '`end=` keyword, [292](c11.xhtml#Page_292), [294](c11.xhtml#Page_294)'
  prefs: []
  type: TYPE_NORMAL
- en: endianness, [342](c12.xhtml#Page_342)–[343](c12.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: '`__enter__()` method, [308](c11.xhtml#Page_308)–[309](c11.xhtml#Page_309),
    [311](c11.xhtml#Page_311), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: entry points, [85](c04.xhtml#Page_85)–[86](c04.xhtml#Page_86), [86](c04.xhtml#Page_86)–[87](c04.xhtml#Page_87),
    [88](c04.xhtml#Page_88)–[89](c04.xhtml#Page_89), [525](c18.xhtml#Page_525)–[526](c18.xhtml#Page_526)
  prefs: []
  type: TYPE_NORMAL
- en: '`enumerate()` iterable, [244](c09.xhtml#Page_244), [248](c09.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: '*env/* directory, [19](c02.xhtml#Page_19)'
  prefs: []
  type: TYPE_NORMAL
- en: '`EOFError`, [198](c08.xhtml#Page_198)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__eq__()` (equals) method, [170](c07.xhtml#Page_170), [172](c07.xhtml#Page_172),
    [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: equals, [49](c03.xhtml#Page_49), [97](c05.xhtml#Page_97)–[98](c05.xhtml#Page_98),
    [172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: Eric Python IDE, [36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: errors, [663](b03.xhtml#Page_663). *See also* debugging; exceptions
  prefs: []
  type: TYPE_NORMAL
- en: escape characters, [54](c03.xhtml#Page_54), [55](c03.xhtml#Page_55)–[56](c03.xhtml#Page_56),
    [61](c03.xhtml#Page_61), [347](c12.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: '`eval()` function, [454](c15.xhtml#Page_454)–[456](c15.xhtml#Page_456)'
  prefs: []
  type: TYPE_NORMAL
- en: event handler functions, [504](c17.xhtml#Page_504)
  prefs: []
  type: TYPE_NORMAL
- en: event loops, [459](c16.xhtml#Page_459)–[460](c16.xhtml#Page_460), [468](c16.xhtml#Page_468)
  prefs: []
  type: TYPE_NORMAL
- en: example projects. *See* Collatz game example; dice roll program example; `Element`
    class example; `GlobalCoordinates` class example; *omission* project example;
    `SecretAgent` class example; `textproof` project example; Timecard packaging example
  prefs: []
  type: TYPE_NORMAL
- en: '`except` clause, [187](c08.xhtml#Page_187), [189](c08.xhtml#Page_189)–[190](c08.xhtml#Page_190),
    [200](c08.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Exception` class, [207](c08.xhtml#Page_207), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: exceptional state, [190](c08.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: exceptions
  prefs: []
  type: TYPE_NORMAL
- en: about, [184](c08.xhtml#Page_184)–[186](c08.xhtml#Page_186)
  prefs: []
  type: TYPE_NORMAL
- en: bubbling up, [199](c08.xhtml#Page_199)–[200](c08.xhtml#Page_200)
  prefs: []
  type: TYPE_NORMAL
- en: catching, [64](c03.xhtml#Page_64)–[65](c03.xhtml#Page_65), [187](c08.xhtml#Page_187)–[190](c08.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: chaining, [200](c08.xhtml#Page_200)–[202](c08.xhtml#Page_202)
  prefs: []
  type: TYPE_NORMAL
- en: vs. checking, [223](c09.xhtml#Page_223)–[224](c09.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: converting from warnings, [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: creating custom, [207](c08.xhtml#Page_207)–[208](c08.xhtml#Page_208)
  prefs: []
  type: TYPE_NORMAL
- en: and diaper anti-pattern, [190](c08.xhtml#Page_190)–[192](c08.xhtml#Page_192)
  prefs: []
  type: TYPE_NORMAL
- en: and dictionaries, [223](c09.xhtml#Page_223)–[224](c09.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: extracting information with, [194](c08.xhtml#Page_194)–[195](c08.xhtml#Page_195)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [208](c08.xhtml#Page_208)–[210](c08.xhtml#Page_210)
  prefs: []
  type: TYPE_NORMAL
- en: and logging, [195](c08.xhtml#Page_195)–[199](c08.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: raising, [192](c08.xhtml#Page_192)–[194](c08.xhtml#Page_194), [408](c14.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: throwing, [266](c10.xhtml#Page_266)–[268](c10.xhtml#Page_268)
  prefs: []
  type: TYPE_NORMAL
- en: and tracebacks, [186](c08.xhtml#Page_186)–[187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: '`exec()` function, [454](c15.xhtml#Page_454)–[456](c15.xhtml#Page_456)'
  prefs: []
  type: TYPE_NORMAL
- en: executors, [484](c17.xhtml#Page_484)–[485](c17.xhtml#Page_485)
  prefs: []
  type: TYPE_NORMAL
- en: '`exists()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`exit()` command, [18](c02.xhtml#Page_18)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__exit__()` method, [308](c11.xhtml#Page_308)–[309](c11.xhtml#Page_309), [311](c11.xhtml#Page_311)–[312](c11.xhtml#Page_312),
    [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: exponent (`**`) operator, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: expressions, [40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: extension development, [629](c21.xhtml#Page_629)–[630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs: []
  type: TYPE_NORMAL
- en: '`f` (f-string) keyword, [56](c03.xhtml#Page_56)–[57](c03.xhtml#Page_57)'
  prefs: []
  type: TYPE_NORMAL
- en: f-strings (formatted strings), [56](c03.xhtml#Page_56)–[60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: fail-fast principle, [408](c14.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: '`False` and `True` values, [51](c03.xhtml#Page_51), [237](c09.xhtml#Page_237)–[238](c09.xhtml#Page_238),
    [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: FastAPI, [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: '`faulthandler` module, [570](c19.xhtml#Page_570)–[571](c19.xhtml#Page_571)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__file__` attribute, [325](c11.xhtml#Page_325), [426](c15.xhtml#Page_426),
    [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: file formats, [328](c11.xhtml#Page_328)–[335](c11.xhtml#Page_335)
  prefs: []
  type: TYPE_NORMAL
- en: file modes, [297](c11.xhtml#Page_297)–[299](c11.xhtml#Page_299), [303](c11.xhtml#Page_303)
  prefs: []
  type: TYPE_NORMAL
- en: file objects. *See* streams
  prefs: []
  type: TYPE_NORMAL
- en: file paths. *See* paths
  prefs: []
  type: TYPE_NORMAL
- en: '`FileHandler` objects, [550](c19.xhtml#Page_550)–[551](c19.xhtml#Page_551)'
  prefs: []
  type: TYPE_NORMAL
- en: '`FileNotFoundError`, [204](c08.xhtml#Page_204), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: files. *See also* JSON files; paths; streams
  prefs: []
  type: TYPE_NORMAL
- en: closing, [296](c11.xhtml#Page_296)–[297](c11.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: encoding systems, [25](c02.xhtml#Page_25)–[26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: opening, [295](c11.xhtml#Page_295)–[296](c11.xhtml#Page_296), [297](c11.xhtml#Page_297)–[299](c11.xhtml#Page_299)
  prefs: []
  type: TYPE_NORMAL
- en: Python code (*.py)* files, [18](c02.xhtml#Page_18), [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: reading, [299](c11.xhtml#Page_299)–[302](c11.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: replacing, [327](c11.xhtml#Page_327)–[328](c11.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: writing to, [303](c11.xhtml#Page_303)–[307](c11.xhtml#Page_307)
  prefs: []
  type: TYPE_NORMAL
- en: '`filter` iterable, [249](c09.xhtml#Page_249), [277](c10.xhtml#Page_277)–[278](c10.xhtml#Page_278)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Filter` (`logging` module) objects, [555](c19.xhtml#Page_555)'
  prefs: []
  type: TYPE_NORMAL
- en: '`filterfalse()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: finalizers, [153](c07.xhtml#Page_153)–[154](c07.xhtml#Page_154)
  prefs: []
  type: TYPE_NORMAL
- en: '`finally` clause, [204](c08.xhtml#Page_204)–[207](c08.xhtml#Page_207)'
  prefs: []
  type: TYPE_NORMAL
- en: finder objects, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`find_packages()` function, [523](c18.xhtml#Page_523)'
  prefs: []
  type: TYPE_NORMAL
- en: fine-grained locking, [488](c17.xhtml#Page_488)
  prefs: []
  type: TYPE_NORMAL
- en: first-class citizens, [62](c03.xhtml#Page_62), [119](c06.xhtml#Page_119)
  prefs: []
  type: TYPE_NORMAL
- en: Fitzpatrick, Martin, [622](c21.xhtml#Page_622)
  prefs: []
  type: TYPE_NORMAL
- en: fixtures, [586](c20.xhtml#Page_586)–[588](c20.xhtml#Page_588), [664](b03.xhtml#Page_664)–[665](b03.xhtml#Page_665)
  prefs: []
  type: TYPE_NORMAL
- en: Flake8, [31](c02.xhtml#Page_31)–[33](c02.xhtml#Page_33), [530](c18.xhtml#Page_530)
  prefs: []
  type: TYPE_NORMAL
- en: '*.flake8* files, [32](c02.xhtml#Page_32)'
  prefs: []
  type: TYPE_NORMAL
- en: flaky tests, [591](c20.xhtml#Page_591)
  prefs: []
  type: TYPE_NORMAL
- en: Flask, [622](c21.xhtml#Page_622)–[623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: Flatpak, [537](c18.xhtml#Page_537)–[538](c18.xhtml#Page_538)
  prefs: []
  type: TYPE_NORMAL
- en: Flit, [534](c18.xhtml#Page_534)
  prefs: []
  type: TYPE_NORMAL
- en: '`float()` function, [46](c03.xhtml#Page_46)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__float__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: floating-point numbers (`float`), [45](c03.xhtml#Page_45), [46](c03.xhtml#Page_46),
    [106](c05.xhtml#Page_106), [353](c12.xhtml#Page_353), [354](c12.xhtml#Page_354),
    [665](b03.xhtml#Page_665)
  prefs: []
  type: TYPE_NORMAL
- en: floor division (`//`) operator, [46](c03.xhtml#Page_46), [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '`__floor__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__floordiv__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: '`flush=` keyword, [292](c11.xhtml#Page_292)'
  prefs: []
  type: TYPE_NORMAL
- en: flushing, [291](c11.xhtml#Page_291)–[292](c11.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: fman Build System, [536](c18.xhtml#Page_536)–[537](c18.xhtml#Page_537)
  prefs: []
  type: TYPE_NORMAL
- en: Foerster, Daniel, [360](c12.xhtml#Page_360)
  prefs: []
  type: TYPE_NORMAL
- en: '`for` loops, [67](c03.xhtml#Page_67)–[68](c03.xhtml#Page_68), [215](c09.xhtml#Page_215)–[216](c09.xhtml#Page_216),
    [242](c09.xhtml#Page_242)–[244](c09.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: '`format()` function, [59](c03.xhtml#Page_59)–[60](c03.xhtml#Page_60)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__format__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: format specifications
  prefs: []
  type: TYPE_NORMAL
- en: binary data conversion, [352](c12.xhtml#Page_352)–[353](c12.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: f-strings, [58](c03.xhtml#Page_58)–[59](c03.xhtml#Page_59)
  prefs: []
  type: TYPE_NORMAL
- en: '`Formatter` (`logging` module) objects, [555](c19.xhtml#Page_555)–[556](c19.xhtml#Page_556)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Fraction` number type, [45](c03.xhtml#Page_45)–[46](c03.xhtml#Page_46)'
  prefs: []
  type: TYPE_NORMAL
- en: Freeze, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: freezers, [5](c01.xhtml#Page_5), [535](c18.xhtml#Page_535)–[537](c18.xhtml#Page_537)
  prefs: []
  type: TYPE_NORMAL
- en: freezing, [665](b03.xhtml#Page_665)
  prefs: []
  type: TYPE_NORMAL
- en: '`from_bytes()` method, [351](c12.xhtml#Page_351)'
  prefs: []
  type: TYPE_NORMAL
- en: frozen importer, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: frozen modules, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`frozenset`, [221](c09.xhtml#Page_221)–[222](c09.xhtml#Page_222)'
  prefs: []
  type: TYPE_NORMAL
- en: function annotations, [145](c06.xhtml#Page_145)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: function attributes, [433](c15.xhtml#Page_433)–[436](c15.xhtml#Page_436)
  prefs: []
  type: TYPE_NORMAL
- en: functional programming, [119](c06.xhtml#Page_119), [120](c06.xhtml#Page_120)–[122](c06.xhtml#Page_122),
    [180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: functions
  prefs: []
  type: TYPE_NORMAL
- en: aliases, [80](c04.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: with lambdas, [140](c06.xhtml#Page_140)–[141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: list of special attributes on, [645](b01.xhtml#Page_645)
  prefs: []
  type: TYPE_NORMAL
- en: and methods, [64](c03.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: nested, [104](c05.xhtml#Page_104)–[105](c05.xhtml#Page_105), [134](c06.xhtml#Page_134)–[135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: overloaded, [129](c06.xhtml#Page_129)–[130](c06.xhtml#Page_130)
  prefs: []
  type: TYPE_NORMAL
- en: passing, [139](c06.xhtml#Page_139)–[140](c06.xhtml#Page_140)
  prefs: []
  type: TYPE_NORMAL
- en: pure, [121](c06.xhtml#Page_121)–[122](c06.xhtml#Page_122)
  prefs: []
  type: TYPE_NORMAL
- en: shadowing, [79](c04.xhtml#Page_79)–[80](c04.xhtml#Page_80), [81](c04.xhtml#Page_81)–[82](c04.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: side effects, [108](c05.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: single-dispatch generic, [449](c15.xhtml#Page_449)–[452](c15.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: syntax, [62](c03.xhtml#Page_62)–[63](c03.xhtml#Page_63)
  prefs: []
  type: TYPE_NORMAL
- en: '`functools` module, [143](c06.xhtml#Page_143), [144](c06.xhtml#Page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__future__()` module, [620](c21.xhtml#Page_620)'
  prefs: []
  type: TYPE_NORMAL
- en: futureproofing, [373](c12.xhtml#Page_373)
  prefs: []
  type: TYPE_NORMAL
- en: futures, [666](b03.xhtml#Page_666). *See also* `concurrent.futures` module
  prefs: []
  type: TYPE_NORMAL
- en: '`FutureWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: fuzzing, [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs: []
  type: TYPE_NORMAL
- en: Gábor, Bernát, [519](c18.xhtml#Page_519)
  prefs: []
  type: TYPE_NORMAL
- en: game development, [622](c21.xhtml#Page_622)
  prefs: []
  type: TYPE_NORMAL
- en: garbage collection, [100](c05.xhtml#Page_100)–[101](c05.xhtml#Page_101), [106](c05.xhtml#Page_106),
    [153](c07.xhtml#Page_153)–[154](c07.xhtml#Page_154), [667](b03.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: '`gather()` (`asyncio` module) function, [472](c16.xhtml#Page_472)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__ge__()` method, [173](c07.xhtml#Page_173), [410](c14.xhtml#Page_410), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: generational garbage collection, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: generator expressions
  prefs: []
  type: TYPE_NORMAL
- en: about, [123](c06.xhtml#Page_123), [270](c10.xhtml#Page_270)–[271](c10.xhtml#Page_271)
  prefs: []
  type: TYPE_NORMAL
- en: coding practices, [279](c10.xhtml#Page_279)–[282](c10.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: with conditionals, [273](c10.xhtml#Page_273)–[276](c10.xhtml#Page_276)
  prefs: []
  type: TYPE_NORMAL
- en: evaluation of, [271](c10.xhtml#Page_271)–[272](c10.xhtml#Page_272)
  prefs: []
  type: TYPE_NORMAL
- en: vs. list comprehensions, [277](c10.xhtml#Page_277)–[278](c10.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: with multiple loops, [272](c10.xhtml#Page_272)–[273](c10.xhtml#Page_273)
  prefs: []
  type: TYPE_NORMAL
- en: with nesting, [276](c10.xhtml#Page_276)–[277](c10.xhtml#Page_277)
  prefs: []
  type: TYPE_NORMAL
- en: generator functions
  prefs: []
  type: TYPE_NORMAL
- en: about, [259](c10.xhtml#Page_259)–[261](c10.xhtml#Page_261)
  prefs: []
  type: TYPE_NORMAL
- en: closing, [264](c10.xhtml#Page_264)–[266](c10.xhtml#Page_266)
  prefs: []
  type: TYPE_NORMAL
- en: vs. iterator classes, [261](c10.xhtml#Page_261)–[263](c10.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: throwing exception with, [266](c10.xhtml#Page_266)–[268](c10.xhtml#Page_268)
  prefs: []
  type: TYPE_NORMAL
- en: and `yield from` statements, [268](c10.xhtml#Page_268)–[270](c10.xhtml#Page_270)
  prefs: []
  type: TYPE_NORMAL
- en: generator iterators, [259](c10.xhtml#Page_259)–[260](c10.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: '`GeneratorExit`, [264](c10.xhtml#Page_264), [265](c10.xhtml#Page_265)–[266](c10.xhtml#Page_266)'
  prefs: []
  type: TYPE_NORMAL
- en: generators
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous, [475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: as coroutines, [286](c10.xhtml#Page_286)
  prefs: []
  type: TYPE_NORMAL
- en: vs. generator expressions, [282](c10.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: generic functions. *See* single-dispatch generic functions
  prefs: []
  type: TYPE_NORMAL
- en: generic types, [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`__get__()` method, [437](c15.xhtml#Page_437), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`getattr()` function, [429](c15.xhtml#Page_429)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__getattr()__` method, [429](c15.xhtml#Page_429)–[431](c15.xhtml#Page_431),
    [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__getattribute()__` method, [429](c15.xhtml#Page_429)–[431](c15.xhtml#Page_431)'
  prefs: []
  type: TYPE_NORMAL
- en: '`get_event_loop()` function, [468](c16.xhtml#Page_468)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__getitem__()` method, [231](c09.xhtml#Page_231), [235](c09.xhtml#Page_235),
    [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__getstate__()` method, [499](c17.xhtml#Page_499)'
  prefs: []
  type: TYPE_NORMAL
- en: getters, [150](c07.xhtml#Page_150), [161](c07.xhtml#Page_161)–[163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: Git, [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24), [74](c04.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: '*.gitignore* file, [24](c02.xhtml#Page_24), [74](c04.xhtml#Page_74)'
  prefs: []
  type: TYPE_NORMAL
- en: Glassner, Andrew, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: '`glob` module, [315](c11.xhtml#Page_315)'
  prefs: []
  type: TYPE_NORMAL
- en: '`glob()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: glob patterns, [527](c18.xhtml#Page_527)
  prefs: []
  type: TYPE_NORMAL
- en: Global Interpreter Lock (GIL), [459](c16.xhtml#Page_459), [478](c17.xhtml#Page_478),
    [498](c17.xhtml#Page_498)
  prefs: []
  type: TYPE_NORMAL
- en: '`global` keyword, [103](c05.xhtml#Page_103), [105](c05.xhtml#Page_105)'
  prefs: []
  type: TYPE_NORMAL
- en: global scope, [100](c05.xhtml#Page_100), [102](c05.xhtml#Page_102)–[104](c05.xhtml#Page_104),
    [105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: '`GlobalCoordinates()` class example, [167](c07.xhtml#Page_167)–[170](c07.xhtml#Page_170),
    [172](c07.xhtml#Page_172), [173](c07.xhtml#Page_173), [174](c07.xhtml#Page_174),
    [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__globals__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: '`globals()` function, [429](c15.xhtml#Page_429)'
  prefs: []
  type: TYPE_NORMAL
- en: god classes, [181](c07.xhtml#Page_181), [385](c13.xhtml#Page_385), [667](b03.xhtml#Page_667)
  prefs: []
  type: TYPE_NORMAL
- en: Goldberg, David, [45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: '`graft` keyword, [527](c18.xhtml#Page_527)'
  prefs: []
  type: TYPE_NORMAL
- en: greater than, [49](c03.xhtml#Page_49), [172](c07.xhtml#Page_172)–[173](c07.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: grouping flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: '`__gt__()` (greater than) method, [172](c07.xhtml#Page_172)–[173](c07.xhtml#Page_173),
    [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: GTK GUI framework, [621](c21.xhtml#Page_621)
  prefs: []
  type: TYPE_NORMAL
- en: guard statements, [70](c03.xhtml#Page_70)–[71](c03.xhtml#Page_71)
  prefs: []
  type: TYPE_NORMAL
- en: GUI frameworks, [621](c21.xhtml#Page_621)–[622](c21.xhtml#Page_622)
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs: []
  type: TYPE_NORMAL
- en: happy paths, [188](c08.xhtml#Page_188), [668](b03.xhtml#Page_668)
  prefs: []
  type: TYPE_NORMAL
- en: hardware
  prefs: []
  type: TYPE_NORMAL
- en: and embedded development, [626](c21.xhtml#Page_626)–[627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: package deployment on, [541](c18.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: has-a relationships, [151](c07.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: '`hasattr()` function, [408](c14.xhtml#Page_408)–[410](c14.xhtml#Page_410),
    [431](c15.xhtml#Page_431)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__hash__()` method, [170](c07.xhtml#Page_170), [220](c09.xhtml#Page_220),
    [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: hash values, [91](c04.xhtml#Page_91), [170](c07.xhtml#Page_170), [668](b03.xhtml#Page_668)
  prefs: []
  type: TYPE_NORMAL
- en: hashable objects, [220](c09.xhtml#Page_220)
  prefs: []
  type: TYPE_NORMAL
- en: Hashemi, Mahmoud, [515](c18.xhtml#Page_515), [535](c18.xhtml#Page_535)
  prefs: []
  type: TYPE_NORMAL
- en: hashmaps, [222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: HDF (Hierarchical Data Format), [376](c12.xhtml#Page_376)–[377](c12.xhtml#Page_377)
  prefs: []
  type: TYPE_NORMAL
- en: headers, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: heterogeneous collections, [66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: Hettinger, Raymond, [395](c13.xhtml#Page_395)
  prefs: []
  type: TYPE_NORMAL
- en: '`hex()` function, [341](c12.xhtml#Page_341)'
  prefs: []
  type: TYPE_NORMAL
- en: hexadecimal numbers, [338](c12.xhtml#Page_338)–[340](c12.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: hexspeak, [339](c12.xhtml#Page_339)–[340](c12.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: high-performance computing (HPC), [497](c17.xhtml#Page_497)
  prefs: []
  type: TYPE_NORMAL
- en: '`hint=` keyword, [301](c11.xhtml#Page_301)'
  prefs: []
  type: TYPE_NORMAL
- en: '`home()` (`PosixPath` module) method, [321](c11.xhtml#Page_321)'
  prefs: []
  type: TYPE_NORMAL
- en: homogeneous collections, [66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: hooks, [90](c04.xhtml#Page_90), [668](b03.xhtml#Page_668)
  prefs: []
  type: TYPE_NORMAL
- en: HTML file format, [333](c11.xhtml#Page_333)
  prefs: []
  type: TYPE_NORMAL
- en: human-readable string representation, [61](c03.xhtml#Page_61), [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170)
  prefs: []
  type: TYPE_NORMAL
- en: Hungarian Notation, [115](c05.xhtml#Page_115)–[116](c05.xhtml#Page_116)
  prefs: []
  type: TYPE_NORMAL
- en: Hypothesis framework, [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs: []
  type: TYPE_NORMAL
- en: '`__iadd__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__iand__()` method, [174](c07.xhtml#Page_174), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`id()` function, [98](c05.xhtml#Page_98)'
  prefs: []
  type: TYPE_NORMAL
- en: identity
  prefs: []
  type: TYPE_NORMAL
- en: defined, [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: operator (`is`), [50](c03.xhtml#Page_50)–[51](c03.xhtml#Page_51)
  prefs: []
  type: TYPE_NORMAL
- en: and values, [97](c05.xhtml#Page_97)–[98](c05.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: IDEs (integrated development environments), [34](c02.xhtml#Page_34)–[36](c02.xhtml#Page_36),
    [145](c06.xhtml#Page_145)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: IDLE, [34](c02.xhtml#Page_34)
  prefs: []
  type: TYPE_NORMAL
- en: '`if` clauses, [41](c03.xhtml#Page_41), [49](c03.xhtml#Page_49)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__ifloordiv__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__ilshift__()` method, [174](c07.xhtml#Page_174), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__imatmul__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: immutable objects
  prefs: []
  type: TYPE_NORMAL
- en: about, [65](c03.xhtml#Page_65)–[66](c03.xhtml#Page_66), [117](c05.xhtml#Page_117),
    [216](c09.xhtml#Page_216)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107)
  prefs: []
  type: TYPE_NORMAL
- en: making classes as, [447](c15.xhtml#Page_447)–[449](c15.xhtml#Page_449)
  prefs: []
  type: TYPE_NORMAL
- en: '`__imod__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`import` command, [26](c02.xhtml#Page_26)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__import__()` method, [90](c04.xhtml#Page_90), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`import` statement, [77](c04.xhtml#Page_77)'
  prefs: []
  type: TYPE_NORMAL
- en: importer objects, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`ImportError`, [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: '`importlib` module, [90](c04.xhtml#Page_90)'
  prefs: []
  type: TYPE_NORMAL
- en: imports
  prefs: []
  type: TYPE_NORMAL
- en: absolute vs. relative, [83](c04.xhtml#Page_83)–[85](c04.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: controlling, [87](c04.xhtml#Page_87)–[88](c04.xhtml#Page_88)
  prefs: []
  type: TYPE_NORMAL
- en: executing, [77](c04.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: of explicit functions, [81](c04.xhtml#Page_81)–[82](c04.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: and namespaces, [78](c04.xhtml#Page_78)–[79](c04.xhtml#Page_79)
  prefs: []
  type: TYPE_NORMAL
- en: from nested packages, [80](c04.xhtml#Page_80)–[81](c04.xhtml#Page_81)
  prefs: []
  type: TYPE_NORMAL
- en: process, [90](c04.xhtml#Page_90)–[91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: and shadowing prevention, [79](c04.xhtml#Page_79)–[80](c04.xhtml#Page_80)
  prefs: []
  type: TYPE_NORMAL
- en: '`ImportWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__imul__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`in` operator, [67](c03.xhtml#Page_67), [236](c09.xhtml#Page_236)–[237](c09.xhtml#Page_237)'
  prefs: []
  type: TYPE_NORMAL
- en: indentation, [29](c02.xhtml#Page_29), [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: '`IndentationError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__index__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`IndexError`, [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: indices (subscripts), [217](c09.xhtml#Page_217), [231](c09.xhtml#Page_231)–[235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: '`inf` (infinity) constant, [45](c03.xhtml#Page_45), [47](c03.xhtml#Page_47),
    [48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: infinite iterators, [258](c10.xhtml#Page_258)–[259](c10.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: information security (infosec) field, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance. *See also* method resolution order; multiple inheritance
  prefs: []
  type: TYPE_NORMAL
- en: about, [151](c07.xhtml#Page_151), [382](c13.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: bullet journal example, [385](c13.xhtml#Page_385)–[388](c13.xhtml#Page_388)
  prefs: []
  type: TYPE_NORMAL
- en: and slots, [446](c15.xhtml#Page_446)
  prefs: []
  type: TYPE_NORMAL
- en: and SOLID principles, [382](c13.xhtml#Page_382)–[384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: when to use, [384](c13.xhtml#Page_384)–[385](c13.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: INI file format, [332](c11.xhtml#Page_332)–[333](c11.xhtml#Page_333)
  prefs: []
  type: TYPE_NORMAL
- en: '`__init__()` method, [64](c03.xhtml#Page_64), [151](c07.xhtml#Page_151)–[152](c07.xhtml#Page_152),
    [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '*__init__.py* file, [74](c04.xhtml#Page_74)–[75](c04.xhtml#Page_75), [76](c04.xhtml#Page_76),
    [86](c04.xhtml#Page_86), [87](c04.xhtml#Page_87)–[88](c04.xhtml#Page_88)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__init_subclass__()` method, [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: initializers
  prefs: []
  type: TYPE_NORMAL
- en: methods, [151](c07.xhtml#Page_151)–[152](c07.xhtml#Page_152), [159](c07.xhtml#Page_159)
  prefs: []
  type: TYPE_NORMAL
- en: with multiple inheritance, [396](c13.xhtml#Page_396)–[398](c13.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: '`input()` function, [40](c03.xhtml#Page_40), [294](c11.xhtml#Page_294)–[295](c11.xhtml#Page_295),
    [469](c16.xhtml#Page_469)'
  prefs: []
  type: TYPE_NORMAL
- en: inputs
  prefs: []
  type: TYPE_NORMAL
- en: mocking, [592](c20.xhtml#Page_592), [597](c20.xhtml#Page_597)–[598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: validation vs. assertion, [558](c19.xhtml#Page_558)–[559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: '`insert()` method, [219](c09.xhtml#Page_219)'
  prefs: []
  type: TYPE_NORMAL
- en: '`inspect` module, [560](c19.xhtml#Page_560)'
  prefs: []
  type: TYPE_NORMAL
- en: instance attributes, [151](c07.xhtml#Page_151)–[152](c07.xhtml#Page_152), [645](b01.xhtml#Page_645)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods, [158](c07.xhtml#Page_158)
  prefs: []
  type: TYPE_NORMAL
- en: '`__instancecheck__()` method, [418](c14.xhtml#Page_418), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: instances
  prefs: []
  type: TYPE_NORMAL
- en: about, [150](c07.xhtml#Page_150), [670](b03.xhtml#Page_670)
  prefs: []
  type: TYPE_NORMAL
- en: making callable, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: '`__int__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: integers (`int`), [45](c03.xhtml#Page_45), [106](c05.xhtml#Page_106), [340](c12.xhtml#Page_340)–[341](c12.xhtml#Page_341),
    [343](c12.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: integrated development environments (IDEs), [34](c02.xhtml#Page_34)–[36](c02.xhtml#Page_36),
    [145](c06.xhtml#Page_145)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: integration tests, [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: interactive sessions, [17](c02.xhtml#Page_17)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: Interface Segregation Principle, [383](c13.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: interfaces
  prefs: []
  type: TYPE_NORMAL
- en: and abstract base classes, [410](c14.xhtml#Page_410)–[411](c14.xhtml#Page_411)
  prefs: []
  type: TYPE_NORMAL
- en: in SOLID principles, [382](c13.xhtml#Page_382), [383](c13.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: and virtual subclasses, [418](c14.xhtml#Page_418)
  prefs: []
  type: TYPE_NORMAL
- en: interpreted languages, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: interpreter shutdown, [102](c05.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: intersection (`&`) set operator, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: introspection, [425](c15.xhtml#Page_425), [426](c15.xhtml#Page_426), [454](c15.xhtml#Page_454),
    [670](b03.xhtml#Page_670)
  prefs: []
  type: TYPE_NORMAL
- en: '`__inv__()` method, [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: invalid number constant (`nan`), [45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: '`__invert__()` method, [174](c07.xhtml#Page_174), [345](c12.xhtml#Page_345),
    [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: IO-bound tasks, [464](c16.xhtml#Page_464)
  prefs: []
  type: TYPE_NORMAL
- en: '`__ior__()` method, [174](c07.xhtml#Page_174), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__ipow__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: IronPython, [628](c21.xhtml#Page_628)
  prefs: []
  type: TYPE_NORMAL
- en: '`__irshift__()` method, [174](c07.xhtml#Page_174), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`is not` operator, [51](c03.xhtml#Page_51)'
  prefs: []
  type: TYPE_NORMAL
- en: '`is` operator, [50](c03.xhtml#Page_50)–[51](c03.xhtml#Page_51), [97](c05.xhtml#Page_97)–[98](c05.xhtml#Page_98)'
  prefs: []
  type: TYPE_NORMAL
- en: is-a relationships, [151](c07.xhtml#Page_151), [382](c13.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: '`is_absolute()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`is_dir()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`is_file()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`is_symlink()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`isdigit()` function, [188](c08.xhtml#Page_188)'
  prefs: []
  type: TYPE_NORMAL
- en: '`isinstance()` function, [99](c05.xhtml#Page_99)'
  prefs: []
  type: TYPE_NORMAL
- en: '`islice()` (`itertools` module) method, [235](c09.xhtml#Page_235)–[236](c09.xhtml#Page_236),
    [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`issubclass()` method, [387](c13.xhtml#Page_387)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__isub__()` method, [173](c07.xhtml#Page_173), [174](c07.xhtml#Page_174),
    [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`items()` method, [228](c09.xhtml#Page_228)'
  prefs: []
  type: TYPE_NORMAL
- en: '`iter()` function, [240](c09.xhtml#Page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__iter__()` method, [238](c09.xhtml#Page_238)–[239](c09.xhtml#Page_239), [255](c09.xhtml#Page_255),
    [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: iterables
  prefs: []
  type: TYPE_NORMAL
- en: about, [238](c09.xhtml#Page_238)
  prefs: []
  type: TYPE_NORMAL
- en: custom classes, [253](c09.xhtml#Page_253)–[256](c09.xhtml#Page_256)
  prefs: []
  type: TYPE_NORMAL
- en: tools, [248](c09.xhtml#Page_248)–[252](c09.xhtml#Page_252)
  prefs: []
  type: TYPE_NORMAL
- en: type-hinting, [147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: iteration. *See also* iterables; loops
  prefs: []
  type: TYPE_NORMAL
- en: about, [215](c09.xhtml#Page_215), [238](c09.xhtml#Page_238)–[239](c09.xhtml#Page_239)
  prefs: []
  type: TYPE_NORMAL
- en: asynchronous, [472](c16.xhtml#Page_472)–[475](c16.xhtml#Page_475)
  prefs: []
  type: TYPE_NORMAL
- en: with `for` loops, [242](c09.xhtml#Page_242)–[243](c09.xhtml#Page_243)
  prefs: []
  type: TYPE_NORMAL
- en: manual, [239](c09.xhtml#Page_239)–[241](c09.xhtml#Page_241)
  prefs: []
  type: TYPE_NORMAL
- en: tools for, [248](c09.xhtml#Page_248)–[251](c09.xhtml#Page_251)
  prefs: []
  type: TYPE_NORMAL
- en: iterator classes vs. generator functions, [261](c10.xhtml#Page_261)–[263](c10.xhtml#Page_263)
  prefs: []
  type: TYPE_NORMAL
- en: iterators
  prefs: []
  type: TYPE_NORMAL
- en: generator iterators, [259](c10.xhtml#Page_259)–[260](c10.xhtml#Page_260)
  prefs: []
  type: TYPE_NORMAL
- en: infinite, [258](c10.xhtml#Page_258)–[259](c10.xhtml#Page_259)
  prefs: []
  type: TYPE_NORMAL
- en: and lazy evaluation, [257](c10.xhtml#Page_257)–[258](c10.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: streams as, [301](c11.xhtml#Page_301)–[302](c11.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: '`iterdir()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`itertools` module, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__itruediv__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__ixor__()` method, [174](c07.xhtml#Page_174), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs: []
  type: TYPE_NORMAL
- en: JetBrains, [35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: '`join()` method, [62](c03.xhtml#Page_62)'
  prefs: []
  type: TYPE_NORMAL
- en: '`joinpath()` method, [321](c11.xhtml#Page_321)'
  prefs: []
  type: TYPE_NORMAL
- en: JSON (JavaScript Object Notation) files, [329](c11.xhtml#Page_329)–[332](c11.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: '`json` module, [329](c11.xhtml#Page_329)'
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: just-in-time (JIT) compilers, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: Jython, [628](c21.xhtml#Page_628)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs: []
  type: TYPE_NORMAL
- en: Kedro, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: Keen, Kyle, [258](c10.xhtml#Page_258)
  prefs: []
  type: TYPE_NORMAL
- en: Keras, [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: key functions, [141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: key-value pairs, [222](c09.xhtml#Page_222), [228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: '`KeyboardInterrupt`, [191](c08.xhtml#Page_191), [198](c08.xhtml#Page_198),
    [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: '`KeyError`, [195](c08.xhtml#Page_195), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: keyword arguments, [128](c06.xhtml#Page_128)–[129](c06.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: keyword-only parameters, [132](c06.xhtml#Page_132)–[133](c06.xhtml#Page_133)
  prefs: []
  type: TYPE_NORMAL
- en: keyword variadic parameters, [131](c06.xhtml#Page_131)
  prefs: []
  type: TYPE_NORMAL
- en: Kivy GUI toolkit, [621](c21.xhtml#Page_621)
  prefs: []
  type: TYPE_NORMAL
- en: Kneusel, Ronald T., [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: '`**kwargs` parameter, [131](c06.xhtml#Page_131)–[132](c06.xhtml#Page_132),
    [398](c13.xhtml#Page_398)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__kwdefaults__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs: []
  type: TYPE_NORMAL
- en: lambdas, [119](c06.xhtml#Page_119), [138](c06.xhtml#Page_138)–[141](c06.xhtml#Page_141),
    [145](c06.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: language typing, [44](c03.xhtml#Page_44), [98](c05.xhtml#Page_98)–[99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: languages
  prefs: []
  type: TYPE_NORMAL
- en: interpreted vs. assembled, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: static vs. dynamic typing, [44](c03.xhtml#Page_44), [98](c05.xhtml#Page_98)–[99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: LanguageTool API, [579](c20.xhtml#Page_579), [588](c20.xhtml#Page_588)–[589](c20.xhtml#Page_589)
  prefs: []
  type: TYPE_NORMAL
- en: lazy evaluation, [257](c10.xhtml#Page_257)–[258](c10.xhtml#Page_258), [270](c10.xhtml#Page_270),
    [271](c10.xhtml#Page_271)–[272](c10.xhtml#Page_272), [671](b03.xhtml#Page_671)
  prefs: []
  type: TYPE_NORMAL
- en: LBYL (Look Before You Leap)
  prefs: []
  type: TYPE_NORMAL
- en: checking for conditions, [188](c08.xhtml#Page_188), [224](c09.xhtml#Page_224),
    [408](c14.xhtml#Page_408)–[410](c14.xhtml#Page_410)
  prefs: []
  type: TYPE_NORMAL
- en: philosophy, [187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: '`__le__()` method, [173](c07.xhtml#Page_173), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: leading zeros flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: left shift (`<<`) operator, [47](c03.xhtml#Page_47), [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: LEGB (scope resolution) acronym, [105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: '`len()` function, [237](c09.xhtml#Page_237), [254](c09.xhtml#Page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__len__()` method, [254](c09.xhtml#Page_254), [358](c12.xhtml#Page_358), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__length_hint__()` method, [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: less than, [49](c03.xhtml#Page_49), [172](c07.xhtml#Page_172)–[173](c07.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: '*LICENSE* file, [74](c04.xhtml#Page_74), [518](c18.xhtml#Page_518), [519](c18.xhtml#Page_519)–[520](c18.xhtml#Page_520),
    [521](c18.xhtml#Page_521)'
  prefs: []
  type: TYPE_NORMAL
- en: LiClipse, [36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: lightning talks, [634](c21.xhtml#Page_634)
  prefs: []
  type: TYPE_NORMAL
- en: line limits, [28](c02.xhtml#Page_28)
  prefs: []
  type: TYPE_NORMAL
- en: line separators, [307](c11.xhtml#Page_307)
  prefs: []
  type: TYPE_NORMAL
- en: '`link_to()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: linters, [29](c02.xhtml#Page_29), [31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: Linux
  prefs: []
  type: TYPE_NORMAL
- en: build dependencies, [15](c02.xhtml#Page_15)–[16](c02.xhtml#Page_16)
  prefs: []
  type: TYPE_NORMAL
- en: and packaging, [537](c18.xhtml#Page_537), [539](c18.xhtml#Page_539)–[540](c18.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: Python and pip installer, [15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: Liskov Substitution Principle, [383](c13.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: list comprehensions, [110](c05.xhtml#Page_110), [277](c10.xhtml#Page_277)–[278](c10.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: lists
  prefs: []
  type: TYPE_NORMAL
- en: about, [218](c09.xhtml#Page_218)–[219](c09.xhtml#Page_219)
  prefs: []
  type: TYPE_NORMAL
- en: mutability, [107](c05.xhtml#Page_107)–[108](c05.xhtml#Page_108)
  prefs: []
  type: TYPE_NORMAL
- en: syntax, [65](c03.xhtml#Page_65)
  prefs: []
  type: TYPE_NORMAL
- en: literal patterns, [68](c03.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: literals, string, [43](c03.xhtml#Page_43), [53](c03.xhtml#Page_53)–[55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: little-endian byte order, [342](c12.xhtml#Page_342)–[343](c12.xhtml#Page_343)
  prefs: []
  type: TYPE_NORMAL
- en: livelocks, [493](c17.xhtml#Page_493)–[494](c17.xhtml#Page_494)
  prefs: []
  type: TYPE_NORMAL
- en: '`load()` (`json` module) function, [331](c11.xhtml#Page_331)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__loader__` attribute, [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: loader objects, [90](c04.xhtml#Page_90), [91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: '`loads()` (`json` module) function, [331](c11.xhtml#Page_331)'
  prefs: []
  type: TYPE_NORMAL
- en: local scope, [100](c05.xhtml#Page_100), [101](c05.xhtml#Page_101), [104](c05.xhtml#Page_104)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: '`locals()` function, [429](c15.xhtml#Page_429)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Lock` object, [492](c17.xhtml#Page_492)–[493](c17.xhtml#Page_493)'
  prefs: []
  type: TYPE_NORMAL
- en: locks and locking, [487](c17.xhtml#Page_487)–[488](c17.xhtml#Page_488), [492](c17.xhtml#Page_492)–[494](c17.xhtml#Page_494).
    *See also* Global Interpreter Lock (GIL)
  prefs: []
  type: TYPE_NORMAL
- en: '`Logger` objects, [549](c19.xhtml#Page_549)–[550](c19.xhtml#Page_550)'
  prefs: []
  type: TYPE_NORMAL
- en: logging
  prefs: []
  type: TYPE_NORMAL
- en: about, [195](c08.xhtml#Page_195), [507](c17.xhtml#Page_507)–[508](c17.xhtml#Page_508),
    [548](c19.xhtml#Page_548)–[549](c19.xhtml#Page_549), [556](c19.xhtml#Page_556)
  prefs: []
  type: TYPE_NORMAL
- en: examples, [195](c08.xhtml#Page_195)–[199](c08.xhtml#Page_199), [549](c19.xhtml#Page_549)–[555](c19.xhtml#Page_555)
  prefs: []
  type: TYPE_NORMAL
- en: filters, [555](c19.xhtml#Page_555)
  prefs: []
  type: TYPE_NORMAL
- en: formatters, [555](c19.xhtml#Page_555)–[556](c19.xhtml#Page_556)
  prefs: []
  type: TYPE_NORMAL
- en: logfiles, [199](c08.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: severity levels, [196](c08.xhtml#Page_196), [549](c19.xhtml#Page_549), [552](c19.xhtml#Page_552)
  prefs: []
  type: TYPE_NORMAL
- en: '`logging` module'
  prefs: []
  type: TYPE_NORMAL
- en: assigning severity levels, [552](c19.xhtml#Page_552)–[554](c19.xhtml#Page_554)
  prefs: []
  type: TYPE_NORMAL
- en: configuring, [196](c08.xhtml#Page_196), [199](c08.xhtml#Page_199)
  prefs: []
  type: TYPE_NORMAL
- en: objects, [549](c19.xhtml#Page_549)–[551](c19.xhtml#Page_551), [555](c19.xhtml#Page_555)–[556](c19.xhtml#Page_556)
  prefs: []
  type: TYPE_NORMAL
- en: logical shift operations, [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: '`LogRecord` objects, [549](c19.xhtml#Page_549), [550](c19.xhtml#Page_550),
    [553](c19.xhtml#Page_553)'
  prefs: []
  type: TYPE_NORMAL
- en: '`long` integers, [343](c12.xhtml#Page_343)'
  prefs: []
  type: TYPE_NORMAL
- en: Look Before You Leap (LBYL). *See* LBYL (Look Before You Leap)
  prefs: []
  type: TYPE_NORMAL
- en: lookup chains, [437](c15.xhtml#Page_437)
  prefs: []
  type: TYPE_NORMAL
- en: '`LookupError` class, [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: loops
  prefs: []
  type: TYPE_NORMAL
- en: controlling, [67](c03.xhtml#Page_67)
  prefs: []
  type: TYPE_NORMAL
- en: enumerating items in, [244](c09.xhtml#Page_244)
  prefs: []
  type: TYPE_NORMAL
- en: vs. generator expressions, [281](c10.xhtml#Page_281)–[282](c10.xhtml#Page_282)
  prefs: []
  type: TYPE_NORMAL
- en: '`for` loops, [67](c03.xhtml#Page_67)–[68](c03.xhtml#Page_68), [215](c09.xhtml#Page_215)–[216](c09.xhtml#Page_216),
    [242](c09.xhtml#Page_242)–[244](c09.xhtml#Page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: mutating items in, [244](c09.xhtml#Page_244)–[246](c09.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: nested, [247](c09.xhtml#Page_247)–[248](c09.xhtml#Page_248)
  prefs: []
  type: TYPE_NORMAL
- en: in programming guidelines, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`while` loops, [66](c03.xhtml#Page_66), [214](c09.xhtml#Page_214)–[215](c09.xhtml#Page_215)'
  prefs: []
  type: TYPE_NORMAL
- en: loose coupling technique, [383](c13.xhtml#Page_383)–[384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: '`__lshift__()` method, [174](c07.xhtml#Page_174), [345](c12.xhtml#Page_345),
    [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__lt__()` method, [172](c07.xhtml#Page_172)–[173](c07.xhtml#Page_173), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: Lubarsky’s Law of Cybernetic Entomology, [543](c19.xhtml#Page_543)
  prefs: []
  type: TYPE_NORMAL
- en: '*lxml* library, [333](c11.xhtml#Page_333)'
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs: []
  type: TYPE_NORMAL
- en: machine code assembly, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: machine learning/training, [625](c21.xhtml#Page_625)–[626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: macOS
  prefs: []
  type: TYPE_NORMAL
- en: build dependencies, [15](c02.xhtml#Page_15)
  prefs: []
  type: TYPE_NORMAL
- en: Python and pip installer, [14](c02.xhtml#Page_14)
  prefs: []
  type: TYPE_NORMAL
- en: magic methods. *See* special methods
  prefs: []
  type: TYPE_NORMAL
- en: '`__main__` value, [85](c04.xhtml#Page_85)–[86](c04.xhtml#Page_86), [426](c15.xhtml#Page_426)'
  prefs: []
  type: TYPE_NORMAL
- en: '*__main__.py* file, [76](c04.xhtml#Page_76), [86](c04.xhtml#Page_86)–[87](c04.xhtml#Page_87)'
  prefs: []
  type: TYPE_NORMAL
- en: manifest templates, [527](c18.xhtml#Page_527)–[528](c18.xhtml#Page_528)
  prefs: []
  type: TYPE_NORMAL
- en: '*MANIFEST.in* file, [518](c18.xhtml#Page_518), [527](c18.xhtml#Page_527)–[528](c18.xhtml#Page_528)'
  prefs: []
  type: TYPE_NORMAL
- en: '`map` iterable, [250](c09.xhtml#Page_250)–[251](c09.xhtml#Page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: '`map()` method, [491](c17.xhtml#Page_491)'
  prefs: []
  type: TYPE_NORMAL
- en: mapping, [222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: mapping patterns, [229](c09.xhtml#Page_229)–[230](c09.xhtml#Page_230)
  prefs: []
  type: TYPE_NORMAL
- en: '`mappingproxy`, [427](c15.xhtml#Page_427)–[428](c15.xhtml#Page_428)'
  prefs: []
  type: TYPE_NORMAL
- en: Marick, Brian, [609](c20.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: Märies, Ionel Cristian, [517](c18.xhtml#Page_517)
  prefs: []
  type: TYPE_NORMAL
- en: marking, [598](c20.xhtml#Page_598)–[600](c20.xhtml#Page_600), [672](b03.xhtml#Page_672)
  prefs: []
  type: TYPE_NORMAL
- en: '`marshal` module, [374](c12.xhtml#Page_374)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__match_args__` attribute, [179](c07.xhtml#Page_179)–[180](c07.xhtml#Page_180)'
  prefs: []
  type: TYPE_NORMAL
- en: '`match/case` statements, [68](c03.xhtml#Page_68)–[71](c03.xhtml#Page_71)'
  prefs: []
  type: TYPE_NORMAL
- en: '`math` module, [47](c03.xhtml#Page_47)–[48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: math operations and constants, [45](c03.xhtml#Page_45)–[48](c03.xhtml#Page_48),
    [221](c09.xhtml#Page_221)–[222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: '`__matmul__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: matrix multiplication (`@`) operator, [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '`max()` function, [248](c09.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: McA’Nulty, Pamela, [507](c17.xhtml#Page_507)
  prefs: []
  type: TYPE_NORMAL
- en: McCabe complexity, [31](c02.xhtml#Page_31), [32](c02.xhtml#Page_32)
  prefs: []
  type: TYPE_NORMAL
- en: member variables. *See* instance attributes
  prefs: []
  type: TYPE_NORMAL
- en: '`MemoryError`, [209](c08.xhtml#Page_209), [258](c10.xhtml#Page_258)'
  prefs: []
  type: TYPE_NORMAL
- en: '`memoryview` class, [361](c12.xhtml#Page_361)–[363](c12.xhtml#Page_363)'
  prefs: []
  type: TYPE_NORMAL
- en: MessagePack serialization format, [376](c12.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: meta hooks, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: meta path finders, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: metaclasses
  prefs: []
  type: TYPE_NORMAL
- en: creating custom, [406](c14.xhtml#Page_406)–[408](c14.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: creating with `type()`, [404](c14.xhtml#Page_404)–[405](c14.xhtml#Page_405)
  prefs: []
  type: TYPE_NORMAL
- en: method resolution order
  prefs: []
  type: TYPE_NORMAL
- en: and base class order, [392](c13.xhtml#Page_392)–[395](c13.xhtml#Page_395)
  prefs: []
  type: TYPE_NORMAL
- en: example, [388](c13.xhtml#Page_388)–[392](c13.xhtml#Page_392)
  prefs: []
  type: TYPE_NORMAL
- en: methods. *See also* special methods
  prefs: []
  type: TYPE_NORMAL
- en: about, [64](c03.xhtml#Page_64), [150](c07.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: and functional programming, [180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: inspecting, [426](c15.xhtml#Page_426)–[428](c15.xhtml#Page_428)
  prefs: []
  type: TYPE_NORMAL
- en: types, [158](c07.xhtml#Page_158)–[160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: MicroPython, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '`min()` function, [248](c09.xhtml#Page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: '*Minecraft* .dat file, [373](c12.xhtml#Page_373)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__missing__()` method, [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: mixins, [399](c13.xhtml#Page_399)–[401](c13.xhtml#Page_401)
  prefs: []
  type: TYPE_NORMAL
- en: '`mkdir()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: mocking inputs, [592](c20.xhtml#Page_592), [597](c20.xhtml#Page_597)–[598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: '`__mod__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: '`mode=` argument, [297](c11.xhtml#Page_297)–[299](c11.xhtml#Page_299)'
  prefs: []
  type: TYPE_NORMAL
- en: modification in place, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: '`__module__` attribute, [645](b01.xhtml#Page_645), [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: module search paths, [89](c04.xhtml#Page_89)–[91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: module spec objects, [91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: '`ModuleNotFoundError`, [77](c04.xhtml#Page_77), [91](c04.xhtml#Page_91), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: modules
  prefs: []
  type: TYPE_NORMAL
- en: about, [74](c04.xhtml#Page_74)–[75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: entry points, [85](c04.xhtml#Page_85)–[86](c04.xhtml#Page_86)
  prefs: []
  type: TYPE_NORMAL
- en: frozen, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: naming conventions, [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: special attributes on, [644](b01.xhtml#Page_644)–[645](b01.xhtml#Page_645)
  prefs: []
  type: TYPE_NORMAL
- en: updating, [518](c18.xhtml#Page_518)
  prefs: []
  type: TYPE_NORMAL
- en: modulo (`%`) operator, [46](c03.xhtml#Page_46), [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: monkeypatching (`monkeypatch` tool), [597](c20.xhtml#Page_597), [604](c20.xhtml#Page_604)–[605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: '`__mro__` attribute, [388](c13.xhtml#Page_388), [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__mul__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: multiline string literals, [55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: multiple inheritance
  prefs: []
  type: TYPE_NORMAL
- en: and base class order, [392](c13.xhtml#Page_392)–[395](c13.xhtml#Page_395)
  prefs: []
  type: TYPE_NORMAL
- en: controlling resolution, [395](c13.xhtml#Page_395)–[398](c13.xhtml#Page_398)
  prefs: []
  type: TYPE_NORMAL
- en: and metaclasses, [407](c14.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: method resolution order, [388](c13.xhtml#Page_388)–[392](c13.xhtml#Page_392)
  prefs: []
  type: TYPE_NORMAL
- en: multiplication (`*`) operator, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: multiprocessing. *See also* producer/consumer problem
  prefs: []
  type: TYPE_NORMAL
- en: about, [477](c17.xhtml#Page_477), [498](c17.xhtml#Page_498)–[499](c17.xhtml#Page_499)
  prefs: []
  type: TYPE_NORMAL
- en: with Collatz game example, [500](c17.xhtml#Page_500)–[501](c17.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: logging with, [507](c17.xhtml#Page_507)–[508](c17.xhtml#Page_508)
  prefs: []
  type: TYPE_NORMAL
- en: and `pickle`, [499](c17.xhtml#Page_499)–[500](c17.xhtml#Page_500)
  prefs: []
  type: TYPE_NORMAL
- en: '`multiprocessing` module, [498](c17.xhtml#Page_498), [503](c17.xhtml#Page_503),
    [505](c17.xhtml#Page_505), [508](c17.xhtml#Page_508)'
  prefs: []
  type: TYPE_NORMAL
- en: multisets, [224](c09.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: multitasking, [458](c16.xhtml#Page_458), [459](c16.xhtml#Page_459), [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: multithreading, [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: mutable objects
  prefs: []
  type: TYPE_NORMAL
- en: about, [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: binding to, [109](c05.xhtml#Page_109)–[114](c05.xhtml#Page_114)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107), [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: and default values, [126](c06.xhtml#Page_126)–[127](c06.xhtml#Page_127)
  prefs: []
  type: TYPE_NORMAL
- en: mutating
  prefs: []
  type: TYPE_NORMAL
- en: avoiding, [110](c05.xhtml#Page_110)–[111](c05.xhtml#Page_111)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: effects of, [104](c05.xhtml#Page_104), [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107)
  prefs: []
  type: TYPE_NORMAL
- en: in loops, [244](c09.xhtml#Page_244)–[246](c09.xhtml#Page_246)
  prefs: []
  type: TYPE_NORMAL
- en: Muthukadan, Baiju, [602](c20.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: Mypy, [33](c02.xhtml#Page_33), [145](c06.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: '**N**'
  prefs: []
  type: TYPE_NORMAL
- en: '`__name__` attribute, [85](c04.xhtml#Page_85)–[86](c04.xhtml#Page_86), [426](c15.xhtml#Page_426),
    [645](b01.xhtml#Page_645), [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: name mangling, [156](c07.xhtml#Page_156)–[157](c07.xhtml#Page_157), [674](b03.xhtml#Page_674)
  prefs: []
  type: TYPE_NORMAL
- en: named tuples (`namedtuple`), [217](c09.xhtml#Page_217)–[218](c09.xhtml#Page_218)
  prefs: []
  type: TYPE_NORMAL
- en: '`NameError`, [101](c05.xhtml#Page_101), [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: names
  prefs: []
  type: TYPE_NORMAL
- en: about, [96](c05.xhtml#Page_96), [99](c05.xhtml#Page_99), [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: global scope, [102](c05.xhtml#Page_102)–[104](c05.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: local scope, [100](c05.xhtml#Page_100), [101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: namespace packages, [75](c04.xhtml#Page_75), [676](b03.xhtml#Page_676)
  prefs: []
  type: TYPE_NORMAL
- en: namespaces, [78](c04.xhtml#Page_78)–[79](c04.xhtml#Page_79)
  prefs: []
  type: TYPE_NORMAL
- en: naming conventions
  prefs: []
  type: TYPE_NORMAL
- en: for attribute scope, [156](c07.xhtml#Page_156)–[157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: class names, [656](b03.xhtml#Page_656)
  prefs: []
  type: TYPE_NORMAL
- en: constants, [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: packages and modules, [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: and Systems Hungarian Notation, [115](c05.xhtml#Page_115)–[116](c05.xhtml#Page_116)
  prefs: []
  type: TYPE_NORMAL
- en: unit tests, [588](c20.xhtml#Page_588)
  prefs: []
  type: TYPE_NORMAL
- en: '`nan` (invalid number) constant, [45](c03.xhtml#Page_45), [47](c03.xhtml#Page_47),
    [48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__ne__()` (not equals) method, [172](c07.xhtml#Page_172), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__neg__()` (negative sign) method, [175](c07.xhtml#Page_175), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: negative binary notation, [343](c12.xhtml#Page_343), [344](c12.xhtml#Page_344)–[345](c12.xhtml#Page_345),
    [350](c12.xhtml#Page_350)–[351](c12.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: negative numbers, [58](c03.xhtml#Page_58), [175](c07.xhtml#Page_175), [341](c12.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: nesting
  prefs: []
  type: TYPE_NORMAL
- en: functions, [134](c06.xhtml#Page_134)–[135](c06.xhtml#Page_135)
  prefs: []
  type: TYPE_NORMAL
- en: generator expressions, [276](c10.xhtml#Page_276)–[277](c10.xhtml#Page_277)
  prefs: []
  type: TYPE_NORMAL
- en: loops vs. alternatives, [247](c09.xhtml#Page_247)–[248](c09.xhtml#Page_248),
    [272](c10.xhtml#Page_272)–[273](c10.xhtml#Page_273)
  prefs: []
  type: TYPE_NORMAL
- en: and scope, [104](c05.xhtml#Page_104)–[105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: statements, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: NetCDF (Network Common Data Form) serialization format, [376](c12.xhtml#Page_376)
  prefs: []
  type: TYPE_NORMAL
- en: neural networks, [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: '`__new__()` method, [152](c07.xhtml#Page_152)–[153](c07.xhtml#Page_153), [406](c14.xhtml#Page_406),
    [643](b01.xhtml#Page_643), [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: newline (`\n`), [55](c03.xhtml#Page_55), [56](c03.xhtml#Page_56), [294](c11.xhtml#Page_294),
    [307](c11.xhtml#Page_307)
  prefs: []
  type: TYPE_NORMAL
- en: '`next()` function, [240](c09.xhtml#Page_240)–[241](c09.xhtml#Page_241)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__next__()` method, [238](c09.xhtml#Page_238)–[241](c09.xhtml#Page_241), [254](c09.xhtml#Page_254)–[255](c09.xhtml#Page_255),
    [259](c10.xhtml#Page_259)–[260](c10.xhtml#Page_260), [261](c10.xhtml#Page_261),
    [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: non-data descriptors, [437](c15.xhtml#Page_437)
  prefs: []
  type: TYPE_NORMAL
- en: '`None` (null) value, [50](c03.xhtml#Page_50)–[51](c03.xhtml#Page_51), [127](c06.xhtml#Page_127)'
  prefs: []
  type: TYPE_NORMAL
- en: '`NoneType` type, [675](b03.xhtml#Page_675)'
  prefs: []
  type: TYPE_NORMAL
- en: '`nonlocal` keyword, [105](c05.xhtml#Page_105)'
  prefs: []
  type: TYPE_NORMAL
- en: nonpublic attributes, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: '`nose2` module, [578](c20.xhtml#Page_578)'
  prefs: []
  type: TYPE_NORMAL
- en: not equals, [49](c03.xhtml#Page_49), [172](c07.xhtml#Page_172)
  prefs: []
  type: TYPE_NORMAL
- en: '`not` keyword, [51](c03.xhtml#Page_51)–[52](c03.xhtml#Page_52), [237](c09.xhtml#Page_237)'
  prefs: []
  type: TYPE_NORMAL
- en: notebook documents (Jupyter), [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: '`NotImplemented`, [197](c08.xhtml#Page_197)'
  prefs: []
  type: TYPE_NORMAL
- en: '`NotImplementedError`, [197](c08.xhtml#Page_197)'
  prefs: []
  type: TYPE_NORMAL
- en: Nuitka transpiler, [5](c01.xhtml#Page_5), [537](c18.xhtml#Page_537)
  prefs: []
  type: TYPE_NORMAL
- en: null termination, [354](c12.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: '`NullHandler`, [551](c19.xhtml#Page_551)'
  prefs: []
  type: TYPE_NORMAL
- en: Numba, [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: number systems
  prefs: []
  type: TYPE_NORMAL
- en: binary, [338](c12.xhtml#Page_338)
  prefs: []
  type: TYPE_NORMAL
- en: hexadecimal, [338](c12.xhtml#Page_338)–[340](c12.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: integers, [340](c12.xhtml#Page_340)–[341](c12.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: octal, [340](c12.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: two’s complement, [341](c12.xhtml#Page_341)
  prefs: []
  type: TYPE_NORMAL
- en: number types, [45](c03.xhtml#Page_45)–[46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: '`numbers` module, [411](c14.xhtml#Page_411)'
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs: []
  type: TYPE_NORMAL
- en: '`-O` (optimize) flag, [556](c19.xhtml#Page_556)'
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented programming, [120](c06.xhtml#Page_120), [149](c07.xhtml#Page_149)–[151](c07.xhtml#Page_151),
    [180](c07.xhtml#Page_180)
  prefs: []
  type: TYPE_NORMAL
- en: objects. *See also* mutable objects
  prefs: []
  type: TYPE_NORMAL
- en: about, [150](c07.xhtml#Page_150)
  prefs: []
  type: TYPE_NORMAL
- en: callable, [131](c06.xhtml#Page_131)–[132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [63](c03.xhtml#Page_63)–[64](c03.xhtml#Page_64)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [151](c07.xhtml#Page_151)
  prefs: []
  type: TYPE_NORMAL
- en: slicing on, [235](c09.xhtml#Page_235)
  prefs: []
  type: TYPE_NORMAL
- en: '`oct()` function, [341](c12.xhtml#Page_341)'
  prefs: []
  type: TYPE_NORMAL
- en: octal numbers, [340](c12.xhtml#Page_340)
  prefs: []
  type: TYPE_NORMAL
- en: ODF (Open Document Format) file format, [334](c11.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: '*odfpy* library, [334](c11.xhtml#Page_334)'
  prefs: []
  type: TYPE_NORMAL
- en: '`offset` keyword, [371](c12.xhtml#Page_371)'
  prefs: []
  type: TYPE_NORMAL
- en: '*omission* project example'
  prefs: []
  type: TYPE_NORMAL
- en: directory structure, [75](c04.xhtml#Page_75)–[76](c04.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: entry point example, [88](c04.xhtml#Page_88)–[89](c04.xhtml#Page_89)
  prefs: []
  type: TYPE_NORMAL
- en: importing example, [80](c04.xhtml#Page_80)–[81](c04.xhtml#Page_81), [82](c04.xhtml#Page_82)–[85](c04.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: setup, [74](c04.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: one’s complement (`~`), [47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: '*Oolite* (game), [373](c12.xhtml#Page_373)'
  prefs: []
  type: TYPE_NORMAL
- en: '`open()` function, [295](c11.xhtml#Page_295)–[296](c11.xhtml#Page_296)'
  prefs: []
  type: TYPE_NORMAL
- en: Open-Closed Principle, [382](c13.xhtml#Page_382)–[383](c13.xhtml#Page_383)
  prefs: []
  type: TYPE_NORMAL
- en: operators, [46](c03.xhtml#Page_46)–[47](c03.xhtml#Page_47)
  prefs: []
  type: TYPE_NORMAL
- en: optimize (`-O`) flag, [556](c19.xhtml#Page_556)
  prefs: []
  type: TYPE_NORMAL
- en: '`or` keyword, [51](c03.xhtml#Page_51)–[52](c03.xhtml#Page_52)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__or__()` method, [174](c07.xhtml#Page_174), [345](c12.xhtml#Page_345), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: or patterns, [69](c03.xhtml#Page_69)
  prefs: []
  type: TYPE_NORMAL
- en: ordered items, [217](c09.xhtml#Page_217)
  prefs: []
  type: TYPE_NORMAL
- en: '`OrderedDict`, [224](c09.xhtml#Page_224)'
  prefs: []
  type: TYPE_NORMAL
- en: '`os` module, [315](c11.xhtml#Page_315), [328](c11.xhtml#Page_328)'
  prefs: []
  type: TYPE_NORMAL
- en: '`OSError`, [209](c08.xhtml#Page_209)'
  prefs: []
  type: TYPE_NORMAL
- en: '`os.system()` function, [456](c15.xhtml#Page_456)'
  prefs: []
  type: TYPE_NORMAL
- en: out-of-place testing, [580](c20.xhtml#Page_580)
  prefs: []
  type: TYPE_NORMAL
- en: '`OverflowError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`@overload` decorator, [451](c15.xhtml#Page_451)'
  prefs: []
  type: TYPE_NORMAL
- en: overloaded functions, [129](c06.xhtml#Page_129)–[130](c06.xhtml#Page_130)
  prefs: []
  type: TYPE_NORMAL
- en: overwrite (`\r`), [294](c11.xhtml#Page_294), [307](c11.xhtml#Page_307)
  prefs: []
  type: TYPE_NORMAL
- en: '**P**'
  prefs: []
  type: TYPE_NORMAL
- en: '`pack()` (`struct` module) method, [352](c12.xhtml#Page_352), [353](c12.xhtml#Page_353)–[355](c12.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__package__` attribute, [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: package manager. *See* pip
  prefs: []
  type: TYPE_NORMAL
- en: packages. *See also* imports; uploads
  prefs: []
  type: TYPE_NORMAL
- en: about, [18](c02.xhtml#Page_18)–[19](c02.xhtml#Page_19), [74](c04.xhtml#Page_74)–[75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: contributing to, [628](c21.xhtml#Page_628)–[629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: editable, [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: entry points, [86](c04.xhtml#Page_86)–[87](c04.xhtml#Page_87)
  prefs: []
  type: TYPE_NORMAL
- en: finding, [23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: including files and additional, [523](c18.xhtml#Page_523)–[524](c18.xhtml#Page_524),
    [525](c18.xhtml#Page_525)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [21](c02.xhtml#Page_21)–[22](c02.xhtml#Page_22), [531](c18.xhtml#Page_531),
    [533](c18.xhtml#Page_533)
  prefs: []
  type: TYPE_NORMAL
- en: naming conventions, [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: provisional, [620](c21.xhtml#Page_620)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  prefs: []
  type: TYPE_NORMAL
- en: upgrading, [22](c02.xhtml#Page_22)
  prefs: []
  type: TYPE_NORMAL
- en: virtual environment access, [20](c02.xhtml#Page_20), [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: packaging
  prefs: []
  type: TYPE_NORMAL
- en: artifacts build, [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: distribution options, [515](c18.xhtml#Page_515)–[517](c18.xhtml#Page_517)
  prefs: []
  type: TYPE_NORMAL
- en: for end user distribution, [534](c18.xhtml#Page_534)–[540](c18.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: files and structure, [518](c18.xhtml#Page_518)–[530](c18.xhtml#Page_530)
  prefs: []
  type: TYPE_NORMAL
- en: planning, [514](c18.xhtml#Page_514)–[515](c18.xhtml#Page_515), [517](c18.xhtml#Page_517)–[518](c18.xhtml#Page_518)
  prefs: []
  type: TYPE_NORMAL
- en: publishing on pip, [532](c18.xhtml#Page_532)–[534](c18.xhtml#Page_534)
  prefs: []
  type: TYPE_NORMAL
- en: and relative paths, [323](c11.xhtml#Page_323)–[325](c11.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: resources on, [514](c18.xhtml#Page_514)
  prefs: []
  type: TYPE_NORMAL
- en: packaging gradient, [516](c18.xhtml#Page_516), [535](c18.xhtml#Page_535)
  prefs: []
  type: TYPE_NORMAL
- en: packaging tools, [534](c18.xhtml#Page_534). *See also* setuptools library
  prefs: []
  type: TYPE_NORMAL
- en: padding, [354](c12.xhtml#Page_354)–[355](c12.xhtml#Page_355), [360](c12.xhtml#Page_360)–[361](c12.xhtml#Page_361)
  prefs: []
  type: TYPE_NORMAL
- en: Paige, Jeremiah, [519](c18.xhtml#Page_519)
  prefs: []
  type: TYPE_NORMAL
- en: Pandas, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: parallelism
  prefs: []
  type: TYPE_NORMAL
- en: about, [477](c17.xhtml#Page_477), [497](c17.xhtml#Page_497)–[498](c17.xhtml#Page_498)
  prefs: []
  type: TYPE_NORMAL
- en: vs. asynchrony, [459](c16.xhtml#Page_459)
  prefs: []
  type: TYPE_NORMAL
- en: vs. concurrency, [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: with multiprocessing, [498](c17.xhtml#Page_498)–[501](c17.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: parameters
  prefs: []
  type: TYPE_NORMAL
- en: about, [123](c06.xhtml#Page_123), [676](b03.xhtml#Page_676)–[677](b03.xhtml#Page_677)
  prefs: []
  type: TYPE_NORMAL
- en: and assignment, [107](c05.xhtml#Page_107)–[109](c05.xhtml#Page_109)
  prefs: []
  type: TYPE_NORMAL
- en: optional vs. required, [126](c06.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: positional and keyword, [132](c06.xhtml#Page_132)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: type hints, [146](c06.xhtml#Page_146)–[147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: parametrization, [592](c20.xhtml#Page_592), [594](c20.xhtml#Page_594)–[596](c20.xhtml#Page_596),
    [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: parent directory (`..`), [84](c04.xhtml#Page_84), [318](c11.xhtml#Page_318),
    [322](c11.xhtml#Page_322)
  prefs: []
  type: TYPE_NORMAL
- en: parentheses `()` operator, [46](c03.xhtml#Page_46), [217](c09.xhtml#Page_217)
  prefs: []
  type: TYPE_NORMAL
- en: '`parents` (`path` module) property, [317](c11.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: '`partial()` (`functools` module) function, [491](c17.xhtml#Page_491)'
  prefs: []
  type: TYPE_NORMAL
- en: '`parts()` (`PurePath` module) method, [317](c11.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: Pascal strings, [354](c12.xhtml#Page_354)
  prefs: []
  type: TYPE_NORMAL
- en: '`pass` keyword, [42](c03.xhtml#Page_42)'
  prefs: []
  type: TYPE_NORMAL
- en: passing functions, [140](c06.xhtml#Page_140)–[141](c06.xhtml#Page_141)
  prefs: []
  type: TYPE_NORMAL
- en: passing messages technique, [487](c17.xhtml#Page_487), [495](c17.xhtml#Page_495)–[496](c17.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: patches, [631](c21.xhtml#Page_631)
  prefs: []
  type: TYPE_NORMAL
- en: '`__path__` attribute, [74](c04.xhtml#Page_74), [91](c04.xhtml#Page_91), [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: path-based finder, [90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: path entry finders (path entries), [90](c04.xhtml#Page_90)–[91](c04.xhtml#Page_91)
  prefs: []
  type: TYPE_NORMAL
- en: '`pathlib` module'
  prefs: []
  type: TYPE_NORMAL
- en: about, [315](c11.xhtml#Page_315)
  prefs: []
  type: TYPE_NORMAL
- en: classes, [315](c11.xhtml#Page_315)–[316](c11.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: operations, [320](c11.xhtml#Page_320)–[323](c11.xhtml#Page_323), [325](c11.xhtml#Page_325)–[328](c11.xhtml#Page_328)
  prefs: []
  type: TYPE_NORMAL
- en: and path parts, [316](c11.xhtml#Page_316)–[320](c11.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: paths
  prefs: []
  type: TYPE_NORMAL
- en: about, [314](c11.xhtml#Page_314)
  prefs: []
  type: TYPE_NORMAL
- en: absolute, [316](c11.xhtml#Page_316)–[320](c11.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: modules, [315](c11.xhtml#Page_315)
  prefs: []
  type: TYPE_NORMAL
- en: objects, [315](c11.xhtml#Page_315)–[316](c11.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: relative, [322](c11.xhtml#Page_322)–[325](c11.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: patterns. *See also* anti-patterns
  prefs: []
  type: TYPE_NORMAL
- en: glob, [527](c18.xhtml#Page_527)
  prefs: []
  type: TYPE_NORMAL
- en: singleton, [407](c14.xhtml#Page_407)–[408](c14.xhtml#Page_408)
  prefs: []
  type: TYPE_NORMAL
- en: structural matching, [68](c03.xhtml#Page_68)–[71](c03.xhtml#Page_71), [177](c07.xhtml#Page_177)–[180](c07.xhtml#Page_180),
    [228](c09.xhtml#Page_228)–[230](c09.xhtml#Page_230)
  prefs: []
  type: TYPE_NORMAL
- en: virtual machine design, [373](c12.xhtml#Page_373)
  prefs: []
  type: TYPE_NORMAL
- en: pdb. *See* Python Debugger (pdb)
  prefs: []
  type: TYPE_NORMAL
- en: '`PendingDeprecationWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: PEP 8 (style guide), [27](c02.xhtml#Page_27)–[29](c02.xhtml#Page_29), [33](c02.xhtml#Page_33)–[34](c02.xhtml#Page_34),
    [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: PEP 20 (The Zen of Python), [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: PEPs (Python Enhancement Proposals), [9](c01.xhtml#Page_9), [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: performance
  prefs: []
  type: TYPE_NORMAL
- en: benchmarking, [611](c20.xhtml#Page_611), [612](c20.xhtml#Page_612)–[613](c20.xhtml#Page_613)
  prefs: []
  type: TYPE_NORMAL
- en: and concurrency, [458](c16.xhtml#Page_458)
  prefs: []
  type: TYPE_NORMAL
- en: exception handling, [187](c08.xhtml#Page_187)–[189](c08.xhtml#Page_189), [223](c09.xhtml#Page_223)–[224](c09.xhtml#Page_224)
  prefs: []
  type: TYPE_NORMAL
- en: perceived responsiveness, [463](c16.xhtml#Page_463)–[464](c16.xhtml#Page_464)
  prefs: []
  type: TYPE_NORMAL
- en: profiling, [577](c20.xhtml#Page_577), [613](c20.xhtml#Page_613)–[617](c20.xhtml#Page_617)
  prefs: []
  type: TYPE_NORMAL
- en: program factors, [4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: and programming paradigms, [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: '`permutations()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: Peters, Tim, [8](c01.xhtml#Page_8), [10](c01.xhtml#Page_10), [404](c14.xhtml#Page_404),
    [407](c14.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: PEX (Python Executable), [535](c18.xhtml#Page_535)
  prefs: []
  type: TYPE_NORMAL
- en: '`pi` constant, [47](c03.xhtml#Page_47)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pickle` module, [374](c12.xhtml#Page_374)–[375](c12.xhtml#Page_375), [499](c17.xhtml#Page_499)–[500](c17.xhtml#Page_500)'
  prefs: []
  type: TYPE_NORMAL
- en: Pike, Rob, [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: pinning, [528](c18.xhtml#Page_528)
  prefs: []
  type: TYPE_NORMAL
- en: pip
  prefs: []
  type: TYPE_NORMAL
- en: about, [21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: '`pip freeze` command, [529](c18.xhtml#Page_529)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pip install` command, [21](c02.xhtml#Page_21)–[22](c02.xhtml#Page_22), [23](c02.xhtml#Page_23),
    [528](c18.xhtml#Page_528)–[529](c18.xhtml#Page_529)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pip uninstall` command, [22](c02.xhtml#Page_22)'
  prefs: []
  type: TYPE_NORMAL
- en: pip-tools, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: Pipenv tool, [27](c02.xhtml#Page_27)
  prefs: []
  type: TYPE_NORMAL
- en: Pirnat, Mike, [190](c08.xhtml#Page_190)
  prefs: []
  type: TYPE_NORMAL
- en: '`pkg_resources` module, [325](c11.xhtml#Page_325)'
  prefs: []
  type: TYPE_NORMAL
- en: place values, [339](c12.xhtml#Page_339)
  prefs: []
  type: TYPE_NORMAL
- en: plaintext files. *See* files
  prefs: []
  type: TYPE_NORMAL
- en: platform wheels, [516](c18.xhtml#Page_516)
  prefs: []
  type: TYPE_NORMAL
- en: '*.plist* (property list) serialization format, [375](c12.xhtml#Page_375)'
  prefs: []
  type: TYPE_NORMAL
- en: Poetry, [27](c02.xhtml#Page_27), [534](c18.xhtml#Page_534)
  prefs: []
  type: TYPE_NORMAL
- en: polymorphism, [384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: '`pop()` method, [218](c09.xhtml#Page_218), [221](c09.xhtml#Page_221)'
  prefs: []
  type: TYPE_NORMAL
- en: '`popleft()` method, [219](c09.xhtml#Page_219)–[220](c09.xhtml#Page_220)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__pos__()` method, [175](c07.xhtml#Page_175), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: positional arguments, [128](c06.xhtml#Page_128)–[129](c06.xhtml#Page_129)
  prefs: []
  type: TYPE_NORMAL
- en: positional-only parameters, [133](c06.xhtml#Page_133)–[134](c06.xhtml#Page_134)
  prefs: []
  type: TYPE_NORMAL
- en: POSIX file paths, [314](c11.xhtml#Page_314), [319](c11.xhtml#Page_319)–[320](c11.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: '`PosixPath` initializer, [320](c11.xhtml#Page_320)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__pow__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: PowerShell, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: '`pprint` (pretty print) module, [427](c15.xhtml#Page_427)'
  prefs: []
  type: TYPE_NORMAL
- en: precision flag, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: '`__prepare__()` method, [406](c14.xhtml#Page_406), [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: Preston-Werner, Tom, [334](c11.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: Price, Will, [607](c20.xhtml#Page_607)
  prefs: []
  type: TYPE_NORMAL
- en: priming, [678](b03.xhtml#Page_678)
  prefs: []
  type: TYPE_NORMAL
- en: '`print()` function, [40](c03.xhtml#Page_40), [290](c11.xhtml#Page_290)–[294](c11.xhtml#Page_294),
    [306](c11.xhtml#Page_306)–[307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: procedural programming, [120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: '`process` objects, [498](c17.xhtml#Page_498)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ProcessPoolExecutor`, [498](c17.xhtml#Page_498), [500](c17.xhtml#Page_500)'
  prefs: []
  type: TYPE_NORMAL
- en: producer/consumer problem
  prefs: []
  type: TYPE_NORMAL
- en: about, [501](c17.xhtml#Page_501)–[502](c17.xhtml#Page_502)
  prefs: []
  type: TYPE_NORMAL
- en: Collatz program implementation, [502](c17.xhtml#Page_502)–[507](c17.xhtml#Page_507)
  prefs: []
  type: TYPE_NORMAL
- en: '`product()` (`itertools` module) function, [248](c09.xhtml#Page_248), [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`profile` module, [613](c20.xhtml#Page_613)–[617](c20.xhtml#Page_617)'
  prefs: []
  type: TYPE_NORMAL
- en: profiling, [577](c20.xhtml#Page_577), [611](c20.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: program entry points, [88](c04.xhtml#Page_88)–[89](c04.xhtml#Page_89)
  prefs: []
  type: TYPE_NORMAL
- en: programming
  prefs: []
  type: TYPE_NORMAL
- en: fields of study, [620](c21.xhtml#Page_620)–[627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: motivation, [11](c01.xhtml#Page_11), [456](c15.xhtml#Page_456), [635](c21.xhtml#Page_635)
  prefs: []
  type: TYPE_NORMAL
- en: paradigms, [120](c06.xhtml#Page_120)–[122](c06.xhtml#Page_122), [149](c07.xhtml#Page_149)
  prefs: []
  type: TYPE_NORMAL
- en: projects. *See also* packaging
  prefs: []
  type: TYPE_NORMAL
- en: licensing, [519](c18.xhtml#Page_519)–[520](c18.xhtml#Page_520), [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: metadata, [519](c18.xhtml#Page_519), [522](c18.xhtml#Page_522)
  prefs: []
  type: TYPE_NORMAL
- en: naming, [520](c18.xhtml#Page_520)–[521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: setup, [74](c04.xhtml#Page_74), [77](c04.xhtml#Page_77)
  prefs: []
  type: TYPE_NORMAL
- en: versions, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: virtual environments for, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: working with, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: '`prompt` keyword, [294](c11.xhtml#Page_294)–[295](c11.xhtml#Page_295)'
  prefs: []
  type: TYPE_NORMAL
- en: properties
  prefs: []
  type: TYPE_NORMAL
- en: about, [160](c07.xhtml#Page_160), [679](b03.xhtml#Page_679)
  prefs: []
  type: TYPE_NORMAL
- en: application of, [166](c07.xhtml#Page_166)–[167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: defining with decorators, [164](c07.xhtml#Page_164)–[166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods, [161](c07.xhtml#Page_161)–[164](c07.xhtml#Page_164)
  prefs: []
  type: TYPE_NORMAL
- en: '`property()` function, [163](c07.xhtml#Page_163), [164](c07.xhtml#Page_164)–[165](c07.xhtml#Page_165),
    [166](c07.xhtml#Page_166)'
  prefs: []
  type: TYPE_NORMAL
- en: property list (*.plist*) serialization format, [375](c12.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: Protocol Buffers (Google), [377](c12.xhtml#Page_377)
  prefs: []
  type: TYPE_NORMAL
- en: provisional packages, [620](c21.xhtml#Page_620)
  prefs: []
  type: TYPE_NORMAL
- en: '`prune` directive, [527](c18.xhtml#Page_527)'
  prefs: []
  type: TYPE_NORMAL
- en: '*.pth* file extension, [89](c04.xhtml#Page_89)'
  prefs: []
  type: TYPE_NORMAL
- en: public attributes, [156](c07.xhtml#Page_156)
  prefs: []
  type: TYPE_NORMAL
- en: pure paths, [315](c11.xhtml#Page_315)–[316](c11.xhtml#Page_316)
  prefs: []
  type: TYPE_NORMAL
- en: '`PurePath` objects, [316](c11.xhtml#Page_316)'
  prefs: []
  type: TYPE_NORMAL
- en: '`PureWindowsPath` initializer, [320](c11.xhtml#Page_320)'
  prefs: []
  type: TYPE_NORMAL
- en: '`.py` files, [18](c02.xhtml#Page_18)'
  prefs: []
  type: TYPE_NORMAL
- en: py2app, [536](c18.xhtml#Page_536)
  prefs: []
  type: TYPE_NORMAL
- en: py2exe tool, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: PyAutoGUI, [602](c20.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: '*.pyc* files, [6](c01.xhtml#Page_6), [91](c04.xhtml#Page_91)'
  prefs: []
  type: TYPE_NORMAL
- en: PyCharm, [35](c02.xhtml#Page_35), [145](c06.xhtml#Page_145)
  prefs: []
  type: TYPE_NORMAL
- en: pycodestyle, [31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: PyDev plug-in, [36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: pydoc, [540](c18.xhtml#Page_540)
  prefs: []
  type: TYPE_NORMAL
- en: '`py.exe` command, [17](c02.xhtml#Page_17)'
  prefs: []
  type: TYPE_NORMAL
- en: PyFlakes, [31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: PyGame, [622](c21.xhtml#Page_622)
  prefs: []
  type: TYPE_NORMAL
- en: PyGObject, [621](c21.xhtml#Page_621)
  prefs: []
  type: TYPE_NORMAL
- en: PyInstaller, [6](c01.xhtml#Page_6), [535](c18.xhtml#Page_535), [536](c18.xhtml#Page_536)
  prefs: []
  type: TYPE_NORMAL
- en: PyLadies, [633](c21.xhtml#Page_633)
  prefs: []
  type: TYPE_NORMAL
- en: Pylint, [29](c02.xhtml#Page_29)–[31](c02.xhtml#Page_31)
  prefs: []
  type: TYPE_NORMAL
- en: '*pylintrc* file, [31](c02.xhtml#Page_31)'
  prefs: []
  type: TYPE_NORMAL
- en: Pyodide, [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: PyOxidizer, [536](c18.xhtml#Page_536)
  prefs: []
  type: TYPE_NORMAL
- en: PyPI. *See* Python Package Index (PyPI)
  prefs: []
  type: TYPE_NORMAL
- en: '*pyproject.toml* file, [518](c18.xhtml#Page_518), [519](c18.xhtml#Page_519),
    [529](c18.xhtml#Page_529)–[530](c18.xhtml#Page_530)'
  prefs: []
  type: TYPE_NORMAL
- en: PyPy, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '*PyRTF* library, [334](c11.xhtml#Page_334)'
  prefs: []
  type: TYPE_NORMAL
- en: pytest
  prefs: []
  type: TYPE_NORMAL
- en: about, [578](c20.xhtml#Page_578)
  prefs: []
  type: TYPE_NORMAL
- en: exceptions testing, [585](c20.xhtml#Page_585)–[586](c20.xhtml#Page_586)
  prefs: []
  type: TYPE_NORMAL
- en: executing tests in, [584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: object naming with, [583](c20.xhtml#Page_583)–[584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: pytest-qt, [602](c20.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: Python
  prefs: []
  type: TYPE_NORMAL
- en: and C language, [352](c12.xhtml#Page_352)
  prefs: []
  type: TYPE_NORMAL
- en: contributing to, [630](c21.xhtml#Page_630)–[631](c21.xhtml#Page_631)
  prefs: []
  type: TYPE_NORMAL
- en: developing for, [628](c21.xhtml#Page_628)–[631](c21.xhtml#Page_631)
  prefs: []
  type: TYPE_NORMAL
- en: development of, [3](c01.xhtml#Page_3)–[4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: documentation, [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: governance, [9](c01.xhtml#Page_9)
  prefs: []
  type: TYPE_NORMAL
- en: implementations, [627](c21.xhtml#Page_627)–[628](c21.xhtml#Page_628)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [14](c02.xhtml#Page_14)–[17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: principles and practices, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6), [7](c01.xhtml#Page_7)–[9](c01.xhtml#Page_9),
    [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11), [121](c06.xhtml#Page_121)
  prefs: []
  type: TYPE_NORMAL
- en: reporting bugs and security flaws, [574](c19.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: running, [17](c02.xhtml#Page_17)–[18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: versions, [6](c01.xhtml#Page_6)–[7](c01.xhtml#Page_7), [17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: Python Code of Conduct, [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: Python community, [10](c01.xhtml#Page_10), [631](c21.xhtml#Page_631)–[635](c21.xhtml#Page_635)
  prefs: []
  type: TYPE_NORMAL
- en: Python Debugger (pdb)
  prefs: []
  type: TYPE_NORMAL
- en: about, [560](c19.xhtml#Page_560)–[561](c19.xhtml#Page_561)
  prefs: []
  type: TYPE_NORMAL
- en: buggy code example, [561](c19.xhtml#Page_561)–[562](c19.xhtml#Page_562)
  prefs: []
  type: TYPE_NORMAL
- en: commands reference, [647](b02.xhtml#Page_647)–[649](b02.xhtml#Page_649)
  prefs: []
  type: TYPE_NORMAL
- en: example program, [561](c19.xhtml#Page_561)–[562](c19.xhtml#Page_562)
  prefs: []
  type: TYPE_NORMAL
- en: inspecting and checking, [567](c19.xhtml#Page_567)–[569](c19.xhtml#Page_569)
  prefs: []
  type: TYPE_NORMAL
- en: moving through execution stack, [565](c19.xhtml#Page_565)–[566](c19.xhtml#Page_566)
  prefs: []
  type: TYPE_NORMAL
- en: postmortem use, [569](c19.xhtml#Page_569)–[570](c19.xhtml#Page_570)
  prefs: []
  type: TYPE_NORMAL
- en: starting, [562](c19.xhtml#Page_562)–[563](c19.xhtml#Page_563)
  prefs: []
  type: TYPE_NORMAL
- en: stepping through code, [563](c19.xhtml#Page_563)–[565](c19.xhtml#Page_565)
  prefs: []
  type: TYPE_NORMAL
- en: Python interpreter
  prefs: []
  type: TYPE_NORMAL
- en: about, [5](c01.xhtml#Page_5), [6](c01.xhtml#Page_6), [102](c05.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: specifying path to, [24](c02.xhtml#Page_24)–[25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: Python Package Index (PyPI), [23](c02.xhtml#Page_23), [516](c18.xhtml#Page_516),
    [522](c18.xhtml#Page_522), [629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: Python Packaging Authority (PyPA), [515](c18.xhtml#Page_515), [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: Python Software Foundation (PSF), [9](c01.xhtml#Page_9), [634](c21.xhtml#Page_634)–[635](c21.xhtml#Page_635)
  prefs: []
  type: TYPE_NORMAL
- en: '`python3` command, [17](c02.xhtml#Page_17)'
  prefs: []
  type: TYPE_NORMAL
- en: pythonfuzz tool, [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: Pythonic code, [7](c01.xhtml#Page_7)
  prefs: []
  type: TYPE_NORMAL
- en: Python.NET, [628](c21.xhtml#Page_628)
  prefs: []
  type: TYPE_NORMAL
- en: '`PYTHONPATH` variable, [89](c04.xhtml#Page_89)'
  prefs: []
  type: TYPE_NORMAL
- en: PyTorch, [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: '*PyYAML* library, [334](c11.xhtml#Page_334)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  prefs: []
  type: TYPE_NORMAL
- en: Qt GUI framework, [602](c20.xhtml#Page_602), [621](c21.xhtml#Page_621)
  prefs: []
  type: TYPE_NORMAL
- en: qualified vs. unqualified names, [70](c03.xhtml#Page_70), [79](c04.xhtml#Page_79),
    [666](b03.xhtml#Page_666), [680](b03.xhtml#Page_680)
  prefs: []
  type: TYPE_NORMAL
- en: quality assurance (QA), [577](c20.xhtml#Page_577)
  prefs: []
  type: TYPE_NORMAL
- en: '`__qualname__` attribute, [645](b01.xhtml#Page_645), [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: queues (`queue` module), [495](c17.xhtml#Page_495)–[496](c17.xhtml#Page_496),
    [503](c17.xhtml#Page_503), [505](c17.xhtml#Page_505), [508](c17.xhtml#Page_508)
  prefs: []
  type: TYPE_NORMAL
- en: quotation marks, [43](c03.xhtml#Page_43), [54](c03.xhtml#Page_54)–[55](c03.xhtml#Page_55),
    [57](c03.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs: []
  type: TYPE_NORMAL
- en: '`r` (raw string) keyword, [55](c03.xhtml#Page_55)–[56](c03.xhtml#Page_56)'
  prefs: []
  type: TYPE_NORMAL
- en: race conditions, [487](c17.xhtml#Page_487), [488](c17.xhtml#Page_488)–[489](c17.xhtml#Page_489),
    [491](c17.xhtml#Page_491)–[492](c17.xhtml#Page_492)
  prefs: []
  type: TYPE_NORMAL
- en: '`__radd__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`radians()` (`math` module) function, [48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: '`radint()` (`random` module) function, [122](c06.xhtml#Page_122)'
  prefs: []
  type: TYPE_NORMAL
- en: '`raise` keyword, [192](c08.xhtml#Page_192)–[193](c08.xhtml#Page_193), [200](c08.xhtml#Page_200)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rand__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`random` module, [122](c06.xhtml#Page_122)'
  prefs: []
  type: TYPE_NORMAL
- en: '`range()` iterable, [67](c03.xhtml#Page_67), [249](c09.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: raw bytes literals, [347](c12.xhtml#Page_347)
  prefs: []
  type: TYPE_NORMAL
- en: raw strings, [55](c03.xhtml#Page_55)–[56](c03.xhtml#Page_56)
  prefs: []
  type: TYPE_NORMAL
- en: '`raw_input()` function, [295](c11.xhtml#Page_295)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rdivmod__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`read()` method, [296](c11.xhtml#Page_296), [299](c11.xhtml#Page_299)–[300](c11.xhtml#Page_300),
    [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '`readable()` method, [299](c11.xhtml#Page_299)'
  prefs: []
  type: TYPE_NORMAL
- en: '`readline()` method, [300](c11.xhtml#Page_300)–[301](c11.xhtml#Page_301), [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '`readlines()` method, [301](c11.xhtml#Page_301), [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '*README* file, [74](c04.xhtml#Page_74), [518](c18.xhtml#Page_518), [519](c18.xhtml#Page_519),
    [521](c18.xhtml#Page_521)'
  prefs: []
  type: TYPE_NORMAL
- en: read-only descriptors, [437](c15.xhtml#Page_437)
  prefs: []
  type: TYPE_NORMAL
- en: '`read_text()` (`path` module) method, [325](c11.xhtml#Page_325)'
  prefs: []
  type: TYPE_NORMAL
- en: rebinding, [117](c05.xhtml#Page_117). *See also* binding
  prefs: []
  type: TYPE_NORMAL
- en: recursion, [121](c06.xhtml#Page_121), [124](c06.xhtml#Page_124)–[125](c06.xhtml#Page_125),
    [134](c06.xhtml#Page_134)–[135](c06.xhtml#Page_135), [136](c06.xhtml#Page_136)–[137](c06.xhtml#Page_137)
  prefs: []
  type: TYPE_NORMAL
- en: recursion depth, [124](c06.xhtml#Page_124)–[125](c06.xhtml#Page_125)
  prefs: []
  type: TYPE_NORMAL
- en: '`RecursionError`, [125](c06.xhtml#Page_125), [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: reentrancy, [488](c17.xhtml#Page_488), [502](c17.xhtml#Page_502)
  prefs: []
  type: TYPE_NORMAL
- en: reference-counting garbage collector, [100](c05.xhtml#Page_100)–[101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: references, [109](c05.xhtml#Page_109)–[114](c05.xhtml#Page_114), [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: '`register()`, [451](c15.xhtml#Page_451)–[452](c15.xhtml#Page_452)'
  prefs: []
  type: TYPE_NORMAL
- en: relative imports, [83](c04.xhtml#Page_83)–[85](c04.xhtml#Page_85)
  prefs: []
  type: TYPE_NORMAL
- en: relative paths, [322](c11.xhtml#Page_322)–[325](c11.xhtml#Page_325)
  prefs: []
  type: TYPE_NORMAL
- en: '`release()` method, [363](c12.xhtml#Page_363), [493](c17.xhtml#Page_493)'
  prefs: []
  type: TYPE_NORMAL
- en: '`remove()` method, [221](c09.xhtml#Page_221)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rename()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`repeat()` (`itertools` module) function, [258](c10.xhtml#Page_258), [507](c17.xhtml#Page_507)'
  prefs: []
  type: TYPE_NORMAL
- en: '`replace()` (`path` module) method, [71](c03.xhtml#Page_71), [326](c11.xhtml#Page_326),
    [327](c11.xhtml#Page_327)–[328](c11.xhtml#Page_328)'
  prefs: []
  type: TYPE_NORMAL
- en: repositories (project), [74](c04.xhtml#Page_74), [75](c04.xhtml#Page_75)–[76](c04.xhtml#Page_76)
  prefs: []
  type: TYPE_NORMAL
- en: '`repr()` function, [61](c03.xhtml#Page_61)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__repr__()` method, [168](c07.xhtml#Page_168)–[169](c07.xhtml#Page_169), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`requests` module, [579](c20.xhtml#Page_579), [580](c20.xhtml#Page_580)'
  prefs: []
  type: TYPE_NORMAL
- en: '*requirements.txt* file, [22](c02.xhtml#Page_22), [518](c18.xhtml#Page_518),
    [528](c18.xhtml#Page_528)–[529](c18.xhtml#Page_529)'
  prefs: []
  type: TYPE_NORMAL
- en: '`resolve()` (`Path` module) method, [323](c11.xhtml#Page_323)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ResourceWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: reStructuredText (reST), [540](c18.xhtml#Page_540)–[541](c18.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: '`result()` method, [486](c17.xhtml#Page_486)'
  prefs: []
  type: TYPE_NORMAL
- en: '`return` statement, [152](c07.xhtml#Page_152)'
  prefs: []
  type: TYPE_NORMAL
- en: '`reversed()` function, [249](c09.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__reversed__()` method, [418](c14.xhtml#Page_418), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rfloordiv__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: right shift (`>>`) operator, [47](c03.xhtml#Page_47), [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: '`RLock` object, [494](c17.xhtml#Page_494)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rlshift__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rmatmul__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rmdir()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rmod__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rmul__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: RobotFramework, [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: root (in path names), [318](c11.xhtml#Page_318), [319](c11.xhtml#Page_319)
  prefs: []
  type: TYPE_NORMAL
- en: '`__ror__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`round()` function, [48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__round__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rpow__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: RPython, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '`__rrshift__()` method, [174](c07.xhtml#Page_174), [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rshift__()` method, [174](c07.xhtml#Page_174), [345](c12.xhtml#Page_345),
    [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rsub__()` method, [173](c07.xhtml#Page_173), [174](c07.xhtml#Page_174),
    [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: RTF (Rich Text Format) file format, [334](c11.xhtml#Page_334)–[335](c11.xhtml#Page_335)
  prefs: []
  type: TYPE_NORMAL
- en: '*RTFMaker* library, [334](c11.xhtml#Page_334)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__rtruediv__()` method, [174](c07.xhtml#Page_174), [641](b01.xhtml#Page_641)'
  prefs: []
  type: TYPE_NORMAL
- en: '`run()` (`asyncio` module) function, [468](c16.xhtml#Page_468)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RuntimeError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RuntimeWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: '`run_until_complete()` function, [468](c16.xhtml#Page_468)'
  prefs: []
  type: TYPE_NORMAL
- en: RustPython, [628](c21.xhtml#Page_628)
  prefs: []
  type: TYPE_NORMAL
- en: '`__rxor__()` method, [174](c07.xhtml#Page_174), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs: []
  type: TYPE_NORMAL
- en: sandboxing, [537](c18.xhtml#Page_537)
  prefs: []
  type: TYPE_NORMAL
- en: '`sched` module, [508](c17.xhtml#Page_508)'
  prefs: []
  type: TYPE_NORMAL
- en: scientific notation, [45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: Scikit-learn library, [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: SciPy library, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: scope. *See also* global scope; local scope
  prefs: []
  type: TYPE_NORMAL
- en: about, [100](c05.xhtml#Page_100), [117](c05.xhtml#Page_117), [681](b03.xhtml#Page_681)
  prefs: []
  type: TYPE_NORMAL
- en: enclosing, [105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: naming conventions, [156](c07.xhtml#Page_156)–[157](c07.xhtml#Page_157)
  prefs: []
  type: TYPE_NORMAL
- en: resolution order, [105](c05.xhtml#Page_105)
  prefs: []
  type: TYPE_NORMAL
- en: screaming snake case, [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: scripting (field of study), [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: sdist (source distribution), [516](c18.xhtml#Page_516), [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: Seaborn, [624](c21.xhtml#Page_624)
  prefs: []
  type: TYPE_NORMAL
- en: '`SecretAgent` class example'
  prefs: []
  type: TYPE_NORMAL
- en: attributes, [155](c07.xhtml#Page_155)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [151](c07.xhtml#Page_151)–[152](c07.xhtml#Page_152), [153](c07.xhtml#Page_153),
    [154](c07.xhtml#Page_154)
  prefs: []
  type: TYPE_NORMAL
- en: methods, [158](c07.xhtml#Page_158)–[160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: properties, [162](c07.xhtml#Page_162)–[166](c07.xhtml#Page_166)
  prefs: []
  type: TYPE_NORMAL
- en: security
  prefs: []
  type: TYPE_NORMAL
- en: and code analysis, [571](c19.xhtml#Page_571)–[574](c19.xhtml#Page_574)
  prefs: []
  type: TYPE_NORMAL
- en: of data, [373](c12.xhtml#Page_373)–[374](c12.xhtml#Page_374)
  prefs: []
  type: TYPE_NORMAL
- en: as field of study, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: '`seek()` method, [298](c11.xhtml#Page_298), [302](c11.xhtml#Page_302)–[303](c11.xhtml#Page_303),
    [371](c12.xhtml#Page_371)'
  prefs: []
  type: TYPE_NORMAL
- en: '`seekable()` method, [299](c11.xhtml#Page_299)'
  prefs: []
  type: TYPE_NORMAL
- en: segmentation faults, [570](c19.xhtml#Page_570)–[571](c19.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: Seitz, Justin, [626](c21.xhtml#Page_626)
  prefs: []
  type: TYPE_NORMAL
- en: Selenium, [602](c20.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: '`self` parameter, [64](c03.xhtml#Page_64), [152](c07.xhtml#Page_152), [682](b03.xhtml#Page_682)'
  prefs: []
  type: TYPE_NORMAL
- en: Sempf, Bill, [185](c08.xhtml#Page_185)
  prefs: []
  type: TYPE_NORMAL
- en: '`send()` method, [283](c10.xhtml#Page_283)–[285](c10.xhtml#Page_285)'
  prefs: []
  type: TYPE_NORMAL
- en: '`sep=` keyword, [294](c11.xhtml#Page_294)'
  prefs: []
  type: TYPE_NORMAL
- en: sequence patterns, [228](c09.xhtml#Page_228)–[229](c09.xhtml#Page_229)
  prefs: []
  type: TYPE_NORMAL
- en: sequences, [70](c03.xhtml#Page_70), [351](c12.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: serialization
  prefs: []
  type: TYPE_NORMAL
- en: and deserialization, [328](c11.xhtml#Page_328)–[332](c11.xhtml#Page_332)
  prefs: []
  type: TYPE_NORMAL
- en: formats, [375](c12.xhtml#Page_375)–[377](c12.xhtml#Page_377)
  prefs: []
  type: TYPE_NORMAL
- en: techniques, [373](c12.xhtml#Page_373)–[375](c12.xhtml#Page_375)
  prefs: []
  type: TYPE_NORMAL
- en: set comprehensions, [278](c10.xhtml#Page_278)
  prefs: []
  type: TYPE_NORMAL
- en: set mathematics, [221](c09.xhtml#Page_221)–[222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: '`__set__()` method, [437](c15.xhtml#Page_437), [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`setattr()` function, [431](c15.xhtml#Page_431)–[433](c15.xhtml#Page_433)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__setattr__()` method, [431](c15.xhtml#Page_431)–[433](c15.xhtml#Page_433),
    [643](b01.xhtml#Page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__setitem__()` method, [231](c09.xhtml#Page_231), [235](c09.xhtml#Page_235),
    [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`setlevel()` method, [553](c19.xhtml#Page_553)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__set_name__()` method, [437](c15.xhtml#Page_437), [443](c15.xhtml#Page_443),
    [639](b01.xhtml#Page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`setrecursionlimit()` (`sys` module) function, [125](c06.xhtml#Page_125)'
  prefs: []
  type: TYPE_NORMAL
- en: sets, [220](c09.xhtml#Page_220)–[222](c09.xhtml#Page_222)
  prefs: []
  type: TYPE_NORMAL
- en: '`__setstate__()` method, [499](c17.xhtml#Page_499)'
  prefs: []
  type: TYPE_NORMAL
- en: setters, [150](c07.xhtml#Page_150), [161](c07.xhtml#Page_161)–[163](c07.xhtml#Page_163)
  prefs: []
  type: TYPE_NORMAL
- en: '`setup()` (`setuptools` module) function, [526](c18.xhtml#Page_526)'
  prefs: []
  type: TYPE_NORMAL
- en: '*setup.cfg* file, [518](c18.xhtml#Page_518), [519](c18.xhtml#Page_519), [520](c18.xhtml#Page_520)–[526](c18.xhtml#Page_526)'
  prefs: []
  type: TYPE_NORMAL
- en: '*setup.py* file, [518](c18.xhtml#Page_518), [519](c18.xhtml#Page_519)'
  prefs: []
  type: TYPE_NORMAL
- en: setuptools library, [518](c18.xhtml#Page_518), [525](c18.xhtml#Page_525), [526](c18.xhtml#Page_526),
    [529](c18.xhtml#Page_529)
  prefs: []
  type: TYPE_NORMAL
- en: setuptools-scm, [521](c18.xhtml#Page_521)
  prefs: []
  type: TYPE_NORMAL
- en: severity levels, [196](c08.xhtml#Page_196), [549](c19.xhtml#Page_549), [552](c19.xhtml#Page_552)–[554](c19.xhtml#Page_554)
  prefs: []
  type: TYPE_NORMAL
- en: shadowing
  prefs: []
  type: TYPE_NORMAL
- en: functions, [79](c04.xhtml#Page_79)–[80](c04.xhtml#Page_80), [81](c04.xhtml#Page_81)–[82](c04.xhtml#Page_82)
  prefs: []
  type: TYPE_NORMAL
- en: names, [102](c05.xhtml#Page_102)
  prefs: []
  type: TYPE_NORMAL
- en: shallow copy, [111](c05.xhtml#Page_111)–[113](c05.xhtml#Page_113), [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: shared state technique, [487](c17.xhtml#Page_487)–[488](c17.xhtml#Page_488)
  prefs: []
  type: TYPE_NORMAL
- en: shebang (`#!`) command, [24](c02.xhtml#Page_24)–[25](c02.xhtml#Page_25)
  prefs: []
  type: TYPE_NORMAL
- en: '`shelve` module, [374](c12.xhtml#Page_374)'
  prefs: []
  type: TYPE_NORMAL
- en: '`shutdown()` function, [485](c17.xhtml#Page_485)'
  prefs: []
  type: TYPE_NORMAL
- en: side effects, [108](c05.xhtml#Page_108), [120](c06.xhtml#Page_120)
  prefs: []
  type: TYPE_NORMAL
- en: sign bit, [345](c12.xhtml#Page_345)
  prefs: []
  type: TYPE_NORMAL
- en: sign flags, [58](c03.xhtml#Page_58)
  prefs: []
  type: TYPE_NORMAL
- en: '`signal` module, [503](c17.xhtml#Page_503)'
  prefs: []
  type: TYPE_NORMAL
- en: '`signed=` keyword, [351](c12.xhtml#Page_351)'
  prefs: []
  type: TYPE_NORMAL
- en: simple statements, [40](c03.xhtml#Page_40)
  prefs: []
  type: TYPE_NORMAL
- en: Simplified Wrapper and Interface Generator (SWIG), [630](c21.xhtml#Page_630)
  prefs: []
  type: TYPE_NORMAL
- en: single-dispatch generic functions, [449](c15.xhtml#Page_449)–[452](c15.xhtml#Page_452)
  prefs: []
  type: TYPE_NORMAL
- en: '`@singledispatch` decorator, [449](c15.xhtml#Page_449)–[450](c15.xhtml#Page_450)'
  prefs: []
  type: TYPE_NORMAL
- en: '`@singledispatchmethod` decorator, [449](c15.xhtml#Page_449)–[450](c15.xhtml#Page_450)'
  prefs: []
  type: TYPE_NORMAL
- en: Single-Responsibility Principle, [181](c07.xhtml#Page_181), [196](c08.xhtml#Page_196),
    [382](c13.xhtml#Page_382)
  prefs: []
  type: TYPE_NORMAL
- en: '`size=` keyword, [300](c11.xhtml#Page_300), [301](c11.xhtml#Page_301)'
  prefs: []
  type: TYPE_NORMAL
- en: '`size_t(n)` data type, [355](c12.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: Skulpt, [623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: '`sleep()` function, [466](c16.xhtml#Page_466)'
  prefs: []
  type: TYPE_NORMAL
- en: '`slice()` method, [235](c09.xhtml#Page_235)'
  prefs: []
  type: TYPE_NORMAL
- en: slice notation, [231](c09.xhtml#Page_231)–[236](c09.xhtml#Page_236)
  prefs: []
  type: TYPE_NORMAL
- en: slicing bytes objects, [361](c12.xhtml#Page_361)–[363](c12.xhtml#Page_363)
  prefs: []
  type: TYPE_NORMAL
- en: slots
  prefs: []
  type: TYPE_NORMAL
- en: about, [444](c15.xhtml#Page_444)–[445](c15.xhtml#Page_445)
  prefs: []
  type: TYPE_NORMAL
- en: for immutable classes, [447](c15.xhtml#Page_447)–[449](c15.xhtml#Page_449)
  prefs: []
  type: TYPE_NORMAL
- en: using, [445](c15.xhtml#Page_445)–[446](c15.xhtml#Page_446)
  prefs: []
  type: TYPE_NORMAL
- en: '`__slots__` attribute, [444](c15.xhtml#Page_444)–[446](c15.xhtml#Page_446),
    [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SMTPHandler`, [551](c19.xhtml#Page_551)'
  prefs: []
  type: TYPE_NORMAL
- en: snake case, [683](b03.xhtml#Page_683)
  prefs: []
  type: TYPE_NORMAL
- en: Snakeviz, [616](c20.xhtml#Page_616)–[617](c20.xhtml#Page_617)
  prefs: []
  type: TYPE_NORMAL
- en: Snapcraft, [538](c18.xhtml#Page_538)
  prefs: []
  type: TYPE_NORMAL
- en: '`SocketHandler` objects, [551](c19.xhtml#Page_551)'
  prefs: []
  type: TYPE_NORMAL
- en: SOLID principles, [382](c13.xhtml#Page_382)–[384](c13.xhtml#Page_384)
  prefs: []
  type: TYPE_NORMAL
- en: '`sorted()` function, [108](c05.xhtml#Page_108), [141](c06.xhtml#Page_141),
    [243](c09.xhtml#Page_243)–[244](c09.xhtml#Page_244), [249](c09.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: source distribution (sdist), [516](c18.xhtml#Page_516), [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: spaces vs. tabs, [28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29), [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: '`__spec__` attribute, [645](b01.xhtml#Page_645)'
  prefs: []
  type: TYPE_NORMAL
- en: special attributes, [426](c15.xhtml#Page_426), [644](b01.xhtml#Page_644)–[646](b01.xhtml#Page_646),
    [654](b03.xhtml#Page_654)
  prefs: []
  type: TYPE_NORMAL
- en: special methods
  prefs: []
  type: TYPE_NORMAL
- en: about, [167](c07.xhtml#Page_167)
  prefs: []
  type: TYPE_NORMAL
- en: binary operator support, [173](c07.xhtml#Page_173)–[174](c07.xhtml#Page_174)
  prefs: []
  type: TYPE_NORMAL
- en: comparisons, [171](c07.xhtml#Page_171)–[173](c07.xhtml#Page_173)
  prefs: []
  type: TYPE_NORMAL
- en: conversions, [168](c07.xhtml#Page_168)–[171](c07.xhtml#Page_171)
  prefs: []
  type: TYPE_NORMAL
- en: list by category, [638](b01.xhtml#Page_638)–[644](b01.xhtml#Page_644)
  prefs: []
  type: TYPE_NORMAL
- en: making instances callable, [175](c07.xhtml#Page_175)–[176](c07.xhtml#Page_176)
  prefs: []
  type: TYPE_NORMAL
- en: '`NotImplemented` exceptions, [197](c08.xhtml#Page_197)'
  prefs: []
  type: TYPE_NORMAL
- en: unary operator support, [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: Sphinx, [540](c18.xhtml#Page_540)–[541](c18.xhtml#Page_541)
  prefs: []
  type: TYPE_NORMAL
- en: sprints, [634](c21.xhtml#Page_634)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, [36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: '*src/* directory, [517](c18.xhtml#Page_517)–[518](c18.xhtml#Page_518), [580](c20.xhtml#Page_580)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ssize_t(n)` data type, [355](c12.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: Stackless Python, [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: standard error stream, [290](c11.xhtml#Page_290)–[291](c11.xhtml#Page_291),
    [297](c11.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: standard input stream, [297](c11.xhtml#Page_297), [469](c16.xhtml#Page_469)
  prefs: []
  type: TYPE_NORMAL
- en: standard output stream, [290](c11.xhtml#Page_290), [297](c11.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: '`starmap()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: starred expressions, [226](c09.xhtml#Page_226)–[227](c09.xhtml#Page_227)
  prefs: []
  type: TYPE_NORMAL
- en: starvation, [494](c17.xhtml#Page_494)
  prefs: []
  type: TYPE_NORMAL
- en: stateful closures, [137](c06.xhtml#Page_137)–[138](c06.xhtml#Page_138)
  prefs: []
  type: TYPE_NORMAL
- en: statements, [40](c03.xhtml#Page_40)–[42](c03.xhtml#Page_42), [53](c03.xhtml#Page_53)
  prefs: []
  type: TYPE_NORMAL
- en: states, [120](c06.xhtml#Page_120), [180](c07.xhtml#Page_180), [181](c07.xhtml#Page_181),
    [190](c08.xhtml#Page_190), [684](b03.xhtml#Page_684)
  prefs: []
  type: TYPE_NORMAL
- en: static analyzers, [29](c02.xhtml#Page_29)–[33](c02.xhtml#Page_33), [571](c19.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: static classes, [181](c07.xhtml#Page_181), [657](b03.xhtml#Page_657)
  prefs: []
  type: TYPE_NORMAL
- en: static methods, [159](c07.xhtml#Page_159)–[160](c07.xhtml#Page_160)
  prefs: []
  type: TYPE_NORMAL
- en: static vs. dynamic typing, [6](c01.xhtml#Page_6), [44](c03.xhtml#Page_44), [98](c05.xhtml#Page_98)–[99](c05.xhtml#Page_99)
  prefs: []
  type: TYPE_NORMAL
- en: '`@staticmethod` decorator, [160](c07.xhtml#Page_160)'
  prefs: []
  type: TYPE_NORMAL
- en: '`stderr` (standard error) stream, [290](c11.xhtml#Page_290)–[291](c11.xhtml#Page_291),
    [297](c11.xhtml#Page_297)'
  prefs: []
  type: TYPE_NORMAL
- en: '`stdin` (standard input) stream, [297](c11.xhtml#Page_297), [469](c16.xhtml#Page_469)'
  prefs: []
  type: TYPE_NORMAL
- en: '`stdout` (standard output) stream, [290](c11.xhtml#Page_290), [297](c11.xhtml#Page_297)'
  prefs: []
  type: TYPE_NORMAL
- en: stem (in path names), [318](c11.xhtml#Page_318), [319](c11.xhtml#Page_319)
  prefs: []
  type: TYPE_NORMAL
- en: '`StopAsyncIteration`, [474](c16.xhtml#Page_474)'
  prefs: []
  type: TYPE_NORMAL
- en: '`StopIteration`, [200](c08.xhtml#Page_200), [240](c09.xhtml#Page_240), [261](c10.xhtml#Page_261),
    [264](c10.xhtml#Page_264)'
  prefs: []
  type: TYPE_NORMAL
- en: '`str()` function, [56](c03.xhtml#Page_56), [61](c03.xhtml#Page_61)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__str__()` method, [169](c07.xhtml#Page_169)–[170](c07.xhtml#Page_170), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`StreamHandler` objects, [550](c19.xhtml#Page_550), [551](c19.xhtml#Page_551)'
  prefs: []
  type: TYPE_NORMAL
- en: streams. *See also* files
  prefs: []
  type: TYPE_NORMAL
- en: as iterators, [301](c11.xhtml#Page_301)–[302](c11.xhtml#Page_302)
  prefs: []
  type: TYPE_NORMAL
- en: position in, [302](c11.xhtml#Page_302)–[303](c11.xhtml#Page_303)
  prefs: []
  type: TYPE_NORMAL
- en: standard, [290](c11.xhtml#Page_290)–[291](c11.xhtml#Page_291), [297](c11.xhtml#Page_297)
  prefs: []
  type: TYPE_NORMAL
- en: types, [295](c11.xhtml#Page_295)
  prefs: []
  type: TYPE_NORMAL
- en: strings. *See also* docstrings
  prefs: []
  type: TYPE_NORMAL
- en: concatenations, [62](c03.xhtml#Page_62)
  prefs: []
  type: TYPE_NORMAL
- en: conversions, [61](c03.xhtml#Page_61)–[62](c03.xhtml#Page_62)
  prefs: []
  type: TYPE_NORMAL
- en: formatted strings (f-strings), [56](c03.xhtml#Page_56)–[60](c03.xhtml#Page_60)
  prefs: []
  type: TYPE_NORMAL
- en: immutability, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: and printing, [292](c11.xhtml#Page_292)–[294](c11.xhtml#Page_294)
  prefs: []
  type: TYPE_NORMAL
- en: raw strings, [55](c03.xhtml#Page_55)–[56](c03.xhtml#Page_56)
  prefs: []
  type: TYPE_NORMAL
- en: string literals, [53](c03.xhtml#Page_53)–[55](c03.xhtml#Page_55)
  prefs: []
  type: TYPE_NORMAL
- en: template strings, [60](c03.xhtml#Page_60)–[61](c03.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: '`strip()` method, [71](c03.xhtml#Page_71)'
  prefs: []
  type: TYPE_NORMAL
- en: strongly typed languages, [44](c03.xhtml#Page_44)
  prefs: []
  type: TYPE_NORMAL
- en: '`struct` module, [352](c12.xhtml#Page_352)–[357](c12.xhtml#Page_357)'
  prefs: []
  type: TYPE_NORMAL
- en: about, [352](c12.xhtml#Page_352)–[353](c12.xhtml#Page_353)
  prefs: []
  type: TYPE_NORMAL
- en: creating `Struct` objects, [356](c12.xhtml#Page_356)–[357](c12.xhtml#Page_357)
  prefs: []
  type: TYPE_NORMAL
- en: packing to binary, [353](c12.xhtml#Page_353)–[355](c12.xhtml#Page_355)
  prefs: []
  type: TYPE_NORMAL
- en: unpacking to Python values, [355](c12.xhtml#Page_355)–[356](c12.xhtml#Page_356)
  prefs: []
  type: TYPE_NORMAL
- en: structural pattern matching, [68](c03.xhtml#Page_68)–[71](c03.xhtml#Page_71),
    [177](c07.xhtml#Page_177)–[180](c07.xhtml#Page_180), [228](c09.xhtml#Page_228)–[230](c09.xhtml#Page_230)
  prefs: []
  type: TYPE_NORMAL
- en: stub classes, [385](c13.xhtml#Page_385)
  prefs: []
  type: TYPE_NORMAL
- en: style guidelines, [27](c02.xhtml#Page_27)–[29](c02.xhtml#Page_29), [31](c02.xhtml#Page_31),
    [33](c02.xhtml#Page_33)–[34](c02.xhtml#Page_34), [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: '`__sub__()` method, [173](c07.xhtml#Page_173), [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__subclasscheck__()` method, [418](c14.xhtml#Page_418), [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__subclasshook__()` method, [644](b01.xhtml#Page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: Sublime Text, [35](c02.xhtml#Page_35)–[36](c02.xhtml#Page_36)
  prefs: []
  type: TYPE_NORMAL
- en: subpackages, [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: '`subprocess` module, [456](c15.xhtml#Page_456), [508](c17.xhtml#Page_508)'
  prefs: []
  type: TYPE_NORMAL
- en: subprocesses
  prefs: []
  type: TYPE_NORMAL
- en: in producer/consumer problem, [503](c17.xhtml#Page_503)–[504](c17.xhtml#Page_504),
    [506](c17.xhtml#Page_506)–[507](c17.xhtml#Page_507)
  prefs: []
  type: TYPE_NORMAL
- en: and speed considerations, [500](c17.xhtml#Page_500)–[501](c17.xhtml#Page_501)
  prefs: []
  type: TYPE_NORMAL
- en: subscriptable collections, [231](c09.xhtml#Page_231)
  prefs: []
  type: TYPE_NORMAL
- en: subscripts. *See* indices (subscripts)
  prefs: []
  type: TYPE_NORMAL
- en: subset (`<`) operator, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: subtraction (`-`) operator, [46](c03.xhtml#Page_46)
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo pip` warning, [23](c02.xhtml#Page_23)'
  prefs: []
  type: TYPE_NORMAL
- en: suffixes (in path names), [318](c11.xhtml#Page_318), [319](c11.xhtml#Page_319)–[320](c11.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: '`suffixes` (`path` module) property, [317](c11.xhtml#Page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: suites, [41](c03.xhtml#Page_41)
  prefs: []
  type: TYPE_NORMAL
- en: '`sum()` function, [161](c07.xhtml#Page_161), [249](c09.xhtml#Page_249)'
  prefs: []
  type: TYPE_NORMAL
- en: '`super()` function, [396](c13.xhtml#Page_396)–[398](c13.xhtml#Page_398)'
  prefs: []
  type: TYPE_NORMAL
- en: superclass linearization, [389](c13.xhtml#Page_389)–[392](c13.xhtml#Page_392)
  prefs: []
  type: TYPE_NORMAL
- en: superset (`>`) operator, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: Svetlov, Andrew, [468](c16.xhtml#Page_468)
  prefs: []
  type: TYPE_NORMAL
- en: Sweigart, Al, [622](c21.xhtml#Page_622), [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '`symlink_to()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: symmetric difference (`^`) set operator, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: '`SyntaxError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SyntaxWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: '`sys` module, [291](c11.xhtml#Page_291)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SystemError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`SystemExit`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: Systems Hungarian Notation, [115](c05.xhtml#Page_115)–[116](c05.xhtml#Page_116)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs: []
  type: TYPE_NORMAL
- en: tab (`\t`), [293](c11.xhtml#Page_293)–[294](c11.xhtml#Page_294)
  prefs: []
  type: TYPE_NORMAL
- en: '`TabError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: tabs vs. spaces, [28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29), [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: '`takewhile()` (`itertools` module) function, [252](c09.xhtml#Page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`tan()` (`math` module) function, [48](c03.xhtml#Page_48)'
  prefs: []
  type: TYPE_NORMAL
- en: '*.tar.gz* files, [516](c18.xhtml#Page_516), [531](c18.xhtml#Page_531)'
  prefs: []
  type: TYPE_NORMAL
- en: tasks, [466](c16.xhtml#Page_466)–[468](c16.xhtml#Page_468)
  prefs: []
  type: TYPE_NORMAL
- en: '`tau` constant, [47](c03.xhtml#Page_47)'
  prefs: []
  type: TYPE_NORMAL
- en: teardown tasks, [586](c20.xhtml#Page_586), [686](b03.xhtml#Page_686)
  prefs: []
  type: TYPE_NORMAL
- en: '`tell()` method, [302](c11.xhtml#Page_302)'
  prefs: []
  type: TYPE_NORMAL
- en: template strings, [60](c03.xhtml#Page_60)–[61](c03.xhtml#Page_61)
  prefs: []
  type: TYPE_NORMAL
- en: TensorFlow library, [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: ternary expressions, [275](c10.xhtml#Page_275)
  prefs: []
  type: TYPE_NORMAL
- en: test-driven development (TDD), [578](c20.xhtml#Page_578)
  prefs: []
  type: TYPE_NORMAL
- en: Test PyPI, [532](c18.xhtml#Page_532)
  prefs: []
  type: TYPE_NORMAL
- en: testing. *See also* pytest; `textproof` project example
  prefs: []
  type: TYPE_NORMAL
- en: approaches, [185](c08.xhtml#Page_185)–[186](c08.xhtml#Page_186), [577](c20.xhtml#Page_577)–[578](c20.xhtml#Page_578)
  prefs: []
  type: TYPE_NORMAL
- en: code coverage evaluation, [607](c20.xhtml#Page_607)–[609](c20.xhtml#Page_609)
  prefs: []
  type: TYPE_NORMAL
- en: edge cases, [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: and external resources, [592](c20.xhtml#Page_592)
  prefs: []
  type: TYPE_NORMAL
- en: with fixtures, [586](c20.xhtml#Page_586)–[588](c20.xhtml#Page_588)
  prefs: []
  type: TYPE_NORMAL
- en: flaky tests, [591](c20.xhtml#Page_591)
  prefs: []
  type: TYPE_NORMAL
- en: frameworks, [34](c02.xhtml#Page_34), [578](c20.xhtml#Page_578)–[579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: GUI and web-based applications, [601](c20.xhtml#Page_601)–[602](c20.xhtml#Page_602)
  prefs: []
  type: TYPE_NORMAL
- en: with marking, [598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: with mocked inputs, [597](c20.xhtml#Page_597)–[598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: of packages, [530](c18.xhtml#Page_530)–[531](c18.xhtml#Page_531), [532](c18.xhtml#Page_532),
    [610](c20.xhtml#Page_610)–[611](c20.xhtml#Page_611)
  prefs: []
  type: TYPE_NORMAL
- en: with parametrization, [594](c20.xhtml#Page_594), [595](c20.xhtml#Page_595),
    [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: and project structure, [580](c20.xhtml#Page_580)
  prefs: []
  type: TYPE_NORMAL
- en: unit testing, [583](c20.xhtml#Page_583)–[584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: text-based serialization, [373](c12.xhtml#Page_373)–[374](c12.xhtml#Page_374)
  prefs: []
  type: TYPE_NORMAL
- en: text streams, [295](c11.xhtml#Page_295), [298](c11.xhtml#Page_298)
  prefs: []
  type: TYPE_NORMAL
- en: '`TextIOWrapper` object, [296](c11.xhtml#Page_296)'
  prefs: []
  type: TYPE_NORMAL
- en: '`textproof` project example'
  prefs: []
  type: TYPE_NORMAL
- en: API communication, [588](c20.xhtml#Page_588)–[590](c20.xhtml#Page_590)
  prefs: []
  type: TYPE_NORMAL
- en: capturing output, [600](c20.xhtml#Page_600)–[601](c20.xhtml#Page_601)
  prefs: []
  type: TYPE_NORMAL
- en: command-line interface, [606](c20.xhtml#Page_606)–[607](c20.xhtml#Page_607)
  prefs: []
  type: TYPE_NORMAL
- en: connecting API, [602](c20.xhtml#Page_602)–[604](c20.xhtml#Page_604)
  prefs: []
  type: TYPE_NORMAL
- en: exception tests, [585](c20.xhtml#Page_585)–[586](c20.xhtml#Page_586)
  prefs: []
  type: TYPE_NORMAL
- en: fixtures, [586](c20.xhtml#Page_586)–[588](c20.xhtml#Page_588), [595](c20.xhtml#Page_595)–[596](c20.xhtml#Page_596)
  prefs: []
  type: TYPE_NORMAL
- en: initial code, [582](c20.xhtml#Page_582)
  prefs: []
  type: TYPE_NORMAL
- en: input mocking, [597](c20.xhtml#Page_597)–[598](c20.xhtml#Page_598)
  prefs: []
  type: TYPE_NORMAL
- en: integration testing example, [605](c20.xhtml#Page_605)
  prefs: []
  type: TYPE_NORMAL
- en: marking, [598](c20.xhtml#Page_598)–[600](c20.xhtml#Page_600)
  prefs: []
  type: TYPE_NORMAL
- en: project files, [580](c20.xhtml#Page_580)–[582](c20.xhtml#Page_582)
  prefs: []
  type: TYPE_NORMAL
- en: pytest installation, [584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: skipped test examples, [591](c20.xhtml#Page_591)–[592](c20.xhtml#Page_592)
  prefs: []
  type: TYPE_NORMAL
- en: '`Typo` initializer, [592](c20.xhtml#Page_592)–[595](c20.xhtml#Page_595)'
  prefs: []
  type: TYPE_NORMAL
- en: unit test examples, [583](c20.xhtml#Page_583)–[584](c20.xhtml#Page_584)
  prefs: []
  type: TYPE_NORMAL
- en: '`_thread` module, [479](c17.xhtml#Page_479), [508](c17.xhtml#Page_508)'
  prefs: []
  type: TYPE_NORMAL
- en: thread of execution, [459](c16.xhtml#Page_459), [478](c17.xhtml#Page_478)
  prefs: []
  type: TYPE_NORMAL
- en: threading
  prefs: []
  type: TYPE_NORMAL
- en: about, [459](c16.xhtml#Page_459), [477](c17.xhtml#Page_477)
  prefs: []
  type: TYPE_NORMAL
- en: basic, [478](c17.xhtml#Page_478)–[481](c17.xhtml#Page_481)
  prefs: []
  type: TYPE_NORMAL
- en: daemonic threads, [782](c17.xhtml#Page_482)–[483](c17.xhtml#Page_483)
  prefs: []
  type: TYPE_NORMAL
- en: futures and executors, [483](c17.xhtml#Page_483)–[485](c17.xhtml#Page_485)
  prefs: []
  type: TYPE_NORMAL
- en: and locks, [492](c17.xhtml#Page_492)–[494](c17.xhtml#Page_494)
  prefs: []
  type: TYPE_NORMAL
- en: race conditions, [487](c17.xhtml#Page_487), [488](c17.xhtml#Page_488)–[492](c17.xhtml#Page_492)
  prefs: []
  type: TYPE_NORMAL
- en: safety, [486](c17.xhtml#Page_486)–[488](c17.xhtml#Page_488)
  prefs: []
  type: TYPE_NORMAL
- en: timeouts, [481](c17.xhtml#Page_481)–[482](c17.xhtml#Page_482), [486](c17.xhtml#Page_486)
  prefs: []
  type: TYPE_NORMAL
- en: '`threading` module, [478](c17.xhtml#Page_478)–[479](c17.xhtml#Page_479), [508](c17.xhtml#Page_508)'
  prefs: []
  type: TYPE_NORMAL
- en: '`ThreadPoolExecutor` object, [484](c17.xhtml#Page_484), [491](c17.xhtml#Page_491)–[492](c17.xhtml#Page_492)'
  prefs: []
  type: TYPE_NORMAL
- en: three-dot (...) prompt, [18](c02.xhtml#Page_18)
  prefs: []
  type: TYPE_NORMAL
- en: '`throw()` method, [266](c10.xhtml#Page_266)–[268](c10.xhtml#Page_268)'
  prefs: []
  type: TYPE_NORMAL
- en: Timecard packaging example, [514](c18.xhtml#Page_514), [520](c18.xhtml#Page_520)–[523](c18.xhtml#Page_523),
    [525](c18.xhtml#Page_525)–[526](c18.xhtml#Page_526), [532](c18.xhtml#Page_532)–[534](c18.xhtml#Page_534)
  prefs: []
  type: TYPE_NORMAL
- en: '`timeit` module, [612](c20.xhtml#Page_612)–[613](c20.xhtml#Page_613)'
  prefs: []
  type: TYPE_NORMAL
- en: '`timeout=` keyword, [482](c17.xhtml#Page_482), [486](c17.xhtml#Page_486)'
  prefs: []
  type: TYPE_NORMAL
- en: '`TimeoutError`, [486](c17.xhtml#Page_486)'
  prefs: []
  type: TYPE_NORMAL
- en: timeouts, [481](c17.xhtml#Page_481)–[482](c17.xhtml#Page_482), [486](c17.xhtml#Page_486),
    [506](c17.xhtml#Page_506)
  prefs: []
  type: TYPE_NORMAL
- en: Tkinter GUI framework, [621](c21.xhtml#Page_621)
  prefs: []
  type: TYPE_NORMAL
- en: '`to_bytes()` method, [349](c12.xhtml#Page_349)–[351](c12.xhtml#Page_351)'
  prefs: []
  type: TYPE_NORMAL
- en: TOML (TOM’s Obvious Minimal Language) file format, [334](c11.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: tool configurations, [530](c18.xhtml#Page_530)
  prefs: []
  type: TYPE_NORMAL
- en: TOOWTDI (There’s Only One Way To Do It), [7](c01.xhtml#Page_7), [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: top-level packages, [75](c04.xhtml#Page_75)
  prefs: []
  type: TYPE_NORMAL
- en: '`touch()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: '`tox` tool, [578](c20.xhtml#Page_578), [610](c20.xhtml#Page_610)–[11](c01.xhtml#Page_11)'
  prefs: []
  type: TYPE_NORMAL
- en: '`trace` module, [607](c20.xhtml#Page_607)'
  prefs: []
  type: TYPE_NORMAL
- en: tracebacks, [185](c08.xhtml#Page_185)–[186](c08.xhtml#Page_186), [186](c08.xhtml#Page_186)–[187](c08.xhtml#Page_187)
  prefs: []
  type: TYPE_NORMAL
- en: tracemalloc, [617](c20.xhtml#Page_617)
  prefs: []
  type: TYPE_NORMAL
- en: trailing commas, [126](c06.xhtml#Page_126), [217](c09.xhtml#Page_217), [226](c09.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: training (machine learning), [625](c21.xhtml#Page_625)
  prefs: []
  type: TYPE_NORMAL
- en: transpilers, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Trio library, [460](c16.xhtml#Page_460), [466](c16.xhtml#Page_466), [468](c16.xhtml#Page_468)
  prefs: []
  type: TYPE_NORMAL
- en: '`True` and `False` values, [51](c03.xhtml#Page_51), [237](c09.xhtml#Page_237)–[238](c09.xhtml#Page_238),
    [345](c12.xhtml#Page_345)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__truediv__()` method, [174](c07.xhtml#Page_174), [640](b01.xhtml#Page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: '`__trunc__()` method, [171](c07.xhtml#Page_171), [638](b01.xhtml#Page_638)'
  prefs: []
  type: TYPE_NORMAL
- en: '`truncate()` method, [305](c11.xhtml#Page_305)'
  prefs: []
  type: TYPE_NORMAL
- en: '`try` clauses, [64](c03.xhtml#Page_64)–[65](c03.xhtml#Page_65), [187](c08.xhtml#Page_187)–[188](c08.xhtml#Page_188),
    [189](c08.xhtml#Page_189)'
  prefs: []
  type: TYPE_NORMAL
- en: tuples
  prefs: []
  type: TYPE_NORMAL
- en: in collections, [216](c09.xhtml#Page_216)–[218](c09.xhtml#Page_218)
  prefs: []
  type: TYPE_NORMAL
- en: concatenating, [62](c03.xhtml#Page_62)
  prefs: []
  type: TYPE_NORMAL
- en: immutability, [106](c05.xhtml#Page_106)
  prefs: []
  type: TYPE_NORMAL
- en: syntax, [65](c03.xhtml#Page_65)–[66](c03.xhtml#Page_66)
  prefs: []
  type: TYPE_NORMAL
- en: unpacking, [123](c06.xhtml#Page_123)
  prefs: []
  type: TYPE_NORMAL
- en: Turing completeness, [4](c01.xhtml#Page_4)
  prefs: []
  type: TYPE_NORMAL
- en: twine, [532](c18.xhtml#Page_532)
  prefs: []
  type: TYPE_NORMAL
- en: Twisted library, [460](c16.xhtml#Page_460)
  prefs: []
  type: TYPE_NORMAL
- en: '*2to3* tool, [7](c01.xhtml#Page_7)'
  prefs: []
  type: TYPE_NORMAL
- en: two’s complement, [341](c12.xhtml#Page_341), [350](c12.xhtml#Page_350)–[351](c12.xhtml#Page_351)
  prefs: []
  type: TYPE_NORMAL
- en: type, [117](c05.xhtml#Page_117). *See also* data type
  prefs: []
  type: TYPE_NORMAL
- en: type aliases, [146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: '`type()` function, [99](c05.xhtml#Page_99)–[100](c05.xhtml#Page_100), [404](c14.xhtml#Page_404)–[405](c14.xhtml#Page_405)'
  prefs: []
  type: TYPE_NORMAL
- en: type hints, [145](c06.xhtml#Page_145)–[147](c06.xhtml#Page_147)
  prefs: []
  type: TYPE_NORMAL
- en: type (number) flag, [59](c03.xhtml#Page_59)
  prefs: []
  type: TYPE_NORMAL
- en: '`TypeError`, [65](c03.xhtml#Page_65), [134](c06.xhtml#Page_134), [152](c07.xhtml#Page_152),
    [198](c08.xhtml#Page_198), [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`typing` module, [145](c06.xhtml#Page_145)–[147](c06.xhtml#Page_147)'
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs: []
  type: TYPE_NORMAL
- en: unary operators, [46](c03.xhtml#Page_46), [47](c03.xhtml#Page_47), [174](c07.xhtml#Page_174)–[175](c07.xhtml#Page_175)
  prefs: []
  type: TYPE_NORMAL
- en: '`UnboundLocalError`, [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: unbuffered mode, [292](c11.xhtml#Page_292)
  prefs: []
  type: TYPE_NORMAL
- en: undefined behavior, [570](c19.xhtml#Page_570)–[571](c19.xhtml#Page_571)
  prefs: []
  type: TYPE_NORMAL
- en: underscore (`_`)
  prefs: []
  type: TYPE_NORMAL
- en: as name, [226](c09.xhtml#Page_226), [227](c09.xhtml#Page_227)
  prefs: []
  type: TYPE_NORMAL
- en: as wildcard, [68](c03.xhtml#Page_68)
  prefs: []
  type: TYPE_NORMAL
- en: '`UnicodeError`, [190](c08.xhtml#Page_190)'
  prefs: []
  type: TYPE_NORMAL
- en: '`UnicodeWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: union (`|`) set operator, [221](c09.xhtml#Page_221)
  prefs: []
  type: TYPE_NORMAL
- en: '`unittest` module, [578](c20.xhtml#Page_578)'
  prefs: []
  type: TYPE_NORMAL
- en: UNIX
  prefs: []
  type: TYPE_NORMAL
- en: file paths, [314](c11.xhtml#Page_314)–[315](c11.xhtml#Page_315), [319](c11.xhtml#Page_319)–[320](c11.xhtml#Page_320)
  prefs: []
  type: TYPE_NORMAL
- en: machine code assembly, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: Python installer, [15](c02.xhtml#Page_15)–[17](c02.xhtml#Page_17)
  prefs: []
  type: TYPE_NORMAL
- en: '`unlink()` (`path` module) method, [326](c11.xhtml#Page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: unordered collections, [220](c09.xhtml#Page_220)
  prefs: []
  type: TYPE_NORMAL
- en: '`unpack()` (`struct` module) method, [355](c12.xhtml#Page_355)–[356](c12.xhtml#Page_356)'
  prefs: []
  type: TYPE_NORMAL
- en: unpacking
  prefs: []
  type: TYPE_NORMAL
- en: from `bytes` objects to Python values, [355](c12.xhtml#Page_355)–[356](c12.xhtml#Page_356)
  prefs: []
  type: TYPE_NORMAL
- en: deques, [225](c09.xhtml#Page_225)–[226](c09.xhtml#Page_226)
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [227](c09.xhtml#Page_227)–[228](c09.xhtml#Page_228)
  prefs: []
  type: TYPE_NORMAL
- en: with starred expressions, [226](c09.xhtml#Page_226)–[227](c09.xhtml#Page_227)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [123](c06.xhtml#Page_123), [126](c06.xhtml#Page_126)
  prefs: []
  type: TYPE_NORMAL
- en: '`UnsupportedOperation`, [299](c11.xhtml#Page_299)'
  prefs: []
  type: TYPE_NORMAL
- en: uploads
  prefs: []
  type: TYPE_NORMAL
- en: to PyPI, [534](c18.xhtml#Page_534)
  prefs: []
  type: TYPE_NORMAL
- en: to Test PyPI, [532](c18.xhtml#Page_532)–[533](c18.xhtml#Page_533)
  prefs: []
  type: TYPE_NORMAL
- en: user groups, [633](c21.xhtml#Page_633)
  prefs: []
  type: TYPE_NORMAL
- en: '`UserWarning`, [545](c19.xhtml#Page_545)'
  prefs: []
  type: TYPE_NORMAL
- en: UTF-8 encoding, [25](c02.xhtml#Page_25)–[26](c02.xhtml#Page_26), [349](c12.xhtml#Page_349)
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs: []
  type: TYPE_NORMAL
- en: validation vs. assertion, [558](c19.xhtml#Page_558)–[559](c19.xhtml#Page_559)
  prefs: []
  type: TYPE_NORMAL
- en: '`ValueError`, [65](c03.xhtml#Page_65), [115](c05.xhtml#Page_115), [190](c08.xhtml#Page_190),
    [198](c08.xhtml#Page_198), [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: values
  prefs: []
  type: TYPE_NORMAL
- en: about, [96](c05.xhtml#Page_96), [99](c05.xhtml#Page_99), [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: coercion and conversion, [114](c05.xhtml#Page_114)–[115](c05.xhtml#Page_115)
  prefs: []
  type: TYPE_NORMAL
- en: garbage collection of, [100](c05.xhtml#Page_100)–[101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: and identity, [97](c05.xhtml#Page_97)–[98](c05.xhtml#Page_98)
  prefs: []
  type: TYPE_NORMAL
- en: local vs. global references, [101](c05.xhtml#Page_101)
  prefs: []
  type: TYPE_NORMAL
- en: mutating, [106](c05.xhtml#Page_106)–[107](c05.xhtml#Page_107)
  prefs: []
  type: TYPE_NORMAL
- en: '`values()` method, [228](c09.xhtml#Page_228)'
  prefs: []
  type: TYPE_NORMAL
- en: Van Rossum, Guido, [3](c01.xhtml#Page_3), [4](c01.xhtml#Page_4), [8](c01.xhtml#Page_8),
    [9](c01.xhtml#Page_9), [10](c01.xhtml#Page_10)
  prefs: []
  type: TYPE_NORMAL
- en: variable annotations, [145](c06.xhtml#Page_145)–[146](c06.xhtml#Page_146)
  prefs: []
  type: TYPE_NORMAL
- en: variables. *See also* names; values
  prefs: []
  type: TYPE_NORMAL
- en: about, [96](c05.xhtml#Page_96), [117](c05.xhtml#Page_117)
  prefs: []
  type: TYPE_NORMAL
- en: declaring, [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
  prefs: []
  type: TYPE_NORMAL
- en: in f-strings, [56](c03.xhtml#Page_56)–[57](c03.xhtml#Page_57)
  prefs: []
  type: TYPE_NORMAL
- en: scope, [100](c05.xhtml#Page_100), [102](c05.xhtml#Page_102)–[104](c05.xhtml#Page_104)
  prefs: []
  type: TYPE_NORMAL
- en: variadic arguments, [130](c06.xhtml#Page_130)–[132](c06.xhtml#Page_132)
  prefs: []
  type: TYPE_NORMAL
- en: '`vars()` function, [428](c15.xhtml#Page_428)–[429](c15.xhtml#Page_429)'
  prefs: []
  type: TYPE_NORMAL
- en: Vaughan, Lee, [625](c21.xhtml#Page_625), [627](c21.xhtml#Page_627)
  prefs: []
  type: TYPE_NORMAL
- en: '*venv* command or directory, [19](c02.xhtml#Page_19)'
  prefs: []
  type: TYPE_NORMAL
- en: version control systems (VCS), [19](c02.xhtml#Page_19), [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24),
    [74](c04.xhtml#Page_74)
  prefs: []
  type: TYPE_NORMAL
- en: versions, [521](c18.xhtml#Page_521), [525](c18.xhtml#Page_525)
  prefs: []
  type: TYPE_NORMAL
- en: Viafore, Patrick, [407](c14.xhtml#Page_407)
  prefs: []
  type: TYPE_NORMAL
- en: Vim, [34](c02.xhtml#Page_34)–[35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: virtual environments
  prefs: []
  type: TYPE_NORMAL
- en: activating, [20](c02.xhtml#Page_20)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [19](c02.xhtml#Page_19)
  prefs: []
  type: TYPE_NORMAL
- en: leaving, [20](c02.xhtml#Page_20)–[21](c02.xhtml#Page_21)
  prefs: []
  type: TYPE_NORMAL
- en: module search paths in, [89](c04.xhtml#Page_89)–[90](c04.xhtml#Page_90)
  prefs: []
  type: TYPE_NORMAL
- en: using without activating, [26](c02.xhtml#Page_26)
  prefs: []
  type: TYPE_NORMAL
- en: and VCS repositories, [23](c02.xhtml#Page_23)–[24](c02.xhtml#Page_24)
  prefs: []
  type: TYPE_NORMAL
- en: virtual machine design patterns, [373](c12.xhtml#Page_373)
  prefs: []
  type: TYPE_NORMAL
- en: virtual machines, [6](c01.xhtml#Page_6)
  prefs: []
  type: TYPE_NORMAL
- en: virtual subclasses, [418](c14.xhtml#Page_418)–[422](c14.xhtml#Page_422)
  prefs: []
  type: TYPE_NORMAL
- en: '`virtualenv` command, [19](c02.xhtml#Page_19)'
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio Code, [35](c02.xhtml#Page_35)
  prefs: []
  type: TYPE_NORMAL
- en: VOC transpiler, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: '`void* (P)` data type, [355](c12.xhtml#Page_355)'
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs: []
  type: TYPE_NORMAL
- en: walrus (`:=`) operator, [52](c03.xhtml#Page_52)–[53](c03.xhtml#Page_53), [369](c12.xhtml#Page_369)
  prefs: []
  type: TYPE_NORMAL
- en: Ward framework, [579](c20.xhtml#Page_579)
  prefs: []
  type: TYPE_NORMAL
- en: warning categories, [545](c19.xhtml#Page_545)
  prefs: []
  type: TYPE_NORMAL
- en: warning filters, [546](c19.xhtml#Page_546)–[548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: warnings
  prefs: []
  type: TYPE_NORMAL
- en: converting to exceptions, [548](c19.xhtml#Page_548)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [544](c19.xhtml#Page_544)–[546](c19.xhtml#Page_546)
  prefs: []
  type: TYPE_NORMAL
- en: weak references, [106](c05.xhtml#Page_106), [117](c05.xhtml#Page_117), [446](c15.xhtml#Page_446)
  prefs: []
  type: TYPE_NORMAL
- en: '`__weakref__` attribute, [446](c15.xhtml#Page_446), [646](b01.xhtml#Page_646)'
  prefs: []
  type: TYPE_NORMAL
- en: web development, [622](c21.xhtml#Page_622)–[623](c21.xhtml#Page_623)
  prefs: []
  type: TYPE_NORMAL
- en: wheel artifacts (*.whl*), [516](c18.xhtml#Page_516), [531](c18.xhtml#Page_531)
  prefs: []
  type: TYPE_NORMAL
- en: '`whence` keyword, [302](c11.xhtml#Page_302), [371](c12.xhtml#Page_371)'
  prefs: []
  type: TYPE_NORMAL
- en: '`while` loops, [66](c03.xhtml#Page_66), [214](c09.xhtml#Page_214)–[215](c09.xhtml#Page_215),
    [245](c09.xhtml#Page_245)–[246](c09.xhtml#Page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: whitespace, [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
  prefs: []
  type: TYPE_NORMAL
- en: wildcards, [68](c03.xhtml#Page_68), [229](c09.xhtml#Page_229)–[230](c09.xhtml#Page_230),
    [527](c18.xhtml#Page_527)
  prefs: []
  type: TYPE_NORMAL
- en: Windows
  prefs: []
  type: TYPE_NORMAL
- en: machine code assembly, [5](c01.xhtml#Page_5)
  prefs: []
  type: TYPE_NORMAL
- en: paths, [318](c11.xhtml#Page_318)–[319](c11.xhtml#Page_319)
  prefs: []
  type: TYPE_NORMAL
- en: Python installer, [14](c02.xhtml#Page_14)
  prefs: []
  type: TYPE_NORMAL
- en: '`with` statement, [297](c11.xhtml#Page_297), [307](c11.xhtml#Page_307)–[309](c11.xhtml#Page_309)'
  prefs: []
  type: TYPE_NORMAL
- en: '`with_name()` (`path` module) method, [327](c11.xhtml#Page_327)'
  prefs: []
  type: TYPE_NORMAL
- en: word size, [355](c12.xhtml#Page_355)
  prefs: []
  type: TYPE_NORMAL
- en: worker threads
  prefs: []
  type: TYPE_NORMAL
- en: creating, [491](c17.xhtml#Page_491)–[492](c17.xhtml#Page_492)
  prefs: []
  type: TYPE_NORMAL
- en: and queues, [495](c17.xhtml#Page_495)–[496](c17.xhtml#Page_496)
  prefs: []
  type: TYPE_NORMAL
- en: workshops, [634](c21.xhtml#Page_634)
  prefs: []
  type: TYPE_NORMAL
- en: wrapper modules, [629](c21.xhtml#Page_629)
  prefs: []
  type: TYPE_NORMAL
- en: wrappers, [144](c06.xhtml#Page_144)
  prefs: []
  type: TYPE_NORMAL
- en: '`wraps` (`functools` module) function, [144](c06.xhtml#Page_144)'
  prefs: []
  type: TYPE_NORMAL
- en: '`writable()` method, [299](c11.xhtml#Page_299)'
  prefs: []
  type: TYPE_NORMAL
- en: '`write()` method, [304](c11.xhtml#Page_304)–[305](c11.xhtml#Page_305), [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '`writelines()` method, [305](c11.xhtml#Page_305)–[306](c11.xhtml#Page_306),
    [307](c11.xhtml#Page_307)'
  prefs: []
  type: TYPE_NORMAL
- en: '`write_text()` (`path` module) method, [325](c11.xhtml#Page_325)'
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs: []
  type: TYPE_NORMAL
- en: XML file format, [333](c11.xhtml#Page_333)
  prefs: []
  type: TYPE_NORMAL
- en: '`__xor__()` method, [174](c07.xhtml#Page_174), [345](c12.xhtml#Page_345), [642](b01.xhtml#Page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Y**'
  prefs: []
  type: TYPE_NORMAL
- en: YAML file format, [333](c11.xhtml#Page_333)–[334](c11.xhtml#Page_334)
  prefs: []
  type: TYPE_NORMAL
- en: '`yield from` statement, [268](c10.xhtml#Page_268)–[270](c10.xhtml#Page_270)'
  prefs: []
  type: TYPE_NORMAL
- en: '`yield` statement, [259](c10.xhtml#Page_259)–[260](c10.xhtml#Page_260), [283](c10.xhtml#Page_283),
    [285](c10.xhtml#Page_285)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Z**'
  prefs: []
  type: TYPE_NORMAL
- en: Zen of Python, The, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9), [10](c01.xhtml#Page_10),
    [279](c10.xhtml#Page_279)–[280](c10.xhtml#Page_280)
  prefs: []
  type: TYPE_NORMAL
- en: '`ZeroDivisionError`, [198](c08.xhtml#Page_198), [210](c08.xhtml#Page_210)'
  prefs: []
  type: TYPE_NORMAL
- en: '`zip` iterable, [251](c09.xhtml#Page_251)'
  prefs: []
  type: TYPE_NORMAL
