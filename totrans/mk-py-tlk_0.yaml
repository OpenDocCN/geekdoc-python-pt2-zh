- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: Banks are essentially technology firms.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 银行本质上是科技公司。
- en: ''
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Hugo Banziger, former chief risk officer at Deutsche Bank
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: ——Hugo Banziger，前德意志银行首席风险官
- en: '![](Images/chapterart.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: Python is currently the world’s most popular coding language, having overtaken
    more long established languages like Java and C. Once you start to code in Python,
    it’s easy to see why. The two main advantages of Python are its simplicity and
    openness. Python code is relatively close to plain English, so with only a little
    experience, you can often guess what a script is trying to accomplish.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Python目前是全球最受欢迎的编程语言，超越了Java和C等更为传统的编程语言。一旦你开始使用Python编程，就会很容易理解为什么它如此受欢迎。Python的两个主要优势是简洁性和开放性。Python代码相对接近普通英语，因此即使经验不多，你通常也能猜出一个脚本想要实现的功能。
- en: Python is open source, meaning not only that the software is free to use for
    everyone but also that other users can create and alter libraries. In fact, Python
    has a vast ecosystem from which you can get resources and help from members in
    the community. Python programmers can share their code with one another, so instead
    of building everything from scratch, you can import modules designed by others,
    as well as share your modules with others in the Python community.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Python是开源的，这不仅意味着软件对每个人免费使用，还意味着其他用户可以创建和修改库。实际上，Python拥有庞大的生态系统，用户可以从社区成员那里获得资源和帮助。Python程序员可以相互分享代码，因此，你不必从头开始构建一切，可以导入他人设计的模块，并将自己的模块分享给Python社区的其他成员。
- en: 'When people heard that I was writing a Python book on speech recognition and
    text to speech, their reaction was generally the same: “I thought you were a *finance*
    professor.” My typical answer is the Hugo Banziger quote that opens this chapter,
    made shortly after the 2008 financial crisis. Nowadays, you can replace *banks*
    with corporations in any other industry—car manufacturers, retailers, anything
    really—and the quote still rings true. Technology is in every aspect of our lives
    these days. The future is here and now.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们听说我正在写一本关于语音识别和语音合成的Python书籍时，他们的反应通常是一样的：“我以为你是*金融*教授。”我的典型回答是本章开头引用的Hugo
    Banziger名言，这是在2008年金融危机后不久说的。如今，你可以将*银行*替换成任何行业的公司——汽车制造商、零售商，几乎任何行业——这句话依然适用。如今，技术渗透到了我们生活的方方面面。未来已经到来，且就在眼前。
- en: Python has been the world’s most popular coding language since 2018\. Long before
    that, Python was the leading programming language in the finance world, with applications
    in financial services, portfolio management, algorithmic trading, cryptocurrency,
    and so on.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自2018年以来，Python一直是全球最受欢迎的编程语言。在此之前，Python在金融领域一直是领先的编程语言，广泛应用于金融服务、投资组合管理、算法交易、加密货币等方面。
- en: When talking to potential employers of my Master of Science in Finance (MSF)
    students, I was told that they have people who know finance, but not coding—and
    people who know coding, but nothing about finance. They wanted to hire people
    who understood both. As a result, we started to incorporate Python into the MSF
    curriculum.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在与我金融学硕士（MSF）学生的潜在雇主交流时，我被告知他们有懂金融的人，但不懂编程——也有懂编程的人，但对金融一无所知。他们希望招聘那些既懂金融又懂编程的人。因此，我们开始将Python纳入MSF课程。
- en: The reactions from the finance students were mixed. Many students found Python
    user-friendly and versatile, while others wondered why they needed to bother learning
    Python when they could do everything in Microsoft Excel. So I started to show
    them cool skills in Python that are impossible in Excel, such as obtaining real-time
    stock prices via voice commands, creating a talking graphical US stock market
    watch, and so on. I wanted to show that Python can accomplish more than Excel,
    that the barrier to entry is not very high, and most important, that it’s fun!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 金融学学生的反应各不相同。许多学生发现Python既易用又多功能，而另一些学生则不明白，既然可以在微软Excel中完成所有工作，为什么还需要学习Python。所以我开始向他们展示Python中一些在Excel中无法实现的酷技能，比如通过语音命令获取实时股票价格、创建一个会说话的美国股市图表等。我想向他们展示，Python可以做更多Excel做不到的事情，而且入门门槛不高，最重要的是，它很有趣！
- en: In this book, I focus on speech recognition and text-to-speech functionality
    in fun and genuinely useful applications, such as a voice translator, a voice-controlled
    online radio, a virtual personal assistant, voice-controlled graphical games,
    and so on. My aim is to teach Python skills that are applicable and adaptable
    in real life, while keeping the skeptical students of Python interested in what
    they’re doing.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我专注于语音识别和文本到语音的功能，这些功能在有趣且真正有用的应用中得到了实现，比如语音翻译器、语音控制的在线广播、虚拟个人助手、语音控制的图形游戏等。我的目标是教授可以在现实生活中应用和适应的Python技能，同时让对Python持怀疑态度的学生对他们所做的事情保持兴趣。
- en: About This Book
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书简介
- en: This book both *is* and *isn’t* an introductory book on Python. While it’s not
    intended as a full tutorial in Python basics, it is written simply enough that
    a total beginner can follow along. You’ll learn how to install Python on your
    computer and write your very first script. You’ll also learn the basic rules of
    Python, how functions and modules work, and various data types every Python user
    needs to know. With this, you’ll be able to accomplish most simple tasks in Python.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本书既是*也是*不是一本Python入门书。虽然本书并不打算作为Python基础的完整教程，但它足够简洁，完全的初学者也能跟得上。你将学习如何在你的计算机上安装Python，并编写你的第一个脚本。你还将学习Python的基本规则，了解函数和模块的工作原理，以及每个Python用户都需要知道的各种数据类型。通过这些，你将能够完成大多数简单的Python任务。
- en: At the same time, this book *isn’t* an introductory book in Python. I’ll provide
    a Python refresher that will prepare you for later chapters, but it isn’t a comprehensive
    introduction. Several wonderful books cover all the basics of Python. One example
    is *Python Crash Course* by Eric Matthes (No Starch Press, 2019).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，本书*不是*一本Python入门书。我会提供一个Python回顾，帮助你为后续章节做准备，但它不是一本全面的入门教程。有许多精彩的书籍涵盖了Python的所有基础知识。其中一个例子是Eric
    Matthes的《*Python Crash Course*》（No Starch Press, 2019）。
- en: Beyond the refresher, the purpose of this book is to improve your skills and
    build real working applications you can use in your daily life. This book also
    eases you into more advanced topics, such as making your own Python modules and
    packages. In Chapter 3, you’ll learn how to use a function in a self-made module
    to contain all speech recognition functionality and related code so that you don’t
    have to repeat the code every time you convert speech to text. In Chapter 5, you’ll
    create a package from which you can import the function in the module to convert
    speech to text in all chapters that need this feature (which is pretty much all
    the remaining chapters in the book). Along the way, you’ll learn how Python modules
    and packages work.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 除了回顾基础知识，本书的目的是提高你的技能，构建你可以在日常生活中使用的真实工作应用程序。本书还会让你逐渐过渡到更高级的主题，例如如何创建你自己的Python模块和包。在第三章，你将学习如何使用自定义模块中的函数来包含所有语音识别功能和相关代码，这样你就不需要每次将语音转换为文本时都重复编写代码。在第五章，你将创建一个包，你可以从中导入模块中的函数，在所有需要此功能的章节中将语音转换为文本（这几乎是本书剩余所有章节的内容）。在此过程中，你将学习Python模块和包的工作原理。
- en: The end-of-chapter exercises are a great tool for practicing concepts and checking
    that you really understand them. You’ll find the answers at the end of the book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每章末的练习是一个很好的工具，可以帮助你练习概念并检查你是否真正理解它们。你将在书的最后找到答案。
- en: The code in this book is all cross-platform, so it should work in Windows, Mac,
    or Linux. I’ll address the differences in the three operating systems whenever
    there are any.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的代码是跨平台的，因此它应该可以在Windows、Mac或Linux系统中运行。每当有差异时，我会讨论三种操作系统之间的不同之处。
- en: What’s in This Book?
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容
- en: This book is divided into four parts. Part I discusses how to install Python,
    as well as the basic Python rules and skills you’ll need in later chapters. Part
    II introduces you to speech recognition and text-to-speech functionality, including
    how to install and fine-tune the required modules. You’ll also use the speech
    recognition and text-to-speech functionalities to create a virtual personal assistant.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为四个部分。第一部分讨论如何安装Python，以及你在后续章节中需要掌握的基本Python规则和技能。第二部分介绍语音识别和文本到语音的功能，包括如何安装和微调所需的模块。你还将利用语音识别和文本到语音的功能创建一个虚拟个人助手。
- en: 'Part III covers interactive games. You’ll learn to create graphical games and
    add text-to-speech and speech recognition features to make them talk and take
    voice commands. In Part IV, we build some applications to follow the financial
    markets, and we’ll see how to make Python talk and listen in major world languages.
    The last chapter of the book builds our ultimate virtual assistant by adding the
    interactive games and the voice translator to it. Here’s an overview of the book:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分涉及互动游戏。你将学习如何创建图形游戏，并为其添加语音合成和语音识别功能，使其能够说话并接受语音指令。在第四部分，我们将构建一些应用程序来跟踪金融市场，并了解如何让Python在主要世界语言中进行对话和聆听。本书的最后一章通过将互动游戏和语音翻译功能整合，构建我们的终极虚拟助手。以下是本书的概览：
- en: '**Part I: Getting Started**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一部分：入门**'
- en: '**Chapter 1: Setting Up Python, Anaconda, and Spyder**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**第一章：设置Python、Anaconda和Spyder**'
- en: You’ll install the Python software required for the book and start running Python
    scripts, even if you know nothing about coding. We’ll also talk about basic operations
    in Python.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你将安装本书所需的Python软件，并开始运行Python脚本，即使你对编程一无所知。我们还将讨论Python中的基本操作。
- en: '**Chapter 2: Python Refresher**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二章：Python基础回顾**'
- en: You’ll learn how to use the built-in Python functions and how to import modules
    in the Python Standard Library. You’ll then learn how functions and modules work
    and how to create your own. I’ll discuss ways of installing these modules on your
    computer. Finally, you’ll learn about virtual environments, their uses, and how
    to create and activate them.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你将学习如何使用Python内置函数以及如何导入Python标准库中的模块。然后，你将了解函数和模块是如何工作的，并学习如何创建你自己的函数和模块。我将讨论如何在你的计算机上安装这些模块。最后，你将了解虚拟环境，它们的用途以及如何创建和激活它们。
- en: Python uses strings, lists, dictionaries, and tuples as collections of elements
    to accomplish certain tasks. In this chapter, you’ll learn about these four types
    of collections and see examples of their uses.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Python使用字符串、列表、字典和元组作为元素集合来完成某些任务。在这一章中，你将了解这四种集合类型，并看到它们的使用示例。
- en: '**Part II: Learning to Talk**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**第二部分：学习说话**'
- en: '**Chapter 3: Speech Recognition**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**第三章：语音识别**'
- en: You’ll install modules related to speech recognition in Python, then create
    a script to have Python recognize your speech and print it out. You’ll use voice
    control to complete several tasks, such as taking voice dictation, opening web
    browsers, opening files, and playing music on your computer. To save space in
    your scripts, you’ll learn how to put all code related to speech recognition into
    a custom local module so that the final script is concise, short, and clean.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你将安装与语音识别相关的Python模块，然后创建一个脚本，让Python识别你的语音并将其打印出来。你将使用语音控制来完成几项任务，比如语音听写、打开网页浏览器、打开文件以及在计算机上播放音乐。为了节省脚本空间，你将学习如何将所有与语音识别相关的代码放入自定义的本地模块中，这样最终的脚本既简洁又清晰。
- en: '**Chapter 4: Make Python Talk**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**第四章：让Python说话**'
- en: Here, you’ll learn how to make Python talk back to you in a human voice. You’ll
    install the text-to-speech module and teach Python to speak aloud whatever you
    enter into Spyder. We’ll also add the speech recognition feature and get Python
    to repeat whatever you say. We’ll store all code related to text-to-speech functionality
    in another custom module.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，你将学习如何让Python用人的声音回应你。你将安装语音合成模块，并教会Python朗读你在Spyder中输入的任何内容。我们还将添加语音识别功能，让Python重复你所说的内容。所有与语音合成功能相关的代码都将存储在另一个自定义模块中。
- en: '**Chapter 5: Speaking Applications**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**第五章：语音应用**'
- en: You’ll put the speech recognition and text-to-speech functionality from Chapters
    3 and 4 to use in a couple of applications. First, you’ll parse text to extract
    news summaries from National Public Radio (NPR) and have Python read them out
    to you. You’ll also build a script to extract information from Wikipedia based
    on your voice inquiries and speak the answers. Finally, you’ll learn how to traverse
    files in a folder with your voice, with the aim of building your very own Alexa.
    You’ll be able to say, “Python, play Selena Gomez,” and a song by Selena Gomez
    that’s saved on your computer will play.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你将把第三章和第四章中的语音识别和语音合成功能应用到几个实际项目中。首先，你将解析文本，从国家公共广播电台（NPR）提取新闻摘要，并让Python朗读出来。你还将构建一个脚本，根据你的语音查询从维基百科提取信息并读出答案。最后，你将学习如何通过语音遍历文件夹中的文件，目标是打造你自己的Alexa。你可以说：“Python，播放Selena
    Gomez的歌曲”，然后一首保存在你计算机上的Selena Gomez的歌曲就会播放。
- en: '**Chapter 6: Web Scraping Podcasts, Radios, and Videos**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**第六章：网页抓取播客、广播和视频**'
- en: You’ll learn the basics of web scraping. I’ll cover how HyperText Markup Language
    (HTML) works to construct web pages. You’ll parse HTML files and extract information.
    Then you’ll use these skills to voice-activate podcasts, live radio stations,
    and videos on various websites.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你将学习网页抓取的基础知识。我将介绍超文本标记语言（HTML）如何构建网页。你将解析 HTML 文件并提取信息。然后，你将利用这些技能通过语音激活播客、直播电台和各种网站上的视频。
- en: '**Chapter 7: Building a Virtual Personal Assistant**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**第7章：构建虚拟个人助理**'
- en: You’ll create your own virtual personal assistant (VPA), similar to Amazon’s
    Alexa. Whenever you need assistance, you can say “Hello, Python” to wake up your
    VPA; you’ll also use voice commands to put it in standby mode. The VPA can act
    as a timer and an alarm clock, tell jokes, and send email 100 percent hands-free.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你将创建自己的虚拟个人助理（VPA），类似于亚马逊的 Alexa。每当你需要帮助时，只需说“Hello, Python”唤醒你的 VPA；你还可以使用语音命令将其置于待机模式。VPA
    可以作为计时器和闹钟，讲笑话，并且完全免提地发送电子邮件。
- en: '**Chapter 8: Know-It-All VPA**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**第8章：全能 VPA**'
- en: Here you’ll add know-it-all functionality to your VPA. Specifically, you’ll
    tap into the vast knowledge base in the computational engine WolframAlpha and
    use Wikipedia as a backup if WolframAlpha can’t answer your question. Your know-it-all
    VPA is capable of answering almost any question for you.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你将为你的虚拟个人助理（VPA）添加全能功能。具体来说，你将利用计算引擎 WolframAlpha 的广泛知识库，如果 WolframAlpha
    无法回答你的问题，还会使用 Wikipedia 作为备用。你的全能 VPA 能够为你回答几乎任何问题。
- en: '**Part III: Interactive Games**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**第三部分：互动游戏**'
- en: '**Chapter 9: Graphics and Animation with the Turtle Module**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**第9章：使用 Turtle 模块进行图形与动画**'
- en: Our goal in Part III is to build voice-controlled graphical games such as tic-tac-toe,
    Connect Four, and guess-the-word. You’ll do all these in the *turtle* module.
    In this chapter, you’ll learn the basic *turtle* commands that will let you set
    up a turtle screen, draw shapes, and create animations.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在第三部分的目标是构建语音控制的图形化游戏，如井字游戏、四子棋和猜词游戏。你将全部在 *turtle* 模块中完成。在这一章中，你将学习基本的 *turtle*
    命令，这些命令可以让你设置海龟屏幕、绘制形状并创建动画。
- en: '**Chapter 10: Tic-Tac-Toe**'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章：井字游戏**'
- en: You’ll build a voice-controlled tic-tac-toe game to put all the new skills you’ve
    learned so far into practice. You’ll draw a game board, check for valid moves,
    and detect if a player has won. You’ll then add the speech recognition and text-to-speech
    features and set up the game so you play against your own computer.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你将构建一个语音控制的井字游戏，将迄今为止学到的所有新技能付诸实践。你将绘制游戏棋盘，检查有效的移动，并检测玩家是否获胜。然后，你将添加语音识别和文本转语音功能，并设置游戏，使你可以与自己的计算机对战。
- en: '**Chapter 11: Connect Four**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**第11章：四子棋**'
- en: You’ll next build a voice-controlled Connect Four game. You’ll draw the board,
    animate the effect of a disc falling from the top of a column to the lowest available
    cell, and use Python logic to enforce a new set of game rules. Then you’ll add
    speech functionality to the game.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将构建一个语音控制的四子棋游戏。你将绘制棋盘，动画化棋子从列的顶部落入最低可用单元格的效果，并使用 Python 逻辑强制执行一套新的游戏规则。然后，你将为游戏添加语音功能。
- en: '**Chapter 12: Guess-the-Word Game**'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**第12章：猜词游戏**'
- en: You’ll build a voice-controlled, graphical guess-the-word game that is an adaptation
    of the popular hangman game. This is an interesting challenge because when playing
    guess-the-word, players often exchange information verbally at a fast pace, so
    you’ll need to fine-tune the script’s listening abilities.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 你将构建一个语音控制的图形化猜词游戏，这个游戏是流行的猜单词游戏的改编版。这是一个有趣的挑战，因为在玩猜词游戏时，玩家通常会快速地口头交换信息，因此你需要微调脚本的听力功能。
- en: '**Chapter 13: Smart Games: Adding Intelligence**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**第13章：智能游戏：加入智能**'
- en: In the one-player version of tic-tac-toe or Connect Four, the computer always
    randomly selects a move. In this chapter, we’ll build smart games by using two
    techniques that will get you to think about how to break down and solve problems
    in programming. The first is the think-three-steps-ahead approach, which has the
    computer following the path that most likely leads to a victory after three moves.
    The second method uses machine learning. You’ll simulate a million games in which
    both players select random moves. With this data, the computer will learn at each
    move and select the one most likely to lead to a winning outcome.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在井字棋或四连棋的一人模式中，计算机总是随机选择一个动作。在这一章中，我们将使用两种技术来构建智能游戏，让你思考如何在编程中分解和解决问题。第一种方法是“提前三步思考”的方法，计算机会按照最有可能在三步后获得胜利的路径走。第二种方法则是使用机器学习。你将模拟一百万场游戏，其中两位玩家都随机选择动作。通过这些数据，计算机将逐步学习并选择最有可能导致胜利的动作。
- en: '**Part IV: Going Further**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**第四部分：深入探索**'
- en: '**Chapter 14: Financial Applications**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**第14章：金融应用**'
- en: 'These programming skills and speech recognition and text-to-speech techniques
    can be applied to any aspect of your life. Here, I’ll show you how to adapt your
    skills to monitoring the financial markets. You’ll then be able to generalize
    these techniques and apply them to your own area of interest, whatever that may
    be. You’ll build three projects: an app that tells you the up-to-date stock price
    of any publicly traded company; a script that builds visualizations of stock prices;
    and an app that uses recent daily stock prices to calculate returns, run regressions,
    and perform detailed analyses.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些编程技能、语音识别和文本转语音技术可以应用到你生活中的任何方面。在这里，我将向你展示如何将这些技能应用于监控金融市场。然后，你就可以将这些技术推广到你感兴趣的任何领域。你将构建三个项目：一个可以告诉你任何上市公司最新股价的应用；一个构建股价可视化图表的脚本；以及一个使用最近每日股价计算回报、进行回归分析和详细分析的应用。
- en: '**Chapter 15: Stock Market Watch**'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**第15章：股市观察**'
- en: You’ll create a graphical, speaking app that watches the US stock market live
    and updates you aloud whenever a chosen stock exceeds certain preset thresholds.
    To build the necessary skills, you’ll first create a graphical Bitcoin watch by
    using *tkinter* to display live price information.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你将创建一个图形化、语音化的应用，实时监控美国股市，并在所选股票超过某个预设阈值时，用语音更新你。为了掌握所需的技能，你将首先使用*tkinter*创建一个图形化的比特币监控应用，以显示实时价格信息。
- en: '**Chapter 16: Use World Languages**'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**第16章：使用世界语言**'
- en: So far, we’ve taught Python how to speak and listen in English. But Python can
    understand many other world languages. In this chapter, you’ll first teach Python
    to talk in several other languages with the modules you’ve been using. I’ll then
    introduce a useful module called *translate*, which can translate one language
    to another. You’ll use it to build a translator that changes whatever you speak
    into another language of your choice.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经教会了Python如何用英语说话和听话。但Python还能理解许多其他世界语言。在这一章中，你将首先教Python用你已经在使用的模块说几种其他语言。然后，我将介绍一个叫做*translate*的有用模块，它可以将一种语言翻译成另一种语言。你将用它来构建一个翻译器，把你说的话翻译成你选择的其他语言。
- en: '**Chapter 17: Ultimate Virtual Personal Assistant**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**第17章：终极虚拟个人助手**'
- en: You’ll load up your virtual personal assistant with the interesting projects
    in this book, like voice-controlled games, translators, music players, and so
    on. You’ll first add a chatting functionality to the VPA so you can carry out
    a daily conversation with the script. The whole idea of a VPA is its convenience,
    so we’ll adjust these projects so that all added functionalities are 100 percent
    hands-free.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为你的虚拟个人助手加载本书中的有趣项目，如语音控制游戏、翻译器、音乐播放器等。你将首先为VPA添加一个聊天功能，以便与脚本进行日常对话。虚拟个人助手的核心理念是其便捷性，因此我们将调整这些项目，使所有新增功能都能实现百分百的免提操作。
- en: '**Appendix A: Install Modules to Play Audio Files**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**附录A：安装播放音频文件的模块**'
- en: Since the focus of the book is on making Python talk and listen, playing audio
    files is important. This appendix presents a few modules you can use to play audio
    files, along with their advantages and disadvantages.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书的重点是让Python能够听与说，因此播放音频文件非常重要。本附录介绍了几个可以用来播放音频文件的模块，以及它们的优缺点。
- en: '**Appendix B: Answers to End-of-Chapter Exercises**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**附录B：章节末练习答案**'
- en: This appendix provides suggested answers to all the exercises at the end of
    the chapters. You can use these answers to check your own and for help if you
    get stuck on any of the questions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录提供了章节末所有习题的建议答案。你可以使用这些答案来检查自己的答案，并在遇到困难时寻求帮助。
