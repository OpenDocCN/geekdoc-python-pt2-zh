["```py\nNew England   $882,703\nMid-Atlantic  $532,648\nMidwest       $714,406\n```", "```py\n> **import matplotlib**\n```", "```py\n$ **python -m pip install -U matplotlib**\n```", "```py\nfrom matplotlib import pyplot as plt\n\ndays = ['2021-01-04', '2021-01-05', '2021-01-06', '2021-01-07', '2021-01-08']\nprices = [729.77, 735.11, 755.98, 816.04, 880.02]\n\nplt.plot(days,prices)\nplt.title('NASDAQ: TSLA')\nplt.xlabel('Date')\nplt.ylabel('USD')\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\n\nregions = ['New England', 'Mid-Atlantic', 'Midwest']\nsales = [882703, 532648, 714406]\n\nplt.pie(sales, labels=regions, autopct='%1.1f%%')\nplt.title('Sales per Region')\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nregions = ['New England', 'Mid-Atlantic', 'Midwest']\nsales = [882703, 532648, 714406]\n\nplt.bar(regions, sales)\nplt.xlabel(\"Regions\")\nplt.ylabel(\"Sales\")\nplt.title(\"Annual Sales Aggregated on a Regional Basis\")\n\nplt.show()\n```", "```py\n# importing modules\nimport numpy as np\nfrom matplotlib import pyplot as plt\nimport matplotlib.ticker as ticker\n\n# data to plot\n❶ salaries = [1215, 1221, 1263, 1267, 1271, 1274, 1275, 1318, 1320, 1324, 1324,\n            1326, 1337, 1346, 1354, 1355, 1364, 1367, 1372, 1375, 1376, 1378,\n            1378, 1410, 1415, 1415, 1418, 1420, 1422, 1426, 1430, 1434, 1437,\n            1451, 1454, 1467, 1470, 1473, 1477, 1479, 1480, 1514, 1516, 1522,\n            1529, 1544, 1547, 1554, 1562, 1584, 1595, 1616, 1626, 1717]\n\n# preparing a histogram\n❷ fig, ax = plt.subplots()\n❸ fig.set_size_inches(5.6, 4.2)\n❹ ax.hist(salaries, bins=np.arange(1100, 1900, 50), edgecolor='black',\n        linewidth=1.2)\n❺ formatter = ticker.FormatStrFormatter('$%1.0f')\n❻ ax.xaxis.set_major_formatter(formatter)\n❼ plt.title('Monthly Salaries in the Sales Department')\nplt.xlabel('Salary (bin size = $50)')\nplt.ylabel('Frequency')\n# showing the histogram\nplt.show()\n```", "```py\nimport numpy as np\ncount, labels = np.histogram(salaries, bins=np.arange(1100, 1900, 50))\n```", "```py\n[0,  0,  2,  5,  7,  9, 10,  8,  6,  4,  2,  0,  1,  0,  0]\n```", "```py\n[1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450, 1500, 1550, 1600, 1650,\n 1700, 1750, 1800, 1850]\n```", "```py\nlabels = ['$'+str(labels[i])+'-'+str(labels[i+1]) for i, _ in enumerate(labels[1:])]\n```", "```py\n['$1100-1150', '$1150-1200', '$1200-1250', '$1250-1300', '$1300-1350',\n '$1350-1400', '$1400-1450', '$1450-1500', '$1500-1550', '$1550-1600',\n '$1600-1650', '$1650-1700', '$1700-1750', '$1750-1800', '$1800-1850']\n```", "```py\nnon_zero_pos = [i for i, x in enumerate(count) if x != 0]\n```", "```py\nlabels = [e for i, e in enumerate(labels) if i in non_zero_pos]\ncount = [e for i, e in enumerate(count) if i in non_zero_pos]\n```", "```py\nfrom matplotlib import pyplot as plt\nplt.pie(count, labels=labels, autopct='%1.1f%%')\nplt.title('Monthly Salaries in the Sales Department')\nplt.show()\n```", "```py\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# preparing the DataFrame\n❶ us_cities = pd.read_csv(\"https://raw.githubusercontent.com/plotly/datasets/\n                               master/us-cities-top-1k.csv\")\n❷ top_us_cities = us_cities[us_cities.Population.ge(1000000)]\n❸ top_cities_count = top_us_cities.groupby(['State'], as_index = False)\n                   .count().rename(columns={'City': 'cities_count'})\n                      [['State','cities_count']]\n\n# drawing the chart\n❹ top_cities_count.plot.bar('State', 'cities_count', rot=0)\n❺ plt.xlabel(\"States\")\nplt.ylabel(\"Top cities count\")\nplt.title(\"Number of Megacities per US State\")\n❻ plt.yticks(range(min(top_cities_count['cities_count']),\n                 max(top_cities_count['cities_count'])+1 ))\nplt.show()\n```", "```py\n**!pip install cartopy**\n```", "```py\nimport pandas as pd\n%matplotlib inline \nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nfrom cartopy.mpl.ticker import LongitudeFormatter, LatitudeFormatter\n```", "```py\n❶ us_cities = pd.read_csv(\"https://raw.githubusercontent.com/plotly/datasets/\n                               master/us-cities-top-1k.csv\")\n❷ calif_cities = us_cities[us_cities.State.eq('California')]\n❸ fig, ax = plt.subplots(figsize=(15,8))\n❹ ax = plt.axes(projection=ccrs.Mercator())\n❺ ax.coastlines('10m')\n❻ ax.set_yticks([32,33,34,35,36], crs=ccrs.PlateCarree())\nax.set_xticks([-121, -120, -119, -118, -117, -116, -115],\n              crs=ccrs.PlateCarree())\n❼ lon_formatter = LongitudeFormatter()\nlat_formatter = LatitudeFormatter()\nax.xaxis.set_major_formatter(lon_formatter)\nax.yaxis.set_major_formatter(lat_formatter)\n❽ ax.set_extent([-121, -115, 32, 36])\nX = calif_cities['lon']\nY = calif_cities['lat']\n❾ ax.scatter(X, Y, color='red', marker='o', transform=ccrs.PlateCarree())\nplt.show()\n```", "```py\n❶ top_calif_cities = calif_cities[calif_cities.Population.ge(400000)]\nfig, ax = plt.subplots(figsize=(15,8))\nax = plt.axes(projection=ccrs.Mercator())\nax.coastlines('10m')\nax.set_yticks([32,33,34,35,36], crs=ccrs.PlateCarree())\nax.set_xticks([-121, -120, -119, -118, -117, -116, -115],\n              crs=ccrs.PlateCarree())\nlon_formatter = LongitudeFormatter()\nlat_formatter = LatitudeFormatter()\nax.xaxis.set_major_formatter(lon_formatter)\nax.yaxis.set_major_formatter(lat_formatter)\nax.set_extent([-121, -115, 32, 36])\nX = top_calif_cities['lon']\nY = top_calif_cities['lat']\n❷ cities = top_calif_cities['City']\nax.scatter(X, Y, color='red', marker='o', transform=ccrs.PlateCarree())\n❸ for i in X.index:\n  label = cities[i]\n  plt.text(X[i], Y[i]+0.05, label, clip_on = True, fontsize = 20,\n           horizontalalignment='center', transform=ccrs.Geodetic())\nplt.show()\n```"]