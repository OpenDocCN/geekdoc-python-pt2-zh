- en: '**10'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**10'
- en: MAKE YOURSELF USEFUL**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 让自己变得有用**
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: You’ve added the props to the game, so in this chapter, you’ll add the code
    to enable astronauts to *use* objects and combine them to make new objects. These
    skills will be essential for your mission. You’ll get a chance to rehearse them,
    so you’re ready for any situation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经将道具添加到游戏中，所以在本章中，你将添加代码来使宇航员能够 *使用* 物品并将它们组合成新的物品。这些技能将对你的任务至关重要。你将有机会进行演练，以便在任何情况下都能做好准备。
- en: The code in this chapter is simpler than some of the listings you’ve seen recently
    and contains the answers for many of the puzzles in the *Escape* game. So I don’t
    give away too many spoilers, I won’t explain every item and solution here. For
    example, sometimes you might see an object number in the code, but I won’t tell
    you the name of that object.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码比你最近看到的一些列表更简单，并且包含了 *Escape* 游戏中许多谜题的答案。为了避免剧透过多，我不会在这里解释每个项目和解决方案。例如，有时你可能会在代码中看到一个物品编号，但我不会告诉你该物品的名称。
- en: 'If you get stuck playing the game, you could read this code and use it to work
    out which objects are which by referring to the `objects` dictionary (see [Listing
    5-6](ch05.xhtml#ch05list6) and [Listing 5-8](ch05.xhtml#ch05list8) in [Chapter
    5](ch05.xhtml#ch05)). That should be a last resort, though. You can solve all
    the puzzles by thinking like an astronaut. Ask yourself: What do you have access
    to that could be useful? How could you make something more useful?'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在玩游戏时遇到卡住的地方，可以阅读这段代码，并通过参考 `objects` 字典（参见 [列表 5-6](ch05.xhtml#ch05list6)
    和 [列表 5-8](ch05.xhtml#ch05list8)）来帮助辨认物品。虽然这应该是最后的办法，但通过像宇航员一样思考，你是可以解决所有难题的。问问自己：你能接触到哪些对你有用的东西？你如何让某物变得更有用？
- en: '**ADDING THE KEYBOARD CONTROL FOR USING OBJECTS**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加用于使用物品的键盘控制**'
- en: We’ll start by adding the keyboard control in the `game_loop()` function. Open
    *listing9-10.py*, your last listing in [Chapter 9](ch09.xhtml#ch09). We’ll build
    on this listing.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从在 `game_loop()` 函数中添加键盘控制开始。打开 *listing9-10.py*，这是你在 [第 9 章](ch09.xhtml#ch09)中的最后一个列表。我们将在这个列表的基础上进行构建。
- en: 'Listing 10-1 shows the new instructions to add inside the `game_loop()` function.
    Add them after the keyboard controls for *drop* and *examine*, which you added
    in the previous chapter. These instructions start the `use_object()` function
    when the player presses the U key. Save the program as *listing10-1.py*. Don’t
    try running the program yet: it won’t do anything new, but it will crash if you
    press the U key.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 列表 10-1 显示了需要添加到 `game_loop()` 函数中的新指令。将它们添加到你在上一章中添加的 *drop* 和 *examine* 键盘控制之后。当玩家按下
    U 键时，这些指令会启动 `use_object()` 函数。将程序保存为 *listing10-1.py*。不要尝试运行程序：它不会做任何新事情，但如果按下
    U 键，程序会崩溃。
- en: '*listing10-1.py*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-1.py*'
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 10-1: Adding the keyboard control for using objects*'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 10-1：添加用于使用物品的键盘控制*'
- en: '**ADDING STANDARD MESSAGES FOR USING OBJECTS**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加用于使用物品的标准消息**'
- en: The function for using objects is long, so I’ve given it its own section in
    the program. Place the new `USE OBJECTS` section after the `PROP INTERACTIONS`
    section that you added in [Chapter 9](ch09.xhtml#ch09). [Listing 10-2](ch10.xhtml#ch10list2)
    shows the start of this new section. Add this code after the `examine_object()`
    function ends but before the `START` section.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用物品的函数较长，因此我为它提供了一个单独的程序部分。将新的 `USE OBJECTS` 部分放在你在 [第 9 章](ch09.xhtml#ch09)
    中添加的 `PROP INTERACTIONS` 部分之后。 [列表 10-2](ch10.xhtml#ch10list2) 显示了这个新部分的开始。在 `examine_object()`
    函数结束后但在 `START` 部分之前添加这段代码。
- en: '*listing10-2.py*'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-2.py*'
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 10-2: Adding the first instructions for using objects*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 10-2：添加用于使用物品的第一条指令*'
- en: '[Listing 10-2](ch10.xhtml#ch10list2) shows the first part of the `use_object()`
    function. We’ll flesh this out in further listings in this chapter. At the end
    of the function, the program shows players a message to tell them what happened
    when they tried to use the object ➐. That message will be in the `use_message`
    variable. At the start of this function, we set it up as an error message ➊. Later
    on, it will be changed to a message of success if they used an object.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 10-2](ch10.xhtml#ch10list2) 显示了 `use_object()` 函数的第一部分。我们将在本章的进一步列表中充实这个部分。在函数的末尾，程序会向玩家显示一条信息，告诉他们在尝试使用物品时发生了什么
    ➐。该信息会保存在 `use_message` 变量中。在该函数的开始部分，我们将它设置为一个错误信息 ➊。稍后，如果玩家成功使用了物品，它将被更改为成功的消息。'
- en: Some of the objects have no real function in the game but will reward the player
    with a message when they try to use them. These messages could include clues as
    well as add to the game story. The dictionary `standard_responses` contains messages
    to show players when they use certain objects ➋. The dictionary key is the object
    number. For example, if they want to use the bed (lazy bones!), which is object
    4, they see a message that says, “You can’t take this lying down!”
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一些对象在游戏中没有实际功能，但当玩家尝试使用它们时会奖励玩家一条信息。这些信息可能包括线索以及丰富游戏故事情节。字典`standard_responses`包含在玩家使用某些对象时显示的消息➋。字典的键是对象编号。例如，如果他们想使用床（懒骨头！），这是对象4，他们会看到一条消息：“你不能躺着做这件事！”
- en: 'The variable `item_the_player_is_on` stores the object number at the player’s
    position in the room ➌. Players can use objects they are carrying or standing
    on. We set up a loop that goes through a list that contains two items: the item
    number the player is standing on and the item number the player is carrying ➍.
    If either of them is a key for the `standard_responses` dictionary ➎, the `use_message`
    is updated to the object’s message from that dictionary ➏. The program prioritizes
    items you’re carrying over items you’re standing on if they both have standard
    messages.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 变量`item_the_player_is_on`存储玩家所在房间中物体的位置编号➌。玩家可以使用他们携带或站在上的物体。我们设置了一个循环，遍历一个包含两个项目的列表：玩家站在上面的物体编号和玩家携带的物体编号➍。如果它们中的任何一个是`standard_responses`字典的键➎，则`use_message`将更新为该字典中该对象的消息➏。如果两者都具有标准消息，程序会优先使用玩家携带的物品。
- en: Save your file as *listing10-2.py*. Run it using pgzrun listing10-2.py. To test
    that it works, press U to use the yoyo you’re carrying.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为*listing10-2.py*。使用`pgzrun listing10-2.py`运行它。为了测试它是否正常工作，按U键使用你携带的悠悠球。
- en: '**ADDING THE GAME PROGRESS VARIABLES**'
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加游戏进度变量**'
- en: 'There are a few new variables we need to add to the program to store important
    data about the player’s progress in the game:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在程序中添加一些新变量，以存储关于玩家在游戏中进度的重要数据：
- en: '`air`, which stores how much air you have available, as a percentage'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`air`，存储你拥有的空气量，按百分比表示'
- en: '`energy`, which stores your energy, as a percentage, and will be reduced if
    you injure yourself'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`energy`，存储你的能量，按百分比表示，并在你受伤时减少'
- en: '`suit_stitched`, which stores a `True` or `False` value, depending on whether
    the suit has been repaired'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`suit_stitched`，根据套装是否已修复，存储`True`或`False`值'
- en: '`air_fixed`, which stores a `True` or `False` value, depending on whether the
    air tank has been fixed'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`air_fixed`，根据气罐是否已修复，存储`True`或`False`值'
- en: 'Add the variables to the end of the `VARIABLES` section, as shown in [Listing
    10-3](ch10.xhtml#ch10list3). Save your updated program as *listing10-3.py*. This
    program won’t do anything new if you run it: we’ve set up some variables but aren’t
    doing anything with them yet.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些变量添加到`VARIABLES`部分的末尾，如[列表 10-3](ch10.xhtml#ch10list3)所示。将更新后的程序保存为*listing10-3.py*。运行时程序不会做任何新事情：我们设置了一些变量，但暂时没有对它们进行任何操作。
- en: '*listing10-3.py*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-3.py*'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Listing 10-3: Adding the game progress variables*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 10-3：添加游戏进度变量*'
- en: '**ADDING THE ACTIONS FOR SPECIFIC OBJECTS**'
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加特定对象的操作**'
- en: The next stage in the `use_object()` function is to check particular objects
    to see if they have actions that can be performed with them. These checks will
    override any standard messages that might have been set up earlier and are shown
    in [Listing 10-4](ch10.xhtml#ch10list4). Because these instructions are inside
    the `use_object()` function, they are indented by at least four spaces. Save your
    program as *listing10-4.py*. Run it using pgzrun listing10-4.py.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`use_object()`函数的下一个阶段是检查特定对象，看看是否可以对其执行操作。这些检查将覆盖之前可能设置的任何标准消息，并显示在[列表 10-4](ch10.xhtml#ch10list4)中。因为这些指令位于`use_object()`函数内，所以它们的缩进至少为四个空格。将你的程序保存为*listing10-4.py*。使用`pgzrun
    listing10-4.py`运行它。'
- en: '*listing10-4.py*'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-4.py*'
- en: '[PRE3]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Listing 10-4: Adding the ability to use certain objects*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 10-4：添加使用特定对象的功能*'
- en: '[Listing 10-4](ch10.xhtml#ch10list4) includes a series of instructions that
    check whether the object that’s being used is a particular object number. If so,
    the instructions for that object are carried out.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 10-4](ch10.xhtml#ch10list4)包括一系列指令，检查正在使用的对象是否是特定的对象编号。如果是，便执行该对象的操作。'
- en: For example, if the player is carrying or standing on object 70 ➊, which is
    an MP3 player, they’ll see a message that says “Banging tunes!” and hear some
    music. If the player is using the computer ➋, the message shown is made by combining
    information from the `air` and `energy` variables, and adding an alert if the
    suit or air bottle is faulty. There’s also a computer speech sound effect here
    that says “status report!”
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果玩家携带或站在物品70 ➊上，它是一个MP3播放器，玩家会看到一条消息“Banging tunes!”并听到一些音乐。如果玩家正在使用计算机➋，则显示的消息是通过组合`air`和`energy`变量中的信息生成的，并在西装或气瓶出现故障时添加警报。这里还有一个计算机语音音效，说“状态报告！”
- en: I’ve included a `return` instruction at the end of this set of instructions
    ➍, which prevents the player from accidentally using another object when they
    intended to use the computer. If we didn’t include this `return` instruction,
    the player might end up using another prop that they’re carrying instead of the
    computer. Keeping the controls simple means there can be some ambiguity about
    what the player intended to use, but the game is designed to prioritize results
    that help the player complete the game.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这组指令的结尾添加了`return`指令➍，防止玩家在本意使用计算机时意外使用其他物品。如果没有包含这个`return`指令，玩家可能会使用他们携带的其他道具，而不是计算机。保持控制简洁意味着玩家可能会对他们想要使用的物品产生一些歧义，但游戏的设计是优先考虑那些帮助玩家完成游戏的结果。
- en: In a couple of places, I’ve used the short description from the `objects` dictionary
    instead of typing the name of the object into the string ➎. That’s to prevent
    you from seeing any spoilers in the code!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在几个地方，我使用了`objects`字典中的简短描述，而不是直接将物品名称输入到字符串中➎。这样做是为了防止你在代码中看到任何剧透！
- en: The `\` symbol at the end of a line ➌ tells Python that the code continues on
    the next line. Some of the lines here are quite long, so I’ve used this symbol
    to break them up and to fit them on the book page.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 行尾的`\`符号➌告诉Python代码将在下一行继续。有些行比较长，因此我使用这个符号将它们分开，以便它们能够适应书页。
- en: Try out some of the new code by walking into one of the computer terminals and
    pressing the U key. You’ll see a status update. If you can find the MP3 player,
    you can listen to that too.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试通过走到其中一个计算机终端并按下U键来测试一些新代码。你将看到状态更新。如果你能找到MP3播放器，你也可以听听看。
- en: '**RED ALERT**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Be particularly careful when you’re entering the object numbers and the rest
    of the code in [Listing 10-4](ch10.xhtml#ch10list4). If you make a mistake here,
    you might not be able to complete the puzzles in the game!*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你输入物品编号和[清单10-4](ch10.xhtml#ch10list4)中的其他代码时，要特别小心。如果你在这里犯了错误，可能无法完成游戏中的谜题！*'
- en: '**COMBINING OBJECTS**'
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**物品组合**'
- en: Some of the puzzles in the game require you to use objects together. For example,
    you might use one object as a tool to do something to the other object, or you
    might join two objects together. For instance, one of the puzzles requires you
    to insert a GPS module into a positioning system. When you find the two parts,
    you need to combine them to make a working positioning system. To use two objects
    together, you select one in your inventory and walk on or into the other one.
    You might need to drop an object from your inventory onto the floor so you can
    work on it with another object you’re carrying.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中的一些谜题要求你将物品一起使用。例如，你可能会用一个物品作为工具对另一个物品进行操作，或者将两个物品组合在一起。例如，其中一个谜题要求你将GPS模块插入定位系统。当你找到这两个部件时，你需要将它们组合成一个工作中的定位系统。要将两个物品一起使用，你需要在你的背包中选择一个，并走到或走进另一个物品。你可能需要将物品从背包中丢到地上，这样你才能用你携带的其他物品来操作它。
- en: 'In the *Escape* game engine, combinations are called *recipes*. A single recipe
    contains three object numbers in a list. The first two are the items that are
    combined, and the third one is the object number they make when they’re combined.
    Here’s an example:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在*Escape*游戏引擎中，组合物品被称为*配方*。一个配方包含三个物品编号，按顺序列出。前两个是被组合的物品，而第三个是它们组合后产生的物品编号。这里有一个例子：
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Object 73 (a GPS module) plus object 74 (a positioning system) makes object
    75 (a working positioning system).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 物品73（GPS模块）加上物品74（定位系统）组合成物品75（一个工作中的定位系统）。
- en: When you combine objects, the new object goes into your inventory. The objects
    you combined are removed from the game if they’re props. Sometimes one will be
    a piece of scenery and so will remain in the game.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当你组合物品时，新物品会进入你的背包。如果组合的物品是道具，它们将从游戏中移除。有时其中一个物品是场景道具，因此仍会保留在游戏中。
- en: '[Listing 10-5](ch10.xhtml#ch10list5) shows you the list of recipes. Add it
    to the end of the `PROPS` part of your program where the information for props
    is set up. Save your file as *listing10-5.py*. The listing shouldn’t do anything
    new yet if you run it, but it will check that the new data is correct.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单10-5](ch10.xhtml#ch10list5)展示了食谱列表。将其添加到程序中`PROPS`部分的末尾，在那里设置道具的信息。将文件保存为*listing10-5.py*。如果你运行该清单，它目前不会做任何新操作，但它会检查新数据是否正确。'
- en: '*listing10-5.py*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-5.py*'
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '*Listing 10-5: Adding recipes to the* Escape *game*'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单10-5：为*逃脱*游戏添加食谱*'
- en: Now add the code to use the recipes near the end of the `use_object()` function,
    as shown in [Listing 10-6](ch10.xhtml#ch10list6). Add it to your `use_object()`
    function, and save the program as *listing10-5.py*. When you run the program,
    using pgzrun listing10-5.py, you’ll be able to combine objects.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`use_object()`函数的末尾添加代码来使用食谱，如[清单10-6](ch10.xhtml#ch10list6)所示。将其添加到你的`use_object()`函数中，并将程序保存为*listing10-5.py*。当你运行程序时，使用pgzrun
    listing10-5.py，你将能够合并物品。
- en: '*listing10-6.py*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-6.py*'
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '*Listing 10-6: Combining objects in the game*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单10-6：在游戏中合并物品*'
- en: 'You might find you can work out what’s going on in this new code: it mostly
    combines ideas you’ve seen before. We use a loop to go through all the items in
    the `RECIPES` list ➊, and a new recipe goes into the `recipe` list each time.
    We put the ingredients and combination object numbers into variables to make the
    function easier to understand ➋.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现你可以理解这段新代码：它主要是将你之前见过的想法结合起来。我们使用一个循环来遍历`RECIPES`列表中的所有物品 ➊，每次都会将一个新的食谱添加到`recipe`列表中。我们将配料和合成物品的编号存入变量中，以便更容易理解函数
    ➋。
- en: The program checks whether the player is carrying the first ingredient and standing
    on the second one ➌, or the other way around ➍. If so, the use message is updated
    to tell them what they combined and what they made ➎.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 程序会检查玩家是否携带了第一个配料并站在第二个配料上 ➌，或者反过来 ➍。如果是这样，使用消息将更新，告诉玩家他们合成了什么以及做出了什么 ➎。
- en: When the combined object is made, it usually replaces the ingredient objects.
    If one of the objects is scenery instead of a prop, though, it remains in the
    game. So the program checks whether the item the player is on is a prop ➏, and
    if so, its room number is set to 0, removing it from the game ➐. If it’s a prop,
    it’s also deleted from the room map for the current room ➑.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当合成物品制作完成时，它通常会替换原来的配料物品。然而，如果其中一个物品是景物而不是道具，它将保留在游戏中。所以程序会检查玩家所站的物品是否为道具 ➏，如果是，它的房间号将被设置为0，从游戏中移除
    ➐。如果是道具，它还会从当前房间的房间地图中删除 ➑。
- en: The object that was being carried is removed from the player’s inventory ➒,
    and the newly created object is added to it ➓.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 玩家携带的物品会从玩家的背包中移除 ➒，而新创建的物品会被添加到背包中 ➓。
- en: '**TRAINING MISSION #1**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: 'Let’s do a simple test to check that the combination code is working. We’ll
    need to hack the code a bit for this test. In the `PROPS` section, change the
    line that sets up `in_my_pockets` so you’re carrying items 73 and 74:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们做一个简单的测试来检查合成代码是否正常工作。我们将需要对代码做一些修改来进行这个测试。在`PROPS`部分，修改设置`in_my_pockets`的那一行，以便你携带了物品73和74：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now run the program: you’ll be carrying the GPS module and the positioning
    system. Drop one of them and stand on it. Select the other one in your inventory,
    and press U. The items should be combined into a working GPS system! You can use
    it to see your location in the game. To be certain the code is working, try switching
    the objects so you’re standing on the other one this time.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行程序：你将携带GPS模块和定位系统。丢掉其中一个并站在上面。选择背包中的另一个物品，然后按U键。物品应该合成一个工作中的GPS系统！你可以用它查看游戏中的位置。为了确保代码正常工作，试着交换物品，这次站在另一个物品上。
- en: 'Make sure you change the code back again afterward:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 确保之后将代码改回：
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**ADDING THE GAME COMPLETION SEQUENCE**'
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加游戏完成序列**'
- en: 'There is one final function in the `USE OBJECTS` part of the program, which
    is a short animation that plays when the player completes the game: the astronaut
    takes off in the rescue ship. Add this function to the end of your `USE OBJECTS`
    section, as shown in [Listing 10-7](ch10.xhtml#ch10list7):'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 程序的`USE OBJECTS`部分还有一个最终功能，这是当玩家完成游戏时播放的一个简短动画：宇航员乘坐救援船起飞。将此功能添加到`USE OBJECTS`部分的末尾，如[清单10-7](ch10.xhtml#ch10list7)所示：
- en: '*listing10-7.py*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-7.py*'
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '*Listing 10-7: Blast off!*'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单10-7：发射！*'
- en: '**EXPLORING THE OBJECTS**'
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**探索物品**'
- en: Now you can explore the objects you find in the space station and try using
    them to see what they do. Before you can find all the props, though, and get to
    work on the space station, you’ll need to work out how to open the safety doors
    that seal off parts of the space station. In the next chapter, you’ll complete
    the space station setup by engineering the door mechanism to open when you use
    the correct access pass.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以探索在太空站中找到的物品，并尝试使用它们来看看它们的作用。不过，在你找到所有道具并开始工作之前，你需要先解决如何打开那些封闭太空站各个部分的安全门。在下一章中，你将通过设计门机制来完成太空站的设置，确保在使用正确的通行证时门会打开。
- en: You can also use what you’ve learned in this chapter to add your own puzzles
    to the *Escape* game code. The simplest approach is to use standard messages ([Listing
    10-2](ch10.xhtml#ch10list2)) for clues and to use recipes ([Listing 10-5](ch10.xhtml#ch10list5))
    to combine objects. You can also add simple instructions ([Listing 10-4](ch10.xhtml#ch10list4))
    to see whether the player is carrying a particular object, and then increase their
    `air` or `energy` variables, display a message, or do something else in the game.
    Happy adventuring!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以运用本章学到的知识，在*Escape*游戏代码中添加你自己的谜题。最简单的方法是使用标准消息（[Listing 10-2](ch10.xhtml#ch10list2)）作为线索，并使用配方（[Listing
    10-5](ch10.xhtml#ch10list5)）来组合物品。你还可以添加简单的指令（[Listing 10-4](ch10.xhtml#ch10list4)）来检查玩家是否携带某个特定物品，然后增加他们的`air`或`energy`变量，显示消息，或在游戏中执行其他操作。祝你冒险愉快！
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你准备好飞行了吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框以确认你已经学会了本章的关键内容。
- en: '![Images](../images/box.jpg)  The instructions for using objects go into the
    `use_object()` function.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  使用物品的说明进入`use_object()`函数。'
- en: '![Images](../images/box.jpg)  The `standard_responses` dictionary contains
    messages for when the player uses a particular object.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  `standard_responses`字典包含当玩家使用特定物品时的消息。'
- en: '![Images](../images/box.jpg)  For many objects, there are specific instructions
    to update different lists or variables when the player uses them.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  对于许多物品，当玩家使用它们时，会有特定的说明来更新不同的列表或变量。'
- en: '![Images](../images/box.jpg)  The `RECIPES` list stores the details of how
    the player can combine objects in the game.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  `RECIPES`列表储存了玩家如何在游戏中组合物品的详细信息。'
- en: '![Images](../images/box.jpg)  In a recipe, the first two items are ingredients,
    and the third item is what they make.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  在一个配方中，前两个项目是原料，第三个项目是它们所制成的物品。'
