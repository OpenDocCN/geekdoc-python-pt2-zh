- en: '**10'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**10'
- en: MAKE YOURSELF USEFUL**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 让自己有用**
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: You’ve added the props to the game, so in this chapter, you’ll add the code
    to enable astronauts to *use* objects and combine them to make new objects. These
    skills will be essential for your mission. You’ll get a chance to rehearse them,
    so you’re ready for any situation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经将道具添加到游戏中，因此在本章中，你将添加代码，使宇航员能够*使用*物品并将它们组合成新的物品。这些技能对你的任务至关重要。你将有机会进行练习，确保自己准备好应对任何情况。
- en: The code in this chapter is simpler than some of the listings you’ve seen recently
    and contains the answers for many of the puzzles in the *Escape* game. So I don’t
    give away too many spoilers, I won’t explain every item and solution here. For
    example, sometimes you might see an object number in the code, but I won’t tell
    you the name of that object.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的代码比你最近看到的一些代码简单，并且包含了*逃脱*游戏中许多谜题的答案。为了避免剧透，我不会在这里解释每一个项目和解决方案。例如，有时你可能会看到代码中的一个物品编号，但我不会告诉你那个物品的名称。
- en: 'If you get stuck playing the game, you could read this code and use it to work
    out which objects are which by referring to the objects dictionary (see [Listing
    5-6](ch05.xhtml#ch05list6) and [Listing 5-8](ch05.xhtml#ch05list8) in [Chapter
    5](ch05.xhtml#ch05)). That should be a last resort, though. You can solve all
    the puzzles by thinking like an astronaut. Ask yourself: What do you have access
    to that could be useful? How could you make something more useful?'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在玩游戏时遇到困难，你可以查看这段代码，并通过参考物品字典（见[Listing 5-6](ch05.xhtml#ch05list6)和[Listing
    5-8](ch05.xhtml#ch05list8)在[第5章](ch05.xhtml#ch05)中）来弄清楚哪些是哪些物品。不过，这应该是最后的手段。你可以通过像宇航员一样思考来解决所有的谜题。问问自己：你能使用什么物品？如何才能让某样东西更有用？
- en: '**ADDING THE KEYBOARD CONTROL FOR USING OBJECTS**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加使用物品的键盘控制**'
- en: We’ll start by adding the keyboard control in the game_loop() function. Open
    *listing9-10.py*, your last listing in [Chapter 9](ch09.xhtml#ch09). We’ll build
    on this listing.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从在 game_loop() 函数中添加键盘控制开始。打开 *listing9-10.py*，这是你在[第9章](ch09.xhtml#ch09)中的最后一个示例。我们将在这个示例的基础上进行扩展。
- en: 'Listing 10-1 shows the new instructions to add inside the game_loop() function.
    Add them after the keyboard controls for *drop* and *examine*, which you added
    in the previous chapter. These instructions start the use_object() function when
    the player presses the U key. Save the program as *listing10-1.py*. Don’t try
    running the program yet: it won’t do anything new, but it will crash if you press
    the U key.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Listing 10-1 显示了要添加到 game_loop() 函数中的新指令。将它们添加到你在上一章中为*丢弃*和*检查*添加的键盘控制之后。这些指令会在玩家按下
    U 键时启动 use_object() 函数。将程序保存为 *listing10-1.py*。不要急着运行程序：它不会做任何新操作，但如果你按下 U 键，它会崩溃。
- en: '*listing10-1.py*'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-1.py*'
- en: --snip--
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'if keyboard.space:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 'if keyboard.space:'
- en: examine_object()
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: examine_object()
- en: 'if keyboard.u:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 'if keyboard.u:'
- en: use_object()
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: use_object()
- en: --snip--
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 10-1: Adding the keyboard control for using objects*'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 10-1: 为使用物品添加键盘控制*'
- en: '**ADDING STANDARD MESSAGES FOR USING OBJECTS**'
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加使用物品的标准消息**'
- en: The function for using objects is long, so I’ve given it its own section in
    the program. Place the new USE OBJECTS section after the PROP INTERACTIONS section
    that you added in [Chapter 9](ch09.xhtml#ch09). [Listing 10-2](ch10.xhtml#ch10list2)
    shows the start of this new section. Add this code after the examine_object()
    function ends but before the START section.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 使用物品的函数比较长，因此我将它放在程序中的一个独立部分。将新的 USE OBJECTS 部分放在你在[第9章](ch09.xhtml#ch09)中添加的
    PROP INTERACTIONS 部分之后。[Listing 10-2](ch10.xhtml#ch10list2) 显示了这一新部分的开头。将这段代码添加到
    examine_object() 函数结束后，但在 START 部分之前。
- en: '*listing10-2.py*'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-2.py*'
- en: --snip--
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: show_text(description, 0)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: show_text(description, 0)
- en: time.sleep(0.5)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: '#################'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '#################'
- en: '## USE OBJECTS ##'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '## 使用物品 ##'
- en: '#################'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '#################'
- en: 'def use_object():'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 'def use_object():'
- en: global room_map, props, item_carrying, air, selected_item, energy
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: global room_map, props, item_carrying, air, selected_item, energy
- en: global in_my_pockets, suit_stitched, air_fixed, game_over
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: global in_my_pockets, suit_stitched, air_fixed, game_over
- en: ➊     use_message = "You fiddle around with it but don't get anywhere."
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ➊     use_message = "你摆弄了一下它，但没有任何进展。"
- en: ➋     standard_responses = {
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     standard_responses = {
- en: '4: "Air is running out! You can''t take this lying down!",'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '4: "空气快没了！你不能坐视不管！",'
- en: '6: "This is no time to sit around!",'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '6: "现在可不是坐着不动的时候！",'
- en: '7: "This is no time to sit around!",'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '7: "现在可不是坐着不动的时候！",'
- en: '32: "It shakes and rumbles, but nothing else happens.",'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '32: "它晃动并发出轰鸣声，但没有其他反应。",'
- en: '34: "Ah! That''s better. Now wash your hands.",'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '34: "啊！好多了。现在洗手吧。",'
- en: '35: "You wash your hands and shake the water off.",'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '35: "你洗了手，并把水抖掉。",'
- en: '37: "The test tubes smoke slightly as you shake them.",'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '37: "你摇动试管时，它们稍微冒烟。",'
- en: '54: "You chew the gum. It''s sticky like glue.",'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '54: "你嚼了口香糖。它像胶水一样粘。",'
- en: '55: "The yoyo bounces up and down, slightly slower than on Earth",'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '55: "悠悠球上下弹跳，比地球上稍慢"'
- en: '56: "It''s a bit too fiddly. Can you thread it on something?",'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '56: "有点太麻烦了。你能把它穿过某个东西吗？",'
- en: '59: "You need to fix the leak before you can use the canister",'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '59: "在使用罐子之前，你需要修复漏水",'
- en: '61: "You try signalling with the mirror, but nobody can see you.",'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '61: "你试着用镜子打信号，但没有人能看到你。",'
- en: '62: "Don''t throw resources away. Things might come in handy...",'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '62: "不要浪费资源。以后可能会派上用场...",'
- en: '67: "To enjoy yummy space food, just add water!",'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '67: "要享受美味的太空食物，只需加水！",'
- en: '75: "You are at Sector: " + str(current_room) + " // X: " \'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '75: "你位于区域: " + str(current_room) + " // X: " \'
- en: '+ str(player_x) + " // Y: " + str(player_y)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '+ str(player_x) + " // Y: " + str(player_y)'
- en: '}'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '# Get object number at player''s location.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '# 获取玩家位置上的物品编号。'
- en: ➌     item_player_is_on = get_item_under_player()
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: ➌     item_player_is_on = get_item_under_player()
- en: '➍     for this_item in [item_player_is_on, item_carrying]:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '➍     for this_item in [item_player_is_on, item_carrying]:'
- en: '➎         if this_item in standard_responses:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '➎         if this_item in standard_responses:'
- en: ➏             use_message = standard_responses[this_item]
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: ➏             use_message = standard_responses[this_item]
- en: ➐     show_text(use_message, 0)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ➐     show_text(use_message, 0)
- en: time.sleep(0.5)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: '###############'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 10-2: Adding the first instructions for using objects*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 10-2: 添加使用物品的第一个指令*'
- en: '[Listing 10-2](ch10.xhtml#ch10list2) shows the first part of the use_object()
    function. We’ll flesh this out in further listings in this chapter. At the end
    of the function, the program shows players a message to tell them what happened
    when they tried to use the object ➐. That message will be in the use_message variable.
    At the start of this function, we set it up as an error message ➊. Later on, it
    will be changed to a message of success if they used an object.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[Listing 10-2](ch10.xhtml#ch10list2) 显示了 use_object() 函数的第一部分。我们将在本章的后续列表中进一步完善它。在函数的最后，程序会向玩家展示一条消息，告诉他们尝试使用物品时发生了什么
    ➐。该消息将存储在 use_message 变量中。在函数开始时，我们将其设置为错误消息 ➊。稍后，如果玩家成功使用物品，它会变成一条成功消息。'
- en: Some of the objects have no real function in the game but will reward the player
    with a message when they try to use them. These messages could include clues as
    well as add to the game story. The dictionary standard_responses contains messages
    to show players when they use certain objects ➋. The dictionary key is the object
    number. For example, if they want to use the bed (lazy bones!), which is object
    4, they see a message that says, “You can’t take this lying down!”
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中的一些物品实际上没有实际功能，但当玩家尝试使用它们时，会通过消息奖励玩家。这些消息可能包括线索，也可能会增加游戏的故事性。字典 standard_responses
    存储了玩家使用特定物品时需要显示的消息 ➋。字典的键是物品编号。例如，如果玩家想要使用床（懒骨头！），它是物品 4，他们会看到一条消息：“你不能躺着做这件事！”
- en: 'The variable item_the_player_is_on stores the object number at the player’s
    position in the room ➌. Players can use objects they are carrying or standing
    on. We set up a loop that goes through a list that contains two items: the item
    number the player is standing on and the item number the player is carrying ➍.
    If either of them is a key for the standard_responses dictionary ➎, the use_message
    is updated to the object’s message from that dictionary ➏. The program prioritizes
    items you’re carrying over items you’re standing on if they both have standard
    messages.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 变量 item_the_player_is_on 存储了玩家在房间 ➌ 中的位置的物品编号。玩家可以使用他们携带的或站在上的物品。我们设置了一个循环，遍历一个包含两个物品的列表：玩家站立的物品编号和玩家携带的物品编号
    ➍。如果其中任何一个是 standard_responses 字典的键 ➎，那么 use_message 会更新为该物品在字典中的消息 ➏。如果两者都有标准消息，程序会优先使用你携带的物品。
- en: Save your file as *listing10-2.py*. Run it using pgzrun listing10-2.py. To test
    that it works, press U to use the yoyo you’re carrying.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为 *listing10-2.py*。使用 `pgzrun listing10-2.py` 运行它。要测试它是否正常工作，按 U 使用你正在携带的悠悠球。
- en: '**ADDING THE GAME PROGRESS VARIABLES**'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加游戏进度变量**'
- en: 'There are a few new variables we need to add to the program to store important
    data about the player’s progress in the game:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要向程序添加一些新的变量，用于存储关于玩家在游戏中进展的重要数据：
- en: air, which stores how much air you have available, as a percentage
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: air，表示你剩余的空气量，按百分比显示
- en: energy, which stores your energy, as a percentage, and will be reduced if you
    injure yourself
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: energy, 表示玩家的能量，以百分比表示，如果受伤会减少
- en: suit_stitched, which stores a True or False value, depending on whether the
    suit has been repaired
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: suit_stitched, 表示宇航服是否已修复，存储 True 或 False 的值
- en: air_fixed, which stores a True or False value, depending on whether the air
    tank has been fixed
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: air_fixed，表示气瓶是否已修复，存储 True 或 False 的值
- en: 'Add the variables to the end of the VARIABLES section, as shown in [Listing
    10-3](ch10.xhtml#ch10list3). Save your updated program as *listing10-3.py*. This
    program won’t do anything new if you run it: we’ve set up some variables but aren’t
    doing anything with them yet.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 将变量添加到 VARIABLES 部分的末尾，如[列表 10-3](ch10.xhtml#ch10list3)所示。将更新后的程序保存为 *listing10-3.py*。如果运行它，程序不会做任何新事情：我们设置了一些变量，但还没有用它们做任何事情。
- en: '*listing10-3.py*'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-3.py*'
- en: --snip--
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: GREEN = (0, 255, 0)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: GREEN = (0, 255, 0)
- en: RED = (128, 0, 0)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: RED = (128, 0, 0)
- en: air, energy = 100, 100
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: air, energy = 100, 100
- en: suit_stitched, air_fixed = False, False
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: suit_stitched, air_fixed = False, False
- en: launch_frame = 0
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: launch_frame = 0
- en: '###############'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##    MAP    ##'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '##    地图    ##'
- en: '###############'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 10-3: Adding the game progress variables*'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 10-3：添加游戏进度变量*'
- en: '**ADDING THE ACTIONS FOR SPECIFIC OBJECTS**'
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加特定对象的操作**'
- en: The next stage in the use_object() function is to check particular objects to
    see if they have actions that can be performed with them. These checks will override
    any standard messages that might have been set up earlier and are shown in [Listing
    10-4](ch10.xhtml#ch10list4). Because these instructions are inside the use_object()
    function, they are indented by at least four spaces. Save your program as *listing10-4.py*.
    Run it using pgzrun listing10-4.py.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: use_object() 函数中的下一个阶段是检查特定对象，看看是否可以用它们执行某些操作。这些检查会覆盖任何之前可能已设置的标准信息，并显示在[列表
    10-4](ch10.xhtml#ch10list4)中。因为这些指令位于 use_object() 函数内部，所以它们至少缩进四个空格。保存你的程序为 *listing10-4.py*。使用
    pgzrun listing10-4.py 运行它。
- en: '*listing10-4.py*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-4.py*'
- en: --snip--
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'if this_item in standard_responses:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 'if this_item in standard_responses:'
- en: use_message = standard_responses[this_item]
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = standard_responses[this_item]
- en: '➊     if item_carrying == 70 or item_player_is_on == 70:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '➊     if item_carrying == 70 or item_player_is_on == 70:'
- en: use_message = "Banging tunes!"
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "节奏感十足！"
- en: sounds.steelmusic.play(2)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.steelmusic.play(2)
- en: '➋     elif item_player_is_on == 11:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '➋     elif item_player_is_on == 11:'
- en: '➌         use_message = "AIR: " + str(air) + \'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: ➌         use_message = "空气： " + str(air) + \
- en: '"% / ENERGY " + str(energy) + "% / "'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '"% / 能量 " + str(energy) + "% / "'
- en: 'if not suit_stitched:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 'if not suit_stitched:'
- en: use_message += "*ALERT* SUIT FABRIC TORN / "
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: use_message += "*警告* 宇航服面料撕裂 / "
- en: 'if not air_fixed:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 'if not air_fixed:'
- en: use_message += "*ALERT* SUIT AIR BOTTLE MISSING"
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: use_message += "*警告* 宇航服气瓶丢失"
- en: 'if suit_stitched and air_fixed:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 'if suit_stitched and air_fixed:'
- en: use_message += " SUIT OK"
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: use_message += " 宇航服正常"
- en: show_text(use_message, 0)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: show_text(use_message, 0)
- en: sounds.say_status_report.play()
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_status_report.play()
- en: time.sleep(0.5)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: '# If "on" the computer, player intention is clearly status update.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '# 如果“在”电脑上，玩家的意图显然是更新状态。'
- en: '# Return to stop another object use accidentally overriding this.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '# 返回以防止另一个物体的使用意外覆盖此操作。'
- en: ➍         return
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: ➍         return
- en: 'elif item_carrying == 60 or item_player_is_on == 60:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_carrying == 60 or item_player_is_on == 60:'
- en: ➎         use_message = "You fix " + objects[60][3] + " to the suit"
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: ➎         use_message = "你将 " + objects[60][3] + " 固定到宇航服上"
- en: air_fixed = True
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: air_fixed = True
- en: air = 90
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: air = 90
- en: air_countdown()
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: air_countdown()
- en: remove_object(60)
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: remove_object(60)
- en: elif (item_carrying == 58 or item_player_is_on == 58) \
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: elif (item_carrying == 58 or item_player_is_on == 58) \
- en: 'and not suit_stitched:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 'and not suit_stitched:'
- en: use_message = "You use " + objects[56][3] + \
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你使用了 " + objects[56][3] + \
- en: '" to repair the suit fabric"'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '" 修理宇航服面料"'
- en: suit_stitched = True
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: suit_stitched = True
- en: remove_object(58)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: remove_object(58)
- en: 'elif item_carrying == 72 or item_player_is_on == 72:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_carrying == 72 or item_player_is_on == 72:'
- en: use_message = "You radio for help. A rescue ship is coming. \
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你发出无线电求救，救援船正在赶来。"
- en: Rendezvous Sector 13, outside."
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Rendezvous Sector 13，外面。"
- en: props[40][0] = 13
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: props[40][0] = 13
- en: elif (item_carrying == 66 or item_player_is_on == 66) \
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: elif (item_carrying == 66 or item_player_is_on == 66) \
- en: 'and current_room in outdoor_rooms:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 'and current_room in outdoor_rooms:'
- en: use_message = "You dig..."
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你在挖掘..."
- en: if (current_room == LANDER_SECTOR
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: if (current_room == LANDER_SECTOR
- en: and player_x == LANDER_X
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: and player_x == LANDER_X
- en: 'and player_y == LANDER_Y):'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 'and player_y == LANDER_Y):'
- en: add_object(71)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: add_object(71)
- en: use_message = "You found the Poodle lander!"
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你找到了贵宾犬着陆器！"
- en: 'elif item_player_is_on == 40:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_player_is_on == 40:'
- en: clock.unschedule(air_countdown)
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: clock.unschedule(air_countdown)
- en: show_text("Congratulations, "+ PLAYER_NAME +"!", 0)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("恭喜你，"+ PLAYER_NAME +"!", 0)
- en: show_text("Mission success! You have made it to safety.", 1)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("任务成功！你已安全抵达。", 1)
- en: game_over = True
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: game_over = True
- en: sounds.take_off.play()
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.take_off.play()
- en: game_completion_sequence()
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: game_completion_sequence()
- en: 'elif item_player_is_on == 16:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_player_is_on == 16:'
- en: energy += 1
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: energy += 1
- en: 'if energy > 100:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 'if energy > 100:'
- en: energy = 100
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: energy = 100
- en: use_message = "You munch the lettuce and get a little energy back"
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你吃了生菜，恢复了一点能量"
- en: draw_energy_air()
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: draw_energy_air()
- en: 'elif item_carrying == 68 or item_player_is_on == 68:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_carrying == 68 or item_player_is_on == 68:'
- en: energy = 100
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: energy = 100
- en: use_message = "You use the food to restore your energy"
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你使用食物恢复了能量"
- en: remove_object(68)
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: remove_object(68)
- en: draw_energy_air()
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: draw_energy_air()
- en: 'if suit_stitched and air_fixed: # open airlock access'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 'if suit_stitched and air_fixed: # 打开气闸'
- en: 'if current_room == 31 and props[20][0] == 31:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 'if current_room == 31 and props[20][0] == 31:'
- en: 'open_door(20) # which includes removing the door'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 'open_door(20) # 这包括移除门'
- en: sounds.say_airlock_open.play()
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_airlock_open.play()
- en: show_text("The computer tells you the airlock is now open.", 1)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("计算机告诉你气闸现在已打开。", 1)
- en: 'elif props[20][0] == 31:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif props[20][0] == 31:'
- en: 'props[20][0] = 0 # remove door from map'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 'props[20][0] = 0 # 从地图中移除门'
- en: sounds.say_airlock_open.play()
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_airlock_open.play()
- en: show_text("The computer tells you the airlock is now open.", 1)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("计算机告诉你气闸现在已打开。", 1)
- en: show_text(use_message, 0)
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: show_text(use_message, 0)
- en: time.sleep(0.5)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: '###############'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 10-4: Adding the ability to use certain objects*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 10-4：添加使用某些物体的功能*'
- en: '[Listing 10-4](ch10.xhtml#ch10list4) includes a series of instructions that
    check whether the object that’s being used is a particular object number. If so,
    the instructions for that object are carried out.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 10-4](ch10.xhtml#ch10list4) 包含一系列指令，用于检查正在使用的物体是否是特定的物品编号。如果是，这些物体的指令将被执行。'
- en: For example, if the player is carrying or standing on object 70 ➊, which is
    an MP3 player, they’ll see a message that says “Banging tunes!” and hear some
    music. If the player is using the computer ➋, the message shown is made by combining
    information from the air and energy variables, and adding an alert if the suit
    or air bottle is faulty. There’s also a computer speech sound effect here that
    says “status report!”
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果玩家携带或站在物品 70 ➊ 上，那个是一个 MP3 播放器，玩家会看到“炸裂的音乐！”并听到一些音乐。如果玩家正在使用计算机 ➋，则显示的消息是通过组合空气和能量变量的信息并加入警告（如果太空服或空气瓶有问题）制作的。这里还有一个计算机语音效果，内容是“状态报告！”
- en: I’ve included a return instruction at the end of this set of instructions ➍,
    which prevents the player from accidentally using another object when they intended
    to use the computer. If we didn’t include this return instruction, the player
    might end up using another prop that they’re carrying instead of the computer.
    Keeping the controls simple means there can be some ambiguity about what the player
    intended to use, but the game is designed to prioritize results that help the
    player complete the game.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我在这组指令的末尾加入了一个返回指令➍，这样可以防止玩家在打算使用计算机时，误操作其他物品。如果我们不加入这个返回指令，玩家可能会使用他们携带的其他道具，而不是计算机。保持控制简单意味着有时玩家意图使用的物品可能会有些模糊，但游戏的设计是优先考虑帮助玩家完成任务的结果。
- en: In a couple of places, I’ve used the short description from the objects dictionary
    instead of typing the name of the object into the string ➎. That’s to prevent
    you from seeing any spoilers in the code!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些地方，我使用了物品字典中的简短描述，而不是将物品名称直接写入字符串 ➎。这样可以避免你在代码中看到剧透！
- en: The \ symbol at the end of a line ➌ tells Python that the code continues on
    the next line. Some of the lines here are quite long, so I’ve used this symbol
    to break them up and to fit them on the book page.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 行末的 \ 符号 ➌ 告诉 Python 代码将在下一行继续。一些行比较长，所以我使用了这个符号来将它们拆开，以便适应书页。
- en: Try out some of the new code by walking into one of the computer terminals and
    pressing the U key. You’ll see a status update. If you can find the MP3 player,
    you can listen to that too.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试运行一些新代码，走到一个计算机终端并按下 U 键。你会看到状态更新。如果你能找到 MP3 播放器，你也可以听听它。
- en: '**RED ALERT**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Be particularly careful when you’re entering the object numbers and the rest
    of the code in [Listing 10-4](ch10.xhtml#ch10list4). If you make a mistake here,
    you might not be able to complete the puzzles in the game!*'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '*特别小心在 [清单 10-4](ch10.xhtml#ch10list4) 中输入物品编号和其余代码。如果你在这里犯错，可能无法完成游戏中的谜题！*'
- en: '**COMBINING OBJECTS**'
  id: totrans-173
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**合并物品**'
- en: Some of the puzzles in the game require you to use objects together. For example,
    you might use one object as a tool to do something to the other object, or you
    might join two objects together. For instance, one of the puzzles requires you
    to insert a GPS module into a positioning system. When you find the two parts,
    you need to combine them to make a working positioning system. To use two objects
    together, you select one in your inventory and walk on or into the other one.
    You might need to drop an object from your inventory onto the floor so you can
    work on it with another object you’re carrying.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中的一些谜题需要你将物体组合使用。例如，你可能会使用一个物体作为工具，对另一个物体进行操作，或者将两个物体合并在一起。例如，其中一个谜题要求你将GPS模块插入定位系统。当你找到这两个部分时，你需要将它们组合成一个可用的定位系统。要一起使用两个物体，你需要在背包中选择一个，然后走到另一个物体上或进入它。有时你需要将一个物体从背包中丢到地面上，这样你才能与另一个你携带的物体一起操作。
- en: 'In the *Escape* game engine, combinations are called *recipes*. A single recipe
    contains three object numbers in a list. The first two are the items that are
    combined, and the third one is the object number they make when they’re combined.
    Here’s an example:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在*Escape*游戏引擎中，物体组合被称为*食谱*。一个食谱包含一个列表中的三个物体编号。前两个是被组合的物品，第三个是它们合并后的物体编号。以下是一个示例：
- en: '[73, 74, 75]'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '[73, 74, 75]'
- en: Object 73 (a GPS module) plus object 74 (a positioning system) makes object
    75 (a working positioning system).
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 物体 73（一个GPS模块）加上物体 74（一个定位系统）会生成物体 75（一个工作定位系统）。
- en: When you combine objects, the new object goes into your inventory. The objects
    you combined are removed from the game if they’re props. Sometimes one will be
    a piece of scenery and so will remain in the game.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 当你组合物体时，新的物体会进入你的背包。如果它们是道具，已组合的物品将从游戏中移除。有时其中一个可能是景物，这样它就会留在游戏中。
- en: '[Listing 10-5](ch10.xhtml#ch10list5) shows you the list of recipes. Add it
    to the end of the PROPS part of your program where the information for props is
    set up. Save your file as *listing10-5.py*. The listing shouldn’t do anything
    new yet if you run it, but it will check that the new data is correct.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[Listing 10-5](ch10.xhtml#ch10list5)展示了食谱的列表。将其添加到程序中PROPS部分的末尾，那里是道具信息的设置位置。将文件保存为*listing10-5.py*。如果你运行该列表，它不会做任何新的操作，但它会检查新数据是否正确。'
- en: '*listing10-5.py*'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-5.py*'
- en: --snip--
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: in_my_pockets = [55]
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: in_my_pockets = [55]
- en: 'selected_item = 0 # the first item'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 'selected_item = 0 # 第一个物品'
- en: item_carrying = in_my_pockets[selected_item]
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: item_carrying = in_my_pockets[selected_item]
- en: RECIPES = [
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: RECIPES = [
- en: '[62, 35, 63], [76, 28, 77], [78, 38, 54], [73, 74, 75],'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '[62, 35, 63], [76, 28, 77], [78, 38, 54], [73, 74, 75],'
- en: '[59, 54, 60], [77, 55, 56], [56, 57, 58], [71, 65, 72],'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '[59, 54, 60], [77, 55, 56], [56, 57, 58], [71, 65, 72],'
- en: '[88, 58, 89], [89, 60, 90], [67, 35, 68]'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[88, 58, 89], [89, 60, 90], [67, 35, 68]'
- en: ']'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: checksum = 0
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: checksum = 0
- en: check_counter = 1
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: check_counter = 1
- en: 'for recipe in RECIPES:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 'for recipe in RECIPES:'
- en: checksum += (recipe[0] * check_counter
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: checksum += (recipe[0] * check_counter
- en: + recipe[1] * (check_counter + 1)
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: + recipe[1] * (check_counter + 1)
- en: + recipe[2] * (check_counter + 2))
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: + recipe[2] * (check_counter + 2))
- en: check_counter += 3
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: check_counter += 3
- en: print(len(RECIPES), "recipes")
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: print(len(RECIPES), "个食谱")
- en: assert len(RECIPES) == 11, "Expected 11 recipes"
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: assert len(RECIPES) == 11, "预期有 11 个食谱"
- en: assert checksum == 37296, "Error in recipes data"
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: assert checksum == 37296, "食谱数据错误"
- en: print("Recipe checksum:", checksum)
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: print("食谱校验和:", checksum)
- en: '#######################'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '#######################'
- en: 'PROP INTERACTIONS ##'
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'PROP INTERACTIONS ##'
- en: '#######################'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '#######################'
- en: --snip--
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 10-5: Adding recipes to the* Escape *game*'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 10-5: 将食谱添加到* Escape *游戏中*'
- en: Now add the code to use the recipes near the end of the use_object() function,
    as shown in [Listing 10-6](ch10.xhtml#ch10list6). Add it to your use_object()
    function, and save the program as *listing10-5.py*. When you run the program,
    using pgzrun listing10-5.py, you’ll be able to combine objects.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`use_object()`函数的末尾添加代码来使用食谱，如[列表 10-6](ch10.xhtml#ch10list6)所示。将其添加到你的`use_object()`函数中，并将程序保存为*listing10-5.py*。当你运行程序时，使用`pgzrun
    listing10-5.py`，你将能够合并物体。
- en: '*listing10-6.py*'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-6.py*'
- en: --snip--
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: sounds.say_airlock_open.play()
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_airlock_open.play()
- en: show_text("The computer tells you the airlock is now open.", 1)
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("计算机告诉你空气锁现在已打开。", 1)
- en: '➊     for recipe in RECIPES:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '➊     for recipe in RECIPES:'
- en: ➋         ingredient1 = recipe[0]
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: ➋         ingredient1 = recipe[0]
- en: ingredient2 = recipe[1]
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: ingredient2 = recipe[1]
- en: combination = recipe[2]
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: combination = recipe[2]
- en: ➌         if (item_carrying == ingredient1
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: ➌         if (item_carrying == ingredient1
- en: and item_player_is_on == ingredient2) \
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: and item_player_is_on == ingredient2) \
- en: ➍             or (item_carrying == ingredient2
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: ➍             or (item_carrying == ingredient2
- en: 'and item_player_is_on == ingredient1):'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 'and item_player_is_on == ingredient1):'
- en: ➎             use_message = "You combine " + objects[ingredient1][3] \
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: ➎             use_message = "你组合了 " + objects[ingredient1][3] \
- en: + " and " + objects[ingredient2][3] \
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: + " 和 " + objects[ingredient2][3] \
- en: + " to make " + objects[combination][3]
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: + " 以制作 " + objects[combination][3]
- en: '➏             if item_player_is_on in props.keys():'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '➏             if item_player_is_on in props.keys():'
- en: ➐                 props[item_player_is_on][0] = 0
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: ➐                 props[item_player_is_on][0] = 0
- en: ➑                 room_map[player_y][player_x] = get_floor_type()
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: ➑                 room_map[player_y][player_x] = get_floor_type()
- en: ➒             in_my_pockets.remove(item_carrying)
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: ➒             in_my_pockets.remove(item_carrying)
- en: ➓             add_object(combination)
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: ➓             add_object(combination)
- en: sounds.combine.play()
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.combine.play()
- en: show_text(use_message, 0)
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: show_text(use_message, 0)
- en: time.sleep(0.5)
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: --snip--
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 10-6: Combining objects in the game*'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例 10-6：在游戏中组合物品*'
- en: 'You might find you can work out what’s going on in this new code: it mostly
    combines ideas you’ve seen before. We use a loop to go through all the items in
    the RECIPES list ➊, and a new recipe goes into the recipe list each time. We put
    the ingredients and combination object numbers into variables to make the function
    easier to understand ➋.'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会发现，你可以理解这段新代码的逻辑：它大部分结合了你之前见过的概念。我们使用一个循环来遍历RECIPES列表中的所有物品 ➊，每次都有一个新的食谱加入食谱列表。我们将原料和组合物体的编号存入变量，以使函数更易理解
    ➋。
- en: The program checks whether the player is carrying the first ingredient and standing
    on the second one ➌, or the other way around ➍. If so, the use message is updated
    to tell them what they combined and what they made ➎.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 程序检查玩家是否携带着第一个原料并站在第二个原料上 ➌，或者反过来 ➍。如果是，使用消息会更新，告诉他们组合了什么物品，以及他们做了什么 ➎。
- en: When the combined object is made, it usually replaces the ingredient objects.
    If one of the objects is scenery instead of a prop, though, it remains in the
    game. So the program checks whether the item the player is on is a prop ➏, and
    if so, its room number is set to 0, removing it from the game ➐. If it’s a prop,
    it’s also deleted from the room map for the current room ➑.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 当组合物体被创建时，它通常会替换原料物体。然而，如果其中一个物体是景物而不是道具，它会继续保留在游戏中。所以程序会检查玩家所站的物体是否是道具 ➏，如果是，它的房间号会被设置为0，从游戏中移除它
    ➐。如果它是道具，它还会从当前房间的房间地图中删除 ➑。
- en: The object that was being carried is removed from the player’s inventory ➒,
    and the newly created object is added to it ➓.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 被携带的物体从玩家的物品栏中移除 ➒，新创建的物体会被添加到物品栏中 ➓。
- en: '**TRAINING MISSION #1**'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: 'Let’s do a simple test to check that the combination code is working. We’ll
    need to hack the code a bit for this test. In the PROPS section, change the line
    that sets up in_my_pockets so you’re carrying items 73 and 74:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来做一个简单的测试，检查组合代码是否有效。为了进行这个测试，我们需要稍微修改一下代码。在PROPS部分，将设置in_my_pockets的那一行改成使你携带物品73和74：
- en: in_my_pockets = [55, 73, 74]
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: in_my_pockets = [55, 73, 74]
- en: 'Now run the program: you’ll be carrying the GPS module and the positioning
    system. Drop one of them and stand on it. Select the other one in your inventory,
    and press U. The items should be combined into a working GPS system! You can use
    it to see your location in the game. To be certain the code is working, try switching
    the objects so you’re standing on the other one this time.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行程序：你将携带GPS模块和定位系统。丢弃其中一个，站在它上面。选择背包中的另一个物品，然后按下U键。物品应该被组合成一个有效的GPS系统！你可以用它来查看你在游戏中的位置。为了确认代码是否正常工作，尝试交换物品，让自己这次站在另一个物体上。
- en: 'Make sure you change the code back again afterward:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在之后将代码改回去：
- en: in_my_pockets = [55]
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: in_my_pockets = [55]
- en: '**ADDING THE GAME COMPLETION SEQUENCE**'
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加游戏完成序列**'
- en: 'There is one final function in the USE OBJECTS part of the program, which is
    a short animation that plays when the player completes the game: the astronaut
    takes off in the rescue ship. Add this function to the end of your USE OBJECTS
    section, as shown in [Listing 10-7](ch10.xhtml#ch10list7):'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在程序的USE OBJECTS部分有一个最终函数，这是一个短动画，在玩家完成游戏时播放：宇航员乘坐救援飞船起飞。将此函数添加到USE OBJECTS部分的末尾，如[示例
    10-7](ch10.xhtml#ch10list7)所示：
- en: '*listing10-7.py*'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing10-7.py*'
- en: --snip--
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: show_text(use_message, 0)
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: show_text(use_message, 0)
- en: time.sleep(0.5)
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: 'def game_completion_sequence():'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 'def game_completion_sequence():'
- en: 'global launch_frame #(initial value is 0, set up in VARIABLES section)'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 'global launch_frame #(初始值为0，在VARIABLES部分设置)'
- en: box = Rect((0, 150), (800, 600))
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: box = Rect((0, 150), (800, 600))
- en: screen.draw.filled_rect(box, (128, 0, 0))
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: screen.draw.filled_rect(box, (128, 0, 0))
- en: box = Rect ((0, top_left_y - 30), (800, 390))
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: box = Rect ((0, top_left_y - 30), (800, 390))
- en: screen.surface.set_clip(box)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: screen.surface.set_clip(box)
- en: 'for y in range(0, 13):'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 'for y in range(0, 13):'
- en: 'for x in range(0, 13):'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 'for x in range(0, 13):'
- en: draw_image(images.soil, y, x)
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: draw_image(images.soil, y, x)
- en: launch_frame += 1
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: launch_frame += 1
- en: 'if launch_frame < 9:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 'if launch_frame < 9:'
- en: draw_image(images.rescue_ship, 8 - launch_frame, 6)
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: draw_image(images.rescue_ship, 8 - launch_frame, 6)
- en: draw_shadow(images.rescue_ship_shadow, 8 + launch_frame, 6)
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: draw_shadow(images.rescue_ship_shadow, 8 + launch_frame, 6)
- en: clock.schedule(game_completion_sequence, 0.25)
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule(game_completion_sequence, 0.25)
- en: 'else:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: screen.surface.set_clip(None)
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: screen.surface.set_clip(None)
- en: screen.draw.text("MISSION", (200, 380), color = "white",
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: screen.draw.text("任务", (200, 380), color = "white",
- en: fontsize = 128, shadow = (1, 1), scolor = "black")
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: fontsize = 128, shadow = (1, 1), scolor = "black")
- en: screen.draw.text("COMPLETE", (145, 480), color = "white",
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: screen.draw.text("完成", (145, 480), color = "white",
- en: fontsize = 128, shadow = (1, 1), scolor = "black")
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: fontsize = 128, shadow = (1, 1), scolor = "black")
- en: sounds.completion.play()
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.completion.play()
- en: sounds.say_mission_complete.play()
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_mission_complete.play()
- en: '###############'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 10-7: Blast off!*'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 10-7: 发射！*'
- en: '**EXPLORING THE OBJECTS**'
  id: totrans-275
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**探索物品**'
- en: Now you can explore the objects you find in the space station and try using
    them to see what they do. Before you can find all the props, though, and get to
    work on the space station, you’ll need to work out how to open the safety doors
    that seal off parts of the space station. In the next chapter, you’ll complete
    the space station setup by engineering the door mechanism to open when you use
    the correct access pass.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以探索在空间站中找到的物品，并尝试使用它们看它们有什么作用。不过，在你找到所有道具并开始在空间站工作之前，你需要想办法打开封闭空间站某些部分的安全门。在下一章中，你将通过设计门的机制，在使用正确的通行证时打开这些安全门，从而完成空间站的设置。
- en: You can also use what you’ve learned in this chapter to add your own puzzles
    to the *Escape* game code. The simplest approach is to use standard messages ([Listing
    10-2](ch10.xhtml#ch10list2)) for clues and to use recipes ([Listing 10-5](ch10.xhtml#ch10list5))
    to combine objects. You can also add simple instructions ([Listing 10-4](ch10.xhtml#ch10list4))
    to see whether the player is carrying a particular object, and then increase their
    air or energy variables, display a message, or do something else in the game.
    Happy adventuring!
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以运用本章所学的知识，向 *逃脱* 游戏代码中添加你自己的谜题。最简单的方法是使用标准消息（[清单 10-2](ch10.xhtml#ch10list2)）作为线索，并使用食谱（[清单
    10-5](ch10.xhtml#ch10list5)）来组合物品。你还可以添加简单的指令（[清单 10-4](ch10.xhtml#ch10list4)），查看玩家是否携带某个特定物品，然后增加他们的空气或能量变量，显示一条消息，或者在游戏中执行其他操作。祝你冒险愉快！
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-278
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你准备好飞行了吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框以确认你已经掌握本章的关键知识点。
- en: '![Images](../images/box.jpg)  The instructions for using objects go into the
    use_object() function.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 使用物品的说明被写入 use_object() 函数中。'
- en: '![Images](../images/box.jpg)  The standard_responses dictionary contains messages
    for when the player uses a particular object.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) standard_responses 字典包含当玩家使用特定物品时的消息。'
- en: '![Images](../images/box.jpg)  For many objects, there are specific instructions
    to update different lists or variables when the player uses them.'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 对于许多物品，当玩家使用它们时，会有特定的说明来更新不同的列表或变量。'
- en: '![Images](../images/box.jpg)  The RECIPES list stores the details of how the
    player can combine objects in the game.'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) RECIPES 列表存储了玩家在游戏中如何组合物品的详细信息。'
- en: '![Images](../images/box.jpg)  In a recipe, the first two items are ingredients,
    and the third item is what they make.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 在食谱中，前两个项目是原料，第三个项目是它们做成的东西。'
