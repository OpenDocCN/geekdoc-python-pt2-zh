- en: '**INTRODUCTION**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**介绍**'
- en: '![image](../images/common01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: If you’re reading this, the odds are good you’ve been working with Python for
    some time already. Maybe you learned it using some tutorials, delved into some
    existing programs, or started from scratch. Whatever the case, you’ve *hacked*
    your way into learning it. That’s exactly how I got familiar with Python up until
    I started working on big open source projects 10 years ago.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在阅读这本书，那么你很可能已经使用 Python 一段时间了。也许你通过一些教程学习过它，深入研究了一些现有程序，或者从零开始。无论是哪种情况，你都已经通过自己的方式*破解*了学习它的方法。正是我通过这种方式熟悉了
    Python，直到十年前开始参与大型开源项目。
- en: It is easy to think that you know and understand Python once you’ve written
    your first program. The language is that simple to grasp. However, it takes years
    to master it and to develop a deep comprehension of its advantages and shortcomings.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你写出第一个程序，可能会觉得自己已经掌握了 Python。这门语言的确很容易理解。然而，掌握它并深入理解它的优点和缺点需要数年的时间。
- en: When I started Python, I built my own Python libraries and applications on a
    “garage project” scale. Things changed once I started working with hundreds of
    developers on software that thousands of users rely on. For example, the OpenStack
    platform—a project I contribute to—represents over 9 million lines of Python code,
    which collectively needs to be concise, efficient, and scalable to the needs of
    whatever cloud computing application its users require. When you have a project
    of this size, things like testing and documentation absolutely require automation,
    or else they won’t get done at all.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始学习 Python 时，我是在“车库项目”的规模上构建自己的 Python 库和应用程序。事情在我开始和数百名开发者一起工作，开发成千上万的用户依赖的软件时发生了变化。例如，OpenStack
    平台——这是我参与的一个项目——包含超过900万行 Python 代码，所有这些代码必须保持简洁、高效，并能够根据用户所需的云计算应用程序的需求进行扩展。当项目达到这种规模时，像测试和文档这样的问题绝对需要自动化，否则根本无法完成。
- en: I thought I knew a lot about Python before working on projects of this scale—a
    scale I could hardly imagine when I started out—but I’ve learned a lot more. I’ve
    also had the opportunity to meet some of the best Python hackers in the industry
    and learn from them. They’ve taught me everything from general architecture and
    design principles to various helpful tips and tricks. Through this book, I hope
    to share the most important things I’ve learned so that you can build better Python
    programs—and build them more efficiently, too!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始从事这种规模的项目之前，我曾以为自己对 Python 了解很多——这种规模的项目在我刚开始时几乎无法想象——但我学到了更多。我也有机会结识一些业内最顶尖的
    Python 黑客并向他们学习。他们教会了我从通用架构和设计原则到各种实用技巧和窍门的所有知识。通过本书，我希望分享我所学到的最重要的内容，以便你也能构建更好的
    Python 程序——并且更高效地构建它们！
- en: The first version of this book, *The Hacker’s Guide to Python*, came out in
    2014\. Now *Serious Python* is the fourth edition, with updated and entirely new
    contents. I hope you enjoy it!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的第一版《黑客的 Python 指南》于2014年发布。现在《Serious Python》是第四版，内容进行了更新并加入了全新的内容。希望你喜欢它！
- en: '**Who Should Read This Book and Why**'
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**谁应该阅读本书，以及为什么**'
- en: This book is intended for Python coders and developers who want to take their
    Python skills to the next level.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向那些希望将自己 Python 技能提升到更高水平的 Python 编程人员和开发者。
- en: In it, you’ll find methods and advice that will help you get the most out of
    Python and build future-proof programs. If you’re already working on a project,
    you’ll be able to apply the techniques discussed right away to improve your current
    code. If you’re starting your first project, you’ll be able to create a blueprint
    with the best practice.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，你将找到一些方法和建议，帮助你最大限度地发挥 Python 的潜力，构建未来可持续的程序。如果你已经在做项目，你将能够立即应用书中讨论的技巧，提升你当前的代码。如果你正在开始你的第一个项目，你将能够根据最佳实践创建一个蓝图。
- en: I’ll introduce you to some Python internals to give you a better understanding
    of how to write efficient code. You will gain a greater insight into the inner
    workings of the language that will help you understand problems or inefficiencies.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我将向你介绍一些 Python 内部机制，以帮助你更好地理解如何编写高效的代码。你将深入了解这门语言的内在工作原理，帮助你识别问题或低效之处。
- en: The book also provides applicable battle-tested solutions to problems such as
    testing, porting, and scaling Python code, applications, and libraries. This will
    help you avoid making the mistakes that others have made and discover strategies
    that will help you maintain your software in the long run.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还提供了可应用的、经过实战验证的解决方案，解决了诸如测试、移植和扩展Python代码、应用程序和库等问题。这将帮助你避免他人曾经犯过的错误，并发现能够帮助你长期维护软件的策略。
- en: '**About This Book**'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**关于本书**'
- en: This book is not necessarily designed to be read from front to back. You should
    feel free to skip to sections that interest you or are relevant to your work.
    Throughout the book, you’ll find a wide range of advice and practical tips. Here’s
    a quick breakdown of what each chapter contains.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不一定需要按顺序从头到尾阅读。你可以根据自己的兴趣或工作相关性跳到感兴趣的章节。在本书中，你将找到各种建议和实用技巧。以下是每个章节内容的简要概述。
- en: '**[Chapter 1](ch01.xhtml#ch01)** provides guidance about what to consider before
    you undertake a project, with advice on structuring your project, numbering versions,
    setting up automated error checking, and more. At the end there’s an interview
    with Joshua Harlow.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第1章](ch01.xhtml#ch01)** 提供了在开始项目之前应考虑的事项，包含关于项目结构、版本编号、设置自动化错误检查等方面的建议。章节最后有对Joshua
    Harlow的采访。'
- en: '**[Chapter 2](ch02.xhtml#ch02)** introduces Python modules, libraries, and
    frameworks and talks a little about how they work under the hood. You’ll find
    guidance on using the `sys` module, getting more from the `pip` package manager,
    choosing the best framework for you, and using standard and external libraries.
    There’s also an interview with Doug Hellmann.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第2章](ch02.xhtml#ch02)** 介绍了Python模块、库和框架，并简要讨论了它们在幕后是如何工作的。你将获得关于使用`sys`模块、从`pip`包管理器中获得更多信息、选择最适合你的框架以及使用标准库和外部库的指导。还包含对Doug
    Hellmann的采访。'
- en: '**[Chapter 3](ch03.xhtml#ch03)** gives advice on documenting your projects
    and managing your APIs as your project evolves even after publication. You’ll
    get specific guidance on using Sphinx to automate certain documentation tasks.
    Here you’ll find an interview with Christophe de Vienne.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第3章](ch03.xhtml#ch03)** 提供了关于如何在项目发展过程中，包括发布后，记录项目和管理API的建议。你将获得关于使用Sphinx自动化某些文档任务的具体指导。本章还包括对Christophe
    de Vienne的采访。'
- en: '**[Chapter 4](ch04.xhtml#ch04)** covers the age-old issue of time zones and
    how best to handle them in your programs using `datetime` objects and `tzinfo`
    objects.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第4章](ch04.xhtml#ch04)** 讨论了关于时区的老生常谈问题，并介绍了如何使用`datetime`对象和`tzinfo`对象在程序中最好地处理它们。'
- en: '**[Chapter 5](ch05.xhtml#ch05)** helps you get your software to users with
    guidance on distribution. You’ll learn about packaging, distributions standards,
    the `distutils` and `setuptools` libraries, and how to easily discover dynamic
    features in a package using entry points. Nick Coghlan is interviewed.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章](ch05.xhtml#ch05)** 帮助你将软件分发给用户，提供了分发的指导。你将了解打包、分发标准、`distutils`和`setuptools`库，以及如何通过入口点轻松发现包中的动态功能。此章节包含对Nick
    Coghlan的采访。'
- en: '**[Chapter 6](ch06.xhtml#ch06)** advises you on unit testing with best-practice
    tips and specific tutorials on automating unit tests with `pytest`. You’ll also
    look at using virtual environments to increase the isolation of your tests. The
    interview is with Robert Collins.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章](ch06.xhtml#ch06)** 提供了关于单元测试的建议，包括最佳实践技巧和使用`pytest`自动化单元测试的具体教程。你还将学习如何使用虚拟环境来增强测试的隔离性。该章节的采访对象是Robert
    Collins。'
- en: '**[Chapter 7](ch07.xhtml#ch07)** digs into methods and decorators. This is
    a look at using Python for functional programming, with advice on how and when
    to use decorators and how to create decorators *for* decorators. We’ll also dig
    into static, class, and abstract methods and how to mix the three for a more robust
    program.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章](ch07.xhtml#ch07)** 深入探讨了方法和装饰器。本文将介绍如何使用Python进行函数式编程，提供如何以及何时使用装饰器的建议，以及如何为装饰器创建*装饰器*。我们还将探讨静态方法、类方法和抽象方法，并讨论如何将三者结合起来构建更强大的程序。'
- en: '**[Chapter 8](ch08.xhtml#ch08)** shows you more functional programming tricks
    you can implement in Python. This chapter discusses generators, list comprehensions,
    functional functions and common tools for implementing them, and the useful `functools`
    library.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第8章](ch08.xhtml#ch08)** 向你展示了可以在Python中实现的更多函数式编程技巧。该章节讨论了生成器、列表推导式、函数式函数及实现这些功能的常用工具，以及有用的`functools`库。'
- en: '**[Chapter 9](ch09.xhtml#ch09)** peeks under the hood of the language itself
    and discusses the abstract syntax tree (AST) that is the inner structure of Python.
    We’ll also look at extending `flake8` to work with the AST to introduce more sophisticated
    automatic checks into your programs. The chapter concludes with an interview with
    Paul Tagliamonte.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第9章](ch09.xhtml#ch09)** 透视了语言本身，讨论了 Python 的抽象语法树（AST），它是 Python 内部的结构。我们还将学习如何扩展
    `flake8` 以与 AST 配合使用，从而为程序引入更复杂的自动检查。本章最后通过一段对 Paul Tagliamonte 的访谈作结。'
- en: '**[Chapter 10](ch10.xhtml#ch10)** is a guide to optimizing performance by using
    appropriate data structures, defining functions efficiently, and applying dynamic
    performance analysis to identify bottlenecks in your code. We’ll also touch on
    memoization and reducing waste in data copies. You’ll find an interview with Victor
    Stinner.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第10章](ch10.xhtml#ch10)** 是关于通过使用合适的数据结构、有效定义函数以及应用动态性能分析来优化性能的指南，目的是识别代码中的瓶颈。我们还将讨论记忆化和减少数据复制中的浪费。你还会看到对
    Victor Stinner 的访谈。'
- en: '**[Chapter 11](ch11.xhtml#ch11)** tackles the difficult subject of multithreading,
    including how and when to use multithreading as opposed to multiprocessing and
    whether to use event-oriented or service-oriented architecture to create scalable
    programs.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第11章](ch11.xhtml#ch11)** 探讨了多线程这一复杂主题，包括如何以及何时使用多线程而不是多进程，以及是否使用面向事件或面向服务的架构来创建可扩展的程序。'
- en: '**[Chapter 12](ch12.xhtml#ch12)** covers relational databases. We’ll take a
    look at how they work and how to use PostgreSQL to effectively manage and stream
    data. Dimitri Fontaine is interviewed.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第12章](ch12.xhtml#ch12)** 涉及关系型数据库。我们将了解它们的工作原理，以及如何使用 PostgreSQL 高效地管理和流式传输数据。Dimitri
    Fontaine 进行了访谈。'
- en: 'Finally, **[Chapter 13](ch13.xhtml#ch13)** offers sound advice on a range of
    topics: making your code compatible with both Python 2 and 3, creating functional
    Lisp-like code, using context managers, and reducing repetition with the `attr`
    library.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，**[第13章](ch13.xhtml#ch13)** 提供了关于多个主题的实用建议：如何使代码兼容 Python 2 和 3，如何编写像 Lisp
    一样的函数式代码，如何使用上下文管理器，以及如何使用 `attr` 库减少重复代码。
