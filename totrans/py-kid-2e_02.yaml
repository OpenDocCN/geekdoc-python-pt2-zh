- en: '1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Not All Snakes Slither
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: A computer program is a set of instructions that causes a computer to perform
    some kind of action. It isn’t the physical parts of a computer—like the wires,
    microchips, cards, hard drive, and such—but the hidden stuff running on that hardware.
    A computer program, which I’ll usually refer to as just a *program*, is the set
    of commands that tells that hardware what to do. *Software* is a collection of
    computer programs.
  prefs: []
  type: TYPE_NORMAL
- en: Without computer programs, almost every device you use daily would either stop
    working or be much less useful than it is now. Computer programs, in one form
    or another, control not only your personal computer but also video game systems,
    mobile phones, and the GPS units in cars. Software also controls items like LCD
    TVs and their remote controllers, as well as some of the newest radios, DVD players,
    ovens, and some fridges. Even car engines, traffic lights, street lamps, train
    signals, electronic billboards, and elevators are controlled by programs.
  prefs: []
  type: TYPE_NORMAL
- en: Programs are a bit like thoughts. If you didn’t have thoughts, you would probably
    just sit on the floor, staring vacantly at a wall. Your thought “get up off the
    floor” is an instruction, or *command*, that tells your body to stand up. In the
    same way, computer programs use commands to tell computers what to do.
  prefs: []
  type: TYPE_NORMAL
- en: If you know how to write computer programs, you can do all sorts of useful things.
    Sure, you may not be able to write programs to control cars, traffic lights, or
    your fridge (well, at least not at first), but you could create web pages, write
    your own games, or even make a program to help with homework.
  prefs: []
  type: TYPE_NORMAL
- en: A Few Words About Language
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like humans, computers use multiple languages to communicate—these are called
    programming languages. A *programming language* is simply a way to talk to a computer
    by using instructions that both humans and computers can understand.
  prefs: []
  type: TYPE_NORMAL
- en: There are programming languages named after people (like Ada and Pascal), those
    named using simple acronyms (like BASIC and FORTRAN), and even a few named after
    TV shows, like Python. Yes, the Python programming language was named after the
    *Monty Python’s Flying Circus* TV show, not after the snake.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: Monty Python’s Flying Circus *was an alternative British comedy show first broadcast
    in the 1970s, and it remains hugely popular today among a certain audience. The
    show had sketches like “The Ministry of Silly Walks,” “The Fish-Slapping Dance,”
    and “The Cheese Shop” (which didn’t sell any cheese).*
  prefs: []
  type: TYPE_NORMAL
- en: The Python programming language has many features that make it extremely useful
    for beginners. Most importantly, you can use Python to write simple, efficient
    programs quite quickly. Python doesn’t use as many complicated symbols as other
    programming languages, which makes it easier to read and a lot friendlier for
    beginners. (That isn’t to say Python doesn’t use symbols—they’re just not used
    quite as heavily as in many other languages.)
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Installing Python is fairly straightforward. Here, we’ll go over the steps for
    installing it on Windows, macOS, Ubuntu, and Raspberry Pi. When installing Python,
    you’ll also install the IDLE program, which is the **I**ntegrated **D**eve**L**opment
    **E**nvironment that lets you write programs for Python. If Python has already
    been installed on your computer, jump ahead to “Once You’ve Installed Python”
    on [page 10](ch01.xhtml#ch01lev1sec3).
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python on Windows
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To install Python for Microsoft Windows 11, download a version of Python for
    Windows that is 3.10 or higher at *[http://www.python.org/downloads/](http://www.python.org/downloads/)*.
    The exact version of Python that you download is not important, as long as it’s
    at least version 3.10\. However, if you are using an older version of Windows
    (like Windows 7), the latest version of Python will not work—in this case, you’ll
    need to install Python 3.8\. See the Windows download page (*[https://www.python.org/downloads/windows/](https://www.python.org/downloads/windows/)*)
    regarding which versions of Python will work with your version of Windows.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-1: The Python download for Windows*'
  prefs: []
  type: TYPE_NORMAL
- en: 'If your browser asks whether to save or open your file, choose to save it.
    Once you’ve downloaded the Python for Windows installation file, you should be
    prompted to run it. If not, open your *Downloads* folder and double-click the
    file. Now, follow the installation instructions on screen to install Python in
    the default location, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Click **Install Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When asked whether to allow the app to make changes to your device, choose **Yes**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click **Close** once installation finishes, and you should see a number of
    Python 3.1*x* icons in your Windows Start menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](Images/01fig02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-2: Your Start menu may look different depending on the version of
    Python you use.*'
  prefs: []
  type: TYPE_NORMAL
- en: Now skip to “Once You’ve Installed Python” on [page 10](ch01.xhtml#ch01lev1sec3)
    to get started with Python.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python on macOS
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you’re using a Mac, you should find a version of Python pre-installed, but
    it might be an older version of the language. To be sure you’re running a recent
    enough version, click the spotlight icon (the magnifying glass in the top-right
    corner), and type **terminal** in the dialog that appears. When the terminal opens,
    type **python3 --version** (that’s two hyphens, followed by the word *version*)
    and hit ENTER.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you see either command not found or a version that is less than 3.10, point
    your browser to the following URL to download the latest installer for macOS:
    *[http://www.python.org/downloads/](http://www.python.org/downloads/)*.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-3: Python download for macOS*'
  prefs: []
  type: TYPE_NORMAL
- en: Once downloaded, double-click the file (it should be called something like *python-3.10.0-macosx11.pkg*).
    Agree to the license and follow the onscreen instructions to install the software.
    You should be prompted for the administrator password for your Mac before Python
    installs. If you don’t have the password, ask your parents or whoever is the owner
    of your machine.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-4: Python in Mac Finder*'
  prefs: []
  type: TYPE_NORMAL
- en: Skip to “Once You’ve Installed Python” on [page 10](ch01.xhtml#ch01lev1sec3)
    to get started with Python.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python on Ubuntu
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Python comes pre-installed on Ubuntu Linux, but it may not be the latest version.
    Follow these instructions to get the latest version of Python (note that you may
    need to change the version number in the command that follows to reflect the latest
    version).
  prefs: []
  type: TYPE_NORMAL
- en: Click the Show Applications icon (usually nine dots in the bottom-left corner
    of the screen).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter **terminal** in the input box (or click **Terminal** if it’s already displayed).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When the terminal window appears, enter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You might be prompted to enter the administrator password for your computer
    after entering the first command (if you don’t have the administrator password,
    you may need to ask a parent or teacher to enter it).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Image](Images/01fig05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-5: Python installation in the Terminal on Ubuntu; your output may
    look slightly different depending on which version you download*'
  prefs: []
  type: TYPE_NORMAL
- en: Skip to “Once You’ve Installed Python” on [page 10](ch01.xhtml#ch01lev1sec3)
    to get started with Python.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python on Raspberry Pi (Raspberry Pi OS or Raspbian)
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Python 3 comes pre-installed with Raspberry Pi’s operating system, but at the
    time of this writing, it’s version 3.7\. Installing a later version is slightly
    more complicated than with the other operating systems—you need to download and
    build the Python installation yourself. This isn’t as scary as it sounds. Simply
    enter the following commands one by one and wait for each to complete (note that
    you may need to change the version numbers if you are downloading a version of
    Python later than 3.10):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The second-to-last step will take the longest to finish because it’s building
    all the code that goes into the Python application.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-6: Python installation in the Terminal on Raspberry Pi; your output
    may look slightly different depending on which version of Python you download.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once Python is installed, you need to add a program called IDLE into the menu
    (this makes life easier later):'
  prefs: []
  type: TYPE_NORMAL
- en: Click the raspberry icon in the top left of the screen, then click **Preferences**
    and **Main Menu Editor**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the window that appears, click **Programming**, and then click the **New
    Item** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Launcher Properties dialog shown in [Figure 1-7](ch01.xhtml#ch01fig07),
    enter the name as **idle3.10**, and enter this as the command, changing the version
    number as needed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Click **OK**, then **OK** again in the main editor window to finish. Then you
    can move on to the next section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Image](Images/01fig07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-7: Launcher set up in the Raspberry Pi*'
  prefs: []
  type: TYPE_NORMAL
- en: Once You’ve Installed Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With Python installed, let’s write our first program in IDLE (also called the
    *Shell*).
  prefs: []
  type: TYPE_NORMAL
- en: If you’re using Windows, enter **idle** in the Windows search box (bottom left
    of the screen), and select **IDLE (Python 3.1*x* 64-bit)** when it appears in
    the Best Match menu.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re using a Mac, navigate to **Go** ▸ **Applications** and open the Python
    3.1*x* folder to find IDLE.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re using Ubuntu, when you click **Show Applications** and then click
    the **All** tab at the bottom, you should see an entry titled *IDLE (using* *Python-3.1*x*)*—you
    can also enter IDLE in the search box if you can’t see it.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re using a Raspberry Pi, click the raspberry icon at the top left of
    the screen, click **Programming**, and then select **idle3.1*x*** from the list
    displayed.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you open IDLE, you should see a window like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-8: IDLE Shell in Windows*'
  prefs: []
  type: TYPE_NORMAL
- en: This is the *Python Shell*, which is part of Python’s integrated development
    environment. The three greater-than signs (>>>) are called the *prompt*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s enter some commands at the prompt, beginning with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Make sure to include the double quotes (“ ”). Press ENTER on your keyboard
    when you’re finished typing the line. If you’ve entered the command correctly,
    you should see something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The prompt should reappear to let you know that the Python Shell is ready to
    accept more commands.
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations! You’ve just created your first Python program. The word print
    is a type of Python command called a *function*, and it prints out whatever is
    inside the parentheses to the screen. In essence, you have given the computer
    an instruction to display the words “Hello World”—an instruction both you and
    the computer can understand.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/f0011-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Saving Your Python Programs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Python programs wouldn’t be very useful if you needed to rewrite them every
    time you wanted to use them, never mind print them out so you could reference
    them. Sure, it might be fine to rewrite short programs, but a large program, like
    a word processor, could contain millions of lines of code. Print that all out,
    and you could have well over 100,000 pages. Just imagine trying to carry that
    huge stack of paper home. Better hope that you won’t meet up with a big gust of
    wind.
  prefs: []
  type: TYPE_NORMAL
- en: 'Luckily, we can save our programs for future use. To create and save a new
    program, open IDLE and choose **File** ▸ **New** **Window**. An empty window will
    appear, with *Untitled* in the menu bar. Enter the following code into the new
    shell window:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Now, choose **File** ▸ **Save**. When prompted for a filename, enter *hello.py*,
    and save the file to your desktop. Then choose **Run** ▸ **Run Module**.
  prefs: []
  type: TYPE_NORMAL
- en: 'With any luck, your saved program should run, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-9: Hello World in IDLE*'
  prefs: []
  type: TYPE_NORMAL
- en: Now, if you close the shell window but leave the *hello.py* window open, and
    then choose **Run** ▸ **Run Module**, the Python Shell should reappear, and your
    program should run again (to reopen the Python Shell without running the program,
    choose **Run** ▸ **Python Shell**).
  prefs: []
  type: TYPE_NORMAL
- en: After running the code, you’ll find a new icon on your desktop labeled *hello.py*.
    If you double-click the icon, a black window will appear briefly and then vanish.
    What happened?
  prefs: []
  type: TYPE_NORMAL
- en: 'You’re seeing the Python command line console (similar to the shell) start
    up, print Hello World, and then exit. Here’s what would appear if you had superhero-like
    speed vision and could see the window before it closed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/01fig10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-10: Hello World in the console*'
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Depending on your operating system, this might not work—or it may run using
    a different version of Python than the one we’ve installed.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the menus, you can use keyboard shortcuts to create a new shell
    window, save a file, and run a program:'
  prefs: []
  type: TYPE_NORMAL
- en: On Windows, Ubuntu, and Raspberry Pi, press CTRL-N to create a new shell window,
    CTRL-S to save your file after you’ve finished editing, and F5 to run your program.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On macOS, press COMMAND-N to create a new shell window, COMMAND-S to save your
    file, and hold down the function (Fn) key and press F5 to run your program.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What You Learned
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: We began simply in this chapter with a Hello World application—the program nearly
    everyone starts with when they learn computer programming. In the next chapter,
    we’ll do some more useful things with the Python Shell.
  prefs: []
  type: TYPE_NORMAL
