- en: '**2'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2'
- en: PROBABILITY**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: PROBABILITY**
- en: '![image](Images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/common.jpg)'
- en: Probability affects every aspect of our lives, but in reality, we’re all pretty
    bad at it, as some of the examples in this chapter demonstrate. We need to study
    probability to get it right. And we need to get it right because deep learning
    deals extensively with ideas from probability theory. Probability appears everywhere,
    from the outputs of neural networks to how often different classes appear in the
    wild to the distributions used to initialize deep networks.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 概率影响着我们生活的方方面面，但实际上，我们在这方面做得都不好，正如本章中的一些例子所展示的那样。我们需要学习概率，以便正确理解它。而我们之所以需要弄明白它，是因为深度学习广泛涉及概率论中的一些概念。概率无处不在，从神经网络的输出到不同类别在现实世界中出现的频率，再到用于初始化深度网络的分布。
- en: This chapter aims to expose you to the sorts of probability-related ideas and
    terms you’ll frequently encounter in deep learning. We’ll start with basic ideas
    about probability and introduce the notion of a random variable. We’ll then jump
    to the rules of probability. These sections cover the basics that will put us
    in a position to talk about *joint and marginal probabilities*. You’ll encounter
    those terms over and over again as you explore deep learning. Once you understand
    how to use joint and marginal probabilities, I’ll explain the first of the two
    chain rules discussed in this book. The second is in [Chapter 6](ch06.xhtml#ch06)
    on differential calculus. We’ll continue our study of probability in [Chapter
    3](ch03.xhtml#ch03).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是让你接触到在深度学习中你会经常遇到的与概率相关的概念和术语。我们将从关于概率的基本概念开始，并介绍随机变量的概念。接着，我们将进入概率的规则。这些内容涵盖了基本概念，为我们接下来讨论*联合概率和边际概率*打下基础。你将在深度学习的探索过程中反复遇到这些术语。一旦你理解了如何使用联合概率和边际概率，我将解释书中讨论的两个链式法则中的第一个。第二个将在[第6章](ch06.xhtml#ch06)的微积分部分讲解。我们将在[第3章](ch03.xhtml#ch03)继续学习概率。
- en: Basic Concepts
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本概念
- en: A *probability* is a number between zero and one that measures how likely something
    is to happen. If there’s no chance the something will happen, its probability
    is zero. If it’s absolutely certain that it will happen, its probability is one.
    We’ll usually express probabilities this way, though in everyday use, people seem
    to dislike saying things like, “The chance of rain tomorrow is 0.25.” Instead,
    we say, “The chance of rain tomorrow is 25 percent.” In everyday speech, we convert
    the fractional probability to a percentage. We’ll do the same in this chapter.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一个*概率*是介于零和一之间的数字，用来衡量某件事发生的可能性。如果某件事不可能发生，它的概率是零。如果它肯定会发生，它的概率是1。我们通常会这样表示概率，尽管在日常使用中，人们似乎不喜欢说像“明天下雨的概率是0.25”这样的话。相反，我们会说“明天下雨的概率是25%”。在日常语言中，我们将分数概率转换为百分比。在本章中，我们也会采用这种方式。
- en: 'The previous paragraph used multiple words associated with probability: *likely*,
    *chance*, and *certainty*. This is fine in casual use, and even somewhat in deep
    learning, but when we need to be explicit, we’ll stick with *probability* and
    express it numerically in the range zero to one, [0, 1]. The square brackets mean
    the upper and lower limit are included. If the limit isn’t included in the range,
    a normal parenthesis is used. For example, the NumPy function np.random.random()
    returns a pseudorandom floating-point number in the range [0, 1). So, it might
    return exactly zero, but it will never return exactly one.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 前面一段话使用了与概率相关的多个词汇：*可能性*、*机会*和*确定性*。在日常使用中这样说没有问题，甚至在深度学习中也能接受，但当我们需要明确表达时，我们会坚持使用*概率*，并将其以数字形式表示，范围为零到一，[0,
    1]。方括号表示上限和下限都包含在内。如果范围内不包含某个限值，则使用普通括号。例如，NumPy 函数 np.random.random() 返回一个在[0,
    1)范围内的伪随机浮动数。所以，它可能返回零，但永远不会返回一。
- en: Next, I’ll introduce the foundational concepts of sample space, events, and
    random variables. I’ll close with some examples of how humans are bad at probability.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我将介绍样本空间、事件和随机变量的基础概念。最后，我会给出一些例子，说明人类在概率方面的不足。
- en: Sample Space and Events
  id: totrans-9
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 样本空间和事件
- en: Put succinctly, a *sample space* is a discrete set or continuous range that
    represents all the possible outcomes of an event. An *event* is something that
    happens. Usually, it’s the outcome of some physical process, like the flipping
    of a coin or the roll of a die. All the possible events we’ve grouped together
    are the sample space we’re working with. Each event is a *sample* from the sample
    space, and the sample space represents *all* the possible events. Let’s look at
    a few examples.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，*样本空间*是一个离散集合或连续范围，表示事件的所有可能结果。*事件*是某个发生的事情，通常是某种物理过程的结果，比如抛硬币或掷骰子。我们将所有可能的事件汇总在一起，构成我们正在使用的样本空间。每个事件都是样本空间中的一个*样本*，样本空间代表着*所有*可能的事件。让我们来看几个例子。
- en: The possible outcomes of a coin flip are heads (H) or tails (T); thus, the sample
    space for a coin flip is the set {H, T}. The sample space for the roll of a standard
    die is the set {1, 2, 3, 4, 5, 6} because, discounting the die perching itself
    on its edge, one of the six faces of the cube will be on top when the die stops
    moving. These are examples of discrete sample spaces. In deep learning, most sample
    spaces are continuous and they consist of floating-point numbers, not integers
    or elements of a set. For example, if a feature input to a neural network can
    take on any value in the range [0, 1], then [0, 1] is the sample space for that
    feature.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 抛硬币的可能结果是正面（H）或反面（T）；因此，硬币抛掷的样本空间是集合{H, T}。标准骰子的抛掷样本空间是集合{1, 2, 3, 4, 5, 6}，因为如果不考虑骰子停在边缘的情况，骰子停下时其六个面中的一个会朝上。这些是离散样本空间的例子。在深度学习中，大多数样本空间是连续的，包含的是浮点数，而不是整数或集合的元素。例如，如果神经网络的一个特征输入可以取[0,
    1]范围内的任何值，那么[0, 1]就是该特征的样本空间。
- en: We can ask about the likelihood of certain events happening. For a coin, we
    can ask, what’s the likelihood the coin will land heads up when flipped? Intuitively,
    assuming the coin isn’t weighted so that one side is more likely to show up than
    the other, we say the likelihood of heads is 50 percent. The probability of getting
    heads is then 0.5 (50 percent as a percentage). We see that the probability of
    getting tails is also 0.5\. Finally, since heads and tails are the only possible
    outcomes, we see that the sum of the probabilities over all possible results is
    0.5 + 0.5 = 1.0\. Probabilities *always* sum to 1.0 over all possible values of
    the sample space.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以询问某些事件发生的可能性。对于硬币，我们可以问，硬币翻转时正面朝上的可能性是多少？直观地说，假设硬币没有加权使得某一面比另一面更可能出现，我们可以说正面朝上的可能性是50%。因此，正面朝上的概率是0.5（50%的百分比）。我们可以看到，反面朝上的概率也是0.5。最后，由于正面和反面是唯一的可能结果，我们看到所有可能结果的概率总和是0.5
    + 0.5 = 1.0。概率*总是*在所有可能的样本空间值上加起来为1.0。
- en: What’s the probability of rolling a four with a six-sided die? Again, there
    is no reason to favor one face over another, and only one of the six faces has
    four dots, so the probability is one out of six, 1/6 ≈ 0.166666 . . . or about
    17 percent.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 掷一个六面骰子得到四点的概率是多少？同样，骰子的每个面都有相同的可能性，且六个面中只有一个面有四个点，所以概率是六分之一，1/6 ≈ 0.166666
    . . . 或大约17%。
- en: Random Variables
  id: totrans-14
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 随机变量
- en: Let’s denote the outcome of a coin flip by a variable, *X*. *X* is what’s called
    a *random variable*, a variable that takes on values from its sample space with
    a certain probability. Because here the sample space is discrete, *X* is a *discrete
    random variable*, which we denote with an uppercase letter. For the coin, the
    probability of *X* being heads equals the probability of *X* being tails, both
    0.5\. To write this formally, we use
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个变量*X*表示硬币翻转的结果。*X*是所谓的*随机变量*，它从样本空间中取值，并具有一定的概率。由于这里的样本空间是离散的，*X*是一个*离散随机变量*，我们用大写字母表示。对于硬币，*X*是正面的概率等于*X*是反面的概率，都是0.5。为了正式写出这个公式，我们使用
- en: '*P*(*X* = heads) = *P*(*X* = tails) = 0.5'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(*X* = 正面) = *P*(*X* = 反面) = 0.5'
- en: 'where *P* is universally used to indicate the probability of the event in parentheses
    for the specified random variable. A *continuous random variable* is a random
    variable from a continuous sample space, denoted with a lowercase letter, like
    *x*. We usually talk about the probability of the random variable being in some
    range of the sample space, not a particular real number. For example, if we use
    the NumPy random function to return a value in [0, 1), we can ask: What’s the
    probability that it will return a value in the range [0, 0.25)? Since any number
    is as likely to be returned as any other, we say that the probability of being
    in that range is 0.25 or 25 percent.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*P* 是表示指定随机变量事件的概率的符号，通常用于括号内的事件概率。*连续随机变量*是指来自连续样本空间的随机变量，用小写字母表示，比如 *x*。我们通常讨论的是随机变量位于样本空间某一范围内的概率，而不是某个特定的实数。例如，如果我们使用
    NumPy 的随机函数返回 [0, 1) 区间内的值，我们可以问：它返回值位于 [0, 0.25) 区间的概率是多少？由于任何数字出现的概率都是相等的，我们可以说，位于该区间的概率是0.25或25%。
- en: Humans Are Bad at Probability
  id: totrans-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 人类在概率方面很差
- en: We’ll dive into the math of probability in the next section. But before then,
    let’s look at two examples involving probability that show how bad humans can
    be at it. Both of these examples have stumped experts, not because the experts
    are somehow lacking, but because our intuitions about probability are often entirely
    incorrect, and even experts are thoroughly human.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一节深入探讨概率的数学。然而，在此之前，让我们来看两个涉及概率的例子，这些例子展示了人类在概率上的误判。两个例子都让专家们困惑，不是因为专家们有什么缺陷，而是因为我们对概率的直觉通常是完全错误的，即使是专家也难以避免这一点。
- en: The Monty Hall Dilemma
  id: totrans-20
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 蒙提霍尔难题
- en: This problem is a particular favorite of mine, as it confuses even mathematicians
    with advanced degrees. The dilemma is taken from an old American game show called
    *Let’s Make a Deal*. The original host of the show, Monty Hall, would select a
    member of the audience and show that person three large closed doors labeled 1,
    2, and 3\. Behind one of the doors was a new car. Behind the remaining two doors
    were joke prizes, such as a live goat.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题是我特别喜欢的一个问题，因为它甚至让具有高级学位的数学家感到困惑。这个难题来源于一个老的美国游戏节目，叫做*让我们做交易*。节目原主持人蒙提·霍尔会从观众中选择一位成员，并展示三个标有1、2、3的大门。在其中一扇门后面是辆新车，另外两扇门后面是一些笑话奖品，比如一只活山羊。
- en: 'The contestant was asked to pick a door. Then, Hall would ask that one of the
    doors the contestant *didn’t* pick be opened, naturally one that didn’t have a
    car behind it. After the audience stopped laughing at whatever joke prize was
    behind that door, Hall would ask the contestant if they wanted to keep the originally
    selected door, or if they would rather change their selection to the remaining
    door. The dilemma is simply that: do they keep their original guess, or do they
    switch to the remaining door?'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 参赛者被要求选择一扇门。然后，霍尔会要求打开参赛者*没有*选择的那扇门，显然是没有车的那扇门。当观众停止为那扇门后面的笑话奖品发笑后，霍尔会问参赛者是否想保持原来选择的门，还是想换到剩下的那扇门。这个难题就是这么简单：他们是保持原来的选择，还是换到剩下的那扇门？
- en: If you want to think about it for a while, please do. Put the book down, walk
    around, get out a pencil and some paper, make notes, then, when you have a solution
    (or give up), read on. . . .
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想思考一会儿，随意。放下书本，走走，拿出铅笔和纸，做些笔记，然后，当你有了答案（或放弃）时，再继续阅读……
- en: 'Here’s the right answer: change doors. If you do, you’ll win the car 2/3 of
    the time. If you don’t, you’ll only win the car 1/3 of the time, as that’s the
    probability of selecting the correct door initially: one correct choice out of
    three.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这是正确的答案：换门。如果你换，你将有 2/3 的几率赢得那辆车。如果你不换，你将只有 1/3 的几率赢得那辆车，因为这就是最初选择正确门的概率：三个选择中只有一个是正确的。
- en: When Marilyn vos Savant presented this problem in her *Parade* magazine column
    in 1990 and stated that the correct solution is to change doors, she was flooded
    with letters, many from mathematicians, some angry, insisting she was wrong. She
    wasn’t. One way to see that she was right is to use a computer program to simulate
    the game. We won’t develop the code for one here, but it isn’t too hard. If you
    write one and run it, you’ll see the probability of winning when changing doors
    converges on 2/3 as the number of simulated games increases. However, we can also
    use common sense and basic ideas about probability to see the solution.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当Marilyn vos Savant在1990年在她的*Parade*杂志专栏中提出这个问题，并声明正确的解决方法是更换门时，她收到了大量的信件，许多来自数学家，有些甚至愤怒地坚称她是错的。但她并没有错。我们可以通过使用计算机程序来模拟这个游戏，直观地看到她是对的。我们这里不打算开发代码，但其实并不难。如果你写一个并运行它，你会发现，当更换门时，获胜的概率会随着模拟游戏次数的增加而趋近于2/3。然而，我们也可以运用常识和基础的概率知识来理解这个解决方案。
- en: First, if we don’t change doors, we know we have a 1/3 probability of winning
    the car. Now, consider what can happen when we change doors. If we change doors,
    the only way we can *lose* is if we happened to select the correct door in the
    first place. Why? Suppose we initially chose one of the joke prize doors instead.
    Hall, who knows full well which door the car is behind, will never open the door
    with the car. Since we selected one of the joke doors already, he’s forced to
    choose the remaining joke door and open it for us, thereby ensuring the car is
    behind the only remaining door. If we switch doors, we win. Since there are two
    doors without the car, our chance of selecting the wrong door initially is 2/3\.
    However, we just saw that if we choose the wrong door initially and switch when
    given the opportunity, we’ll win the car. Therefore, we have a 2/3 chance of winning
    the car by changing our guess. The 1/3 probability of losing by changing our initial
    guess is, of course, the case where we initially selected the correct door.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，如果我们不更换门，我们知道有1/3的概率能赢得汽车。那么，考虑一下更换门时可能发生的情况。如果我们更换门，我们唯一可能*失败*的情况是我们一开始就选中了正确的门。为什么？假设我们最初选择了一个笑话奖品的门，而Hall知道汽车在哪扇门后，他永远不会打开汽车所在的门。既然我们已经选择了一个笑话奖品门，他只好选择剩下的一个笑话奖品门并为我们打开，从而确保汽车在唯一剩下的那扇门后。如果我们更换门，我们就能赢得汽车。由于有两扇门后没有汽车，我们最初选择错误门的概率是2/3。然而，我们刚刚看到，如果我们最初选择了错误的门并在有机会时更换，我们会赢得汽车。因此，通过更换猜测，我们有2/3的概率赢得汽车。当然，1/3的概率是我们最初选择了正确的门。
- en: Cancer or Not?
  id: totrans-27
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 有癌症还是没有癌症？
- en: This example is found in several popular books about probability and statistics
    (for instance, *More Damned Lies and Statistics*, by Joel Best [UC Press, 2004],
    and *The Drunkard’s Walk*, by Leonard Mlodinow [Pantheon, 2008]). It’s based on
    an actual study. The task is to determine the probability that a woman in her
    40s has breast cancer if she has a positive mammogram. Note that the numbers that
    follow might have been accurate when the study was conducted, but they may not
    be valid now. Please consider them only as an example.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子出现在几本关于概率与统计的流行书籍中（例如，Joel Best的*More Damned Lies and Statistics* [UC Press,
    2004]，以及Leonard Mlodinow的*The Drunkard’s Walk* [Pantheon, 2008]）。它基于一项实际研究。任务是要确定一位40多岁女性在乳腺X光检查结果为阳性时，她患有乳腺癌的概率。请注意，以下的数据在研究时可能是准确的，但现在可能已不再有效。请仅将它们作为一个示例。
- en: 'We are told the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们被告知以下内容：
- en: The probability that a randomly selected woman in her 40s has breast cancer
    is 0.8 percent (8 out of 1,000).
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随机选择一位40多岁的女性，她患有乳腺癌的概率为0.8%（每1,000人中有8人）。
- en: The probability that a woman with breast cancer will have a positive mammogram
    is 90 percent.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 患有乳腺癌的女性有90%的概率会得到阳性乳腺X光检查结果。
- en: The probability that a woman *without* breast cancer will have a positive mammogram
    is 7 percent.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有乳腺癌的女性有7%的概率会得到阳性乳腺X光检查结果。
- en: A woman comes to the clinic and is screened. The mammogram is positive. What’s
    the probability, based on what we’ve been told, that she actually has breast cancer?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一位女性来到诊所进行筛查，乳腺X光检查结果为阳性。根据我们所知道的信息，她实际上患有乳腺癌的概率是多少？
- en: 'From #1 above, we know that if we select 1,000 women in their 40s at random,
    8 of them will have breast cancer (on average). Therefore, of those 8, 90 percent
    of them (#2 above) will have a positive mammogram. This means 7 women with cancer
    will have a positive mammogram because 8 × 0.9 = 7.2\. This leaves 992 of the
    original 1,000 who don’t have breast cancer. From #3 above, 992 × 0.07 = 69.4,
    so 69 women without breast cancer will also have a positive mammogram, giving
    a total of 7 + 69 = 76 positive mammograms, of which 7 are actual cancer and 69
    are false-positive results. Therefore, the probability that a positive mammogram
    indicates cancer is 7 out of 76 or 7/76 = 0.092—about 9 percent.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 根据上面的第1条，我们知道，如果随机选取1,000位40多岁的女性，其中大约8人会患有乳腺癌。因此，在这8人中，90%的人（根据第2条）将会有阳性乳腺X光结果。这意味着7位患癌症的女性会有阳性乳腺X光结果，因为
    8 × 0.9 = 7.2。剩下的992位没有乳腺癌的女性中，根据第3条，992 × 0.07 = 69.4，因此，69位没有乳腺癌的女性也会有阳性乳腺X光结果，最终总共有7
    + 69 = 76个阳性乳腺X光结果，其中7个是真正的癌症病例，69个是假阳性结果。因此，阳性乳腺X光结果表明有癌症的概率是7/76，约为9%。
- en: The median estimate that doctors presented with this problem gave was a probability
    of cancer of around 70 percent, with over one-third giving an estimate of 90 percent.
    Probabilities are hard for humans, even for those with a lot of training. The
    doctors’ mistake wasn’t properly accounting for the probability of a randomly
    selected woman in her 40s having breast cancer. We’ll see in [Chapter 3](ch03.xhtml#ch03)
    how to calculate this result using Bayes’ theorem, which does take this probability
    into account.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 医生在面对这个问题时给出的中位数估计是癌症的概率大约为70%，其中超过三分之一的医生估计为90%。即使对于经过大量训练的专业人士来说，概率问题也是困难的。医生们的错误在于没有正确考虑到随机选取一位40多岁的女性患乳腺癌的概率。我们将在[第3章](ch03.xhtml#ch03)中看到如何利用贝叶斯定理来计算这个结果，它会考虑到这个概率。
- en: For now, let’s switch from intuition to mathematical formality.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从直觉转向数学的严谨形式。
- en: The Rules of Probability
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 概率规则
- en: Let’s get started with the basic rules of probability. These are foundational
    rules that we’ll need for the remainder of the chapter and beyond. We’ll learn
    about the probability of events, the sum rule for probabilities, and what we mean
    by a conditional probability. After that, the product rule will let us tackle
    the birthday paradox. In the birthday paradox, we’ll see how to calculate the
    minimum number of people to have together in a room such that the probability
    of at least two of them sharing a birthday exceeds 50 percent. The answer is fewer
    than you might think.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始学习概率的基本规则。这些是我们在本章及之后章节中需要的基础规则。我们将学习事件的概率、概率的求和规则，以及条件概率的含义。之后，乘积规则将帮助我们解决生日悖论。在生日悖论中，我们将学习如何计算最少需要多少人聚在一个房间里，使得至少两个人共享生日的概率超过50%。这个数字比你想象的要少。
- en: Probability of an Event
  id: totrans-39
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 事件的概率
- en: We mentioned earlier that the sum of all the probabilities for a sample space
    is one. This means that the chance of any event from the sample space is always
    less than or equal to one, since the event came from the sample space, and the
    sample space encompasses all possible events. This implies, for any event *A*,
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到过，样本空间中所有概率的总和为1。这意味着任何来自样本空间的事件的概率始终小于或等于1，因为该事件来自样本空间，而样本空间涵盖了所有可能的事件。由此可得，对于任何事件
    *A*，
- en: '![image](Images/02equ01.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/02equ01.jpg)'
- en: and, for all events *A[i]* in the sample space,
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 并且，对于样本空间中的所有事件 *A[i]*，
- en: '![image](Images/02equ02.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/02equ02.jpg)'
- en: where ∑ (sigma) means to sum over the expression on the right for each of the
    *i*’s. Think of a for loop in Python with the expression on the right as the body
    of the loop.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 ∑（sigma）表示对右侧表达式中的每个 *i* 进行求和。可以将其理解为Python中的for循环，右侧的表达式是循环体。
- en: 'If we roll a six-sided die, we intuitively (and correctly) understand that
    the probability of getting any value is the same: one out of six possibilities,
    or 1/6\. Therefore, [Equation 2.1](ch02.xhtml#ch02equ01) tells us that *P*(1),
    the probability of rolling a one, is between zero and one. This is true since
    ![image](Images/022equ01.jpg). Furthermore, [Equation 2.2](ch02.xhtml#ch02equ02)
    tells us that the sum of the probabilities of all events in the sample space must
    be one. This is also true for the six-sided die, since ![image](Images/022equ02.jpg)
    and ![image](Images/022equ03.jpg).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们掷一个六面骰子，我们直观地（而且是正确的）理解，获得任何一个数值的概率是相同的：六种可能中的一种，或者1/6。因此，[公式2.1](ch02.xhtml#ch02equ01)告诉我们，*P*(1)，掷出1的概率，介于零和一之间。这是因为![image](Images/022equ01.jpg)。此外，[公式2.2](ch02.xhtml#ch02equ02)告诉我们，样本空间中所有事件的概率和必须为1。对于六面骰子来说，这也是正确的，因为![image](Images/022equ02.jpg)和![image](Images/022equ03.jpg)。
- en: If the probability of an event happening is *P(A)*, then the probability that
    event *A does not* happen is
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事件发生的概率是*P(A)*，那么事件* A 不发生*的概率是
- en: '![image](Images/02equ03.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/02equ03.jpg)'
- en: with ![image](Images/022equ04.jpg) read as “not *A*.” ![image](Images/022equ04.jpg)
    is known as the *complement* of *A*. You’ll sometimes see ![image](Images/022equ04.jpg)
    written as *P*(¬*A*) using ¬, the logical symbol for “not.”
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 其中![image](Images/022equ04.jpg)表示“非*A*”。![image](Images/022equ04.jpg)被称为*A*的*补集*。你有时会看到![image](Images/022equ04.jpg)被写作*P*(¬*A*)，其中¬是“非”的逻辑符号。
- en: '[Equation 2.3](ch02.xhtml#ch02equ03) comes from [Equation 2.1](ch02.xhtml#ch02equ01)
    and [Equation 2.2](ch02.xhtml#ch02equ02) because the probability of an event is
    less than one and the probability of any event from the sample space happening
    is one, so the probability of events that aren’t *A* happening must be one minus
    the probability of event *A* happening.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '[公式2.3](ch02.xhtml#ch02equ03)来自[公式2.1](ch02.xhtml#ch02equ01)和[公式2.2](ch02.xhtml#ch02equ02)，因为事件的概率小于1，而样本空间中任何事件发生的概率是1，因此，事件*
    A *没有发生的概率必须是1减去事件* A *发生的概率。'
- en: For example, when rolling a die, the probability of getting a value in [1, 6]
    is one, but the probability of getting a four is 1/6\. So, the chance of *not*
    rolling a four is all the probability that remains when the chance of rolling
    a four is removed,
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当掷骰子时，获得[1, 6]范围内的数值的概率为1，但获得四的概率是1/6。因此，*不*掷出四的概率是去掉掷出四的概率后剩下的所有概率，
- en: '![image](Images/022equ05.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/022equ05.jpg)'
- en: meaning we have an 83 percent chance of not rolling a four.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们有83%的概率不会掷出四。
- en: What if we roll two dice and sum them? The sample space is the set of integers
    from 2 through 12\. However, each sum is not equally likely in this case, a situation
    that’s at the core of the casino game craps, for example. We calculate the probabilities
    of each sum by enumerating all the ways they can happen. By counting the ways
    events can happen and dividing by the total number of events, we can determine
    the probability. [Table 2-1](ch02.xhtml#ch02tab01) shows all the possible ways
    to generate each sum.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们掷两个骰子并求和呢？样本空间是从2到12的整数集合。然而，在这种情况下，每个和的可能性并不相同，这种情况正是赌场游戏“掷骰子”中的核心，例如。我们通过列举所有可能的组合来计算每个和的概率。通过计算事件发生的方式，并将其除以事件的总数，我们可以确定概率。[表2-1](ch02.xhtml#ch02tab01)展示了生成每个和的所有可能方式。
- en: '**Table 2-1:** The Number of Combinations of Two Dice Leading to Different
    Sums'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**表2-1：** 两个骰子导致不同和的组合数量'
- en: '| **Sum** | **Combinations** | **Count** | **Probability** |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| **和** | **组合方式** | **计数** | **概率** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 2 | 1 + 1 | 1 | 0.0278 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 2 | 1 + 1 | 1 | 0.0278 |'
- en: '| 3 | 1 + 2, 2 + 1 | 2 | 0.0556 |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 3 | 1 + 2, 2 + 1 | 2 | 0.0556 |'
- en: '| 4 | 1 + 3, 2 + 2, 3 + 1 | 3 | 0.0833 |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 4 | 1 + 3, 2 + 2, 3 + 1 | 3 | 0.0833 |'
- en: '| 5 | 1 + 4, 2 + 3, 3 + 2, 4 + 1 | 4 | 0.1111 |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 5 | 1 + 4, 2 + 3, 3 + 2, 4 + 1 | 4 | 0.1111 |'
- en: '| 6 | 1 + 5, 2 + 4, 3 + 3, 4 + 2, 5 + 1 | 5 | 0.1389 |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 1 + 5, 2 + 4, 3 + 3, 4 + 2, 5 + 1 | 5 | 0.1389 |'
- en: '| 7 | 1 + 6, 2 + 5, 3 + 4, 4 + 3, 5 + 2, 6 + 1 | 6 | 0.1667 |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| 7 | 1 + 6, 2 + 5, 3 + 4, 4 + 3, 5 + 2, 6 + 1 | 6 | 0.1667 |'
- en: '| 8 | 2 + 6, 3 + 5, 4 + 4, 5 + 3, 6 + 2 | 5 | 0.1389 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 8 | 2 + 6, 3 + 5, 4 + 4, 5 + 3, 6 + 2 | 5 | 0.1389 |'
- en: '| 9 | 3 + 6, 4 + 5, 5 + 4, 6 + 3 | 4 | 0.1111 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 3 + 6, 4 + 5, 5 + 4, 6 + 3 | 4 | 0.1111 |'
- en: '| 10 | 4 + 6, 5 + 5, 6 + 4 | 3 | 0.0833 |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 10 | 4 + 6, 5 + 5, 6 + 4 | 3 | 0.0833 |'
- en: '| 11 | 5 + 6, 6 + 5 | 2 | 0.0556 |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 11 | 5 + 6, 6 + 5 | 2 | 0.0556 |'
- en: '| 12 | 6 + 6 | 1 | 0.0278 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 6 + 6 | 1 | 0.0278 |'
- en: '|  |  | 36 | 1.0000 |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 36 | 1.0000 |'
- en: 'In [Table 2-1](ch02.xhtml#ch02tab01), there are 36 possible combinations of
    the two dice. We see that the most likely sum is 7, since six combinations add
    to 7\. The least likely are 2 and 12; there’s only one way to get either. If there
    are six ways to get a sum of 7, then the probability of a 7 is “6 out of 36,”
    or 6/36 ≈ 0.1667\. We’ll return to [Table 2-1](ch02.xhtml#ch02tab01) later in
    the next chapter when we discuss probability distributions and Bayes’ theorem.
    [Table 2-1](ch02.xhtml#ch02tab01) illustrates a general rule: if we can enumerate
    the sample space, then we can calculate the probabilities of specific events.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在[表2-1](ch02.xhtml#ch02tab01)中，有36种不同的掷骰子组合。我们看到最常见的和是7，因为有六种组合的和为7。最不常见的和是2和12，因为只有一种方式可以得到这两个数字。如果得到7有六种方式，那么得到7的概率就是“36中有6”，即6/36
    ≈ 0.1667。我们将在下一章讨论概率分布和贝叶斯定理时再回到[表2-1](ch02.xhtml#ch02tab01)。[表2-1](ch02.xhtml#ch02tab01)展示了一个通用规则：如果我们能列举样本空间，那么我们就能计算特定事件的概率。
- en: 'As a final example, if you flip three coins simultaneously, what is the probability
    of getting no heads, one head, two heads, or three heads? We can enumerate the
    possible outcomes and see. We get the following:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个最终示例，如果你同时抛三枚硬币，得到零个正面、一个正面、两个正面或三个正面的概率是多少？我们可以列举出所有可能的结果并查看。结果如下：
- en: '| **Heads** | **Combinations** | **Count** | **Probability** |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| **正面** | **组合** | **计数** | **概率** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 0 | TTT | 1 | 0.125 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 0 | TTT | 1 | 0.125 |'
- en: '| 1 | HTT, THT, TTH | 3 | 0.375 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 1 | HTT, THT, TTH | 3 | 0.375 |'
- en: '| 2 | HHT, HTH, THH | 3 | 0.375 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 2 | HHT, HTH, THH | 3 | 0.375 |'
- en: '| 3 | HHH | 1 | 0.125 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 3 | HHH | 1 | 0.125 |'
- en: '|  |  | 8 | 1.000 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 8 | 1.000 |'
- en: 'From this table, we claim that the probability of getting one or two heads
    in three coin flips is the same: 37.5 percent. Let’s test this with a bit of code:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个表格中，我们可以看出在抛三枚硬币时，得到一个或两个正面的概率是相同的：37.5%。让我们用一些代码来验证这个结果：
- en: import numpy as np
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: import numpy as np
- en: N = 1000000
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: N = 1000000
- en: M = 3
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: M = 3
- en: heads = np.zeros(M+1)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: heads = np.zeros(M+1)
- en: 'for i in range(N):'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 'for i in range(N):'
- en: flips = np.random.randint(0,2,M)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: flips = np.random.randint(0,2,M)
- en: h, _ = np.bincount(flips, minlength=2)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: h, _ = np.bincount(flips, minlength=2)
- en: heads[h] += 1
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: heads[h] += 1
- en: prob = heads / N
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: prob = heads / N
- en: 'print("Probabilities: %s" % np.array2string(prob))'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("概率: %s" % np.array2string(prob))'
- en: The code runs 1,000,000 tests (N) simulating the flip of three coins (M). The
    number of times each test ends up with 0, 1, 2, or 3 heads is stored in heads.
    Each test selects three values in [0, 1] (flips) and counts how many heads (a
    zero) show up. We use np.bincount for this and throw away the number of tails.
    The number of heads is then tallied, and the next set of flips happens.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码运行了1,000,000次测试（N），模拟了抛三枚硬币（M）。每次测试的结果会记录0、1、2或3个正面的出现次数，这些数据保存在heads中。每次测试选择三组[0,
    1]的值（flips），并计算出现了多少个正面（零）。我们使用np.bincount来进行此操作，忽略反面数量。正面的数量随后会被统计，并且进行下一次抛硬币。
- en: 'When all N simulations are complete, we convert the number of heads to probabilities
    by dividing by the number of simulations run (prob). Finally, we print the corresponding
    probabilities. For zero, one, two, or three heads, a single run returned the following:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当所有的N次模拟完成后，我们通过将正面数量除以总模拟次数（prob）来转换为概率。最后，我们打印出相应的概率。对于零个、一个、两个或三个正面的结果，一次运行返回了如下结果：
- en: 'Probabilities: [0.125236, 0.3751, 0.37505, 0.124614]'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 概率：[0.125236, 0.3751, 0.37505, 0.124614]
- en: These are quite close to the probabilities we calculated above, so we have confidence
    that we’re correct.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这些结果与我们之前计算的概率非常接近，因此我们可以确信我们是正确的。
- en: Sum Rule
  id: totrans-93
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 求和规则
- en: 'We’ll start with a definition: two events *A* and *B* are said to be *mutually
    exclusive* if they can’t both happen; either one or the other happens. For example,
    a coin flip is either heads or tails; it can’t be heads *and* tails. Mutually
    exclusive events mean if event *A* happens, event *B* is excluded, and vice versa.
    Additionally, if the probabilities of two events happening are completely unrelated,
    meaning the probability of *A* is unaffected by whether *B* has happened, we say
    the two events are *independent*.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从一个定义开始：如果两个事件*A*和*B*不能同时发生，我们称它们为*互斥*事件；它们只能其中一个发生。举例来说，抛硬币的结果要么是正面，要么是反面，不能是正面*和*反面同时出现。互斥事件意味着如果事件*A*发生了，那么事件*B*就被排除了，反之亦然。此外，如果两个事件的发生概率完全没有关系，即事件*A*的概率不受事件*B*是否发生的影响，我们称这两个事件是*独立*的。
- en: 'The sum rule is concerned with the probability of more than one mutually exclusive
    event happening. It tells us the probability of either event happening. For example,
    what’s the probability of rolling a four or a five with a standard die? We know
    the probability of rolling a four is 1/6, as is the probability of rolling a five.
    Since the events are mutually exclusive, we can intuit that the probability of
    getting a four *or* a five is their sum, since four and five as outcomes are both
    parts of the sample space, and either one or the other happens or neither happens.
    So, we get the following:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 加法规则涉及多个互斥事件发生的概率。它告诉我们其中一个事件发生的概率。例如，掷一颗标准骰子，掷出四点或五点的概率是多少？我们知道掷出四点的概率是1/6，掷出五点的概率也是1/6。由于这些事件是互斥的，我们可以直觉地认为，掷出四点*或*五点的概率是它们的总和，因为四点和五点作为结果都属于样本空间，而要么发生四点，要么发生五点，或者都不发生。所以，我们得到如下结果：
- en: '![image](Images/02equ04.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/02equ04.jpg)'
- en: Here ∪ means “or” or “union.” You’ll see ∪ often. For a standard die, the probability
    of rolling a four or a five is ![image](Images/024equ01.jpg), or about 33 percent.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的∪表示“或”或“并集”。你会经常看到∪。对于标准骰子，掷出四点或五点的概率是![image](Images/024equ01.jpg)，大约是33%。
- en: 'The sample space of two coin flips is {HH, HT, TH, TT}; therefore, this is
    the probability of getting two heads or two tails:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 两次抛硬币的样本空间是{HH, HT, TH, TT}；因此，这就是掷出两个正面或两个反面的概率：
- en: '![image](Images/024equ02.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/024equ02.jpg)'
- en: There’s more to the sum rule, but before we can see it, we need to consider
    the product rule.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 加法规则有更多内容，但在我们看到这些内容之前，我们需要考虑乘法规则。
- en: Product Rule
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 乘法规则
- en: 'The sum rule tells us about the probability of events *A* or *B* happening.
    The product rule tells us the probability of events *A and B*:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 加法规则告诉我们事件*A*或*B*发生的概率。乘法规则则告诉我们事件*A 和 B*同时发生的概率：
- en: '![image](Images/02equ05.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/02equ05.jpg)'
- en: Here ∩ means “and” or “intersection.”
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的∩表示“与”或“交集”。
- en: If events *A* and *B* are mutually exclusive, we will immediately see that *P*(*A*
    ∩ *B*) = 0 because if event *A* happens with probability *P*(*A*), then event
    *B*’s probability is *P*(*B*) = 0, and their product is also zero. The same is
    true if event *B* happens; then *P*(*A*) = 0.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事件*A*和*B*是互斥的，我们可以立即看到*P*(*A* ∩ *B*) = 0，因为如果事件*A*发生的概率是*P*(*A*)，那么事件*B*的概率是*P*(*B*)
    = 0，它们的乘积也为零。如果事件*B*发生，则*P*(*A*) = 0，结果也是一样的。
- en: Not all events are mutually exclusive, of course. For example, assume 80 percent
    of the people in the world have brown eyes and 50 percent are female. What’s the
    probability of a randomly selected person being a female with brown eyes? Let’s
    use the product rule,
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，并不是所有事件都是互斥的。例如，假设世界上80%的人有棕色眼睛，50%的人是女性。那么，随机选择一个人是棕眼女性的概率是多少？我们可以使用乘法规则来计算，
- en: '*P*(female, brown-eyed) = *P*(female)*P*(brown-eyed) = 0.5(0.8) = 0.4'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*P*(女性，棕眼) = *P*(女性)*P*(棕眼) = 0.5(0.8) = 0.4'
- en: to see there is a 40 percent chance of a randomly selected person being a brown-eyed
    female.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 可以看出，随机选择一个人是棕眼女性的概率是40%。
- en: The product rule makes sense if we think about it a bit. Calculating the fraction
    of people, which is the probability, who are female won’t change the fraction
    of those females who are brown-eyed. One event, being female, has no impact on
    the other event, being brown-eyed.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 乘法规则是有道理的，如果我们稍微思考一下。计算女性的比例（即概率）不会改变这些女性中有棕色眼睛的比例。一个事件——成为女性——对另一个事件——有棕色眼睛——没有影响。
- en: 'The product rule isn’t limited to only two events. Consider the following.
    According to insurance companies, the probability of being struck by lightning
    in any given year, if you live in the US, is about 1/1,222,000, or 0.000082 percent.
    What’s the probability of being a brown-eyed female and being struck by lightning
    in any given year, assuming you live in the US? Again, we can use the product
    rule:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 乘法规则不仅限于两个事件。考虑以下情况。根据保险公司数据，在美国，每年被闪电击中的概率大约是1/1,222,000，即0.000082%。假设你住在美国，成为一个棕眼女性并在任何一年内被闪电击中的概率是多少？同样，我们可以使用乘法规则：
- en: '![image](Images/025equ01.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/025equ01.jpg)'
- en: 'The population of the United States is about 331,000,000, of which 0.000033
    percent are brown-eyed females who’ll be struck by lightning this year: 109 people,
    by our calculation above. According to the US National Weather Service, about
    270 people will be struck by lightning in a given year. As we saw above, 40 percent
    of those people will be brown-eyed females, which yields 270(0.4) = 108\. So,
    our calculation is entirely believable.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Sum Rule Revisited
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We stated above that there’s more to the sum rule. Let’s see now what we were
    missing above. [Equation 2.4](ch02.xhtml#ch02equ04) gives us the sum rule for
    mutually exclusive events *A* and *B*. What if the events aren’t mutually exclusive?
    In that case, the sum rule needs to be modified:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02equ06.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
- en: Let’s look at an example.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: An archaeologist has discovered a small cache of 20 ancient coins. He notes
    that 12 of the coins are Roman and 8 are Greek. He also notes that 6 of the Roman
    coins and 3 of the Greek coins are silver. The remaining coins are bronze. What’s
    the probability of selecting a silver or Roman coin from the cache?
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 'If we believe that silver and Roman are mutually exclusive, we’d be tempted
    to say the following:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/026equ01.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
- en: However, the sum of the two probabilities is ![image](Images/026equ02.jpg),
    and we *can’t* have a probability greater than one. Something is amiss.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: 'The problem is that there are Roman coins in the cache that are made of silver.
    We counted them twice—once in *P* (silver) and again in *P*(Roman)—so now we need
    to subtract them from the overall sum. There are six silver Roman coins. So, the
    probability of being a silver Roman coin is *P*(silver and Roman)![image](Images/026equ03.jpg).
    Subtracting that part, we see that the probability of picking a silver coin or
    a Roman coin is 75 percent:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/026equ04.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
- en: As with the sum rule, there’s more to the product rule, and we’ll get to that
    shortly. But first, let’s use the product rule to see if we can solve the birthday
    paradox.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: The Birthday Paradox
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: On average, how many people do we need together in a room to have a higher than
    50 percent chance that two of them share the same birthday? This problem is known
    as the *birthday paradox*. Let’s see if we can use our knowledge of the product
    rule for probability to see what the solution is.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll ignore leap years and state that there are 365 days in a year. Intuitively,
    we see that the probability of randomly selected people sharing a birthday is
    one day (the shared birthday) out of 365 possible birthdays in a year. The sample
    space is 365 days, and the shared birthday is the one day in common. So, we get
    the following:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/027equ01.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
- en: 'They either share a birthday or they don’t: 1 – 1/365 = 365/365 – 1/365 = 364/365\.
    So we get the following:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/027equ02.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
- en: Of the 365 days in a year, there is one possible match, leaving 364 days that
    don’t match.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: A 0.3 percent chance of randomly selected people sharing a birthday is pretty
    low. It means if you randomly choose pairs of people and ask if they share a birthday,
    on average you’ll get three matches in a thousand—not terribly likely.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 随机选择的人中有0.3%的机会共享生日，这个概率相当低。这意味着如果你随机选择一对人，并询问他们是否共享生日，平均每千对中会有三对匹配，这不太可能发生。
- en: For our calculation, we’ll look at things the other way. We’re looking for the
    number of people we need together so that the probability of *no* two people sharing
    a birthday is below 50 percent.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的计算，我们将以另一种方式来看待事情。我们要找到需要聚集在一起的人数，以便使得没有两个人分享生日的概率低于50%。
- en: 'We know the probability that two randomly selected people *don’t* share a birthday:
    ![image](Images/027equ03.jpg). Therefore, if we select two pairs of people at
    random, the probability that both pairs do not share a birthday is the following:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道两个随机选择的人不共享生日的概率是![image](Images/027equ03.jpg)。因此，如果我们随机选择两对人，两对都不共享生日的概率如下：
- en: '![image](Images/027equ04.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/027equ04.jpg)'
- en: 'Here, we’re using the product rule. Similarly, with three people, *(A*, *B*,
    *C*), we can form three different pairs, *(A*, *B*), (*A*, *C*), and (*B*, *C*),
    so we calculate the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用乘法法则。同样，对于三个人*(A*, *B*, *C*)，我们可以形成三个不同的对，*(A*, *B*)，(*A*, *C*)和(*B*,
    *C*)，所以我们计算如下：
- en: '![image](Images/027equ05.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/027equ05.jpg)'
- en: 'For *n* comparisons, here’s the probability that none share a birthday:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 对于*n*次比较，这里是没有共享生日的概率：
- en: '![image](Images/02equ07.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/02equ07.jpg)'
- en: Our task is to find the minimum number of comparisons, *n*, leading to a probability
    of no shared birthday < 50 percent, where *n* is a function of the number of people
    in the room, *m*. Why less than 50 percent? Because if we find an *n* leading
    to a less than 50 percent probability that there is no shared birthday, the probability
    that there *is* a shared birthday must then be > 50 percent.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的任务是找到最小的比较次数*n*，使得没有共同生日的概率小于50%，其中*n*是房间中人数*m*的函数。为什么小于50%？因为如果我们找到一个*n*，使得没有共同生日的概率小于50%，那么有共同生日的概率就一定大于50%。
- en: If you pick three people at random, there are three pairs of people to check
    to see if they share a birthday. If you have four people, there are six pairs.
    So, the larger the group of people, the more pairs there are. Can we find a rule
    that maps the number of people, *m*, to the number of pairs to compare, *n*? If
    we have that, we can find the smallest *m* leading to an *n* where the probability
    of [Equation 2.7](ch02.xhtml#ch02equ07) is < 50 percent.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你随机挑选三个人，就有三对人要检查是否有共同生日。如果有四个人，就有六对人。所以，人群越大，可以形成的对数就越多。我们能否找到一个规则，将人数*m*映射到需要比较的对数*n*？如果我们有了这个规则，我们就可以找到最小的*m*，使得*n*在这个情况下的[方程2.7](ch02.xhtml#ch02equ07)的概率小于50%。
- en: 'When we have a set of *m* unique objects, like people in a room, and we select
    pairs of them, how many different pairs can we select? In other words, how many
    combinations of *m* things are there when taken two at a time? The formula to
    calculate the number of combinations of *m* things taken *k* at a time is this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有一组*m*个唯一的对象，比如房间里的人，我们从中选择成对的对象时，我们能选择多少不同的对？换句话说，当我们从*m*个物体中取出两个物体时，有多少种组合？计算从*m*个物体中取*k*个物体的组合数的公式如下：
- en: '![image](Images/028equ01.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/028equ01.jpg)'
- en: You’ll sometimes hear this referred to as “*m* choose *k*,” where, for us, *k*
    = 2\. Let’s find the number of comparisons we need, *n*, and use the number of
    combinations of things taken two at a time to find an *m* leading to at least
    *n* comparisons.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你会听到这被称为“*m* choose *k*”，对于我们来说，*k* = 2。让我们找到我们需要的比较次数*n*，并使用两两选择的物体组合数来找到至少*n*次比较的*m*。
- en: 'A straightforward loop in Python locates the *n* we need:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，一个简单的循环可以找到我们需要的*n*：
- en: 'for n in range(300):'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 'for n in range(300):'
- en: 'if ((364/365)**n < 0.5):'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 'if ((364/365)**n < 0.5):'
- en: print(n)
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: print(n)
- en: break
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: break
- en: 'We’re told *n* = 253\. So, we need to make, on average, 253 comparisons, 253
    pairs of people, to have a greater than 50 percent chance that one of those pairs
    shares a birthday. The final step is to find how many combinations of *m* people
    taken two at a time are at least 253\. A bit of brute force trial and error tells
    us this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道*n* = 253。因此，我们需要平均进行253次比较，253对人，才能有超过50%的概率，其中一对共享生日。最后一步是找出至少有253对的*m*人中的多少种两两组合。一点点试探和误差告诉我们这一点：
- en: '![image](Images/028equ02.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/028equ02.jpg)'
- en: We need *m* = 23 people on average to have a higher than 50 percent chance at
    least two of them share a birthday. All thanks to the product rule.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: 'Is our result reliable or just sleight of hand? Some code can tell us. First,
    let’s verify via simulation that the probability of randomly picking two people
    who share a birthday is 0.3 percent:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: match = 0
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'for i in range(100000):'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: a = np.random.randint(0,364)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: b = np.random.randint(0,364)
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: 'if (a == b):'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: match += 1
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: print("Probability of a random match = %0.6f" % (match/100000,))
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'The code simulates 100,000 random pairs of people, where the random integer
    in [0, 364] represents the person’s birthday. If the two random birthdays match,
    match is incremented. After all simulations run, we print the probability. A run
    of this code produced the following, making our assertion of a 0.3 percent chance
    believable:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Probability of a random match = 0.003100
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: 'What about the number of people to get a > 50 percent chance of sharing a birthday?
    Here, we have two loops. The first is over the number of people in the room (m),
    and the second is over the number of simulations for that many people in the room
    (n). In code, that looks like this:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'for m in range(2,31):'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: matches = 0
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: 'for n in range(100000):'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: match = 0
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: b = np.random.randint(0,364,m)
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: 'for i in range(m):'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: 'for j in range(m):'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: 'if (i != j) and (b[i] == b[j]):'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: match += 1
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: 'if (match != 0):'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: matches += 1
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: print("%2d %0.6f" % (m, matches/100000))
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: We let m range over 2 to 30 people. For each set of m people, we run 100,000
    simulations. For each simulation, we pick a set of birthdays for each person in
    the room (b) and then compare each person with every other person to see if there’s
    a matching birthday. If there is, we increment match. If we had at least one match,
    we increment matches and move to the next simulation. Finally, when all of the
    simulations for the current number of people in the room are complete, we print
    the probability of at least a single match.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: If we run the code and plot the output, we get [Figure 2-1](ch02.xhtml#ch02fig01),
    where the dashed line is 50 percent. The first point above the dashed line is
    23 people, precisely as we calculated.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02fig01.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
- en: '*Figure 2-1: The probability of a shared birthday as a function of the number
    of people in a room*'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: It’s always satisfying to see the simulation line up with the math.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: Conditional Probability
  id: totrans-180
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Consider a bag of 10 marbles: 8 red and 2 blue. We know if we pick a marble
    at random from the bag, we have a 2 out of 10, or 20 percent, chance of picking
    a blue marble. Say we pick a blue marble. After admiring its pretty shade of blue,
    we put it back in the bag, shake the bag, and pull out another marble. What’s
    our chance of picking a blue marble a second time? Again, there are 2 blue marbles
    and 10 total, so it’s still 20 percent.'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: If the fact that event *A* happened (here, picking a blue marble that we then
    returned to the bag) hasn’t affected the probability of a future event *B*, the
    two are independent events. Our chance of picking a blue marble a second time
    is in no way affected by the fact that we previously chose a blue marble. The
    same is true for a coin flip. The fact that we’ve landed heads up four times in
    a row has nothing to do with the probability of getting tails on the next flip,
    assuming it’s a fair coin, i.e., it’s not weighted on one side or two-headed (or
    two-tailed).
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Now, consider an alternate scenario. We still have a bag with eight red and
    two blue marbles. We pick a marble—say it’s red this time—and because we like
    the color, we keep the marble and put it aside. Now, we pick another marble from
    the bag. What’s the probability of picking another red marble? Here, things have
    changed. There are nine marbles now, and seven of them are red. So, our chance
    of picking a second red marble is now 7 of 9, or 78 percent. The possibility of
    choosing a red marble initially was 8 of 10, or 80 percent. The fact that event
    *A* happened, picking a red marble we then kept, has altered the probability of
    a second event. The two events are no longer independent. The probability of the
    second event was changed by the first event happening. Notationally, we write
    *P**(B*|*A*) to mean the probability of event *B given* event *A* has happened.
    This is a *conditional probability* because it’s conditional on event *A* happening.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: Here’s where we update the product rule. The version in [Equation 2.5](ch02.xhtml#ch02equ05)
    assumes that the two events are independent, like being female and having brown
    eyes. If we have a dependent situation, the rule becomes
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02equ08.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
- en: meaning the probability of the two events both happening is the product of the
    probability of one given the other has happened and the probability of the other.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: 'Looking back at our marble example above, we calculated the probability of
    picking a red marble after already picking and keeping a red marble to be 7 of
    9, or about 78 percent. That’s *P**(B*|*A*). For *P(A*), we need the probability
    of picking a red marble initially, which we said was 80 percent. Therefore, the
    probability of picking a red marble that we keep, *A*, and picking a red marble
    on a second draw, *B*, is 62 percent:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/031equ01.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
- en: If two events are mutually exclusive, *P**(B*|*A*) = *P*(*A*|*B*) = 0\. If events
    *A* and *B* are independent, then *P*(*A*|*B*) = *P*(*A*) and *P*(*B*|*A*) = *P*(*B*)
    because the conditional event happening or not has no influence on the later event.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Finally, note that typically *P**(B*|*A*) ≠ *P*(*A*|*B*), and confusing the
    two conditional probabilities is a common and often serious error. As we’ll see
    in [Chapter 3](ch03.xhtml#ch03), something called Bayes’ theorem gives the proper
    relationship between the conditional probabilities. We’ll encounter conditional
    probability again when discussing the chain rule for probability.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: Total Probability
  id: totrans-191
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If our sample space is separated into disjoint regions, *B[i]* (*B*[1], *B*[2],
    etc.) so that the totality of the sample space is covered by the collection of
    *B[i]*s and the *B*[i]s don’t overlap, we can calculate the probability of an
    event over all the partitions as the following:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/031equ02.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
- en: Here *P**(A*|*B[i]*) is the probability of *A* given partition *B[i]* and *P*(*B[i]*)
    is the probability of partition *B[i]*, which is the amount of the sample space
    that *B[i]* represents. In this view, *P**(A*) is the *total probability* of *A*
    over the partitions, *B[i]*. Let’s see an example of how to use this law.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: 'You have three cities, Kish, Kesh, and Kuara, and their populations are 2,000,
    1,000, and 3,000, respectively. Additionally, the percentages of people with blue
    eyes in these cities are 12 percent, 3 percent, and 21 percent, respectively.
    We want to know the probability that a randomly selected person from among the
    cities has blue eyes. The cities’ populations affect things, as the probability
    of having blue eyes varies by city and the cities vary in population. To find
    *P*(blue), we use the total probability:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/032equ01.jpg)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
- en: Here *P*(blue|Kish) is the probability of having blue eyes given you live in
    Kish, and *P* (Kish) is the probability of living in Kish, and so on.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: 'We know the necessary quantities to find the total probability. The probability
    of blue eyes per city is given above, and the probability of living in each city
    is found from its population and the total population of the three cities:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/032equ02.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_IMG
- en: Therefore, *P*(blue) is
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/032equ03.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
- en: 'meaning there is a 15 percent chance a randomly selected inhabitant of the
    three cities will have blue eyes. Note the sum of the probabilities for selecting
    the cities: *P*(Kish) + *P*(Kesh) + *P*(Kuara) = 1\. This must be the case for
    the partitioning of the total sample space, all the inhabitants of the cities,
    to be covered by the partitioning into cities.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Joint and Marginal Probability
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The *joint probability* of two variables, *P**(X* = *x*, *Y* = *y*), is the
    probability that random variable *X* will have the value *x* at the same time
    random variable *Y* is *y*. We’ve already seen an example of a joint probability.
    When we use “and” when calculating a probability, we’re calculating a joint probability.
    A joint probability is the probability of multiple conditions being true at the
    same time, which is “and.” The *marginal probability* is what we get when we calculate
    the probability of one or more of those conditions without caring about the value
    of the others; in other words, the probability of a subset of the random variables
    in the “and.”
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we’ll examine joint and marginal probabilities using simple
    tables. We’ll then introduce the chain rule for probability. This rule lets us
    break down a joint probability into the product of smaller joint probabilities
    and conditional probabilities.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: Joint Probability Tables
  id: totrans-206
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: According to Colour Blind Awareness (*[http://www.colourblindawareness.org/](http://www.colourblindawareness.org/)*),
    approximately 1 in 12 men and 1 in 200 women are color-blind. The difference comes
    from the fact that the affected gene is on the X chromosome, requiring a woman
    to inherit the recessive gene from both her mother and father. A man need only
    inherit the gene from one parent.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: 'Pretend we survey 1,000 people. We can count the number of people who are male
    and color-blind, female and color-blind, male and not color-blind, and female
    and not color-blind. We do this and arrange the data in a table like so:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **Color-blind** | **Not color-blind** |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
- en: '| **Male** | 42 | 456 | 498 |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
- en: '| **Female** | 3 | 499 | 502 |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
- en: '|  | 45 | 955 | 1000 |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
- en: Tables like these are known as *contingency tables*. The tallied data is in
    the center 2 × 2 numerical portion of the table. The rightmost column is the sum
    across the rows, and the final row is the sum of the columns. The sum of the final
    row or column is in the last cell and, by necessity, sums to the 1,000 people
    we surveyed.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: 'We can turn the contingency table into a table of probabilities by dividing
    each cell by 1,000, the number of people surveyed. Doing this gives us the following:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '|  | **Color-blind** | **Not color-blind** |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
- en: '| **Male** | 0.042 | 0.456 | 0.498 |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
- en: '| **Female** | 0.003 | 0.499 | 0.502 |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
- en: '|  | 0.045 | 0.955 | 1.000 |'
  id: totrans-220
  prefs: []
  type: TYPE_TB
- en: The table is now a joint probability table. With it, we can look up the probability
    of being male and color-blind. Notationally, we write
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '*P*(sex = male, color-blind = yes) = 0.042'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: and, similarly, we see that
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '*P*(sex = female, color-blind = no) = 0.499'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: Using the joint probability table, we can predict what we would expect to measure
    given a random sample of people. For example, if we have a sample of 20,000 people,
    then, based on our table, we’ll expect to find about 20000(0.042) = 840 color-blind
    men and about 20000(0.003) = 60 color-blind women.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: What if we wanted to know the probability of being color-blind regardless of
    sex? For that, we sum the probabilities along the color-blind column and see that
    there is a 4.5 percent chance that a randomly selected person is color-blind.
    Likewise, summing along the row gives us an estimated probability of being female
    as 50.2 percent. We do need to bear in mind that our table was built from a sample
    of only 1,000 people. You might guess that if we had instead sampled 100,000 people,
    our split between male and female would be closer to 50/50, and you’d be right.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: Calculating the probability of being color-blind or female from the joint probability
    table is calculating a marginal probability. In the first case, we summed along
    the column to remove the effect of sex, whereas in the second case, we summed
    along the row to remove the effect of color-blindness.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: 'Mathematically, we get the marginal probabilities by summing across the variables
    we don’t want. If we have a joint probability table for two variables, like the
    example above, we get the marginal probabilities by summing:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/034equ01.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
- en: Using the table above, we can write
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/034equ02.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
- en: where we sum across sex to remove its effect. Now, let’s explore another table,
    one with three variables.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: 'Sometime during the night of April 14, 1912, the RMS *Titanic* sank in the
    North Atlantic on its maiden voyage from England to New York City. Based on a
    sample of 887 people who were on board the *Titanic*, we can generate [Table 2-2](ch02.xhtml#ch02tab02)
    showing the joint probability for three variables: survival, sex, and cabin class.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: '**Table 2-2:** Joint Probability Table for *Titanic* Passengers'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: '|  |  | **Cabin1** | **Cabin2** | **Cabin3** |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
- en: '| **Dead** | **Male** | 0.087 | 0.103 | 0.334 |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
- en: '| **Female** | 0.003 | 0.007 | 0.081 |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
- en: '| **Alive** | **Male** | 0.051 | 0.019 | 0.053 |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
- en: '| **Female** | 0.103 | 0.079 | 0.081 |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
- en: Let’s use [Table 2-2](ch02.xhtml#ch02tab02) to calculate some probabilities.
    Note, we’ll use the values in [Table 2-2](ch02.xhtml#ch02tab02), which are accurate
    to three decimals. As a result, the overall numbers will be slightly off from
    the probabilities we’d calculate from the counts, but doing this makes the link
    between the table and the equations more concrete.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we can read directly from the table for specific triplets of survived,
    sex, and cabin class. Here’s an example:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
- en: '*P*(dead, male, cabin3) = 0.334'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
- en: 'This means the probability of a randomly selected passenger being a man who
    was in a third-class cabin and didn’t survive is 33 percent. What about men in
    first class? That’s in the table too:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
- en: '*P*(dead, male, cabin1) = 0.087'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: This means that a selected passenger has a 9 percent chance of being a man in
    first class who died. We can see that class differences, in cabins and society,
    mattered quite a bit.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s use the table to calculate some other joint and marginal probabilities.
    First, what’s the probability of not surviving? To find it, we need to sum over
    sex and cabin:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02equ09.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
- en: Here we’ve introduced a shorthand notation for male/female (*M*/*F*) and cabin
    class (1, 2, 3).
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s calculate the probability of not surviving *given* the passenger was
    male, *P*(dead|*M*). To do this, we look back to [Equation 2.8](ch02.xhtml#ch02equ08),
    remembering that the “and” implies a joint probability. We rewrite [Equation 2.8](ch02.xhtml#ch02equ08)
    to solve for *P*(*B*|*A*):'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/035equ01.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
- en: This is sometimes used to define the conditional probability in the first place.
    Note, *P**(A*, *B*) means *P*(*A* and *B*)—both are joint probabilities. Using
    this form, the probability of not surviving given the passenger is male is
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/036equ01.jpg)'
  id: totrans-253
  prefs: []
  type: TYPE_IMG
- en: where *P*(dead, *M*) is the joint probability of being dead and male, and *P*(*M*)
    is the probability of being male.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
- en: We need to be careful when thinking about the probabilities. *P*(dead, *M*)
    is not the probability of not surviving if the passenger is male. Instead, it’s
    the probability of a randomly selected passenger being a male who didn’t survive.
    What we want is *P*(dead|*M*), which is the probability of not surviving given
    a passenger was male.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: 'To get *P*(dead, *M*), we need to sum over cabin class:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02equ10.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
- en: 'To get *P*(*M*), we sum over survival and cabin class:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02equ11.jpg)'
  id: totrans-259
  prefs: []
  type: TYPE_IMG
- en: 'To finally calculate *P*(dead|*M*):'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/036equ02.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
- en: This tells us that 81 percent of the male passengers didn’t survive.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: 'A similar calculation, shown below, tells us the probability of being female
    and surviving:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/036equ03.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
- en: We see that women were far more likely to survive than men. Here’s one instance
    where the phrase “women and children first” was actually the case. I leave it
    as an exercise for you to calculate the individual probabilities in *P*(alive|*F*).
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: We’ve calculated *P*(dead, *M*), the probability of being a male who did not
    survive; *P*(*M*), the probability of being male; and *P*(dead|*M*), the probability
    of not surviving given being a male. Let’s do one more calculation based on [Table
    2-2](ch02.xhtml#ch02tab02). Let’s find *P*(dead or *M*), the probability of not
    surviving, or being male.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
- en: '[Equation 2.6](ch02.xhtml#ch02equ06) tells us that this is the probability:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/037equ01.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
- en: If we look at [Equation 2.9](ch02.xhtml#ch02equ09) and [Equation 2.11](ch02.xhtml#ch02equ11),
    we see that both have the same terms, the very terms summed in [Equation 2.10](ch02.xhtml#ch02equ10).
    This is why we must subtract *P*(dead, *M*) from the calculation of *P*(dead or
    *M*) to avoid double-counting.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize, then:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: The joint probability is the probability of two or more random variables having
    a specific set of values. The joint probability is often represented as a table.
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The marginal probability for a random variable is found by summing over all
    the possible values of the other random variables.
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The product rule with a conditional probability tells us how to calculate the
    joint probability given a conditional probability and an unconditional probability
    when we have two random variables. Let’s now see how to use the chain rule for
    probability to generalize that idea.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: Chain Rule for Probability
  id: totrans-274
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '[Equation 2.8](ch02.xhtml#ch02equ08) tells us how to calculate the joint probability
    for two random variables in terms of the conditional probability. By using the
    *chain rule for probability*, we can expand [Equation 2.8](ch02.xhtml#ch02equ08)
    and calculate the joint probability for more than two random variables.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: 'In its generic form, the chain rule for the joint probability of *n* random
    variables is as follows:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/02equ12.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
- en: Here ⋂ is used to indicate “and” for joint probabilities. [Equation 2.12](ch02.xhtml#ch02equ12)
    looks impressive, but it’s not hard to follow, as we’ll see with a few examples.
    I need to use ⋂ in the equation for the joint part of the conditional probabilities,
    but in the examples, I’ll use a comma, and you’ll see the pattern quickly enough.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s how the chain rule breaks up a joint probability with three random variables:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/038equ01.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
- en: The first line says the probability of *X*, *Y*, and *Z* is the product of the
    probability of *X* given *Y* and *Z* and the probability of *Y* and *Z*. This
    is [Equation 2.8](ch02.xhtml#ch02equ08) with *X* for *B* and *Y*, *Z* for *A*.
    The second line applies the chain rule to *P*(*Y*, *Z*) to get *P*(*Y*|*Z*)*P*(*Z*).
    The rule can be applied in sequence, like a chain, hence the name.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
- en: 'What about a joint probability with four random variables? We get the following:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/038equ02.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
- en: Let’s work through an example that uses the chain rule. Say we’re very social
    and have 50 people at our party. Four of the 50 people have been to Boston in
    the fall. We pick three people at random. What’s the probability that *none* of
    them have been to Boston in the fall?
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ll use *A[i]* to indicate the event of a person who has not been to Boston
    in the fall. Therefore, what we want to find is *P*(*A*[3], *A*[2], *A*[1]), the
    probability of three people all of whom have not been to Boston in the fall. The
    chain rule lets us break this probability up like so:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/038equ04.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
- en: We can work with the right-hand side of this equation intuitively. Look at *P*(*A*[1]).
    This is the probability of picking a random person in the room who has not been
    to Boston in the fall. Four of the people have, so 46 have not, and we see that
    *P*(*A*[1]) = 46/50\. Once we have a person picked, we need to know the probability
    of selecting a second person from the remaining 49, that’s *P*(*A*[2]|*A*[1])
    = 45/49\. There are only 49 people left, and we haven’t selected one of the four
    who has been to Boston in the fall. Finally, we have two people selected, so there
    are 48 people in the room, 44 of whom have not been to Boston in the fall. This
    means *P*(*A*[3]|*A*[2], *A*[1]) = 44/48.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
- en: 'We are now ready to answer our initial question. The probability of selecting
    three people from the room with none of them having been to Boston in the fall
    is as follows:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: '![image](Images/038equ03.jpg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
- en: That’s slightly more than 77 percent.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: 'We can check if our calculation is reasonable by simulating many draws of three
    people. This is the code we need:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: nb = 0
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
- en: N = 100000
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: 'for i in range(N):'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: s = np.random.randint(0,50,3)
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: fail = False
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: 'for t in range(3):'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: 'if (s[t] < 4):'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: fail = True
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
- en: 'if (not fail):'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
- en: nb += 1
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
- en: print("No Boston in the fall = %0.4f" % (nb/N,))
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
- en: We’ll run 100,000 simulations. Every time we select three people out of 50 who
    haven’t been to Boston in the fall, we’ll increment nb. We simulate selecting
    three people by choosing three random integers in the range [0, 50) and putting
    them in s. Then, we look at each of the three integers, asking if any are less
    than four. If any are, we say we selected a person who has been to Boston and
    set fail to True. If none of the three integers are less than four, we were successful
    with this simulation. When done, we print the fraction of simulations that did
    sample three people who never went to Boston in the fall.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
- en: Running this code produced
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: No Boston in the fall = 0.7780
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
- en: which is close enough to our calculated value to give us confidence that we
    found the correct answer.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-307
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This chapter introduced the fundamentals of probability. We explored basic concepts
    of probability, including sample spaces and random variables. We followed with
    some examples of how poor humans can be at probability. After that, we considered
    the rules of probability, with examples. The rules led us to joint and marginal
    probabilities and finally to the chain rule for probabilities.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter continues our tour of probability, starting with probability
    distributions and how to sample from them and ending with Bayes’ theorem, which
    shows us correct way to compare conditional probabilities.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
