["```py\nIn [1]: 4 % 2\nOut[1]: 0\n```", "```py\nIn [2]: 9**0.5\nOut[2]: 3.0\n```", "```py\nIn [3]: 27**(1/3)\nOut[3]: 3.0\n```", "```py\nIn [4]: x = 5\n\nIn [5]: x = x + 5\n\nIn [6]: x\nOut[6]: 10\n```", "```py\nIn [7]: x += 5\n\nIn [8]: x\n\nOut[8]: 15\n```", "```py\nIn [9]: x *= 2\n\nIn [10]: x\nOut[10]: 30\n```", "```py\nIn [11]: 10**2 + (6 - 2) / 2 * 3\nOut[11]: 106.0\n```", "```py\nIn [12]: 10 ** 2 + (6-2)/2*3\nOut[12]: 106.0\n```", "```py\nIn [13]: import math\n\nIn [14]: x = math.radians(45)\n\nIn [15]: math.cos(x)\nOut[15]: 0.7071067811865476\n```", "```py\nIn [16]: cos_x = math.cos(x)\n\nIn [17]: cos_x\nOut[17]: 0.7071067811865476\n```", "```py\nIn [18]: 100 * math.pi\nOut[18]: 314.1592653589793\n```", "```py\nIn [16]: 25 / 'five'\nTraceback (most recent call last):\n\nFile ″C:\\Users\\hanna\\AppData\\Local\\Temp/ipykernel_8852/1797604750.py″, line 1, in <module>\n25 / 'five'\n\nTypeError: unsupported operand type(s) for /: 'int' and 'str'\n```", "```py\nIn [20]: x = 42 / 0\nTraceback (most recent call last):\n\nFile ″C:\\Users\\hanna\\AppData\\Local\\Temp/ipykernel_22688/3599633117.py″, line 1, in <module>\n42 / 0\n\nZeroDivisionError: division by zero\n```", "```py\nIn [21]: type(0.5)\nOut[21]: float\n\nIn [22]: type(0)\nOut[22]: int\n```", "```py\nIn [23]: x = 42\n\nIn [24]: isinstance(x, int)\nOut[24]: True\n\nIn [25]: isinstance(x, str)\nOut[25]: False\n```", "```py\nIn [26]: whole_number = 42\n\nIn [27]: type(whole_number)\nOut[27]: int\n```", "```py\nIn [28]: 30_000_000 * 2\nOut[28]: 60000000\n```", "```py\nIn [29]: 0.1 + 0.1 + 0.1\nOut[29]: 0.30000000000000004\n```", "```py\nIn [30]: x = 42 * 2\n\nIn [31]: x\nOut[31]: 84\n\nIn [32]: type(x)\nOut[32]: int\n\nIn [33]: y = 42 / 2\n\nIn [34]: y\nOut[34]: 21.0\n\nIn [35]: type(y)\nOut[35]: float\n```", "```py\nIn [36]: x = 5\n\nIn [37]: type(x)\nOut[37]: int\n\nIn [38]: x += 0.0\n\nIn [39]: type(x)\nOut[39]: float\n```", "```py\nIn [40]: x = float(5)\n```", "```py\nIn [41]: x = float(x)\n```", "```py\nIn [42]: y = 5.8\n\nIn [43]: y = int(y)\n\nIn [44]: y\nOut[44]: 5\n```", "```py\nIn [45]: y = 5.89\n\nIn [46]: y = round(5.89)\n\nIn [47]: y\nOut[47]: 6 In [48]: type(y)\nOut[48]: int\n```", "```py\nIn [49]: y = 5.89\n\nIn [50]: y = round(y, 1)\n\nIn [51]: y\nOut[51]: 5.9\n```", "```py\nIn [52]: round(5.678, 2)\nOut[52]: 5.68\n```", "```py\nIn [53]: round(5.5)\nOut[53]: 6\n\nIn [54]: round(4.5)\nOut[54]: 4\n```", "```py\nIn [55]: a_string = \"Hello, World!\"\n\nIn [56]: print(a_string)\nHello, World!\n\nIn [57]: type(a_string)\nOut[57]: str \n\nIn [58]: type('1234')\nOut[58]: str\n\nIn [59]: \"\"\"Multiline strings can be encased in triple quotes \\\n    ...: so you don't have to type the marks over and over \\\n ...: like a chump.\"\"\"\nOut[59]: \"Multiline strings can be encased in triple quotes so you don't have\nto type the marks over and over like a chump.\"\n```", "```py\nIn [60]: 'Hello, ' \\\n    ...: 'World!'\nOut[60]: 'Hello, World!'\n```", "```py\n\"\"\"\n\n0 | 1 | 2\n---------\n3 | 4 | 5\n---------\n6 | 7 | 8\n\n\"\"\"\n```", "```py\nIn [61]: x = 42\n\nIn [62]: type(x)\nOut[62]: int\n\nIn [63]: x = str(x)\n\nIn [64]: type(x)\nOut[64]: str\n```", "```py\nIn [65]: print('I don\\'t have a banana.')\nI don't have a banana.\n```", "```py\nIn [66]: print(\"I don't have an apple\\\\banana.\")\nI don't have an apple\\banana.\n```", "```py\nIn [67]: print('C:\\\\Users\\\\hanna\\\\anaconda3\\\\envs')\nC:\\Users\\hanna\\anaconda3\\envs\n```", "```py\nIn [68]: print(r'C:\\Users\\hanna\\anaconda3\\envs')\nC:\\Users\\hanna\\anaconda3\\envs\n```", "```py\nIn [69]: 'Hello, ' + 'world!'\nOut[69]: 'Hello, world!'\n```", "```py\nIn [70]: 'Hello,' + ' ' + 'world!'\nOut[70]: 'Hello, world!'\n```", "```py\nIn [71]: 'Ha' * 7\nOut[71]: 'HaHaHaHaHaHaHa'\n```", "```py\nIn [72]: '-' * 20\nOut[72]: '--------------------'\n```", "```py\nIn [73]: solute = 'salt'\n\nIn [74]: solvent = 'water'\n\nIn [75]: print(f'{solute} dissolves in {solvent}')\nsalt dissolves in water\n```", "```py\nIn [76]: print(f\"The circumference of a 10-inch circle is {10 * 3.14159}\")\nThe circumference of a 10-inch circle is 31.4159\n```", "```py\nIn [77]: print(f'{\"output1\" : <25}') \n    ...: print(f'{\"output2\" : ^25}') \n    ...: print(f'{\"output3\" : >25}') \noutput1 \n           output2 \n                       output3\n```", "```py\nIn [78]: long_number = 93000000\n\nIn [79]: print(f'{long_number:,}')\n93,000,000\n```", "```py\nIn [80]: speed_of_light = 299792458\n\nIn [81]: print(f'{speed_of_light:e}')\n2.997925e+08\n```", "```py\nIn [82]: e = 2.718281828459045\n\nIn [83]: print(f'{e:.3f}')\n2.718\n```", "```py\nIn [84]: num = 0.456\n\nIn [85]: print(f'{num:.2%}')\n45.60%\n```", "```py\nIn [86]: x = 'PYTHON'\n\nIn [87]: x[0]\nOut[87]: 'P'\n\nIn [88]: x[5]\nOut[88]: 'N'\n```", "```py\nIn [89]: x[6]\nTraceback (most recent call last):\n\nFile \"<ipython-input-89-04aa5bc9ecce>\", line 1, in <module>\nx[6]\n\nIndexError: string index out of range\n```", "```py\nIn [90]: x[0:3]\nOut[90]: 'PYT'\n```", "```py\nIn [91]: x[:3]\nOut[91]: 'PYT'\n```", "```py\nIn [92]: x[:]\nOut[92]: 'PYTHON'\n```", "```py\nIn [93]: x[::2]\nOut[93]: 'PTO'\n```", "```py\nIn [94]: x[-1]\nOut[94]: 'N'\n\nIn [95]: x[-3:]\nOut[95]: 'HON'\n```", "```py\nIn [96]: x[::-1]\nOut[96]: 'NOHTYP'\n```", "```py\nIn [97]: 'e' in 'scientist'\nOut[97]: True\n\nIn [98]: 'engineer' not in 'I am a scientist'\nOut[98]: True\n```", "```py\nIn [99]: x = \"Here's Waldo!\"\n\nIn [100]: if 'Waldo' in x:\n     ...:      print(\"I found Waldo!\")\nI found Waldo!\n```", "```py\nIn [101]: 'I am a scientist'.count('i')\nOut[101]: 2\n```", "```py\nIn [102]: x = 'string'\n\nIn [103]: print(x.upper())\nSTRING\n\nIn [104]: x\nOut[104]: 'string'\n```", "```py\nIn [105]: x = x.upper()\n\nIn [106]: x\nOut[106]: 'STRING'\n```", "```py\nIn [107]: x[3] = 'A'\nTraceback (most recent call last):\n\nFile \"<ipython-input-106-124534701dc6>\", line 1, in <module>\nx[3] = 'A'\n\nTypeError: 'str' object does not support item assignment\n```", "```py\nIn [108]: old_string = \"I'm the old string.\"\n\nIn [109]: new_string = old_string.replace('old', 'new')\n\nIn [110]: new_string\nOut[110]: \"I'm the new string.\"\n```", "```py\nIn [111]: caesar_said = 'Tee-hee, Brutus.'\n\nIn [112]: words = caesar_said.split()\n\nIn [113]: print(words)\nOut[113]: ['Tee-hee,', 'Brutus.']\n```", "```py\nIn [114]: words = caesar_said.split(sep=', ')\n\nIn [115]: words\nOut[115]: ['Tee-hee', 'Brutus.']\n```", "```py\nIn [116]: from string import punctuation\n\nIn [117]: print(punctuation)\n!\"#$%&'()*+,-./:;<=>?@[\\]^_'{|}~\n\nIn [118]: no_punc = caesar_said.translate(str.maketrans('', '', punctuation))\n\nIn [119]: no_punc\nOut[119]: 'Teehee Brutus'\n```", "```py\nIn [120]: no_punc.split()\nOut[120]: ['Teehee', 'Brutus']\n```"]