- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: The 80/20 Principle
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 80/20原则
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: In this chapter, you’ll learn about the profound impact of the *80/20 principle*
    on your life as a programmer. It has many names, including the *Pareto principle*,
    named after its discoverer Vilfredo Pareto. So, how does the principle work, and
    why should you care? The 80/20 principle refers to the idea that a majority of
    effects (80 percent) come from a minority of causes (20 percent). It shows you
    a path to achieve many more results as a professional coder by focusing your efforts
    on a few important things and ignoring the many things that hardly move the needle.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将了解*80/20原则*对你作为程序员生活的深远影响。它有很多名字，包括以其发现者维尔弗雷多·帕累托命名的*帕累托原则*。那么，这个原则是如何运作的，为什么你应该关心它？80/20原则指的是，大多数效果（80%）来自少数原因（20%）。它为你指明了一条道路，让你作为一名专业编码员，通过集中精力在少数重要的事情上，忽略那些几乎无法产生影响的事务，从而获得更多的成果。
- en: 80/20 Principle Basics
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 80/20原则基础
- en: The principle says that the majority of effects come from the minority of causes.
    For example, the majority of income is earned by the minority of people, the majority
    of innovations come from the minority of researchers, the majority of books are
    written by the minority of authors, and so on.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 该原则表示，大多数效果来自少数原因。例如，大多数收入由少数人获得，大多数创新来自少数研究人员，大多数书籍是由少数作者写的，等等。
- en: You may have heard about the 80/20 principle—it’s everywhere in personal productivity
    literature. The reason for its popularity is twofold. First, the principle allows
    you to be relaxed and productive at the same time as long as you can figure out
    the things that matter, which make up the 20 percent of activities that lead to
    80 percent of the results, and focus on those relentlessly. Second, we can observe
    the principle in a huge variety of situations, giving it considerable credibility.
    It’s even tough to come up with a counterexample, where the effects come equally
    from the causes. Try to find some examples of 50/50 distributions where 50 percent
    of the effects come from 50 percent of causes! Sure, the distribution is not always
    80/20—the concrete numbers can change to 70/30, 90/10, or even 95/5—but the distribution
    is always heavily skewed toward the minority producing the majority of effects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能听说过80/20原则——它在个人生产力的文献中随处可见。它之所以如此流行，有两个原因。首先，原则让你能够既放松又高效，只要你能找出那些重要的事情，这些事情构成了20%的活动，能够带来80%的结果，并且全力以赴地专注于这些事情。第二，我们可以在各种情境中观察到这个原则，从而赋予它相当的可信度。甚至很难想出反例，其中效果与原因的比例相等。试着找到一些50/50分布的例子，其中50%的效果来自50%的原因！当然，分布不总是80/20——具体的数字可以是70/30、90/10，甚至是95/5——但分布总是严重倾向于少数原因产生大多数效果。
- en: We represent the Pareto principle with a Pareto distribution, shown in [Figure
    2-1](#figure2-1).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用帕累托分布来表示帕累托原则，如[图2-1](#figure2-1)所示。
- en: '![Graph displaying the Pareto Distribution. The y-axis represents results from
    0.0 to 0.7, and the x-axis represents Causes from 0 to 100\. The line shows a
    slightly curved L-shape.](image_fi/502185c02/f02001.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![显示帕累托分布的图表。y轴表示结果，从0.0到0.7，x轴表示原因，从0到100。图线呈现出一个略微弯曲的L形。](image_fi/502185c02/f02001.png)'
- en: 'Figure 2-1: Example of a general Pareto distribution'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-1：一般帕累托分布的示例
- en: The Pareto distribution plots the results (y-axis) against the causes (x-axis).
    The results can be any measure of success or failure, like income, productivity,
    or the number of bugs in a software project. The causes can be any entity these
    results may be associated with, such as employees, businesses, or software projects,
    respectively. To obtain the characteristic Pareto curve, we order the causes according
    to the results they produce. For example, the person with the highest income comes
    first on the x-axis, then comes the person with the second-highest income, and
    so on.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 帕累托分布将结果（y轴）与原因（x轴）绘制在一起。结果可以是任何衡量成功或失败的标准，比如收入、生产力，或者软件项目中的错误数量。原因可以是与这些结果相关的任何实体，比如员工、企业，或者软件项目等。为了得到典型的帕累托曲线，我们根据产生结果的原因对其进行排序。例如，收入最高的人排在x轴的最前面，接着是收入第二高的人，依此类推。
- en: Let’s look at a practical example.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个实际的例子。
- en: Application Software Optimization
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用软件优化
- en: '[Figure 2-2](#figure2-2) shows the Pareto principle in action in an imaginary
    software project: the minority of the code is responsible for the majority of
    the runtime. The x-axis shows code functions sorted by the runtime they incur.
    The y-axis shows the runtime of those code functions. The shaded area that dominates
    the overall area under the plot shows that most code functions contribute much
    less to the overall runtime than a few selected code functions. Joseph Juran,
    one of the early discoverers of the Pareto principle, calls the latter the *vital
    few* and the former the trivial many. Spending a lot of time optimizing the trivial
    many barely improves the overall runtime. The existence of Pareto distributions
    in software projects is well supported by scientific evidence such as in “Power
    Laws in Software” by Louridas, Spinellis, and Vlachos (2008).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-2](#figure2-2) 显示了在一个虚拟软件项目中帕累托原则的实际应用：少数代码负责大部分的运行时间。x 轴显示按运行时间排序的代码函数，y
    轴显示这些代码函数的运行时间。图表下方阴影区域的面积表明，大部分代码函数对整体运行时间的贡献远低于少数选定的代码函数。帕累托原则的早期发现者之一 Joseph
    Juran 将后者称为 *关键少数*，前者称为琐碎多数。花费大量时间优化琐碎多数几乎无法改善整体运行时间。帕累托分布在软件项目中的存在得到了科学证据的支持，例如
    Louridas、Spinellis 和 Vlachos（2008）在《软件中的幂律》一文中的研究。'
- en: '![The same graph as Figure 2-1, but the space under the curve up to 20 on the
    x-axis is shaded and labeled “20 code functions generate the vast majority of
    runtime!”](image_fi/502185c02/f02002.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![与图 2-1 相同的图表，但在 x 轴到 20 处的曲线下方区域被阴影标注，并标注为“20 个代码函数生成了绝大多数运行时间！”](image_fi/502185c02/f02002.png)'
- en: 'Figure 2-2: Example of a Pareto distribution in software engineering'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-2：软件工程中的帕累托分布示例
- en: Large companies like IBM, Microsoft, and Apple employ the Pareto principle to
    build faster, more user-friendly computers by channeling their focus on the vital
    few, that is, by repeatedly optimizing the 20 percent of the code that was executed
    most often by the average user. Not all code is created equal. A minority of code
    has a dominating impact on the user experience, while much of the code has little
    impact. You might double-click the File Explorer icon multiple times per day,
    but you seldom change the access rights of a file. The 80/20 principle tells you
    where to focus your optimization efforts!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 像 IBM、微软和苹果这样的公司运用帕累托原则，通过将焦点集中在少数关键部分上来构建更快、更易于使用的计算机，也就是通过反复优化平均用户最常执行的 20%
    代码来实现。并非所有代码都一样重要。少量的代码对用户体验有主导作用，而大部分代码的影响很小。你可能每天多次双击文件资源管理器图标，但很少会更改文件的访问权限。80/20
    原则告诉你在哪里集中优化工作！
- en: The principle is easy to understand, but it can be harder to know how you can
    use the principle in your own life.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这个原则容易理解，但要知道如何在自己的生活中应用这一原则，可能会更难。
- en: Productivity
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生产力
- en: By focusing on the vital few rather than the trivial many, you can increase
    your productivity by a factor of 10, even 100\. Don’t believe me? Let’s calculate
    where these numbers come from, assuming an underlying 80/20 distribution.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通过专注于少数关键部分，而非琐碎的多数部分，你的生产力可以提高 10 倍，甚至 100 倍。你不相信吗？让我们计算一下这些数字的来源，假设底层存在 80/20
    分布。
- en: We’ll use the conservative 80/20 parameters (80 percent of the results come
    from 20 percent of the people) and then calculate the rate of production for each
    group. In some fields (like programming), the distribution is probably much more
    skewed.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用保守的 80/20 参数（80% 的结果来自 20% 的人），然后计算每个组的生产率。在某些领域（例如编程），这种分布可能会更倾斜。
- en: '[Figure 2-3](#figure2-3) shows that in a company of 10 employees, just 2 employees
    produce 80 percent of the results, while 8 employees produce 20 percent of the
    results. We divide 80 percent by 2 employees for an average output of 40 percent
    per top-performing employee in the company. If we divide the 20 percent of the
    results generated by the 8 employees, we get an average of 2.5 percent of output
    per bottom-performing employee. The difference in performance is 16 times!'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 2-3](#figure2-3) 显示，在一个拥有 10 名员工的公司中，只有 2 名员工产生了 80% 的结果，而 8 名员工只产生了 20%
    的结果。我们将 80% 结果除以 2 名员工，得出每个高绩效员工的平均产出为 40%。如果我们将 8 名员工产生的 20% 结果除以 8，得出每个低绩效员工的平均产出为
    2.5%。绩效差异是 16 倍！'
- en: '![graph showing figures of ten people along the top, with two rows beneath
    them labeled “Results” and “Average Result Per Person.” The first two people show
    80% in the Results row and 16 times in the Average Result Per Person row.  The
    last eight people show 20% in the Results row and one times in the Average Result
    Per Person row.](image_fi/502185c02/f02003.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图表显示了十个人的数字位于顶部，下面有两行分别标注为“结果”和“每人平均结果”。前两个人在结果行中显示80%，在每人平均结果行中显示16次。最后八个人在结果行中显示20%，在每人平均结果行中显示1次。](image_fi/502185c02/f02003.png)'
- en: 'Figure 2-3: The average output of the top 20 percent of performers is 16 times
    the average output of the bottom 80 percent.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-3：排名前20%的表现者的平均产出是排名后80%表现者平均产出的16倍。
- en: This 16-times difference in average performance is a fact in millions of organizations
    throughout the world. The Pareto distribution is also fractal, which means that
    the top 20 percent of the top 20 percent generate 80 percent of 80 percent of
    the results, accounting for even more significant performance differences in large
    organizations with thousands of employees.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这种16倍的平均表现差异是全球数百万组织中的普遍现象。帕累托分布也是分形的，这意味着排名前20%的前20%的人产生了80%结果中的80%，在有成千上万名员工的大型组织中，这会导致更为显著的表现差异。
- en: The differences in results cannot be explained by intelligence alone—a person
    cannot be 1,000 times more intelligent than another person. Instead, the differences
    in results come from the specific behavior of the individual or the organization.
    If you did the same things, you could get the same results. However, before you
    change your behavior, you must be clear about what result you want to accomplish,
    as research shows an extreme inequality of results in almost any metric you can
    imagine.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 结果的差异不能仅通过智力来解释——一个人不可能比另一个人聪明1,000倍。相反，结果的差异来自于个人或组织的具体行为。如果你做相同的事情，你也能得到相同的结果。然而，在改变行为之前，你必须清楚你想要达成的结果，因为研究表明，几乎任何你能想到的指标都会存在极度不平等的结果分布。
- en: Income Ten percent of the people earn almost 50 percent of the income in the
    United States.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收入 美国10%的人获得了近50%的收入。
- en: Happiness Less than 25 percent of the people in North America rate their happiness
    a 9 or 10 on a 0–10 scale where “the worst possible life” is a 0 and “the best
    possible life” is a 10\.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 幸福感 在北美，少于25%的人将自己的幸福感评为9或10（0-10分制，其中“最糟糕的生活”是0分，“最好的生活”是10分）。
- en: Monthly active users Just 2 out of the top 10 websites intended for all audiences
    get 48 percent of the cumulative traffic, as shown in [Table 2-1](#table2-1) (based
    on information from [https://www.ahrefs.com/](https://www.ahrefs.com/)).
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每月活跃用户 仅2个面向所有受众的前10大网站就获得了48%的累计流量，如[表2-1](#table2-1)所示（基于[https://www.ahrefs.com/](https://www.ahrefs.com/)提供的信息）。
- en: Book sales Just 20 percent of authors may receive as much as 97 percent of sales.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 图书销售 仅20%的作者可能会获得97%的销售额。
- en: Scientific productivity For example, 5.2 percent of scientists account for 38
    percent of published articles.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 科学生产力 例如，5.2%的科学家占据了38%的已发表文章。
- en: The resources section at the end of the chapter links to some articles to support
    this data. The inequality of results is a well-established phenomenon in social
    science, and it is commonly measured in a metric called the *Gini coefficient*.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本章末尾的资源部分提供了一些文章链接，以支持这些数据。结果的不平等是社会科学中一个广泛认可的现象，通常通过一个叫做*基尼系数*的指标来衡量。
- en: 'Table 2-1: Cumulative Traffic of the 10 Most-Trafficked Websites in the United
    States'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 表2-1：美国十大流量网站的累计流量
- en: '| # | **Domain** | **Monthly traffic** | **Cumulative** |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| # | **域名** | **月度流量** | **累计** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| 1 | en.wikipedia.org | 1,134,008,294 | 26% |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| 1 | en.wikipedia.org | 1,134,008,294 | 26% |'
- en: '| 2 | youtube.com | 935,537,251 | 48% |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| 2 | youtube.com | 935,537,251 | 48% |'
- en: '| 3 | amazon.com | 585,497,848 | 62% |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 3 | amazon.com | 585,497,848 | 62% |'
- en: '| 4 | facebook.com | 467,339,001 | 72% |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 4 | facebook.com | 467,339,001 | 72% |'
- en: '| 5 | twitter.com | 285,460,434 | 79% |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 5 | twitter.com | 285,460,434 | 79% |'
- en: '| 6 | fandom.com | 228,808,284 | 84% |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 6 | fandom.com | 228,808,284 | 84% |'
- en: '| 7 | pinterest.com | 203,270,264 | 89% |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 7 | pinterest.com | 203,270,264 | 89% |'
- en: '| 8 | imdb.com | 168,810,268 | 93% |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 8 | imdb.com | 168,810,268 | 93% |'
- en: '| 9 | reddit.com | 166,277,100 | 97% |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 9 | reddit.com | 166,277,100 | 97% |'
- en: '| 10 | yelp.com | 139,979,616 | 100% |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 10 | yelp.com | 139,979,616 | 100% |'
- en: '|  |  | 4,314,988,360 |  |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 4,314,988,360 |  |'
- en: 'So how can you become one of the top performers? Or, to formulate it more generally:
    How can you *move to the left* on the Pareto distribution curve in your organization
    (see [Figure 2-4](#figure2-4))?'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何才能成为表现最出色的人之一呢？或者更一般地说：如何在你的组织中*向左移动*，在帕累托分布曲线中向左移动（见[图2-4](#figure2-4)）？
- en: '![Bar graph showing Output on the y-axis and ten figures of people on the x-axis.
    The fifth figure has a question mark above it with an arrow pointing to figure
    4\. The illustration suggests that figure 5 would like to switch places with figure
    4, which has a taller output bar. ](image_fi/502185c02/f02004.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![条形图展示了y轴上的产出，x轴上的十个人物图标。第五个图标上方有一个问号，箭头指向第四个图标。这个插图暗示第五个人物希望与第四个人物交换位置，后者的产出条更高。](image_fi/502185c02/f02004.png)'
- en: 'Figure 2-4: To create more output, you need to move to the left of the curve.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-4：为了创造更多产出，你需要向曲线的左侧移动。
- en: Success Metrics
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成功指标
- en: 'Let’s say you want to optimize for income. How can you move to the left on
    the Pareto curve? We’re leaving exact science behind here, because you need to
    find the reasons some people succeed in your specific industry and develop actionable
    success metrics you can control and implement. We define the term *success metrics*
    as measurements of the behaviors that lead to more success in your field. The
    tricky thing is that the most crucial success metrics are different in most fields.
    The 80/20 principle also applies to success metrics: some success metrics have
    a large impact on your performance in a field, while others barely matter at all.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想优化收入。那么，如何在帕累托曲线的左侧移动呢？我们这里不再谈精确的科学，因为你需要找到在你特定行业中成功的人的原因，并制定可以控制和执行的可操作成功指标。我们将*成功指标*定义为衡量导致在你领域取得更多成功的行为的标准。关键在于，不同行业中的最重要的成功指标是不同的。80/20原则也适用于成功指标：一些成功指标对你在某个领域的表现有较大影响，而其他指标几乎毫无影响。
- en: For example, when working as a doctoral researcher, I soon realized that success
    was all about getting cited by other researchers. The more citations you have
    as a researcher, the more credibility, visibility, and opportunities you’ll have.
    However, *increasing the number of citations* is hardly an actionable success
    metric that you can optimize daily. The number of citations is a *lagging indicator*,
    because it is based on actions you took in the past. The problem with lagging
    indicators is that they record only the consequence of past actions. They don’t
    tell you the right actions to take daily for success.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，当我在做博士研究时，我很快意识到成功就是被其他研究者引用。作为研究者，你的引用越多，你的可信度、可见性和机会就越大。然而，*增加引用次数*几乎不是一个可以每天优化的可操作成功指标。引用次数是一个*滞后指标*，因为它基于你过去采取的行动。滞后指标的问题在于，它们只记录过去行动的结果，而不会告诉你每天该采取什么行动来取得成功。
- en: To obtain a measure for doing the right actions, the notion of leading indicators
    was introduced. A *leading indicator* is a metric that predicts a change in the
    lagging indicator before it occurs. If you do more of the leading indicator, the
    lagging indicator is likely to improve as a result. As a researcher, then, you’ll
    receive more citations (lagging indicator) by publishing more high-quality research
    papers (leading indicator). That means writing high-quality papers is the most
    important activity for most scientists, not secondary activities such as preparing
    presentations, organizing, teaching, or drinking coffee. The success metric for
    researchers is therefore generating a maximal number of high-quality papers, as
    shown in [Figure 2-5](#figure2-5).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得做对事情的衡量标准，引入了领先指标的概念。*领先指标*是一种在滞后指标发生变化之前预测变化的指标。如果你多做领先指标，滞后指标很可能会因此得到改善。作为研究者，你通过发表更多高质量的研究论文（领先指标），将获得更多的引用（滞后指标）。这意味着写高质量论文是大多数科学家最重要的活动，而不是像准备演讲、组织活动、教学或喝咖啡这样的次要活动。因此，研究者的成功指标就是产生尽可能多的高质量论文，如[图2-5](#figure2-5)所示。
- en: '![Bar graph now showing Success metric: “number of words written” on the y-axis
    and ten figures of people on the x-axis. The fifth figure has an exclamation mark
    above it with an arrow pointing to figure 4\. This illustration suggests that
    figure 5 is actively attempting to switch places with figure 4.](image_fi/502185c02/f02005.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![条形图现在展示了成功指标：“写作字数”在y轴上，x轴上有十个人物图标。第五个图标上方有一个感叹号，箭头指向第四个图标。这个插图暗示第五个人物正在积极尝试与第四个人物交换位置。](image_fi/502185c02/f02005.png)'
- en: 'Figure 2-5: Success metric in research: number of words written to produce
    a high-quality paper'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-5：研究中的成功指标：写作字数与高质量论文的关系
- en: To push to the left in research, you must write more words today, publish your
    next high-quality paper sooner, receive more citations faster, grow your scientific
    footprint, and become a more successful scientist. Roughly speaking, many different
    success metrics can serve as a proxy for “being successful in science.” For instance,
    when ordering them on a scale from lagging to leading measures, you may get *number
    of citations*, *number of high-quality papers written*, *number of total words
    written in your life*, and *number of words written today*.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要在研究中向左推进，你必须今天写更多的字，尽快发布下一篇高质量的论文，更快地获得更多引用，扩大你的科研影响力，成为一名更成功的科学家。粗略来说，许多不同的成功指标都可以作为“在科学中取得成功”的代表。例如，将它们按滞后指标到领先指标的顺序排列，你可能会得到*引用次数*、*撰写的高质量论文数量*、*一生中写的总字数*和*今天写的字数*。
- en: 'The 80/20 approach allows you to identify the activities on which you must
    focus. Doing more of the success metrics, preferably actionable lead measures,
    will increase your professional success, and that’s all that should matter. Spend
    less time on all the other tasks. Refuse to die the death of a thousand cuts.
    Be lazy with all activities but one: *writing more words per day*.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 80/20 方法让你能够识别出必须关注的活动。更多地关注成功指标，尤其是可操作的领先指标，将会提升你的职业成功，而这才是最重要的。把时间从其他任务中剥离出来，拒绝陷入“千刀万剐”的死法。对于所有活动都要懒惰，除了一个：*每天写更多的字*。
- en: 'Say you work 8 hours per day and you divide your day into eight 1-hour activities.
    After completing the success metric exercise, you realize that you can skip two
    1-hour activities per day and complete four other activities in half the time
    by being less perfectionistic. You have saved 4 hours per day, but you still accomplish
    80 percent of your results. Now you can invest 2 hours into writing more words
    for high-quality papers per day. Within a few months, you’ll have submitted an
    extra paper, and over time, you’ll submit more papers than any of your colleagues.
    You work only 6 hours per day, and you generate imperfect quality in most of your
    work tasks. But you shine where it matters: you submit more research papers than
    anyone else in your environment. As a result, you’ll soon be one of the top 20
    percent of researchers. You generate more with less.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你每天工作8小时，并将一天分为八个1小时的活动。在完成成功指标练习后，你意识到每天可以跳过两个1小时的活动，并通过不那么完美的方式在半小时内完成另外四项活动。你节省了4小时，但仍然完成了80%的成果。现在，你可以每天投入2小时来写更多的高质量论文字数。几个月内，你会提交额外的论文，随着时间的推移，你提交的论文数量会超过你的任何同事。你每天只工作6小时，且大多数工作任务的质量并不完美。但你在关键地方发光：你提交的研究论文比你周围的任何人都多。结果，你很快就会成为顶尖的20%研究人员之一。你用更少的时间创造更多的成果。
- en: Instead of becoming a “Jack of all trades, master of none,” you gain expertise
    in the area that is most important to you. You heavily focus on the vital few
    and ignore the trivial many. You lead a less stressful life, but you enjoy more
    fruits from your invested labor, efforts, time, and money.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你不再成为那种“什么都懂，但什么都不精”的人，而是专注于你最重要的领域。你会将精力集中在少数关键点上，忽视琐碎的无关紧要的事物。你过上了更轻松的生活，但你从投入的劳动、努力、时间和金钱中收获更多的成果。
- en: Focus and the Pareto Distribution
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 专注与帕累托分布
- en: A closely related topic I want to discuss is *focus*. We’ll discuss focus in
    many places in this book—for example, Chapter 9 discusses the power of focus in
    detail—but the 80/20 principle explains *why* focus is so powerful. Let’s dive
    into the argument!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个我想讨论的相关话题是*专注*。我们将在本书的多个地方讨论专注——例如，第9章详细讨论了专注的力量——但是80/20原则解释了*为什么*专注如此强大。让我们深入探讨这个论点！
- en: Consider the Pareto distribution in [Figure 2-6](#figure2-6) that shows the
    percentage improvement of moving toward the top of the distribution. Alice is
    the fifth most productive person in the organization. If she overtakes just one
    person in the organization, thereby becoming the fourth most productive person,
    she’d increase her output (salary) by 10 percent. One step further than that,
    and her output increases by an *additional* 20 percent. In a Pareto distribution,
    the growth per rank explodes exponentially, so even small increases in productivity
    can result in big increases in income. Increasing your productivity leads to superlinear
    improvements in your income, happiness, and joy at work. Some call this phenomenon
    “the winner takes all.”
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑[图 2-6](#figure2-6)，它展示了向分布顶部移动时的百分比改善。Alice 是组织中第五高产的人。如果她超越组织中的一个人，成为第四高产的人，她的输出（薪水）将增加
    10%。再进一步，她的输出将增加 *额外* 20%。在帕累托分布中，每个排名的增长呈指数爆炸式增长，因此即使是小幅度的生产力提高，也能带来收入的巨大增加。提高生产力会导致收入、幸福感和工作中的快乐有超线性的提升。有些人称这种现象为“赢家通吃”。
- en: '![Bar graph showing Output on the y-axis and ten figures of people on the x-axis.
    The fifth figure has a +10% above it with an arrow pointing to figure 4\. This
    illustration suggests that if figure 5 can become the fourth most productive person
    in the company, then she can increase her salary by 10%. Each arrow to the left
    increases output (salary) by 10%, up to 50% for the very first figure. ](image_fi/502185c02/f02006.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![柱状图显示纵轴为输出，横轴为十个代表人的图标。第五个图标上方有一个+10%的标注，箭头指向第四个图标。此图示意，如果第五个图标的人能成为公司中第四高产的人，那么她可以增加
    10% 的薪水。每个指向左侧的箭头代表输出（薪水）增加 10%，最左边的图标可以增加高达 50%。](image_fi/502185c02/f02006.png)'
- en: 'Figure 2-6: Disproportional benefit of improving your rank in a Pareto distribution'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-6：在帕累托分布中提高排名的收益不成比例
- en: 'That’s why it doesn’t pay to spread your attention: *if you don’t focus, you
    participate in many Pareto distributions*. Consider [Figure 2-7](#figure2-7):
    Alice and Bob can each invest three units of learning effort every day. Alice
    focuses on one thing: programming. She spends her three units of effort on learning
    to code. Bob spreads his focus across multiple disciplines: one unit of time polishing
    his chess skills, one unit improving his programming skills, and one unit improving
    his political skills. He’s reached average skill and output in each of the three
    areas. But the Pareto distribution disproportionally rewards the top performers,
    so Alice collects more total output reward.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么分散注意力没有好处的原因：*如果你不专注，你就会参与许多帕累托分布*。考虑[图 2-7](#figure2-7)：Alice 和 Bob 每天都可以投入三单位的学习精力。Alice
    专注于一件事：编程。她将三单位的精力投入到学习编程上。Bob 将精力分散到多个学科：一单位时间用来提高他的国际象棋技能，一单位用来提高编程技能，另一单位用来提高政治技能。他在这三项技能中都达到了平均水平。但帕累托分布会不成比例地奖励顶尖表现者，因此
    Alice 能获得更多的总输出奖励。
- en: '![Top half shows a figure named Alice with three graphs representing the three
    skills of programming, chess, and politics. Bottom half shows a figure named Bob,
    with the same three bar graphs. The bar graphs each have Output on the y-axis
    and ten figures of people on the x-axis. A highlighted figure in the x-axis shows
    Alice and Bob’s respective status in each skill. Because Alice invests all her
    time in programming, she holds position 1 for programming and position 9 for chess
    and politics. Bob divides his time and sits at position 6 for all three skills.
    ](image_fi/502185c02/f02007.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![上半部分显示了一个名为 Alice 的人物，她的三个图表分别代表了编程、国际象棋和政治这三项技能。下半部分显示了一个名为 Bob 的人物，他的三个柱状图与
    Alice 的相同。每个柱状图的纵轴表示输出，横轴上有十个代表人的图标。横轴中突出显示的图标展示了 Alice 和 Bob 在各项技能中的状态。因为 Alice
    将她的所有时间投入到编程中，所以她在编程中排名第一，在国际象棋和政治中分别排名第九。而 Bob 将时间分配到各个领域，他在这三项技能中分别排在第六位。](image_fi/502185c02/f02007.png)'
- en: 'Figure 2-7: Nonlinearity of rank output—a strategic explanation for the power
    of focus'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-7：排名输出的非线性——专注力强大力量的战略解释
- en: The disproportional rewards hold within each area, too. For instance, Bob may
    spend his time reading three general books (let’s call them *Introduction to Python*,
    *Introduction to C++*, and *Introduction to Java*) while Alice reads three books
    diving deep into machine learning with Python (let’s call them *Introduction to
    Python*, *Introduction to Machine Learning with Python*, and *Machine Learning
    for Experts*). As a result, Alice will focus on becoming a machine learning expert
    and can demand a higher salary for her specialized skill set.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 每个领域中的不成比例的回报也存在。例如，Bob 可能花时间阅读三本通用书籍（我们称它们为*Python入门*、*C++入门*和*Java入门*），而 Alice
    则阅读三本深入探讨使用 Python 进行机器学习的书籍（我们称它们为*Python入门*、*使用 Python 进行机器学习入门*和*专家级机器学习*）。结果，Alice
    会专注于成为机器学习专家，并能为她的专业技能要求更高的薪水。
- en: Implications for Coders
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对编码人员的启示
- en: 'In programming, the results tend to be much more heavily skewed toward the
    top than in most other fields. Instead of 80/20, the distribution often looks
    more like 90/10 or 95/5\. Bill Gates said a “*great lathe operator commands several
    times the wage of an average lathe operator, but a great writer of software code
    is worth 10,000 times the price of an average software writer*.” Gates argues
    that the difference between a great and an average software writer is not 16 times,
    but 10,000 times! Here are several reasons why the software world is prone to
    such extreme Pareto distributions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在编程领域，结果往往比大多数其他领域更加倾斜于顶端。不是 80/20，而是 90/10 或 95/5 的分布更为常见。比尔·盖茨曾说过：“*一位优秀的车床操作员的薪资是普通车床操作员的几倍，而一位优秀的软件代码作者的价值是普通软件开发者的
    10,000 倍*。”盖茨认为，一位优秀的软件开发者和一位普通软件开发者的差距不是16倍，而是 10,000 倍！以下是软件领域容易出现极端帕累托分布的几个原因：
- en: A great programmer can solve some problems that the average programmer simply
    cannot solve. In some instances, this makes them infinitely times more productive.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一位优秀的程序员能够解决一些普通程序员根本无法解决的问题。在某些情况下，这使得他们的生产力比普通程序员高出无限倍。
- en: A great programmer can write code that is 10,000 times faster than the code
    of an average programmer.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个优秀的程序员可以写出比普通程序员快10,000倍的代码。
- en: A great programmer writes code with fewer bugs. Think about the effect of a
    single security bug on Microsoft’s reputation and brand! Moreover, every additional
    bug costs time, energy, and money for subsequent modifications of the codebase
    and feature additions—the detrimental, compounding effect of bugs.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一位优秀的程序员编写的代码漏洞更少。想想一个安全漏洞对微软声誉和品牌的影响！此外，每一个额外的漏洞都会为后续的代码修改和功能添加带来时间、精力和资金的成本——漏洞带来的不利影响是逐步累积的。
- en: A great programmer writes code that is easier to extend, which may improve the
    productivity of thousands of developers that work on the code at a later stage
    of the software development process.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一位优秀的程序员编写的代码更容易扩展，这可能提高成千上万开发人员在软件开发过程后期对该代码进行维护时的生产力。
- en: A great programmer thinks out of the box and finds creative solutions to circumvent
    costly development efforts and help focus on the most important things.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一位优秀的程序员能够跳出框架思考，找到创造性的解决方案，以避免成本高昂的开发工作，并帮助专注于最重要的事情。
- en: In practice, a combination of these factors is at play, so the difference can
    be even higher.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，这些因素的结合在起作用，因此差距可能会更大。
- en: 'So, for you, the key question may be this: How do you become a great programmer?'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，对你来说，关键问题可能是：你如何成为一名优秀的程序员？
- en: A Success Metric for Programmers
  id: totrans-77
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 程序员的成功指标
- en: Unfortunately, the statement “become a great programmer” is not a success metric
    you can directly optimize—the problem is multidimensional. A great programmer
    understands code quickly, knows algorithms and data structures, knows different
    technologies and their strengths and weaknesses, can collaborate with other people,
    is communicative and creative, stays educated and knows about ways to organize
    the software development process, and possesses hundreds of soft and hard skills.
    But you can’t be a master of all of those! If you don’t focus on the vital few,
    you’ll become washed away by the trivial many. To become a great programmer, you
    must focus on the vital few.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，"成为一名优秀程序员" 这个说法并不是你可以直接优化的成功指标——这个问题是多维度的。一个优秀的程序员能够迅速理解代码，掌握算法和数据结构，了解不同的技术及其优缺点，能够与他人协作，具备沟通和创造力，保持学习并了解如何组织软件开发过程，并拥有数百项软技能和硬技能。但你不可能在所有方面都做到精通！如果你不专注于少数关键要素，你就会被琐事所淹没。要成为一名优秀的程序员，你必须专注于少数关键的要素。
- en: 'One of the vital few activities to focus on is to write more lines of code.
    The more lines you write, the better coder you’ll become. It’s a simplification
    of the multidimensional problem: by optimizing the proxy metric (write more lines
    of code), you increase your odds of success at the target metric (become a great
    writer of software code). See [Figure 2-8](#figure2-8).'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 需要专注的关键活动之一就是编写更多的代码行。你写的代码行数越多，你就会成为更好的程序员。这是一个多维问题的简化：通过优化代理指标（编写更多代码行），你增加了成功达到目标指标（成为一名优秀的软件编写者）的机会。参见[图
    2-8](#figure2-8)。
- en: '![Two bar graphs, similar to others in this chapter, that represent a programmer
    with vague notions of how to increase their skills but not knowing how to progress
    versus a programmer with a clear success metric actively attempting to advance
    in the ranks. ](image_fi/502185c02/f02008.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![两张柱状图，与本章中的其他类似，表示一个程序员对于如何提升技能只有模糊的概念，但不知道如何进步，而另一个程序员则有明确的成功指标并积极尝试晋升。](image_fi/502185c02/f02008.png)'
- en: 'Figure 2-8: Success metric in programming: number of lines of code written'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-8：编程中的成功指标：编写的代码行数
- en: By writing more code, you’ll understand code better, and you’ll talk and behave
    more like an expert coder. You’ll attract better coders to your network and find
    more challenging programming tasks, so you’ll write even more code and become
    even better. You’ll get paid more and more per line of code you write. You or
    your company can outsource the trivial many tasks.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 通过编写更多的代码，你会更好地理解代码，并且你的言谈举止也会更像一名专家程序员。你将吸引更多优秀的程序员加入你的网络，找到更多有挑战性的编程任务，因此你会写更多的代码，并且变得更好。你写的每行代码都会让你获得更多的报酬。你或者你的公司可以外包那些琐碎的任务。
- en: 'Here’s an 80/20 activity you can follow every day: track the number of lines
    you code every day and optimize it. Make it a game to at least match your average
    every day.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个你可以每天跟进的 80/20 活动：记录你每天编写的代码行数并加以优化。将其作为一个游戏，至少每天达到你的平均值。
- en: Pareto Distributions in the Real World
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 现实世界中的帕累托分布
- en: We’ll take a quick look at some real-world examples of the Pareto distribution
    in action.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将快速浏览一下帕累托分布在现实世界中的一些例子。
- en: GitHub Repository TensorFlow Contributions
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: GitHub 仓库 TensorFlow 贡献
- en: 'We can see an extreme example of a Pareto distribution in contributions to
    GitHub repositories. Let’s consider a wildly popular repository for machine learning
    computations in Python: *TensorFlow*. [Figure 2-9](#figure2-9) shows the top seven
    contributors to this GitHub repository. [Table 2-2](#table2-2) shows the same
    data numerically.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到 GitHub 仓库贡献中的帕累托分布极端示例。让我们以一个广受欢迎的 Python 机器学习计算库仓库：*TensorFlow* 为例。[图
    2-9](#figure2-9) 展示了该 GitHub 仓库的前七名贡献者。[表 2-2](#table2-2) 以数字形式展示了相同的数据。
- en: '![Screenshot of the GitHub repository TensorFlow showing one user has contributed
    more than 20,000 commits versus the other users who have contributed fewer than
    1500 commits.](image_fi/502185c02/f02009.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![GitHub 上 TensorFlow 仓库的截图，显示一个用户的提交次数超过 20,000 次，而其他用户的提交次数都少于 1500 次。](image_fi/502185c02/f02009.png)'
- en: 'Figure 2-9: GitHub TensorFlow repository commit distribution'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-9：GitHub TensorFlow 仓库提交分布
- en: 'Table 2-2: Number of TensorFlow Commits and Their Contributors'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2-2：TensorFlow 提交次数及其贡献者
- en: '| **Contributor** | **Commits** |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| **贡献者** | **提交次数** |'
- en: '| --- | --- |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| *tensorflower-gardener* | 21,426 |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| *tensorflower-gardener* | 21,426 |'
- en: '| *yongtang* | 1,251 |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| *yongtang* | 1,251 |'
- en: '| *mrry* | 1,120 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| *mrry* | 1,120 |'
- en: '| *gunan* | 1,091 |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| *gunan* | 1,091 |'
- en: '| *River707* | 868 |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| *River707* | 868 |'
- en: '| *benoitsteiner* | 838 |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| *benoitsteiner* | 838 |'
- en: '| *sanjoy* | 795 |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| *sanjoy* | 795 |'
- en: 'The user *tensorflow-gardener* contributed more than 20 percent of the 93,000
    commits to this repository. Given that there are thousands of contributors, the
    distribution is much more extreme than the 80/20 distribution. The reason is that
    the contributor *tensorflow-gardener* consists of the team of coders at Google
    that created and maintains this repository. Yet, even when this team is filtered
    out, the remaining individual top contributors are hugely successful programmers
    with impressive track records. You can check them out on the public GitHub page.
    Many of them have landed exciting jobs working for very attractive companies.
    Whether they became successful before or after they generated a large number of
    commits to the open source repository is a merely theoretical discussion. For
    all practical purposes, you should start your success habit: write more lines
    of code every day now. Nothing is stopping you from becoming number two on the
    TensorFlow repository—by committing valuable code to the TensorFlow repository
    two to three times per day for the next two to three years. If you persist, you
    can join the ranks of the most successful coders on earth just by choosing one
    powerful habit and sticking to it for a few short years!'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 用户*tensorflow-gardener*贡献了这个代码库中93,000次提交的超过20%。考虑到有成千上万的贡献者，这个分布比80/20分布要极端得多。原因在于，贡献者*tensorflow-gardener*实际上是谷歌的一个开发团队，这个团队创造并维护了这个代码库。然而，即使过滤掉这个团队，其余的顶尖个人贡献者也是非常成功的程序员，拥有令人印象深刻的履历。你可以在公开的GitHub页面上查看他们。许多人已经找到为非常有吸引力的公司工作的激动人心的职位。无论他们是在大量提交开源代码库之前还是之后成功的，这只是一个理论上的讨论。从实际角度来看，你应该开始培养自己的成功习惯：每天写更多的代码。从现在开始，什么也不会阻止你成为TensorFlow代码库的第二名——只要在接下来的两到三年里，每天提交两到三次有价值的代码到TensorFlow代码库。如果你坚持下去，你就能通过选择一个强大的习惯并坚持几年，加入世界上最成功的程序员行列！
- en: Programmer Net Worth
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 程序员净资产
- en: Sure enough, the net worth of programmers is also Pareto distributed. For privacy
    reasons, it’s hard to get data about an individual’s net worth, but the website
    [https://www.networthshare.com/](https://www.networthshare.com/) does show the
    self-reported net worth of various professions, including programmers. The data
    is a bit noisy, but it shows the idiosyncratic skewness of real-world Pareto distributions
    ([Figure 2-10](#figure2-10)).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 果然，程序员的净资产也呈现帕累托分布。出于隐私原因，很难获取个人的净资产数据，但网站[https://www.networthshare.com/](https://www.networthshare.com/)确实展示了包括程序员在内的各类职业的自报净资产。数据有点杂乱，但它显示了现实世界中帕累托分布的独特偏斜性（[图2-10](#figure2-10)）。
- en: '![Bar graph showing programmer usernames on the x-axis and net worth up to
    16 million on the y-axis. The top user is worth more than ten million more than
    the next user. The net worth drops rapidly from there. ](image_fi/502185c02/f02010.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![条形图显示程序员用户名在X轴，净资产最高可达1600万在Y轴。排名第一的用户的净资产比第二名高出超过千万，之后净资产迅速下降。](image_fi/502185c02/f02010.png)'
- en: 'Figure 2-10: Self-reported net worth of 60 programmers'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-10：60位程序员的自报净资产
- en: Quite a few software millionaires in our small sample of 29 data points! But
    the curve is likely to be even more skewed in the real world because there are
    also many billionaire programmers—Mark Zuckerberg, Bill Gates, Elon Musk, and
    Steve Wozniak come to mind. Each of those tech geniuses created the prototypes
    of their services themselves, laying a hand on the source code. Lately, we’ve
    seen many more of those software zillionaires in the blockchain space.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们这个小样本29个数据点中，确实有相当多的软件百万富翁！但在现实世界中，曲线可能会更加偏斜，因为也有很多亿万富翁程序员——马可·扎克伯格、比尔·盖茨、埃隆·马斯克和史蒂夫·沃兹尼亚克等人不禁浮现在脑海。这些技术天才每个人都亲自创造了他们服务的原型，动手编写了源代码。最近，我们在区块链领域也见到了更多这样的软件亿万富翁。
- en: Freelance Gigs
  id: totrans-106
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 自由职业项目
- en: 'The freelance developing space is dominated by two marketplaces where freelancers
    can offer their services and clients can hire freelancers: Upwork and Fiverr.
    Both platforms grow double digits per year in terms of users and revenues, and
    both platforms are committed to disrupting the organization of the world’s talents.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 自由职业开发领域由两个主流平台主导，程序员可以在这些平台上提供服务，客户也可以雇佣自由职业者：Upwork和Fiverr。两个平台的用户和收入每年都呈现两位数增长，且都致力于颠覆全球人才的组织模式。
- en: The average income of a freelance developer is $51 per hour. But this is only
    the average rate—the top 10 percent of freelance developers earn much higher hourly
    rates. In more or less open markets, income resembles a Pareto distribution.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 自由职业开发者的平均收入为每小时$51。但这只是平均水平——自由职业开发者的前10%赚取的时薪要高得多。在或多或少开放的市场中，收入呈帕累托分布。
- en: 'I have observed this skewed income distribution in my own experience from three
    perspectives: (1) as a freelancer, (2) as a client hiring hundreds of freelancers,
    and (3) as a course creator offering Python freelancing education. Most students
    fail to reach even the average earning potential because they don’t stay in the
    game for more than a month or so. The ones who keep working on their freelancing
    business daily for several months usually reach the average $51 per hour earning
    target. A minority of very ambitious and dedicated students reach $100 per hour
    and more.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我从三个角度观察到这种收入分布的不均衡：（1）作为自由职业者，（2）作为雇佣了数百名自由职业者的客户，（3）作为提供Python自由职业教育的课程创作者。大多数学生未能达到甚至是平均的收入潜力，因为他们的坚持时间不到一个月。那些每天坚持做自由职业业务几个月的人通常能达到平均的每小时$51收入目标。而少数非常有野心并且专注的学生能够达到每小时$100甚至更高。
- en: But why do some students fail while others thrive? Let’s plot the number of
    successful gigs completed by freelance developers on the Fiverr platform with
    an average rating of at least 4 out of 5\. I focused on the popular area of machine
    learning in [Figure 2-11](#figure2-11). I collected the data from the Fiverr website
    and tracked the number of completed gigs for 71 freelancers on the two top search
    results for the category Machine Learning Gigs. Not surprisingly, for us, the
    distribution resembles a Pareto distribution.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，为什么有些学生失败而有些学生成功呢？让我们绘制出Fiverr平台上成功完成的工作数，要求平均评分至少为4分（满分5分）的自由职业开发者。我关注的是机器学习这一热门领域的[图2-11](#figure2-11)。我从Fiverr网站收集了数据，追踪了在机器学习类别的前两条搜索结果中，71名自由职业者完成的工作数。不出所料，对我们来说，分布呈现帕累托分布。
- en: '![Histogram with “Number of successfully completed gigs” on the x-axis and
    “Number of freelancers” on the y-axis. Forty-eight or so freelancers complete
    10 gigs, and the number of completed gigs drops rapidly, with only 10 freelancers
    completing 20 gigs. ](image_fi/502185c02/f02011.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![直方图，x轴表示“成功完成的工作数”，y轴表示“自由职业者人数”。大约48个自由职业者完成了10个工作，工作完成数迅速下降，只有10个自由职业者完成了20个工作。](image_fi/502185c02/f02011.png)'
- en: 'Figure 2-11: Histogram of Fiverr freelancers and the number of gigs they completed'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图2-11：Fiverr平台自由职业者及其完成的工作数的直方图
- en: From my own experience as a teacher of thousands of freelancing students, I’m
    fascinated to see that the vast majority of students have completed fewer than
    10 gigs. I’m pretty sure that many of those students will later proclaim, “Freelancing
    doesn’t work.” To me, this statement is an oxymoron like “work doesn’t work” or
    “business doesn’t work.” These freelancing students fail because they don’t try
    hard and long enough. They assume that they can make money easily, and when they
    realize that they must work persistently to join the freelancing winners, they’re
    quick to give up.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我作为成千上万自由职业学生的教师经验，我发现绝大多数学生完成的工作少于10个。我敢肯定，其中很多学生以后会说：“自由职业不行。”对我来说，这个说法像“工作不起作用”或“生意不起作用”一样自相矛盾。这些自由职业学生之所以失败，是因为他们没有足够努力和持之以恒。他们以为可以轻松赚钱，当意识到必须坚持不懈地工作才能成为自由职业的赢家时，他们很快就放弃了。
- en: 'This lack of freelancing persistence actually provides an excellent opportunity
    for you to move up the Pareto distribution. The simple success metric that virtually
    ensures you eventually join the top 1–3 percent of freelancers is this: *complete
    more gigs*. Stay in the game longer. Anyone can do this. The fact that you’re
    reading this book shows that you have the commitment, ambition, and motivation
    to become a top 1–3 percent freelance coding professional. Most players suffer
    from a lack of focus, and even if they are skilled, intelligent, and well connected,
    they have no chance of competing against a focused, dedicated, and Pareto-knowledgeable
    programmer.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 这种缺乏自由职业坚持的现象，实际上为你提供了一个很好的机会，可以在帕累托分布中向上移动。一个几乎能确保你最终进入自由职业前1-3%的简单成功标准是：*完成更多的工作*。坚持更久。任何人都可以做到这一点。你正在阅读这本书，说明你有决心、雄心和动力，成为前1-3%的自由职业编程专业人士。大多数人缺乏专注力，即使他们有技能、聪明且有很好的社会联系，也无法与专注、敬业、懂得帕累托法则的程序员竞争。
- en: Pareto Is Fractal
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 帕累托是分形的
- en: The Pareto distribution is fractal. If you zoom in, observing only a part of
    the whole distribution, there’s another Pareto distribution! This works as long
    as the data is not too sparse; in that case, it loses its fractal nature. A single
    data point, for example, cannot be considered a Pareto distribution. Let’s look
    at this property in [Figure 2-12](#figure2-12).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Pareto 分布是分形的。如果你放大，只观察整体分布的一部分，你会看到另一个 Pareto 分布！只要数据不太稀疏，这种情况就成立；如果数据过于稀疏，它就失去了分形性质。例如，单个数据点不能被视为
    Pareto 分布。我们在[图 2-12](#figure2-12)中可以看到这个特性。
- en: '![A Pareto distribution graph whose curve along the y-axis and curve along
    the x-axis have both been made into their own pareto distribution graphs.](image_fi/502185c02/f02012.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![一张 Pareto 分布图，y 轴和 x 轴上的曲线都已变成各自的 Pareto 分布图。](image_fi/502185c02/f02012.png)'
- en: 'Figure 2-12: The fractal nature of a Pareto distribution'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2-12：Pareto 分布的分形特性
- en: 'In the center of [Figure 2-12](#figure2-12) is the Pareto distribution from
    [Figure 2-1](#figure2-1). I used the simple Python script in [Listing 2-1](#listing2-1)
    to zoom into this Pareto distribution:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图 2-12](#figure2-12)的中心，是来自[图 2-1](#figure2-1)的 Pareto 分布。我使用[清单 2-1](#listing2-1)中的简单
    Python 脚本放大了这个 Pareto 分布：
- en: '[PRE0]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Listing 2-1: An interactive script for you to zoom into a Pareto distribution'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 清单 2-1：一个交互式脚本，让你放大 Pareto 分布
- en: You can play with the code yourself; just copy it into your Python shell and
    run the code. If you do this in your Python shell, you’ll be able to zoom into
    different areas of the Pareto distribution.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以自己玩代码；只需将其复制到你的 Python 终端并运行。如果你在 Python 终端中执行此操作，你将能够放大 Pareto 分布的不同区域。
- en: 'The Pareto distribution has various practical applications in life and programming,
    and I’ll discuss some of them in this book, but, in my experience, the most transformative
    application for you will be to become an *80/20 thinker*; that is, you constantly
    try to find ways to accomplish much more with much less. Please note that while
    the concrete Pareto numbers—80/20, 70/30, or 90/10—may vary in your own life,
    you may draw some value from the fractal nature of productivity and output distributions.
    For instance, it is always true that not only do a few programmers earn much more
    than the rest but also a few of those top earners earn more than the rest of the
    top earners. The pattern stops only when the data gets too sparse. Here are some
    examples:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: Pareto 分布在生活和编程中有各种实际应用，我将在本书中讨论其中的一些，但根据我的经验，对你来说最具变革性的应用将是成为一名*80/20 思维者*；也就是说，你会不断寻找用更少的资源完成更多任务的方法。请注意，虽然具体的
    Pareto 数字——80/20、70/30 或 90/10——在你自己的生活中可能会有所不同，但你可以从生产力和产出分布的分形性质中得到一些启发。例如，总是有这样的事实：少数程序员赚得比其他人多，而且这些高收入者中的一部分人赚得比其他高收入者还要多。只有在数据变得过于稀疏时，这种模式才会停止。以下是一些例子：
- en: 'Income Twenty percent of the top 20 percent of coders will earn 80 percent
    of the 80 percent of income. In other words, 4 percent of the coders will earn
    64 percent of the income! This implies that you’re never stuck with your current
    financial situation, even if you already belong to the top 20 percent of coders.
    (This paper is just one of many that show the fractal nature of income distributions:
    [http://journalarticle.ukm.my/12411/1/29%20Fatimah%20Abdul%20Razak.pdf](http://journalarticle.ukm.my/12411/1/29%20Fatimah%20Abdul%20Razak.pdf)*.)*'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收入：前 20% 的程序员将赚取 80% 的 80% 收入。换句话说，4% 的程序员将赚取 64% 的收入！这意味着，即使你已经属于前 20% 的程序员，你也永远不会被困在当前的财务状况中。（这篇论文只是许多展示收入分布分形特性的论文之一：[http://journalarticle.ukm.my/12411/1/29%20Fatimah%20Abdul%20Razak.pdf](http://journalarticle.ukm.my/12411/1/29%20Fatimah%20Abdul%20Razak.pdf)*。）*
- en: Activities Twenty percent of the most impactful 20 percent of the most impactful
    20 percent of the activities you have done this week are often responsible for
    80 percent of the 80 percent of the 80 percent of your results. In this scenario,
    0.8 percent of the activities will lead to 51 percent of the results. Roughly
    speaking, if you’re working 40 hours per week, 20 minutes may account for half
    of the results in your workweek! An example of such a 20-minute activity would
    be writing a script that automates a business task and saves you a couple of hours
    every few weeks that you can invest in other activities. If you’re a programmer,
    deciding to skip the implementation of an unnecessary feature can save you tens
    of hours of unnecessary work. If you start to apply some 80/20 thinking, you’ll
    quickly find many of those leveraged activities in your own work.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 活动：你这周做的20%的最有影响力的20%的活动，通常会占到80%的结果。在这种情况下，0.8%的活动将导致51%的结果。粗略来说，如果你每周工作40小时，那么20分钟可能就能占据你工作周的一半成果！一个这样的20分钟活动的例子是编写一个自动化商业任务的脚本，每几周节省几个小时的时间，你可以将这些时间投入到其他活动中。如果你是程序员，决定跳过实现一个不必要的功能，可以为你节省数十小时的无谓工作。如果你开始应用一些80/20的思维方式，你会迅速在自己的工作中发现许多具有杠杆效应的活动。
- en: Progress No matter where you reside on any Pareto distribution, you can increase
    your output exponentially by “moving to the left” using your success habit and
    the power of focus. As long as the optimum hasn’t been reached, there’s always
    room for progress, for reaching more with less—even if you’re already a highly
    developed individual, company, or economy.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进展：无论你在任何帕累托分布中处于何种位置，通过运用你的成功习惯和专注的力量，“向左移动”都能指数级提高你的产出。只要最优状态尚未达到，总有进步的空间，有机会以更少的投入获得更多成果——即便你已经是一个高度发展的个体、公司或经济体。
- en: The activities that can move you up the Pareto curve are not always obvious,
    but they are never random. Many people give up searching for the success metrics
    in their fields because they argue that the probabilistic nature of the outcomes
    makes it completely random. What a wrong conclusion! To become a master coder,
    writing less code per day won’t get you there just as practicing less chess every
    day cannot lead you to becoming a professional chess player. Other factors will
    come into play, but that doesn’t make success a game of chance. By focusing on
    the success metrics in your industry, you will manipulate the probabilities in
    your favor. As an 80/20 thinker, you are the house—and the house *mostly* wins.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让你在帕累托曲线上前进的活动并不总是显而易见的，但它们从来不是随机的。许多人因为认为结果的概率性质使得成功完全是随机的，而放弃了在他们领域中寻找成功衡量标准。这是一个错误的结论！要成为一名大师级程序员，每天少写代码是无法做到的，就像每天少练习棋艺不能让你成为职业棋手一样。其他因素也会发挥作用，但这并不意味着成功是随机的游戏。通过专注于你所在行业的成功衡量标准，你将使概率向你有利。作为一个80/20思维者，你是赌场，而赌场*通常*是赢家。
- en: 80/20 Practice Tips
  id: totrans-128
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 80/20实践技巧
- en: Let’s finish this chapter with nine tips to leverage the power of the Pareto
    principle.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过九个技巧来结束本章，利用帕累托原则的力量。
- en: '**Figure out your success metrics.**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**弄清楚你的成功衡量标准。**'
- en: Define your industry first. Identify what the most successful professionals
    in your industry are doing exceptionally well and which tasks you can do every
    day to push you closer toward the top 20 percent. If you’re a coder, your success
    metric may be the number of lines of code written. If you’re an author, your success
    metric may be the number of words written toward the next book. Create a spreadsheet
    and track your success metric every day. Make it a game to stick to it and surpass
    yourself. Set a minimum threshold, and don’t end the day until you’ve accomplished
    the minimal threshold each day. Better yet, don’t start the day until you have!
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先定义你的行业。识别你所在行业中最成功的专业人士在做哪些事情做得异常出色，以及你每天可以做哪些任务将你推向前20%的位置。如果你是程序员，你的成功衡量标准可能是编写的代码行数。如果你是作家，你的成功衡量标准可能是为下一本书写下的字数。创建一个电子表格，每天追踪你的成功衡量标准。把它当作一个游戏，坚持下去并超越自己。设定一个最低标准，直到完成最低标准才结束一天的工作。更好的是，在你没有完成这个标准之前，不要开始一天的工作！
- en: '**Figure out your big goals in life.**'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**弄清楚你的人生大目标。**'
- en: 'Write them down. Without clearly defined big goals (think: 10-year goals),
    you won’t stick to one thing for a sufficiently long time. You have seen that
    a critical strategy for moving up the Pareto curve is to stay in the game longer
    while participating in fewer games.'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 把它们写下来。没有明确的长期目标（例如：10年目标），你就无法坚持做一件事足够长的时间。你已经看到了，提升帕累托曲线的关键策略之一是：在游戏中坚持更长时间，而参与更少的游戏。
- en: '**Look for ways to achieve the same things with fewer resources.**'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**寻找用更少的资源实现相同目标的方法。**'
- en: How can you accomplish 80 percent of the result in 20 percent of the time? Can
    you remove the remaining activities that take 80 percent of the time but lead
    only to 20 percent of the results? If not, can you outsource them? Fiverr and
    Upwork are cheap ways to find talent, and it pays to leverage the skills of other
    people.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在20%的时间里完成80%的结果？你能否去除那些占用了80%时间但只带来20%成果的活动？如果不能，你能外包它们吗？Fiverr和Upwork是寻找人才的便宜途径，利用他人的技能是值得的。
- en: '**Reflect on your own successes.**'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**反思你自己的成功。**'
- en: What did you do that led to great results? How can you do more of those things?
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你做了什么事情，取得了很大的成果？你如何能做得更多？
- en: '**Reflect on your own failures.**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**反思你自己的失败。**'
- en: How can you do less of the things that are responsible for the failure?
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何做得更少，减少那些导致失败的事情？
- en: '**Read more books in your industry.**'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**多读些行业书籍。**'
- en: By reading more books, you simulate practical experience without the massive
    time and energy investment of actually experiencing it. You learn from the mistakes
    of others. You learn about new ways of doing things. You acquire more skills in
    your field. A highly educated expert coder can solve a problem 10–100 times quicker
    than a beginner can. Reading books in your field is likely to be one of the success
    metrics in your field that will catapult you to success.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过阅读更多书籍，你可以模拟实际经验，而无需花费大量的时间和精力亲身经历。你从他人的错误中学习。你学习到新的做事方式。你在你的领域获得了更多的技能。一位高学历的专家程序员能够比初学者快10到100倍解决问题。在你的领域里，读书可能是成功的关键指标之一，它将把你推向成功。
- en: '**Spend much of your time improving and tweaking existing products.**'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**将大部分时间花在改进和调整现有产品上。**'
- en: 'Do this rather than inventing new products. Again, this comes from the Pareto
    distribution. If you have one product in your business, you can invest all your
    energy pushing this one product up the Pareto curve, generating exponentially
    increasing results for you and your company. But if you create new products all
    the time without improving and optimizing the old ones, you’ll always have subaverage
    products. Never forget: the big results are found on the left of the Pareto distribution.'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 做这个，而不是发明新产品。再一次，这来自帕累托分布。如果你的业务只有一个产品，你可以将所有精力投入到提升这个产品在帕累托曲线上的位置，为你和你的公司带来指数级增长的成果。但如果你一直创造新产品，而不改进和优化旧产品，你就永远会有低于平均水平的产品。永远不要忘记：大成果是在帕累托分布的左侧找到的。
- en: '**Smile.**'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**微笑。**'
- en: It’s surprising how simple some consequences are. If you’re a positive person,
    many things will be easier. More people will collaborate with you. You’ll experience
    more positivity, happiness, and support. Smiling is a highly leveraged activity
    with massive impact and little cost.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有些结果看起来很简单，令人惊讶。如果你是一个积极的人，许多事情都会变得更容易。更多的人会与你合作。你会体验到更多的正能量、幸福和支持。微笑是一项高效的活动，具有巨大的影响力且成本低廉。
- en: '**Don’t do things that reduce value.**'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**不要做那些减少价值的事情。**'
- en: 'These are things like smoking, eating unhealthily, sleeping little, drinking
    alcohol, and watching too much Netflix. Avoiding things that drag you down is
    one of your biggest leverage points. If you skip doing things that harm you, you’ll
    become healthier, happier, and more successful. And you’ll have more time and
    money to enjoy the good things in life: relationships, nature, and positive experiences.'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些东西包括吸烟、不健康饮食、睡眠不足、饮酒和看太多Netflix。避免那些让你陷入困境的事情是你最大的一项杠杆点。如果你能避免做那些伤害你的事，你将变得更健康、更快乐、更成功。而且你将有更多的时间和金钱去享受生活中的美好事物：人际关系、大自然和积极的体验。
- en: 'In the next chapter, you’ll learn a key concept that helps you focus on the
    vital few features of your software: you’ll learn how to build a minimum viable
    product.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将学习一个关键概念，帮助你专注于软件的关键特性：你将学习如何构建一个最小可行产品。
- en: Resources
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: Let’s have a look at the sources used in this chapter—feel free to explore them
    further to find more applications of the Pareto principle!
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看本章中使用的来源——可以进一步探索它们，找到更多帕累托原则的应用！
- en: Panagiotis Louridas, Diomidis Spinellis, and Vasileios Vlachos, “Power Laws
    in Software,” *ACM Transactions on Software Engineering and Methodology* 18, no.
    1 (September 2008), [https://doi.org/10.1145/1391984.1391986/](https://doi.org/10.1145/1391984.1391986/)*.*
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Panagiotis Louridas，Diomidis Spinellis 和 Vasileios Vlachos，“软件中的幂律，”*ACM Transactions
    on Software Engineering and Methodology* 18，1 号（2008 年 9 月），[https://doi.org/10.1145/1391984.1391986/](https://doi.org/10.1145/1391984.1391986/)。
- en: 'Scientific evidence that contributions to open source projects are Pareto distributed:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 科学证据表明，开源项目的贡献是帕累托分布的：
- en: 'Mathieu Goeminne and Tom Mens, “Evidence for the Pareto Principle in Open Source
    Software Activity,” Conference: CSMR 2011 Workshop on Software Quality and Maintainability
    (SQM), January 2011, [https://www.researchgate.net/publication/228728263_Evidence_for_the_Pareto_principle_in_Open_Source_Software_Activity/](https://www.researchgate.net/publication/228728263_Evidence_for_the_Pareto_principle_in_Open_Source_Software_Activity/).'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Mathieu Goeminne 和 Tom Mens，“开源软件活动中的帕累托原则证据，”会议：CSMR 2011 软件质量与可维护性研讨会（SQM），2011
    年 1 月，[https://www.researchgate.net/publication/228728263_Evidence_for_the_Pareto_principle_in_Open_Source_Software_Activity/](https://www.researchgate.net/publication/228728263_Evidence_for_the_Pareto_principle_in_Open_Source_Software_Activity/)。
- en: 'Source for the commit distribution in the GitHub repository TensorFlow:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub 仓库 TensorFlow 中提交分布的来源：
- en: '[https://github.com/tensorflow/tensorflow/graphs/contributors/](https://github.com/tensorflow/tensorflow/graphs/contributors/).'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '[https://github.com/tensorflow/tensorflow/graphs/contributors/](https://github.com/tensorflow/tensorflow/graphs/contributors/)。'
- en: '*My blog article on the income distribution of freelance developers:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*我关于自由开发者收入分配的博客文章：*'
- en: Christian Mayer, “What’s the Hourly Rate of a Python Freelancer?” *Finxter*
    (blog), [https://blog.finxter.com/whats-the-hourly-rate-of-a-python-freelancer/](https://blog.finxter.com/whats-the-hourly-rate-of-a-python-freelancer/).
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Christian Mayer，“Python 自由职业者的小时费率是多少？”*Finxter*（博客），[https://blog.finxter.com/whats-the-hourly-rate-of-a-python-freelancer/](https://blog.finxter.com/whats-the-hourly-rate-of-a-python-freelancer/)。
- en: 'Scientific evidence that open markets adhere to the Pareto principles:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 科学证据表明，开放市场遵循帕累托原则：
- en: 'William J. Reed, “The Pareto Law of Incomes—an Explanation and an Extension,”
    *Physica A: Statistical Mechanics and its Applications* 319 (March 2003), [https://doi.org/10.1016/S0378-4371(02)01507-8/](https://doi.org/10.1016/S0378-4371(02)01507-8/).'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'William J. Reed，“收入的帕累托法则——解释与扩展，”*Physica A: Statistical Mechanics and its
    Applications* 319（2003 年 3 月），[https://doi.org/10.1016/S0378-4371(02)01507-8/](https://doi.org/10.1016/S0378-4371(02)01507-8/)。'
- en: 'A paper that shows the fractal nature of income distributions:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 一篇展示收入分配分形特性的论文：
- en: 'Fatimah Abdul Razak and Faridatulazna Ahmad Shahabuddin, “Malaysian Household
    Income Distribution: A Fractal Point of View,” *Sains Malaysianna* 47, no. 9 (2018),
    [http://dx.doi.org/10.17576/jsm-2018-4709-29/](http://dx.doi.org/10.17576/jsm-2018-4709-29/).'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fatimah Abdul Razak 和 Faridatulazna Ahmad Shahabuddin，“马来西亚家庭收入分配：从分形的角度看，”*Sains
    Malaysianna* 47，9 号（2018），[http://dx.doi.org/10.17576/jsm-2018-4709-29/](http://dx.doi.org/10.17576/jsm-2018-4709-29/)。
- en: 'Information about how you can build your side income as a freelance developer
    with Python:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何通过 Python 作为自由开发者建立副业的信息：
- en: Christian Mayer, “How to Build Your High-Income Skill Python.” Video, [https://blog.finxter.com/webinar-freelancer/](https://blog.finxter.com/webinar-freelancer/).
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Christian Mayer，“如何建立你的高收入技能 Python。”视频，[https://blog.finxter.com/webinar-freelancer/](https://blog.finxter.com/webinar-freelancer/)。
- en: Python Freelancer resource page, *Finxter* (blog), [https://blog.finxter.com/python-freelancing/](https://blog.finxter.com/python-freelancing/).
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python 自由职业者资源页面，*Finxter*（博客），[https://blog.finxter.com/python-freelancing/](https://blog.finxter.com/python-freelancing/)。
- en: 'A deeper dive into the power of 80/20 thinking:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 更深入了解 80/20 思维的力量：
- en: 'Richard Koch, *The 80/20 Principle: The Secret to Achieving More with Less*,
    London: Nicholas Brealey, 1997.'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'Richard Koch，*The 80/20 Principle: The Secret to Achieving More with Less*，伦敦：Nicholas
    Brealey，1997。'
- en: 'Ten percent of the people earn almost 50 percent of the income in the United
    States:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 美国 10% 的人几乎赚取了 50% 的收入：
- en: Facundo Alvaredo, Lucas Chancel, Thomas Piketty, Emmanuel Saez, and Gabriel
    Zucman, *World Inequality Report 2018*, World Inequality Lab, [https://wir2018.wid.world/files/download/wir2018-summary-english.pdf](https://wir2018.wid.world/files/download/wir2018-summary-english.pdf).
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Facundo Alvaredo，Lucas Chancel，Thomas Piketty，Emmanuel Saez 和 Gabriel Zucman，*World
    Inequality Report 2018*，World Inequality Lab，[https://wir2018.wid.world/files/download/wir2018-summary-english.pdf](https://wir2018.wid.world/files/download/wir2018-summary-english.pdf)。
- en: 'Less than 25 percent of the people in North America rate their happiness a
    9 or 10 on a 0–10 scale where “the worst possible life” is a 0 and “the best possible
    life” is a 10:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 北美不到25%的人在0到10的幸福评分中给自己打9或10，其中“最糟糕的生活”是0，“最好的生活”是10：
- en: 'John Helliwell, Richard Layard, and Jeffrey Sachs, eds., *World Happiness Report
    2016, Update* (Vol. 1). New York: Sustainable Development Solutions Network, [https://worldhappiness.report/ed/2016/](https://worldhappiness.report/ed/2016/).'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: John Helliwell, Richard Layard 和 Jeffrey Sachs，编，《2016年世界幸福报告，更新版》（第一卷）。纽约：可持续发展解决方案网络，[https://worldhappiness.report/ed/2016/](https://worldhappiness.report/ed/2016/)。
- en: 'Twenty percent of book authors may achieve 97 percent of book sales:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 20%的书籍作者可能占据97%的图书销量：
- en: 'Xindi Wang, Burcu Yucesoy, Onur Varol, Tina Eliassi-Rad, and Albert-László
    Barabási, “Success in Books: Predicting Book Sales Before Publication,” *EPJ Data
    Sci.* 8, no. 31 (October 2019), [https://doi.org/10.1140/epjds/s13688-019-0208-6/](https://doi.org/10.1140/epjds/s13688-019-0208-6/).'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Xindi Wang, Burcu Yucesoy, Onur Varol, Tina Eliassi-Rad 和 Albert-László Barabási，“书籍成功：在出版前预测图书销量”，*《EPJ数据科学》*
    8卷，第31期（2019年10月），[https://doi.org/10.1140/epjds/s13688-019-0208-6/](https://doi.org/10.1140/epjds/s13688-019-0208-6/)。
- en: Jordi Prats, “Harry Potter and Pareto’s Fat Tail,” *Significance* (August 10,
    2011), [https://www.significancemagazine.com/14-the-statistics-dictionary/105-harry-potter-and-pareto-s-fat-tail/](https://www.significancemagazine.com/14-the-statistics-dictionary/105-harry-potter-and-pareto-s-fat-tail/).
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Jordi Prats，“哈利·波特与帕累托的胖尾”，*《显著性》*（2011年8月10日），[https://www.significancemagazine.com/14-the-statistics-dictionary/105-harry-potter-and-pareto-s-fat-tail/](https://www.significancemagazine.com/14-the-statistics-dictionary/105-harry-potter-and-pareto-s-fat-tail/)。
- en: 'Of scientists, 5.2 percent account for 38 percent of journal articles:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在科学家中，5.2%的人占据了38%的期刊文章：
- en: Javier Ruiz-Castillo and Rodrigo Costas, “Individual and Field Citation Distributions
    in 29 Broad Scientific Fields,” *Journal of Informetrics* 12, no. 3 (August 2018),
    [https://doi.org/10.1016/j.joi.2018.07.002/](https://doi.org/10.1016/j.joi.2018.07.002/).*
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Javier Ruiz-Castillo 和 Rodrigo Costas，“29个广泛科学领域中的个人和领域引用分布”，*《信息计量学期刊》* 12卷，第3期（2018年8月），[https://doi.org/10.1016/j.joi.2018.07.002/](https://doi.org/10.1016/j.joi.2018.07.002/)。
