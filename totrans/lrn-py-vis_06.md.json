["```py\ndef setup(): size(500, 500) background('#004477') noFill() stroke('#FFFFFF') strokeWeight(3)\n```", "```py\n. . .def draw(): print(frameCount)\n```", "```py\ndef setup(): . . . frameRate(2.5)def draw():  if  frameCount % 2 == 0: print(frameCount)\n```", "```py\n. . .def draw(): if frameCount % 2 == 0: circle(420, 250, 80)\n```", "```py\n. . .def draw(): background('#004477') if frameCount % 2 == 0: circle(420, 250, 80)\n```", "```py\n. . .def draw(): background('#004477') hide = frameCount % 81 if hide != 0: circle(250, 80, 80) if hide != 1: circle(370, 130, 80) if hide != 2: circle(420, 250, 80) if hide != 3: circle(370, 370, 80) if hide != 4: circle(250, 420, 80) if hide != 5: circle(130, 370, 80) if hide != 6: circle(80, 250, 80) if hide != 7: circle(130, 130, 80)\n```", "```py\ndef setup(): 1 y = 1def draw(): 2 print(y)\n```", "```py\ny = 1def setup(): passdef draw(): print(y)\n```", "```py\ny = 1def setup(): 1 y = 0 2 print(y)def draw(): 3 print(y)\n```", "```py\n. . .def draw(): y += 1 print(y)\n```", "```py\n. . .def draw(): global y y += 1 print(y)\n```", "```py\ny = 1def setup(): print(y) size(500, 500) noFill() stroke('#FFFFFF') strokeWeight(3)def draw(): . . . background('#004477') circle(height/2, y, 50)\n```", "```py\n. . .def draw(): . . . if frameCount % 100 == 0: saveFrame() square(10, 10, 100)\n```", "```py\n . . . saveFrame('frame.png')\n```", "```py\n . . . saveFrame('frame-####.png')\n```", "```py\ny = 100\nyspeed = 2def setup(): size(800, 600) fill('#0099FF') textSize(50)def draw(): 1 global y, yspeed background('#000000') 2 y += yspeed text('DVD', 100, y3)\n```", "```py\n. . .def draw(): . . . if y > height: yspeed *= -1\n```", "```py\n. . .\nx = 100\nxspeed = 2. . .def draw(): global y, yspeed, **x, xspeed** background('#000000') y += yspeed x += xspeed text('DVD', **x**, y) . . .\n```", "```py\nsize(800, 800)noFill()noStroke()\ngrid = loadImage('grid.png')image(grid, 0, 0)\ngrido = loadImage('grid-overlay.png')\n```", "```py\n. . .translate(150, 100)image(grido, 0, 0)\n```", "```py\n. . .fill('#FF0000')square(0, 0, 100)fill('#FFFF00')square(100, 0, 100)\n```", "```py\n. . .translate(100, 0)fill('#FFFF00')square(**0**, 0, 100)\n```", "```py\n. . .translate(150, 100)rotate(QUARTER_PI). . .\n```", "```py\n. . .translate(150, 100)rotate(QUARTER_PI)scale(0.5). . .\n```", "```py\n. . .translate(150, 100)**#**rotate(QUARTER_PI)scale(0.5)shearY(QUARTER_PI). . .\n```", "```py\n. . .1 translate(150, 100)#rotate(QUARTER_PI)scale(0.5)pushMatrix()2 shearY(QUARTER_PI)image(grido, 0, 0)fill('#FF0000')square(0, 0, 100)popMatrix()pushMatrix()3 translate(100, 0)image(grido, 0, 0)fill('#FFFF00')square(0, 0, 100)popMatrix()\n```", "```py\ndef setup(): size(600, 600) frameRate(1) noFill() stroke('#FFFFFF')def draw(): background('#004477')\n```", "```py\n . . . h = hour() m = minute() s = second() print('{}:{}:{}'.format(h, m, s))\n```", "```py\n . . . 1 translate(width/2, height/2) strokeWeight(3) 2 circle(0, 0, 350) # hour hand 3 strokeWeight(10) line(0, 0, 1004, 0)\n```", "```py\n . . . rotate(-HALF_PI) # hour hand . . .\n```", "```py\n . . . # hour hand rotate(TAU / 12 * h) . . .\n```"]