- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](Images/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
- en: Python is a unique language. As a software developer, I have come to appreciate
    it for its particularities. There is a certain artistic beauty about a well-written
    Python program. I love when I find the most “Pythonic” solution to a problem and
    then look back and wonder how I thought any other answer would do.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, for years, I was crippled by an instinctual desire to view Python
    through the lens of the other languages I knew. Although I could read and write
    in Python, I failed to see the “obviousness” of a particular practice. It was
    like trying to speak Spanish using only a translation dictionary. I could write
    Python, but I couldn’t really *think* in Python. The essential qualities of the
    language were lost on me.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Once I started to truly understand Python—to think in it—I found a new delight
    in the language. Solutions became obvious. Design was a joy, rather than an enigma.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: When a brand-new developer cuts their teeth on Python, they have few preconceptions.
    They have no “native tongue” to hamper their introduction to the language. But
    for an established developer who picks up Python as a second or third language,
    the transition is in some ways far rougher. They must not only learn something
    new, but in many ways, they must *unlearn* something old.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: '*Dead Simple Python* is the guidebook for that journey.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: Who Is This Book For?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are already familiar with another programming language and now wish to
    learn Python for the first time, without slogging through beginner-oriented courses,
    this book is for you. I’ll be focusing specifically on the “Pythonic” way of doing
    things, with minimal, targeted explanations of the underlying general programming
    concepts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: If you’re an intermediate-level Python developer, you’ll also find this book
    useful. Although I’ve been working with Python for many years myself, some of
    these topics didn’t “click” for me until more recently. This book gives the explanations
    I wish I’d gotten.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t already know programming, despair not. There are hundreds of excellent
    books and resources for learning Python as a first programming language. I particularly
    recommend either *Python Crash Course,* 2nd Edition, by Eric Matthes (No Starch
    Press, 2019) or *Automate the Boring Stuff with Python,* 2nd Edition, by Al Sweigart
    (No Starch Press, 2019). Afterward, you can return to this book to reinforce and
    expand upon your newfound knowledge.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: What Does “Simple” Mean?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The topics discussed herein may, at first blush, appear anything but simple.
    You may be wondering how simple a book this thick could actually be!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: When I titled this book *Dead Simple Python*, I was describing a retrospective
    view of the topics, rather than a forward-looking one. One should recognize that
    any topic worth learning, when first approached, will feel insurmountable. Similarly,
    any explanation worthy of an existing software developer should possess enough
    depth to utterly disqualify it from the forward-looking label of “simple.”
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我为这本书命名为*Dead Simple Python*时，我是在描述对这些主题的回顾性视角，而不是前瞻性视角。应该认识到，任何值得学习的主题，在初次接触时，都会让人感到无法逾越。同样，任何值得现有软件开发者深入理解的解释，都应该具备足够的深度，完全排除它被贴上“简单”标签的可能。
- en: Instead, I aim to unpack each topic in such a manner that, by the conclusion
    of the section, the reader cannot help but feel the concept is altogether obvious.
    Regardless of the topic’s initial appearance of complexity, the reader should
    be ultimately left with an impression that it is actually “dead simple,” at which
    point, they may be assured they are thinking like a native Python developer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我的目标是以一种方式拆解每个主题，使得在该部分结束时，读者无法不觉得这个概念显而易见。不管主题最初看起来多么复杂，读者最终应该得到的印象是它其实是“非常简单的”，此时，他们可以确信自己已经开始像一名本地的
    Python 开发者一样思考了。
- en: To achieve this level of understanding, I generally start by unpacking the lowest-level,
    most explicit form of the topic. Once that is established, I add layer upon layer,
    ultimately reaching the implicit, idiomatic form most commonly used. In this way,
    I hope to help you, the reader, come away with a solid, comfortable understanding
    of precisely why and how each feature of the language works.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到这种理解的深度，我通常会从最底层、最明确的主题形式入手。一旦这一部分确立，我会逐层深入，最终达到最常用的隐性、惯用形式。通过这种方式，我希望帮助你——读者，清晰地理解每个语言特性究竟为何和如何运作。
- en: What’s in This Book?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容简介
- en: '*Dead Simple Python* is divided into five sections. Unlike many beginner-oriented
    courses, I’m going to assume you want to start writing production-quality code
    (rather than just oversimplified tutorial examples) as soon as possible. My approach
    requires you to do some initial work, but it pays off by ensuring you can apply
    your new knowledge to live projects more readily.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 分为五个部分。与许多面向初学者的课程不同，我假设你希望尽早开始编写生产级别的代码（而不是仅仅是过于简化的教程示例）。我的方法需要你做一些初期的工作，但它的回报是确保你能更轻松地将新知识应用到实际项目中。'
- en: 'Part I, “The Python Environment” (Chapters 1–4), firmly establishes you in
    the world of Python: its philosophy, tools, basic syntax, and project layout.
    This will provide a solid foundation for writing real, substantial code.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分，“Python 环境”（第1–4章），让你牢牢扎根于 Python 世界：其哲学、工具、基本语法和项目布局。这为编写真实、实质性代码提供了坚实的基础。
- en: Part II, “Essential Structures” (Chapters 5–8), explores Python’s basic structural
    elements—variables, functions, classes, and exceptions—and teaches you how to
    use them to their fullest potential.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分，“基础结构”（第5–8章），探索了 Python 的基本结构元素——变量、函数、类和异常——并教你如何充分利用它们的潜力。
- en: Part III, “Data and Flow” (Chapters 9–12), covers the many unique ways of controlling
    execution flow and manipulating data. It discusses data structures, loops, iteration,
    generators, coroutines, files, and binary data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分，“数据与流程”（第9–12章），涵盖了许多控制执行流程和操作数据的独特方法。讨论了数据结构、循环、迭代、生成器、协程、文件和二进制数据。
- en: Part IV, “Advanced Concepts” (Chapters 13–17), unlocks advanced tactics that
    can make your code more powerful, including inheritance, introspection, and concurrency.
    It addresses many of the “scary” topics that are skimmed over by most courses
    and tutorials.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第四部分，“高级概念”（第13–17章），解锁了能够增强代码功能的高级技巧，包括继承、反射和并发。它涉及许多大多数课程和教程轻描淡写的“难题”。
- en: Part V, “Beyond the Code” (Chapters 18–20), teaches you how to test, debug,
    and deploy real-life projects.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第五部分，“超越代码”（第18–20章），教你如何测试、调试和部署真实项目。
- en: Finally, Chapter 21 provides an overview of the many directions you can take
    your Python development journey from here.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，第21章概述了你可以从这里开始的多种 Python 开发方向。
- en: What’s NOT in This Book
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书不包含的内容
- en: Since this book is intended for existing programmers, I won’t be rehashing much
    general theory. Readers should already know (from a language-agnostic standpoint)
    what variables and functions are, what the difference is between classes and objects,
    and so forth. At most, I’ll briefly define those concepts that aren’t quite ubiquitous
    in the programming world.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: My discussion of topics is far from exhaustive. I’m focusing more on the *why*
    and *how*, thereby providing a strong foundation. Readers are encouraged to broaden
    their understanding through additional, independent reading, so I’ll leave the
    comprehensive listing of library functions and the like to the documentation.
    Many popular features in the standard library, such as random numbers and datetime
    operations, are afforded little more than incidental explanation when they’re
    used in an example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: To control the scope of this book, I also won’t be covering most third-party
    tools and libraries. I am frequently asked to discuss popular alternatives to
    the default tools in Python, but as these alternatives fall in and out of favor
    like the passing of the seasons, I will be sticking largely to the universal defaults.
    There are scattered exceptions, but only when a third-party tool has become practically
    ubiquitous in the ecosystem, eclipsing even the standard library.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: In general, when a third-party tool or library seems of particular note, I will
    refer the reader to its official documentation or website.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: How to Read This Book
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Dead Simple Python* is intended more as a guided tour than a desk reference.
    I recommend starting here, at the beginning, and working your way through the
    chapters, in order. Whether you’re new to the language or have been trying to
    use it for a while without feeling like you “get it,” you’ll discover that this
    approach will fill in many knowledge gaps you never realized you had.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: However, if you know of a particular topic you need a better understanding of
    *right now*, you can skip directly to the chapter that deals with it. Most chapters
    are written to stand alone, but I will always assume that you have read and understand
    the material in the preceding chapters.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: About the Vocabulary
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Nearly any Python book or online article uses vocabulary borrowed from other
    languages, such as words like *element*, *body*, and *variable*. While this is
    often assumed to be helpful because it relates Python concepts to readers’ existing
    knowledge, I believe borrowing such vocabulary is ultimately counterproductive.
    Attempting to understand Python primarily in terms of other languages frustrates
    many attempts to write clear, idiomatic code. What’s more, if one gets in the
    habit of using the wrong vocabulary, one will find the official documentation
    profoundly difficult to read.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, I’ve decided to adhere doggedly to the official vocabulary, even
    if a majority of the community considers an approximate synonym acceptable. This
    may be one of the few books in print that takes this position, but I consider
    it important. To become a native, you must learn to speak the local dialect!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Theory Recaps
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Depending on what languages you already know, there may be some gaps in your
    theory repertoire. For example, if you are a Haskell developer, you may be unfamiliar
    with object-oriented programming, or if you are a C++ developer, you may be unfamiliar
    with pure functional programming.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: To bridge these gaps, I provide occasional *Theory Recaps*, brief overviews
    of the essential theory and best practices related to certain programming paradigms
    and patterns. That way, if you already know a particular concept, you can skip
    over the Theory Recap and get right to the Python-specific stuff.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: Objective or Opinionated?
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It’s almost impossible to keep personal opinions out of a technical book, especially
    one as focused on idiomatic practice as this one, but I like to think I’ve done
    my best to remain objective.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '*Dead Simple Python* is not my personal take on Python, but rather it is the
    distilled collective wisdom of the Python community. I am not the same developer
    as when I started writing. My own development practices have changed drastically
    as a result of the two years of research, experimentation, and heated debate that
    went into this book.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Even so, it’s impossible to please everybody all the time. At times, I’ve made
    particular note in the text about debates that never reached a satisfactory conclusion.
    Even matters I consider settled are likely to provoke strong negative reactions
    from some Python developers; indeed, some of them provoked strong reactions in
    me until I better understood them.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: I recommend you go into this book with an open mind, even if you consider yourself
    reasonably familiar with programming or even with Python itself. I’ve made an
    effort to explain the justifications behind all the recommendations herein, and
    I would encourage you to expect at least the same degree of reasoning to accompany
    *any* valid recommendation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: The Examples
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I’ve carefully constructed the majority of my examples in this book to demonstrate
    realistic (if simplified) use cases for whatever topic I’m discussing. In many
    situations, I’ll deliberately complicate the example to highlight issues and surprises
    that tutorials often gloss over. I’ve made an effort to point out all the times
    my examples get a bit convoluted, but you should know that I may oversimplify
    or otherwise tiptoe around anything irrelevant to the immediate topic.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: This approach also often necessitates longer examples than you may be used to
    from tutorials, so chapters may appear longer than they effectively are. Don’t
    be discouraged by page counts; take it one section at a time.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: All the examples in this book run, or at least fail predictably, except as otherwise
    noted. I adhere to Python style conventions throughout. I highly recommend retyping
    each example yourself and experimenting with it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: I’ve made an effort to label the segments of Python code meant to be saved in
    files as part of runnable examples. The filename is given, and the sections are
    numbered `:1`, `:2`, and so on. When a section is revised, I tack a letter on
    after the section, so section `:2b` would revise section `:2a`; the revisions
    themselves are in `bold`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'Nearly all the examples in this book can be found on the book’s official GitHub
    repository: [https://github.com/codemouse92/DeadSimplePython.](https://github.com/codemouse92/DeadSimplePython)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: What About a Project?
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'I’ve been asked why I don’t provide a comprehensive project that we can work
    through in this book, but the answer is fairly simple: I’m assuming that you’re
    probably here because you already have some project you want to use Python for.
    Instead of distracting you from that, I’ll focus on presenting material in a way
    that you can apply to your work.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'If you *don’t* have a project in mind, now may be a great time to start one!
    Think of a problem you personally wish there were a solution (or a better solution)
    for, then build that solution. Pick one small part of the problem and start there.
    There’s no magic formula for creating the perfect first project, other than to
    make it something you’d personally use. Don’t worry about making it perfect, or
    even good, your first time around. There’s a truism in this industry: “You always
    throw the first one away.” Don’t be afraid to build it wrong at first! This book
    will give you the tools to go back and make it right.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Of course, if a project is completely impractical to you, you’ll do just fine
    working through this book’s examples.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: In any case, I do ***strongly*** recommend creating a personal “firing range”
    project, for trying out Python in an environment where breaking things won’t have
    significant consequences. I’ll introduce running Python code in Chapters 2 and
    3, and I’ll cover project structure in Chapter 4. I’ll revisit project structure
    when I discuss packaging and distribution in Chapter 18.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You should already know the essentials of programming in another language. This
    book teaches Python, not programming.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should have access to a computer capable of running Python 3.7 or later.
    If you haven’t actually installed Python yet, don’t worry—we’ll be doing that
    in Chapter 2.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should know the basics of using the command line on your computer, especially
    relative and absolute paths, and navigating the filesystem. If you don’t understand
    all that, go learn it now. (I’ll wait.)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You should have an internet connection, even a slow one, for viewing the documentation
    and occasionally downloading packages. However, I’ve tried to maximize the number
    of examples that work without internet.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, go get a cup of your favorite beverage and settle in at your computer with
    a notebook and pen. Let’s get started!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，去拿一杯你最喜欢的饮品，准备好坐在电脑前，带上笔记本和笔。让我们开始吧！
