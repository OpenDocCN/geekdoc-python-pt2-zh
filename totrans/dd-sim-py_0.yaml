- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: '![](Images/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: Python is a unique language. As a software developer, I have come to appreciate
    it for its particularities. There is a certain artistic beauty about a well-written
    Python program. I love when I find the most “Pythonic” solution to a problem and
    then look back and wonder how I thought any other answer would do.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种独特的语言。作为一名软件开发者，我已经开始欣赏它的独特性。编写一段优秀的 Python 代码具有某种艺术美感。我喜欢当我找到最“Pythonic”的解决方案时，回头看看，想知道我曾经怎么会认为其他的答案是可行的。
- en: Unfortunately, for years, I was crippled by an instinctual desire to view Python
    through the lens of the other languages I knew. Although I could read and write
    in Python, I failed to see the “obviousness” of a particular practice. It was
    like trying to speak Spanish using only a translation dictionary. I could write
    Python, but I couldn’t really *think* in Python. The essential qualities of the
    language were lost on me.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，多年来，我一直被一种本能的欲望所困扰，那就是通过我已知的其他编程语言的视角来看待 Python。虽然我能读写 Python，但我没有看到某些实践的“显而易见性”。就像是用翻译字典说西班牙语。我能写
    Python，但我并不真正能*用* Python 思考。语言的本质特性对我来说是模糊的。
- en: Once I started to truly understand Python—to think in it—I found a new delight
    in the language. Solutions became obvious. Design was a joy, rather than an enigma.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我开始真正理解 Python——用它思考——我发现自己对这门语言产生了新的喜爱。解决方案变得显而易见。设计变成了一种享受，而不是谜题。
- en: When a brand-new developer cuts their teeth on Python, they have few preconceptions.
    They have no “native tongue” to hamper their introduction to the language. But
    for an established developer who picks up Python as a second or third language,
    the transition is in some ways far rougher. They must not only learn something
    new, but in many ways, they must *unlearn* something old.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当一位全新的开发者开始接触 Python 时，他们没有太多的先入为主的观念。他们没有任何“母语”的束缚，可以更顺畅地学习这门语言。但对于一位将 Python
    作为第二或第三语言的资深开发者来说，转变往往更加艰难。他们不仅需要学习新的知识，往往还需要*放弃*一些旧的思维方式。
- en: '*Dead Simple Python* is the guidebook for that journey.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 是这段旅程的指南。'
- en: Who Is This Book For?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这本书适合谁？
- en: If you are already familiar with another programming language and now wish to
    learn Python for the first time, without slogging through beginner-oriented courses,
    this book is for you. I’ll be focusing specifically on the “Pythonic” way of doing
    things, with minimal, targeted explanations of the underlying general programming
    concepts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉另一种编程语言，并且现在希望第一次学习 Python，而不想再从初学者课程开始，那么这本书适合你。我将特别关注“Pythonic”风格的做事方式，并针对性地解释一些基础的编程概念。
- en: If you’re an intermediate-level Python developer, you’ll also find this book
    useful. Although I’ve been working with Python for many years myself, some of
    these topics didn’t “click” for me until more recently. This book gives the explanations
    I wish I’d gotten.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个中级 Python 开发者，你会发现这本书对你也很有用。尽管我自己也已经使用 Python 多年，但其中一些话题直到最近才让我真正理解。这本书给出了我当时希望得到的解释。
- en: If you don’t already know programming, despair not. There are hundreds of excellent
    books and resources for learning Python as a first programming language. I particularly
    recommend either *Python Crash Course,* 2nd Edition, by Eric Matthes (No Starch
    Press, 2019) or *Automate the Boring Stuff with Python,* 2nd Edition, by Al Sweigart
    (No Starch Press, 2019). Afterward, you can return to this book to reinforce and
    expand upon your newfound knowledge.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不懂编程，别灰心。市面上有成百上千本优秀的书籍和资源可以作为第一编程语言来学习 Python。我特别推荐 Eric Matthes 的 *Python
    Crash Course*（第二版，No Starch Press，2019年）或 Al Sweigart 的 *Automate the Boring Stuff
    with Python*（第二版，No Starch Press，2019年）。然后，你可以回到这本书，巩固并拓展你新学到的知识。
- en: What Does “Simple” Mean?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “简单”是什么意思？
- en: The topics discussed herein may, at first blush, appear anything but simple.
    You may be wondering how simple a book this thick could actually be!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本书讨论的主题乍一看，可能看起来并不简单。你可能会想，这么厚的一本书到底能有多简单呢！
- en: When I titled this book *Dead Simple Python*, I was describing a retrospective
    view of the topics, rather than a forward-looking one. One should recognize that
    any topic worth learning, when first approached, will feel insurmountable. Similarly,
    any explanation worthy of an existing software developer should possess enough
    depth to utterly disqualify it from the forward-looking label of “simple.”
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我为这本书命名为*Dead Simple Python*时，我是在描述对这些主题的回顾性视角，而不是前瞻性视角。应该认识到，任何值得学习的主题，在初次接触时，都会让人感到无法逾越。同样，任何值得现有软件开发者深入理解的解释，都应该具备足够的深度，完全排除它被贴上“简单”标签的可能。
- en: Instead, I aim to unpack each topic in such a manner that, by the conclusion
    of the section, the reader cannot help but feel the concept is altogether obvious.
    Regardless of the topic’s initial appearance of complexity, the reader should
    be ultimately left with an impression that it is actually “dead simple,” at which
    point, they may be assured they are thinking like a native Python developer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我的目标是以一种方式拆解每个主题，使得在该部分结束时，读者无法不觉得这个概念显而易见。不管主题最初看起来多么复杂，读者最终应该得到的印象是它其实是“非常简单的”，此时，他们可以确信自己已经开始像一名本地的
    Python 开发者一样思考了。
- en: To achieve this level of understanding, I generally start by unpacking the lowest-level,
    most explicit form of the topic. Once that is established, I add layer upon layer,
    ultimately reaching the implicit, idiomatic form most commonly used. In this way,
    I hope to help you, the reader, come away with a solid, comfortable understanding
    of precisely why and how each feature of the language works.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到这种理解的深度，我通常会从最底层、最明确的主题形式入手。一旦这一部分确立，我会逐层深入，最终达到最常用的隐性、惯用形式。通过这种方式，我希望帮助你——读者，清晰地理解每个语言特性究竟为何和如何运作。
- en: What’s in This Book?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容简介
- en: '*Dead Simple Python* is divided into five sections. Unlike many beginner-oriented
    courses, I’m going to assume you want to start writing production-quality code
    (rather than just oversimplified tutorial examples) as soon as possible. My approach
    requires you to do some initial work, but it pays off by ensuring you can apply
    your new knowledge to live projects more readily.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 分为五个部分。与许多面向初学者的课程不同，我假设你希望尽早开始编写生产级别的代码（而不是仅仅是过于简化的教程示例）。我的方法需要你做一些初期的工作，但它的回报是确保你能更轻松地将新知识应用到实际项目中。'
- en: 'Part I, “The Python Environment” (Chapters 1–4), firmly establishes you in
    the world of Python: its philosophy, tools, basic syntax, and project layout.
    This will provide a solid foundation for writing real, substantial code.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分，“Python 环境”（第1–4章），让你牢牢扎根于 Python 世界：其哲学、工具、基本语法和项目布局。这为编写真实、实质性代码提供了坚实的基础。
- en: Part II, “Essential Structures” (Chapters 5–8), explores Python’s basic structural
    elements—variables, functions, classes, and exceptions—and teaches you how to
    use them to their fullest potential.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分，“基础结构”（第5–8章），探索了 Python 的基本结构元素——变量、函数、类和异常——并教你如何充分利用它们的潜力。
- en: Part III, “Data and Flow” (Chapters 9–12), covers the many unique ways of controlling
    execution flow and manipulating data. It discusses data structures, loops, iteration,
    generators, coroutines, files, and binary data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分，“数据与流程”（第9–12章），涵盖了许多控制执行流程和操作数据的独特方法。讨论了数据结构、循环、迭代、生成器、协程、文件和二进制数据。
- en: Part IV, “Advanced Concepts” (Chapters 13–17), unlocks advanced tactics that
    can make your code more powerful, including inheritance, introspection, and concurrency.
    It addresses many of the “scary” topics that are skimmed over by most courses
    and tutorials.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第四部分，“高级概念”（第13–17章），解锁了能够增强代码功能的高级技巧，包括继承、反射和并发。它涉及许多大多数课程和教程轻描淡写的“难题”。
- en: Part V, “Beyond the Code” (Chapters 18–20), teaches you how to test, debug,
    and deploy real-life projects.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第五部分，“超越代码”（第18–20章），教你如何测试、调试和部署真实项目。
- en: Finally, Chapter 21 provides an overview of the many directions you can take
    your Python development journey from here.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，第21章概述了你可以从这里开始的多种 Python 开发方向。
- en: What’s NOT in This Book
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书不包含的内容
- en: Since this book is intended for existing programmers, I won’t be rehashing much
    general theory. Readers should already know (from a language-agnostic standpoint)
    what variables and functions are, what the difference is between classes and objects,
    and so forth. At most, I’ll briefly define those concepts that aren’t quite ubiquitous
    in the programming world.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书面向的是已有编程经验的读者，我不会重述太多的基础理论。读者应该已经知道（从语言无关的角度）变量和函数是什么，类和对象之间的区别是什么，等等。最多，我会简要定义那些在编程世界中并不完全普及的概念。
- en: My discussion of topics is far from exhaustive. I’m focusing more on the *why*
    and *how*, thereby providing a strong foundation. Readers are encouraged to broaden
    their understanding through additional, independent reading, so I’ll leave the
    comprehensive listing of library functions and the like to the documentation.
    Many popular features in the standard library, such as random numbers and datetime
    operations, are afforded little more than incidental explanation when they’re
    used in an example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我的讨论并不全面。我更侧重于 *为什么* 和 *如何*，从而提供了坚实的基础。鼓励读者通过额外的独立阅读来拓宽理解，因此我会将库函数等的全面列举留给文档。许多标准库中的流行功能，如随机数和日期时间操作，在示例中使用时几乎没有更多的说明。
- en: To control the scope of this book, I also won’t be covering most third-party
    tools and libraries. I am frequently asked to discuss popular alternatives to
    the default tools in Python, but as these alternatives fall in and out of favor
    like the passing of the seasons, I will be sticking largely to the universal defaults.
    There are scattered exceptions, but only when a third-party tool has become practically
    ubiquitous in the ecosystem, eclipsing even the standard library.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了控制本书的范围，我也不会覆盖大多数第三方工具和库。我经常被要求讨论 Python 中默认工具的流行替代品，但这些替代品像季节一样时兴时衰，因此我将主要坚持使用通用的默认工具。虽然有一些零星的例外，但只有当某个第三方工具在生态系统中变得几乎无处不在，甚至超过了标准库时，才会讨论。
- en: In general, when a third-party tool or library seems of particular note, I will
    refer the reader to its official documentation or website.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，当某个第三方工具或库特别值得注意时，我会将读者引导到其官方文档或网站。
- en: How to Read This Book
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何阅读本书
- en: '*Dead Simple Python* is intended more as a guided tour than a desk reference.
    I recommend starting here, at the beginning, and working your way through the
    chapters, in order. Whether you’re new to the language or have been trying to
    use it for a while without feeling like you “get it,” you’ll discover that this
    approach will fill in many knowledge gaps you never realized you had.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*简单至极的 Python* 更像是一次引导式的游览，而不是一本桌面参考书。我推荐从这里开始，按顺序逐章阅读。不管你是刚接触这门语言，还是已经尝试使用它一段时间却没有真正“掌握”，你会发现这种方法能够填补许多你以前没意识到的知识空白。'
- en: However, if you know of a particular topic you need a better understanding of
    *right now*, you can skip directly to the chapter that deals with it. Most chapters
    are written to stand alone, but I will always assume that you have read and understand
    the material in the preceding chapters.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你现在已经知道自己需要更好理解某个特定主题，你可以直接跳到处理该主题的章节。大多数章节都是独立成篇的，但我会始终假设你已经阅读并理解了前面的章节内容。
- en: About the Vocabulary
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于词汇
- en: Nearly any Python book or online article uses vocabulary borrowed from other
    languages, such as words like *element*, *body*, and *variable*. While this is
    often assumed to be helpful because it relates Python concepts to readers’ existing
    knowledge, I believe borrowing such vocabulary is ultimately counterproductive.
    Attempting to understand Python primarily in terms of other languages frustrates
    many attempts to write clear, idiomatic code. What’s more, if one gets in the
    habit of using the wrong vocabulary, one will find the official documentation
    profoundly difficult to read.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有的 Python 书籍或在线文章都使用了借自其他语言的词汇，如 *元素*、*主体* 和 *变量* 等词汇。虽然这通常被认为是有帮助的，因为它将
    Python 的概念与读者已有的知识相关联，但我认为借用这些词汇最终是适得其反的。试图通过其他语言的术语来理解 Python，往往会让人难以写出清晰、地道的代码。更重要的是，如果习惯于使用错误的词汇，官方文档将变得非常难以阅读。
- en: Therefore, I’ve decided to adhere doggedly to the official vocabulary, even
    if a majority of the community considers an approximate synonym acceptable. This
    may be one of the few books in print that takes this position, but I consider
    it important. To become a native, you must learn to speak the local dialect!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我决定坚持使用官方词汇，即使大多数社区成员认为某些近义词是可以接受的。这可能是少数几本坚持这种立场的书籍之一，但我认为这是很重要的。要成为本地人，你必须学会说当地的方言！
- en: Theory Recaps
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理论回顾
- en: Depending on what languages you already know, there may be some gaps in your
    theory repertoire. For example, if you are a Haskell developer, you may be unfamiliar
    with object-oriented programming, or if you are a C++ developer, you may be unfamiliar
    with pure functional programming.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你已经掌握的语言，你的理论知识库中可能会有一些空白。例如，如果你是 Haskell 开发者，你可能不太熟悉面向对象编程；或者如果你是 C++ 开发者，你可能不太了解纯函数式编程。
- en: To bridge these gaps, I provide occasional *Theory Recaps*, brief overviews
    of the essential theory and best practices related to certain programming paradigms
    and patterns. That way, if you already know a particular concept, you can skip
    over the Theory Recap and get right to the Python-specific stuff.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了弥补这些差距，我偶尔提供*理论回顾*，简要概述与某些编程范式和模式相关的基本理论和最佳实践。这样，如果你已经了解某个特定概念，你可以跳过理论回顾，直接进入与
    Python 相关的内容。
- en: Objective or Opinionated?
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 客观还是带有观点？
- en: It’s almost impossible to keep personal opinions out of a technical book, especially
    one as focused on idiomatic practice as this one, but I like to think I’ve done
    my best to remain objective.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 很难做到完全排除个人观点，尤其是对于像本书这样专注于惯用实践的技术书籍，但我希望自己尽力保持客观。
- en: '*Dead Simple Python* is not my personal take on Python, but rather it is the
    distilled collective wisdom of the Python community. I am not the same developer
    as when I started writing. My own development practices have changed drastically
    as a result of the two years of research, experimentation, and heated debate that
    went into this book.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 不是我个人对 Python 的看法，而是 Python 社区的集体智慧的精华。我不再是写书时的那个开发者。在两年的研究、实验和激烈辩论后，我的开发实践发生了巨大的变化。'
- en: Even so, it’s impossible to please everybody all the time. At times, I’ve made
    particular note in the text about debates that never reached a satisfactory conclusion.
    Even matters I consider settled are likely to provoke strong negative reactions
    from some Python developers; indeed, some of them provoked strong reactions in
    me until I better understood them.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 即便如此，想要让每个人都满意是不可能的。有时，我在文本中特别标注了那些未能得出满意结论的争论。即使是我认为已经解决的问题，也可能引发一些 Python
    开发者的强烈反应；事实上，直到我更好地理解它们之前，有些问题也曾让我产生强烈的反应。
- en: I recommend you go into this book with an open mind, even if you consider yourself
    reasonably familiar with programming or even with Python itself. I’ve made an
    effort to explain the justifications behind all the recommendations herein, and
    I would encourage you to expect at least the same degree of reasoning to accompany
    *any* valid recommendation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你以开放的心态阅读本书，即使你认为自己已经对编程，甚至对 Python 本身，具有相当的了解。我已经尽力解释本书中所有建议背后的理由，我鼓励你期待至少同等程度的推理来支持*任何*有效的建议。
- en: The Examples
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: I’ve carefully constructed the majority of my examples in this book to demonstrate
    realistic (if simplified) use cases for whatever topic I’m discussing. In many
    situations, I’ll deliberately complicate the example to highlight issues and surprises
    that tutorials often gloss over. I’ve made an effort to point out all the times
    my examples get a bit convoluted, but you should know that I may oversimplify
    or otherwise tiptoe around anything irrelevant to the immediate topic.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本书中精心构建了大多数示例，旨在展示与我讨论的主题相关的现实（尽管是简化的）用例。在许多情况下，我会故意复杂化示例，突出教程常常忽视的问题和惊讶。我已经尽力指出所有那些例子变得有些复杂的时刻，但你应该知道，我可能会过度简化或绕过任何与当前话题无关的内容。
- en: This approach also often necessitates longer examples than you may be used to
    from tutorials, so chapters may appear longer than they effectively are. Don’t
    be discouraged by page counts; take it one section at a time.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法通常需要比教程中常见的更长的示例，因此章节的长度可能看起来比实际内容要长。不要因为页数多而气馁；请一步步地完成每个部分。
- en: All the examples in this book run, or at least fail predictably, except as otherwise
    noted. I adhere to Python style conventions throughout. I highly recommend retyping
    each example yourself and experimenting with it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有示例都可以运行，或者至少可以预测性地失败，除非另有说明。我在整个书中都遵循了 Python 风格规范。我强烈建议你亲自重新输入每个示例并进行实验。
- en: I’ve made an effort to label the segments of Python code meant to be saved in
    files as part of runnable examples. The filename is given, and the sections are
    numbered `:1`, `:2`, and so on. When a section is revised, I tack a letter on
    after the section, so section `:2b` would revise section `:2a`; the revisions
    themselves are in `bold`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经尽力将需要保存为可执行示例的一部分的 Python 代码段标注出来。会提供文件名，且代码段按照 `:1`、`:2` 等编号。当某个部分进行修改时，我会在该部分后加上字母，例如
    `:2b` 会修改 `:2a`；修改内容本身将用**粗体**标出。
- en: 'Nearly all the examples in this book can be found on the book’s official GitHub
    repository: [https://github.com/codemouse92/DeadSimplePython.](https://github.com/codemouse92/DeadSimplePython)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的几乎所有示例都可以在本书的官方 GitHub 仓库找到：[https://github.com/codemouse92/DeadSimplePython](https://github.com/codemouse92/DeadSimplePython)
- en: What About a Project?
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目是什么？
- en: 'I’ve been asked why I don’t provide a comprehensive project that we can work
    through in this book, but the answer is fairly simple: I’m assuming that you’re
    probably here because you already have some project you want to use Python for.
    Instead of distracting you from that, I’ll focus on presenting material in a way
    that you can apply to your work.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾被问及为什么我不提供一个全面的项目来供大家在本书中一起完成，答案其实很简单：我假设你可能是因为已经有一个想用 Python 完成的项目而来到这里。与其将你从你的项目中分心，不如专注于以一种你可以将其应用到自己工作的方式来呈现内容。
- en: 'If you *don’t* have a project in mind, now may be a great time to start one!
    Think of a problem you personally wish there were a solution (or a better solution)
    for, then build that solution. Pick one small part of the problem and start there.
    There’s no magic formula for creating the perfect first project, other than to
    make it something you’d personally use. Don’t worry about making it perfect, or
    even good, your first time around. There’s a truism in this industry: “You always
    throw the first one away.” Don’t be afraid to build it wrong at first! This book
    will give you the tools to go back and make it right.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你*没有*具体的项目目标，现在可能是一个开始做项目的好时机！想想你个人希望有一个解决方案（或者更好的解决方案）的难题，然后构建这个解决方案。从问题的一小部分开始。创造完美的第一个项目并没有什么神奇的公式，唯一的建议就是做一些你自己会用的东西。不必担心第一次做的时候不完美，甚至不优秀。这个行业里有句真理：“你总是会把第一个丢掉。”不要害怕一开始做错！这本书将为你提供工具，帮助你回过头来改正。
- en: Of course, if a project is completely impractical to you, you’ll do just fine
    working through this book’s examples.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果一个项目对你来说完全不切实际，你也可以完全依赖本书的示例进行学习。
- en: In any case, I do ***strongly*** recommend creating a personal “firing range”
    project, for trying out Python in an environment where breaking things won’t have
    significant consequences. I’ll introduce running Python code in Chapters 2 and
    3, and I’ll cover project structure in Chapter 4. I’ll revisit project structure
    when I discuss packaging and distribution in Chapter 18.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我*强烈*建议你创建一个个人的“练习场”项目，用来在一个不会带来重大后果的环境中尝试 Python。我将在第 2 章和第 3 章介绍如何运行
    Python 代码，第 4 章将讲解项目结构。到第 18 章讨论打包和分发时，我会再次回顾项目结构。
- en: Prerequisites
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: You should already know the essentials of programming in another language. This
    book teaches Python, not programming.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经掌握了其他编程语言的基础知识。本书教授的是 Python，而不是编程。
- en: You should have access to a computer capable of running Python 3.7 or later.
    If you haven’t actually installed Python yet, don’t worry—we’ll be doing that
    in Chapter 2.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该能够访问一台能够运行 Python 3.7 或更高版本的计算机。如果你还没有安装 Python，不用担心——我们将在第 2 章进行安装。
- en: You should know the basics of using the command line on your computer, especially
    relative and absolute paths, and navigating the filesystem. If you don’t understand
    all that, go learn it now. (I’ll wait.)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该了解如何使用计算机的命令行，特别是相对路径和绝对路径，以及如何浏览文件系统。如果你还不明白这些，赶紧去学一下吧。（我等你。）
- en: You should have an internet connection, even a slow one, for viewing the documentation
    and occasionally downloading packages. However, I’ve tried to maximize the number
    of examples that work without internet.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该具备网络连接，即使是慢速的网络，也足以查看文档并偶尔下载包。然而，我已经尽力最大化提供可以在没有网络的情况下运行的示例。
- en: Now, go get a cup of your favorite beverage and settle in at your computer with
    a notebook and pen. Let’s get started!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，去拿一杯你最喜欢的饮品，准备好坐在电脑前，带上笔记本和笔。让我们开始吧！
