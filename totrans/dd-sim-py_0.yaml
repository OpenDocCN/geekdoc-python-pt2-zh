- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: '![](Images/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: Python is a unique language. As a software developer, I have come to appreciate
    it for its particularities. There is a certain artistic beauty about a well-written
    Python program. I love when I find the most “Pythonic” solution to a problem and
    then look back and wonder how I thought any other answer would do.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一门独特的语言。作为一名软件开发者，我越来越欣赏它的独特之处。编写一段优美的 Python 程序，有一种艺术的美感。我喜欢当我找到最“Pythonic”的解决方案后，再回过头来想，怎么会认为其他答案会有效呢？
- en: Unfortunately, for years, I was crippled by an instinctual desire to view Python
    through the lens of the other languages I knew. Although I could read and write
    in Python, I failed to see the “obviousness” of a particular practice. It was
    like trying to speak Spanish using only a translation dictionary. I could write
    Python, but I couldn’t really *think* in Python. The essential qualities of the
    language were lost on me.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，多年来，我一直受到本能的驱使，将 Python 视为我所知道的其他语言的延伸。虽然我能够读写 Python，但我未能看到某些做法的“显而易见性”。这就像只用翻译词典说西班牙语一样。我能够编写
    Python 代码，但我无法真正*用 Python 思考*。语言的本质特性对我来说丧失了。
- en: Once I started to truly understand Python—to think in it—I found a new delight
    in the language. Solutions became obvious. Design was a joy, rather than an enigma.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我开始真正理解 Python——开始用 Python 思考——我就发现了这门语言的新乐趣。解决方案变得显而易见。设计变成了一种享受，而不是难解的谜题。
- en: When a brand-new developer cuts their teeth on Python, they have few preconceptions.
    They have no “native tongue” to hamper their introduction to the language. But
    for an established developer who picks up Python as a second or third language,
    the transition is in some ways far rougher. They must not only learn something
    new, but in many ways, they must *unlearn* something old.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个全新的开发者开始学习 Python 时，他们几乎没有先入为主的观念。没有“母语”会妨碍他们对这门语言的理解。但对于一个已经有经验的开发者来说，当他们将
    Python 作为第二或第三种语言来学习时，过渡往往要艰难得多。他们不仅要学习新知识，而且在很多方面，他们必须*忘记*一些旧的东西。
- en: '*Dead Simple Python* is the guidebook for that journey.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 是那段旅程的指南。'
- en: Who Is This Book For?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这本书适合谁？
- en: If you are already familiar with another programming language and now wish to
    learn Python for the first time, without slogging through beginner-oriented courses,
    this book is for you. I’ll be focusing specifically on the “Pythonic” way of doing
    things, with minimal, targeted explanations of the underlying general programming
    concepts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉其他编程语言，现在希望第一次学习 Python，而不愿从面向初学者的课程开始，这本书适合你。我将专注于“Pythonic”编程方式，并对基础的通用编程概念进行最小化、针对性的解释。
- en: If you’re an intermediate-level Python developer, you’ll also find this book
    useful. Although I’ve been working with Python for many years myself, some of
    these topics didn’t “click” for me until more recently. This book gives the explanations
    I wish I’d gotten.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是中级 Python 开发者，你也会发现这本书很有用。尽管我自己已经使用 Python 很多年，但有些话题直到最近才真正“理解”。这本书提供了我希望早些时候能获得的解释。
- en: If you don’t already know programming, despair not. There are hundreds of excellent
    books and resources for learning Python as a first programming language. I particularly
    recommend either *Python Crash Course,* 2nd Edition, by Eric Matthes (No Starch
    Press, 2019) or *Automate the Boring Stuff with Python,* 2nd Edition, by Al Sweigart
    (No Starch Press, 2019). Afterward, you can return to this book to reinforce and
    expand upon your newfound knowledge.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有编程经验，不用绝望。市面上有成百上千本优秀的书籍和资源，适合将 Python 作为第一门编程语言来学习。我特别推荐 Eric Matthes
    的《*Python编程快速上手*》第二版（No Starch Press，2019年）或 Al Sweigart 的《*用Python自动化无聊的工作*》第二版（No
    Starch Press，2019年）。在此之后，你可以回到这本书，巩固和扩展你新学到的知识。
- en: What Does “Simple” Mean?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “简单”是什么意思？
- en: The topics discussed herein may, at first blush, appear anything but simple.
    You may be wondering how simple a book this thick could actually be!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本书讨论的主题，乍一看，可能显得并不简单。你可能会想，这么厚的一本书，真的能有多简单呢？
- en: When I titled this book *Dead Simple Python*, I was describing a retrospective
    view of the topics, rather than a forward-looking one. One should recognize that
    any topic worth learning, when first approached, will feel insurmountable. Similarly,
    any explanation worthy of an existing software developer should possess enough
    depth to utterly disqualify it from the forward-looking label of “simple.”
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我给这本书命名为*Dead Simple Python*时，我是在描述对这些话题的回顾性视角，而非面向未来的视角。人们应该认识到，任何值得学习的话题，在最初接触时，都会让人觉得难以逾越。同样，任何值得现有软件开发者阅读的解释，都应该具备足够的深度，完全不配被贴上“简单”这一前瞻性标签。
- en: Instead, I aim to unpack each topic in such a manner that, by the conclusion
    of the section, the reader cannot help but feel the concept is altogether obvious.
    Regardless of the topic’s initial appearance of complexity, the reader should
    be ultimately left with an impression that it is actually “dead simple,” at which
    point, they may be assured they are thinking like a native Python developer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我的目标是以一种方式来拆解每个话题，让读者在章节结束时，不由自主地觉得这个概念是显而易见的。无论话题最初看起来有多复杂，读者最终应该会有一种印象：它实际上是“死简单”的，这时，他们可以确信自己已经像一个本地的Python开发者一样思考了。
- en: To achieve this level of understanding, I generally start by unpacking the lowest-level,
    most explicit form of the topic. Once that is established, I add layer upon layer,
    ultimately reaching the implicit, idiomatic form most commonly used. In this way,
    I hope to help you, the reader, come away with a solid, comfortable understanding
    of precisely why and how each feature of the language works.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到这种理解的深度，我通常从话题最底层、最显式的形式开始拆解。一旦这个基础建立起来，我会一层层地增加内容，最终达到最常用的隐式、惯用形式。通过这种方式，我希望帮助你，读者，获得对语言每个特性为何以及如何工作的稳固而舒适的理解。
- en: What’s in This Book?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容
- en: '*Dead Simple Python* is divided into five sections. Unlike many beginner-oriented
    courses, I’m going to assume you want to start writing production-quality code
    (rather than just oversimplified tutorial examples) as soon as possible. My approach
    requires you to do some initial work, but it pays off by ensuring you can apply
    your new knowledge to live projects more readily.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 分为五个部分。与许多面向初学者的课程不同，我假设你希望尽早开始编写生产质量的代码（而不仅仅是过于简化的教程示例）。我的方法需要你做一些初步工作，但它通过确保你能更容易地将新知识应用于实际项目，最终会带来回报。'
- en: 'Part I, “The Python Environment” (Chapters 1–4), firmly establishes you in
    the world of Python: its philosophy, tools, basic syntax, and project layout.
    This will provide a solid foundation for writing real, substantial code.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分，“Python环境”（第1-4章），将你牢牢地带入Python的世界：其哲学、工具、基本语法和项目布局。这将为编写真实的、有实质意义的代码提供坚实的基础。
- en: Part II, “Essential Structures” (Chapters 5–8), explores Python’s basic structural
    elements—variables, functions, classes, and exceptions—and teaches you how to
    use them to their fullest potential.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分，“基本结构”（第5-8章）探讨了Python的基本结构元素——变量、函数、类和异常——并教你如何最大限度地发挥它们的潜力。
- en: Part III, “Data and Flow” (Chapters 9–12), covers the many unique ways of controlling
    execution flow and manipulating data. It discusses data structures, loops, iteration,
    generators, coroutines, files, and binary data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分，“数据与流程”（第9-12章），涵盖了控制执行流和操作数据的多种独特方式。它讨论了数据结构、循环、迭代、生成器、协程、文件和二进制数据。
- en: Part IV, “Advanced Concepts” (Chapters 13–17), unlocks advanced tactics that
    can make your code more powerful, including inheritance, introspection, and concurrency.
    It addresses many of the “scary” topics that are skimmed over by most courses
    and tutorials.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第四部分，“高级概念”（第13-17章）介绍了能够让你的代码更强大的高级技巧，包括继承、反射和并发。它涵盖了许多大多数课程和教程都会略过的“恐怖”话题。
- en: Part V, “Beyond the Code” (Chapters 18–20), teaches you how to test, debug,
    and deploy real-life projects.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第五部分，“超越代码”（第18-20章），教你如何测试、调试和部署真实的项目。
- en: Finally, Chapter 21 provides an overview of the many directions you can take
    your Python development journey from here.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，第21章概述了你可以从此处开始的Python开发之旅的多个方向。
- en: What’s NOT in This Book
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书不包含的内容
- en: Since this book is intended for existing programmers, I won’t be rehashing much
    general theory. Readers should already know (from a language-agnostic standpoint)
    what variables and functions are, what the difference is between classes and objects,
    and so forth. At most, I’ll briefly define those concepts that aren’t quite ubiquitous
    in the programming world.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书面向的是已有编程经验的读者，因此我不会重复太多的通用理论。读者应该已经知道（从语言无关的角度来看）什么是变量和函数，类和对象之间有什么区别，等等。最多，我会简要定义那些在编程世界中不算普及的概念。
- en: My discussion of topics is far from exhaustive. I’m focusing more on the *why*
    and *how*, thereby providing a strong foundation. Readers are encouraged to broaden
    their understanding through additional, independent reading, so I’ll leave the
    comprehensive listing of library functions and the like to the documentation.
    Many popular features in the standard library, such as random numbers and datetime
    operations, are afforded little more than incidental explanation when they’re
    used in an example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我的讨论内容远远不是详尽无遗的。我更注重于讲解*为什么*和*如何*，从而提供一个坚实的基础。鼓励读者通过额外的独立阅读来拓宽自己的理解，因此我将库函数等的全面列举留给文档。标准库中的许多流行功能，如随机数和日期时间操作，在示例中使用时也只是得到零星的解释。
- en: To control the scope of this book, I also won’t be covering most third-party
    tools and libraries. I am frequently asked to discuss popular alternatives to
    the default tools in Python, but as these alternatives fall in and out of favor
    like the passing of the seasons, I will be sticking largely to the universal defaults.
    There are scattered exceptions, but only when a third-party tool has become practically
    ubiquitous in the ecosystem, eclipsing even the standard library.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了控制本书的范围，我也不会覆盖大多数第三方工具和库。我经常被问到关于 Python 默认工具的流行替代品，但由于这些替代品像四季更替一样时常变得流行或过时，因此我将主要坚持使用通用的默认工具。虽然有些例外，但仅当某个第三方工具在生态系统中变得几乎无处不在，以至于甚至超越了标准库时，才会被提及。
- en: In general, when a third-party tool or library seems of particular note, I will
    refer the reader to its official documentation or website.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当某个第三方工具或库值得特别关注时，我会将读者引导至其官方文档或网站。
- en: How to Read This Book
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何阅读本书
- en: '*Dead Simple Python* is intended more as a guided tour than a desk reference.
    I recommend starting here, at the beginning, and working your way through the
    chapters, in order. Whether you’re new to the language or have been trying to
    use it for a while without feeling like you “get it,” you’ll discover that this
    approach will fill in many knowledge gaps you never realized you had.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 更像是一次引导式游览，而非一本桌面参考书。我建议从头开始，按顺序阅读各章节。无论你是语言新手，还是已经尝试过一段时间却觉得自己还“没有完全掌握”，你会发现这种方法将填补你未曾意识到的许多知识空白。'
- en: However, if you know of a particular topic you need a better understanding of
    *right now*, you can skip directly to the chapter that deals with it. Most chapters
    are written to stand alone, but I will always assume that you have read and understand
    the material in the preceding chapters.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你现在就知道有某个特定主题你需要更好地理解，你可以直接跳到处理该主题的章节。大多数章节都是独立成章的，但我会假设你已经阅读并理解了前面章节的内容。
- en: About the Vocabulary
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于词汇
- en: Nearly any Python book or online article uses vocabulary borrowed from other
    languages, such as words like *element*, *body*, and *variable*. While this is
    often assumed to be helpful because it relates Python concepts to readers’ existing
    knowledge, I believe borrowing such vocabulary is ultimately counterproductive.
    Attempting to understand Python primarily in terms of other languages frustrates
    many attempts to write clear, idiomatic code. What’s more, if one gets in the
    habit of using the wrong vocabulary, one will find the official documentation
    profoundly difficult to read.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎任何一本 Python 书籍或在线文章都使用了从其他语言借来的词汇，比如*element*（元素）、*body*（主体）和*variable*（变量）等词汇。虽然这样做通常被认为有助于将
    Python 概念与读者已有的知识关联起来，但我认为借用这些词汇最终是适得其反的。尝试通过其他语言的术语来理解 Python 会使得许多清晰、符合习惯的代码编写变得困难。更重要的是，如果习惯性地使用不恰当的词汇，就会发现官方文档变得异常难以阅读。
- en: Therefore, I’ve decided to adhere doggedly to the official vocabulary, even
    if a majority of the community considers an approximate synonym acceptable. This
    may be one of the few books in print that takes this position, but I consider
    it important. To become a native, you must learn to speak the local dialect!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我决定坚定地遵循官方的词汇，即使大多数社区成员认为某个近似同义词是可以接受的。这可能是市面上为数不多的采取这种立场的书籍之一，但我认为这是重要的。要成为本地人，你必须学会讲当地的方言！
- en: Theory Recaps
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理论回顾
- en: Depending on what languages you already know, there may be some gaps in your
    theory repertoire. For example, if you are a Haskell developer, you may be unfamiliar
    with object-oriented programming, or if you are a C++ developer, you may be unfamiliar
    with pure functional programming.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你已经掌握的编程语言，你的理论知识可能会有一些空白。例如，如果你是Haskell开发者，你可能不熟悉面向对象编程，或者如果你是C++开发者，你可能不熟悉纯粹的函数式编程。
- en: To bridge these gaps, I provide occasional *Theory Recaps*, brief overviews
    of the essential theory and best practices related to certain programming paradigms
    and patterns. That way, if you already know a particular concept, you can skip
    over the Theory Recap and get right to the Python-specific stuff.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了弥补这些差距，我提供了偶尔的*理论回顾*，简要概述了与特定编程范式和模式相关的基本理论和最佳实践。这样，如果你已经了解某个特定概念，你可以跳过理论回顾，直接进入与Python相关的内容。
- en: Objective or Opinionated?
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 客观还是带有个人观点？
- en: It’s almost impossible to keep personal opinions out of a technical book, especially
    one as focused on idiomatic practice as this one, but I like to think I’ve done
    my best to remain objective.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在技术书籍中几乎不可能完全排除个人观点，尤其是像本书这样专注于惯用实践的书籍，但我想我已经尽力保持客观。
- en: '*Dead Simple Python* is not my personal take on Python, but rather it is the
    distilled collective wisdom of the Python community. I am not the same developer
    as when I started writing. My own development practices have changed drastically
    as a result of the two years of research, experimentation, and heated debate that
    went into this book.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*简单Python* 不是我个人对Python的看法，而是Python社区集体智慧的结晶。我已经不再是写这本书时的那个开发者了。通过两年的研究、实验和激烈的辩论，我的开发实践发生了巨大的变化。'
- en: Even so, it’s impossible to please everybody all the time. At times, I’ve made
    particular note in the text about debates that never reached a satisfactory conclusion.
    Even matters I consider settled are likely to provoke strong negative reactions
    from some Python developers; indeed, some of them provoked strong reactions in
    me until I better understood them.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，想要满足所有人的需求几乎是不可能的。有时，我会在文中特别指出一些始终没有得到满意结论的辩论。即使是我认为已经解决的问题，也可能引发一些Python开发者的强烈反应；事实上，直到我更好地理解这些问题之前，这些问题也曾让我产生过强烈反应。
- en: I recommend you go into this book with an open mind, even if you consider yourself
    reasonably familiar with programming or even with Python itself. I’ve made an
    effort to explain the justifications behind all the recommendations herein, and
    I would encourage you to expect at least the same degree of reasoning to accompany
    *any* valid recommendation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你以开放的心态阅读本书，即使你自认为对编程或甚至对Python本身有相当的了解。我已经努力解释本书中所有建议背后的理由，并且我鼓励你期待*任何*有效建议都能附带至少同样程度的推理。
- en: The Examples
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: I’ve carefully constructed the majority of my examples in this book to demonstrate
    realistic (if simplified) use cases for whatever topic I’m discussing. In many
    situations, I’ll deliberately complicate the example to highlight issues and surprises
    that tutorials often gloss over. I’ve made an effort to point out all the times
    my examples get a bit convoluted, but you should know that I may oversimplify
    or otherwise tiptoe around anything irrelevant to the immediate topic.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本书中大多数例子的构建都是精心设计的，旨在展示我讨论的任何主题的现实（即便是简化过的）应用场景。在许多情况下，我会故意使示例复杂化，以突出教程中常常忽视的问题和意外。我已尽力指出每次我的示例变得有些复杂的地方，但你应该知道，我可能会过于简化或者绕开任何与当前话题无关的内容。
- en: This approach also often necessitates longer examples than you may be used to
    from tutorials, so chapters may appear longer than they effectively are. Don’t
    be discouraged by page counts; take it one section at a time.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法通常需要比你从教程中习惯的更长的示例，因此章节看起来可能比实际内容要长。不要因为页面数目而气馁；一次专注于一个部分。
- en: All the examples in this book run, or at least fail predictably, except as otherwise
    noted. I adhere to Python style conventions throughout. I highly recommend retyping
    each example yourself and experimenting with it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有示例都可以运行，或者至少能预测到失败的结果，除非另有说明。我始终遵循 Python 编程风格。强烈建议你自己重新输入每个示例并进行实验。
- en: I’ve made an effort to label the segments of Python code meant to be saved in
    files as part of runnable examples. The filename is given, and the sections are
    numbered `:1`, `:2`, and so on. When a section is revised, I tack a letter on
    after the section, so section `:2b` would revise section `:2a`; the revisions
    themselves are in `bold`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经努力标注了那些需要保存为文件并作为可运行示例的 Python 代码段。文件名已经给出，代码段也按`:1`、`:2`等进行了编号。如果某个代码段进行了修改，我会在段后加上字母，比如`:2b`是对`:2a`的修改；修改部分将用**粗体**标出。
- en: 'Nearly all the examples in this book can be found on the book’s official GitHub
    repository: [https://github.com/codemouse92/DeadSimplePython.](https://github.com/codemouse92/DeadSimplePython)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的几乎所有示例都可以在本书的官方 GitHub 仓库中找到：[https://github.com/codemouse92/DeadSimplePython](https://github.com/codemouse92/DeadSimplePython)
- en: What About a Project?
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 那么，项目呢？
- en: 'I’ve been asked why I don’t provide a comprehensive project that we can work
    through in this book, but the answer is fairly simple: I’m assuming that you’re
    probably here because you already have some project you want to use Python for.
    Instead of distracting you from that, I’ll focus on presenting material in a way
    that you can apply to your work.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾被问到为什么不在书中提供一个完整的项目供我们一起做，但答案很简单：我假设你来这里的原因可能是因为你已经有一个想要用 Python 做的项目。与其把你从那个项目上分心，我更愿意以一种你能将其应用到工作中的方式来呈现材料。
- en: 'If you *don’t* have a project in mind, now may be a great time to start one!
    Think of a problem you personally wish there were a solution (or a better solution)
    for, then build that solution. Pick one small part of the problem and start there.
    There’s no magic formula for creating the perfect first project, other than to
    make it something you’d personally use. Don’t worry about making it perfect, or
    even good, your first time around. There’s a truism in this industry: “You always
    throw the first one away.” Don’t be afraid to build it wrong at first! This book
    will give you the tools to go back and make it right.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你*没有*具体的项目构想，现在可能是一个开始的好时机！想一想你个人希望能够解决（或者找到更好解决方案的）问题，然后去构建那个解决方案。选择问题中的一个小部分，从那里开始。创建完美第一个项目并没有魔法公式，唯一的原则是它应该是你自己会用到的东西。不要担心第一次做得不完美，甚至不做得好。在这个行业里有一句真理：“你总是把第一个丢掉。”
    别怕一开始做错！这本书会为你提供工具，让你能够回过头来修正它。
- en: Of course, if a project is completely impractical to you, you’ll do just fine
    working through this book’s examples.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果某个项目对你来说完全不可行，你也可以通过本书的示例进行练习。
- en: In any case, I do ***strongly*** recommend creating a personal “firing range”
    project, for trying out Python in an environment where breaking things won’t have
    significant consequences. I’ll introduce running Python code in Chapters 2 and
    3, and I’ll cover project structure in Chapter 4. I’ll revisit project structure
    when I discuss packaging and distribution in Chapter 18.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我***强烈***推荐你创建一个个人的“试验场”项目，用来在一个不会带来严重后果的环境中尝试 Python 代码。我将在第二章和第三章介绍如何运行
    Python 代码，并将在第四章讨论项目结构。到第十八章，我会在讨论打包和发布时再次讲解项目结构。
- en: Prerequisites
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: You should already know the essentials of programming in another language. This
    book teaches Python, not programming.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经掌握其他编程语言的基本知识。本书教授的是 Python，而不是编程。
- en: You should have access to a computer capable of running Python 3.7 or later.
    If you haven’t actually installed Python yet, don’t worry—we’ll be doing that
    in Chapter 2.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该有一台能够运行 Python 3.7 或更高版本的计算机。如果你还没有安装 Python，不用担心——我们将在第二章进行安装。
- en: You should know the basics of using the command line on your computer, especially
    relative and absolute paths, and navigating the filesystem. If you don’t understand
    all that, go learn it now. (I’ll wait.)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该了解计算机命令行的基本使用，特别是相对路径和绝对路径，以及如何在文件系统中导航。如果你不明白这些内容，现在就去学习它们吧。（我等你。）
- en: You should have an internet connection, even a slow one, for viewing the documentation
    and occasionally downloading packages. However, I’ve tried to maximize the number
    of examples that work without internet.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该有互联网连接，哪怕是一个慢速的连接，以便查看文档并偶尔下载包。不过，我尽量使得大多数示例可以在没有互联网的情况下运行。
- en: Now, go get a cup of your favorite beverage and settle in at your computer with
    a notebook and pen. Let’s get started!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，去拿一杯你最喜欢的饮品，带着笔记本和笔坐到电脑前。我们开始吧！
