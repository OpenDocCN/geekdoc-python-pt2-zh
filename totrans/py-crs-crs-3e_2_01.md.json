["```py\n3.1415926535\n  8979323846\n  2643383279\n```", "```py\nfrom pathlib import Path\n\n❶ path = Path('pi_digits.txt')\n❷ contents = path.read_text()\nprint(contents)\n```", "```py\n3.1415926535\n  8979323846\n  2643383279 \n```", "```py\nfrom pathlib import Path\n\npath = Path('pi_digits.txt')\ncontents = path.read_text()\ncontents = contents.rstrip()\nprint(contents)\n```", "```py\n3.1415926535\n  8979323846\n  2643383279\n```", "```py\ncontents = path.read_text().rstrip()\n```", "```py\npath = Path('text_files/`filename`.txt')\n```", "```py\npath = Path('/home/eric/data_files/text_files/`filename`.txt')\n```", "```py\nfrom pathlib import Path\n\npath = Path('pi_digits.txt')\n❶ contents = path.read_text()\n\n❷ lines = contents.splitlines()\nfor line in lines:\n    print(line)\n```", "```py\n3.1415926535\n  8979323846\n  2643383279\n```", "```py\nfrom pathlib import Path\n\npath = Path('pi_digits.txt')\ncontents = path.read_text()\n\nlines = contents.splitlines()\npi_string = ''\n❶ for line in lines:\n    pi_string += line\n\nprint(pi_string)\nprint(len(pi_string))\n```", "```py\n3.1415926535  8979323846  2643383279\n36\n```", "```py\n*--snip--*\nfor line in lines:\n  pi_string += line.lstrip()\n\nprint(pi_string)\nprint(len(pi_string))\n```", "```py\n3.141592653589793238462643383279\n32\n```", "```py\nfrom pathlib import Path\n\npath = Path('pi_million_digits.txt')\ncontents = path.read_text()\n\nlines = contents.splitlines()\npi_string = ''\nfor line in lines:\n pi_string += line.lstrip()\n\nprint(f\"{pi_string[:52]}...\")\nprint(len(pi_string))\n```", "```py\n3.14159265358979323846264338327950288419716939937510...\n1000002\n```", "```py\n*--snip--*\nfor line in lines:\n pi_string += line.strip()\n\nbirthday = input(\"Enter your birthday, in the form mmddyy: \")\nif birthday in pi_string:\n    print(\"Your birthday appears in the first million digits of pi!\")\nelse:\n    print(\"Your birthday does not appear in the first million digits of pi.\")\n```", "```py\nEnter your birthdate, in the form mmddyy: **120372**\nYour birthday appears in the first million digits of pi!\n```", "```py\nfrom pathlib import Path\n\npath = Path('programming.txt')\npath.write_text(\"I love programming.\")\n```", "```py\nI love programming.\n```", "```py\nfrom pathlib import Path\n\ncontents = \"I love programming.\\n\"\ncontents += \"I love creating new games.\\n\"\ncontents += \"I also love working with data.\\n\"\n\npath = Path('programming.txt')\npath.write_text(contents)\n```", "```py\nI love programming.\nI love creating new games.\nI also love working with data.\n```", "```py\nprint(5/0)\n```", "```py\nTraceback (most recent call last):\n  File \"division_calculator.py\", line 1, in <module>\n    print(5/0)\n          ~^~\n❶ ZeroDivisionError: division by zero\n```", "```py\ntry:\n    print(5/0)\nexcept ZeroDivisionError:\n    print(\"You can't divide by zero!\")\n```", "```py\nYou can't divide by zero!\n```", "```py\nprint(\"Give me two numbers, and I'll divide them.\")\nprint(\"Enter 'q' to quit.\")\n\nwhile True:\n❶     first_number = input(\"\\nFirst number: \")\n    if first_number == 'q':\n        break\n❷     second_number = input(\"Second number: \")\n    if second_number == 'q':\n        break\n❸     answer = int(first_number) / int(second_number)\n    print(answer)\n```", "```py\nGive me two numbers, and I'll divide them.\nEnter 'q' to quit.\n\nFirst number: **5**\nSecond number: **0**\nTraceback (most recent call last):\n  File \"division_calculator.py\", line 11, in <module>\n    answer = int(first_number) / int(second_number)\n             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\nZeroDivisionError: division by zero\n```", "```py\n*--snip--*\nwhile True:\n  *--snip--*\n if second_number == 'q':\n break\n❶     try:\n        answer = int(first_number) / int(second_number)\n❷     except ZeroDivisionError:\n        print(\"You can't divide by 0!\")\n❸     else:\n print(answer)\n```", "```py\nGive me two numbers, and I'll divide them.\nEnter 'q' to quit.\n\nFirst number: **5**\nSecond number: **0**\nYou can't divide by 0!\n\nFirst number: **5**\nSecond number: **2**\n2.5\n\nFirst number: **q**\n```", "```py\nfrom pathlib import Path\n\npath = Path('alice.txt')\ncontents = path.read_text(encoding='utf-8')\n```", "```py\nTraceback (most recent call last):\n❶   File \"alice.py\", line 4, in <module>\n❷     contents = path.read_text(encoding='utf-8')\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/.../pathlib.py\", line 1056, in read_text\n    with self.open(mode='r', encoding=encoding, errors=errors) as f:\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/.../pathlib.py\", line 1042, in open\n    return io.open(self, mode, buffering, encoding, errors, newline)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n❸ FileNotFoundError: [Errno 2] No such file or directory: 'alice.txt'\n```", "```py\nfrom pathlib import Path\n\npath = Path('alice.txt')\ntry:\n    contents = path.read_text(encoding='utf-8')\n❶ except FileNotFoundError:\n    print(f\"Sorry, the file {path} does not exist.\")\n```", "```py\nSorry, the file alice.txt does not exist.\n```", "```py\nfrom pathlib import Path\n\npath = Path('alice.txt')\ntry:\n contents = path.read_text(encoding='utf-8')\nexcept FileNotFoundError:\n print(f\"Sorry, the file {path} does not exist.\")\nelse:\n    # Count the approximate number of words in the file:\n❶     words = contents.split()\n❷     num_words = len(words)\n    print(f\"The file {path} has about {num_words} words.\")\n```", "```py\nThe file alice.txt has about 29594 words.\n```", "```py\nfrom pathlib import Path\n\ndef count_words(path):\n❶     \"\"\"Count the approximate number of words in a file.\"\"\"\n    try:\n contents = path.read_text(encoding='utf-8')\n except FileNotFoundError:\n print(f\"Sorry, the file {path} does not exist.\")\n else:\n # Count the approximate number of words in the file:\n words = contents.split()\n num_words = len(words)\n print(f\"The file {path} has about {num_words} words.\")\n\npath = Path('alice.txt')\ncount_words(path)\n```", "```py\nfrom pathlib import Path\n\ndef count_words(filename):\n  *--snip--*\n\nfilenames = ['alice.txt', 'siddhartha.txt', 'moby_dick.txt', \n        'little_women.txt']\nfor filename in filenames:\n❶     path = Path(filename)\n    count_words(path)\n```", "```py\nThe file alice.txt has about 29594 words.\nSorry, the file siddhartha.txt does not exist.\nThe file moby_dick.txt has about 215864 words.\nThe file little_women.txt has about 189142 words.\n```", "```py\ndef count_words(path):\n \"\"\"Count the approximate number of words in a file.\"\"\"\n try:\n  *--snip--*\n except FileNotFoundError:\n        pass\n else:\n  *--snip--*\n```", "```py\nThe file alice.txt has about 29594 words.\nThe file moby_dick.txt has about 215864 words.\nThe file little_women.txt has about 189142 words.\n```", "```py\nfrom pathlib import Path\nimport json\n\nnumbers = [2, 3, 5, 7, 11, 13]\n\n❶ path = Path('numbers.json')\n❷ contents = json.dumps(numbers)\npath.write_text(contents)\n```", "```py\n[2, 3, 5, 7, 11, 13]\n```", "```py\nfrom pathlib import Path\nimport json\n\n❶ path = Path('numbers.json')\n❷ contents = path.read_text()\n❸ numbers = json.loads(contents)\n\nprint(numbers)\n```", "```py\n[2, 3, 5, 7, 11, 13]\n```", "```py\nfrom pathlib import Path\nimport json\n\n❶ username = input(\"What is your name? \")\n\n❷ path = Path('username.json')\ncontents = json.dumps(username)\npath.write_text(contents)\n\n❸ print(f\"We'll remember you when you come back, {username}!\")\n```", "```py\nWhat is your name? **Eric**\nWe'll remember you when you come back, Eric!\n```", "```py\nfrom pathlib import Path\nimport json\n\n❶ path = Path('username.json')\ncontents = path.read_text()\n❷ username = json.loads(contents)\n\nprint(f\"Welcome back, {username}!\")\n```", "```py\nWelcome back, Eric!\n```", "```py\nfrom pathlib import Path\nimport json\n\npath = Path('username.json')\n❶ if path.exists():\n    contents = path.read_text()\n    username = json.loads(contents)\n    print(f\"Welcome back, {username}!\")\n❷ else:\n    username = input(\"What is your name? \")\n    contents = json.dumps(username)\n    path.write_text(contents)\n    print(f\"We'll remember you when you come back, {username}!\")\n```", "```py\nWhat is your name? **Eric**\nWe'll remember you when you come back, Eric!\n```", "```py\nWelcome back, Eric!\n```", "```py\nfrom pathlib import Path\nimport json\n\ndef greet_user():\n❶     \"\"\"Greet the user by name.\"\"\"\n    path = Path('username.json')\n if path.exists():\n contents = path.read_text()\n username = json.loads(contents)\n print(f\"Welcome back, {username}!\")\n else:\n username = input(\"What is your name? \")\n contents = json.dumps(username)\n path.write_text(contents)\n print(f\"We'll remember you when you come back, {username}!\")\n\ngreet_user()\n```", "```py\nfrom pathlib import Path\nimport json\n\ndef get_stored_username(path):\n❶     \"\"\"Get stored username if available.\"\"\"\n if path.exists():\n contents = path.read_text()\n username = json.loads(contents)\n        return username\n    else:\n❷         return None\n\ndef greet_user():\n \"\"\"Greet the user by name.\"\"\"\n    path = Path('username.json')\n    username = get_stored_username(path)\n❸     if username:\n        print(f\"Welcome back, {username}!\")\n    else:\n username = input(\"What is your name? \")\n contents = json.dumps(username)\n path.write_text(contents)\n print(f\"We'll remember you when you come back, {username}!\")\n\ngreet_user()\n```", "```py\nfrom pathlib import Path\nimport json\n\ndef get_stored_username(path):\n \"\"\"Get stored username if available.\"\"\"\n    *--snip--*\n\ndef get_new_username(path):\n    \"\"\"Prompt for a new username.\"\"\"\n    username = input(\"What is your name? \")\n contents = json.dumps(username)\n path.write_text(contents)\n    return username\n\ndef greet_user():\n \"\"\"Greet the user by name.\"\"\"\n path = Path('username.json')\n❶ username = get_stored_username(path)\n if username:\n print(f\"Welcome back, {username}!\")\n else:\n❷         username = get_new_username(path)\n        print(f\"We'll remember you when you come back, {username}!\")\n\ngreet_user()\n```"]