- en: '**INDEX**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Symbols**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`=` (assignment) operator, [177](ch07.xhtml#page_177)'
  prefs: []
  type: TYPE_NORMAL
- en: '`\` (backslash escape character), [190](ch07.xhtml#page_190)–[191](ch07.xhtml#page_191)'
  prefs: []
  type: TYPE_NORMAL
- en: '`()` (call operator), [284](ch11.xhtml#page_284)'
  prefs: []
  type: TYPE_NORMAL
- en: '`**` (combining dictionaries) operator, [252](ch09.xhtml#page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: '`/` (division) operator, [176](ch07.xhtml#page_176)'
  prefs: []
  type: TYPE_NORMAL
- en: '`//` (floor division) operator, [176](ch07.xhtml#page_176)'
  prefs: []
  type: TYPE_NORMAL
- en: '`#` (hash) symbol, [378](ch14.xhtml#page_378)'
  prefs: []
  type: TYPE_NORMAL
- en: '`\` (line continuation character), [189](ch07.xhtml#page_189)'
  prefs: []
  type: TYPE_NORMAL
- en: '`%` (modulo) operator, [176](ch07.xhtml#page_176)'
  prefs: []
  type: TYPE_NORMAL
- en: '`+` (plus sign)'
  prefs: []
  type: TYPE_NORMAL
- en: addition operator, [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: string concatenation operator, [192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: '`**` (power) operator, [177](ch07.xhtml#page_177)'
  prefs: []
  type: TYPE_NORMAL
- en: '`*` (splat) operator, [226](ch09.xhtml#page_226), [228](ch09.xhtml#page_228)'
  prefs: []
  type: TYPE_NORMAL
- en: '`*` (string replication) operator, [192](ch07.xhtml#page_192)'
  prefs: []
  type: TYPE_NORMAL
- en: '`-` (subtraction) operator, [176](ch07.xhtml#page_176)'
  prefs: []
  type: TYPE_NORMAL
- en: '`@` (syntactic sugar) symbol, [363](ch13.xhtml#page_363)–[364](ch13.xhtml#page_364)'
  prefs: []
  type: TYPE_NORMAL
- en: '**A**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: absolute paths, [319](ch12.xhtml#page_319)–[320](ch12.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: abstraction, [283](ch11.xhtml#page_283)
  prefs: []
  type: TYPE_NORMAL
- en: accessing
  prefs: []
  type: TYPE_NORMAL
- en: array attributes, [504](ch18.xhtml#page_504)–[506](ch18.xhtml#page_506)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [185](ch07.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: access modes, [325](ch12.xhtml#page_325)–[326](ch12.xhtml#page_326)
  prefs: []
  type: TYPE_NORMAL
- en: for binary files, [335](ch12.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: for shelves, [337](ch12.xhtml#page_337)
  prefs: []
  type: TYPE_NORMAL
- en: accuracy of prediction in *k*-NN, [615](ch20.xhtml#page_615)–[616](ch20.xhtml#page_616)
  prefs: []
  type: TYPE_NORMAL
- en: '`accuracy_score()` method, [615](ch20.xhtml#page_615)'
  prefs: []
  type: TYPE_NORMAL
- en: '`add_axes()` method, [567](ch19.xhtml#page_567)'
  prefs: []
  type: TYPE_NORMAL
- en: adding
  prefs: []
  type: TYPE_NORMAL
- en: consoles in JupyterLab, [152](ch06.xhtml#page_152)–[153](ch06.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: images in notebooks, [107](ch05.xhtml#page_107)–[109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: key-value pairs, [251](ch09.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: list items, [231](ch09.xhtml#page_231)–[232](ch09.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: text in notebooks, [102](ch05.xhtml#page_102)–[104](ch05.xhtml#page_104)
  prefs: []
  type: TYPE_NORMAL
- en: addition operator (`+`), [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: aggregate functions in NumPy, [529](ch18.xhtml#page_529), [531](ch18.xhtml#page_531)–[533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: aggregation methods in pandas, [650](ch21.xhtml#page_650)
  prefs: []
  type: TYPE_NORMAL
- en: allocating memory in NumPy, [496](ch18.xhtml#page_496)
  prefs: []
  type: TYPE_NORMAL
- en: Altair, [429](ch16.xhtml#page_429)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda
  prefs: []
  type: TYPE_NORMAL
- en: components of, [7](ch01.xhtml#page_7)–[9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: ecosystem, [397](part03.xhtml#page_397)–[398](part03.xhtml#page_398)
  prefs: []
  type: TYPE_NORMAL
- en: installing
  prefs: []
  type: TYPE_NORMAL
- en: on Linux, [12](ch01.xhtml#page_12)–[13](ch01.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: on macOS, [11](ch01.xhtml#page_11)–[12](ch01.xhtml#page_12)
  prefs: []
  type: TYPE_NORMAL
- en: space requirements, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: on Windows, [9](ch01.xhtml#page_9)–[11](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda, Inc., [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda Navigator
  prefs: []
  type: TYPE_NORMAL
- en: Community tab, [17](ch01.xhtml#page_17)–[18](ch01.xhtml#page_18)
  prefs: []
  type: TYPE_NORMAL
- en: conda environments, [24](ch02.xhtml#page_24)–[34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: backing up, [33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [25](ch02.xhtml#page_25)–[26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: duplicating, [33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: package management in, [27](ch02.xhtml#page_27)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: Environments tab, [15](ch01.xhtml#page_15)–[17](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: File menu, [18](ch01.xhtml#page_18)–[19](ch01.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: Home tab, [13](ch01.xhtml#page_13)–[14](ch01.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, installing and launching, [140](ch06.xhtml#page_140)–[142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, installing and launching, [95](ch05.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Qt console, installing and launching, [51](ch03.xhtml#page_51)–[52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: launching, [13](ch01.xhtml#page_13), [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: Learning tab, [17](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [13](ch01.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, installing and launching, [62](ch04.xhtml#page_62)–[63](ch04.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: '[Anaconda.org](http://Anaconda.org), [9](ch01.xhtml#page_9)'
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda Prompt. *See* CLI
  prefs: []
  type: TYPE_NORMAL
- en: animating plots, [569](ch19.xhtml#page_569)–[573](ch19.xhtml#page_573)
  prefs: []
  type: TYPE_NORMAL
- en: ANNs (artificial neural networks), [406](ch15.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: anonymous functions. *See* lambda functions
  prefs: []
  type: TYPE_NORMAL
- en: Apache Spark, [418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: '`append()` method, [231](ch09.xhtml#page_231)–[232](ch09.xhtml#page_232)'
  prefs: []
  type: TYPE_NORMAL
- en: '`apply_along_axis()` function, [532](ch18.xhtml#page_532)'
  prefs: []
  type: TYPE_NORMAL
- en: applying style sheets, [578](ch19.xhtml#page_578)–[580](ch19.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: '`arange()` function, [499](ch18.xhtml#page_499)–[501](ch18.xhtml#page_501)'
  prefs: []
  type: TYPE_NORMAL
- en: arguments
  prefs: []
  type: TYPE_NORMAL
- en: in exceptions, [276](ch10.xhtml#page_276)
  prefs: []
  type: TYPE_NORMAL
- en: of functions, [285](ch11.xhtml#page_285)–[286](ch11.xhtml#page_286)
  prefs: []
  type: TYPE_NORMAL
- en: positional and keyword, [286](ch11.xhtml#page_286)–[287](ch11.xhtml#page_287)
  prefs: []
  type: TYPE_NORMAL
- en: Armstrong, Joe, [348](ch13.xhtml#page_348)
  prefs: []
  type: TYPE_NORMAL
- en: '`array()` function, [497](ch18.xhtml#page_497)'
  prefs: []
  type: TYPE_NORMAL
- en: arrays, [491](ch18.xhtml#page_491)–[492](ch18.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: accessing attributes, [504](ch18.xhtml#page_504)–[506](ch18.xhtml#page_506)
  prefs: []
  type: TYPE_NORMAL
- en: broadcasting, [526](ch18.xhtml#page_526)–[527](ch18.xhtml#page_527)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [494](ch18.xhtml#page_494)–[504](ch18.xhtml#page_504)
  prefs: []
  type: TYPE_NORMAL
- en: '`arange()` function, [499](ch18.xhtml#page_499)–[501](ch18.xhtml#page_501)'
  prefs: []
  type: TYPE_NORMAL
- en: '`array()` function, [497](ch18.xhtml#page_497)'
  prefs: []
  type: TYPE_NORMAL
- en: functions for, [494](ch18.xhtml#page_494)
  prefs: []
  type: TYPE_NORMAL
- en: '`linspace()` function, [501](ch18.xhtml#page_501)–[502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: prefilled, [502](ch18.xhtml#page_502)–[504](ch18.xhtml#page_504)
  prefs: []
  type: TYPE_NORMAL
- en: describing with dimension and shape, [492](ch18.xhtml#page_492)–[494](ch18.xhtml#page_494)
  prefs: []
  type: TYPE_NORMAL
- en: flattening, [519](ch18.xhtml#page_519)–[520](ch18.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: incrementing and decrementing, [528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: indexing and slicing
  prefs: []
  type: TYPE_NORMAL
- en: Boolean indexing, [515](ch18.xhtml#page_515)–[517](ch18.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: multidimensional arrays, [511](ch18.xhtml#page_511)–[514](ch18.xhtml#page_514)
  prefs: []
  type: TYPE_NORMAL
- en: 1D arrays, [507](ch18.xhtml#page_507)–[509](ch18.xhtml#page_509)
  prefs: []
  type: TYPE_NORMAL
- en: 2D arrays, [509](ch18.xhtml#page_509)–[511](ch18.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: joining, [521](ch18.xhtml#page_521)–[522](ch18.xhtml#page_522)
  prefs: []
  type: TYPE_NORMAL
- en: matrix dot product, [527](ch18.xhtml#page_527)–[528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: printing, [497](ch18.xhtml#page_497)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [492](ch18.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: reading and writing data, [533](ch18.xhtml#page_533)–[535](ch18.xhtml#page_535)
  prefs: []
  type: TYPE_NORMAL
- en: shaping, [518](ch18.xhtml#page_518)–[519](ch18.xhtml#page_519)
  prefs: []
  type: TYPE_NORMAL
- en: splitting, [522](ch18.xhtml#page_522)–[524](ch18.xhtml#page_524)
  prefs: []
  type: TYPE_NORMAL
- en: transposing, [520](ch18.xhtml#page_520)–[521](ch18.xhtml#page_521)
  prefs: []
  type: TYPE_NORMAL
- en: vectorization, [524](ch18.xhtml#page_524)–[526](ch18.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: artificial intelligence, branches of, [405](ch15.xhtml#page_405)
  prefs: []
  type: TYPE_NORMAL
- en: artificial neural networks, [406](ch15.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: '`Artist` objects (Matplotlib), [542](ch19.xhtml#page_542)'
  prefs: []
  type: TYPE_NORMAL
- en: '`asfreq()` method, [644](ch21.xhtml#page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: assigning variables, [177](ch07.xhtml#page_177), [203](ch08.xhtml#page_203)–[206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: assignment operator (`=`), [177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: '`astimezone()` method, [634](ch21.xhtml#page_634)'
  prefs: []
  type: TYPE_NORMAL
- en: attributes, [347](ch13.xhtml#page_347)
  prefs: []
  type: TYPE_NORMAL
- en: of arrays, accessing, [504](ch18.xhtml#page_504)–[506](ch18.xhtml#page_506)
  prefs: []
  type: TYPE_NORMAL
- en: defining classes, [350](ch13.xhtml#page_350)–[352](ch13.xhtml#page_352)
  prefs: []
  type: TYPE_NORMAL
- en: augmented assignment operators, [178](ch07.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: autocompleting text in Editor pane (Spyder), [84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: aware objects in `datetime` module, [633](ch21.xhtml#page_633)–[636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: '`Axes` object (Matplotlib), [538](ch19.xhtml#page_538)–[539](ch19.xhtml#page_539),
    [560](ch19.xhtml#page_560)–[561](ch19.xhtml#page_561)'
  prefs: []
  type: TYPE_NORMAL
- en: '**B**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: backing up conda environments in Anaconda Navigator, [33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: backslash escape character (`\`), [190](ch07.xhtml#page_190)–[191](ch07.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: base classes, [355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: base condition, [297](ch11.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: base environment, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: Beautiful Soup, [414](ch15.xhtml#page_414)
  prefs: []
  type: TYPE_NORMAL
- en: Bednar, James, [93](ch05.xhtml#page_93), [422](ch16.xhtml#page_422)
  prefs: []
  type: TYPE_NORMAL
- en: best practices, naming variables, [209](ch08.xhtml#page_209)–[211](ch08.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: '`bfill()` method, [649](ch21.xhtml#page_649)'
  prefs: []
  type: TYPE_NORMAL
- en: binary files, access modes, [335](ch12.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: binary universal functions in NumPy, [530](ch18.xhtml#page_530)–[531](ch18.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: Binder, [129](ch05.xhtml#page_129)–[130](ch05.xhtml#page_130), [448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: binding. *See* assigning variables
  prefs: []
  type: TYPE_NORMAL
- en: block comments, [380](ch14.xhtml#page_380)
  prefs: []
  type: TYPE_NORMAL
- en: blocks of code, [259](ch10.xhtml#page_259)–[260](ch10.xhtml#page_260)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [430](ch16.xhtml#page_430)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: dashboards, [446](ch16.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial data, [484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean data type, [215](ch08.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean indexing, [515](ch18.xhtml#page_515)–[517](ch18.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean operators, [263](ch10.xhtml#page_263)–[264](ch10.xhtml#page_264)
  prefs: []
  type: TYPE_NORMAL
- en: Bowtie, [446](ch16.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: '`boxplot()` method, [603](ch20.xhtml#page_603)–[604](ch20.xhtml#page_604)'
  prefs: []
  type: TYPE_NORMAL
- en: branching, [258](ch10.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: '`break` statement, [270](ch10.xhtml#page_270)'
  prefs: []
  type: TYPE_NORMAL
- en: broadcasting, [508](ch18.xhtml#page_508), [526](ch18.xhtml#page_526)–[527](ch18.xhtml#page_527)
  prefs: []
  type: TYPE_NORMAL
- en: built-in data types, [184](ch07.xhtml#page_184)–[185](ch07.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: built-in functions, [290](ch11.xhtml#page_290)–[292](ch11.xhtml#page_292)
  prefs: []
  type: TYPE_NORMAL
- en: built-in modules, [311](ch11.xhtml#page_311)–[313](ch11.xhtml#page_313)
  prefs: []
  type: TYPE_NORMAL
- en: '**C**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: calling
  prefs: []
  type: TYPE_NORMAL
- en: functions, [284](ch11.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: call operator `()`, [284](ch11.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: cartograms, [465](ch17.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: Cartopy, [464](ch17.xhtml#page_464)–[465](ch17.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: case sensitivity of variables, [209](ch08.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: catching exceptions when opening files, [342](ch12.xhtml#page_342)–[343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: categorical data, converting to numerical data, [610](ch20.xhtml#page_610)–[612](ch20.xhtml#page_612)
  prefs: []
  type: TYPE_NORMAL
- en: catenary, [542](ch19.xhtml#page_542)
  prefs: []
  type: TYPE_NORMAL
- en: cells. *See specific types of cells (code, Markdown, output, and so on)*
  prefs: []
  type: TYPE_NORMAL
- en: chained assignment, [205](ch08.xhtml#page_205)–[206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: changing
  prefs: []
  type: TYPE_NORMAL
- en: runtime configuration parameters, [574](ch19.xhtml#page_574)–[576](ch19.xhtml#page_576)
  prefs: []
  type: TYPE_NORMAL
- en: start date, [656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: channels, defined, [16](ch01.xhtml#page_16)
  prefs: []
  type: TYPE_NORMAL
- en: checkpoints in notebooks, [109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: choosing
  prefs: []
  type: TYPE_NORMAL
- en: deep learning frameworks, [408](ch15.xhtml#page_408)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial libraries, [484](ch17.xhtml#page_484)–[487](ch17.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: image manipulation libraries, [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: natural language processing libraries, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: plotting libraries, [450](ch16.xhtml#page_450)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: syntax styles in Jupyter Qt console, [53](ch03.xhtml#page_53)–[54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: circular dependencies, [309](ch11.xhtml#page_309)
  prefs: []
  type: TYPE_NORMAL
- en: class attributes, [350](ch13.xhtml#page_350)
  prefs: []
  type: TYPE_NORMAL
- en: classes, [347](ch13.xhtml#page_347)–[348](ch13.xhtml#page_348)
  prefs: []
  type: TYPE_NORMAL
- en: dataclasses, [361](ch13.xhtml#page_361)–[362](ch13.xhtml#page_362)
  prefs: []
  type: TYPE_NORMAL
- en: decorators, [362](ch13.xhtml#page_362)–[364](ch13.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [365](ch13.xhtml#page_365)–[368](ch13.xhtml#page_368)
  prefs: []
  type: TYPE_NORMAL
- en: optimizing, [372](ch13.xhtml#page_372)–[373](ch13.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: plotting with, [368](ch13.xhtml#page_368)–[370](ch13.xhtml#page_370)
  prefs: []
  type: TYPE_NORMAL
- en: post-initialization processing, [370](ch13.xhtml#page_370)–[372](ch13.xhtml#page_372)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [349](ch13.xhtml#page_349)–[352](ch13.xhtml#page_352), [364](ch13.xhtml#page_364)–[365](ch13.xhtml#page_365)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings for, [386](ch14.xhtml#page_386)–[387](ch14.xhtml#page_387)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [355](ch13.xhtml#page_355)–[359](ch13.xhtml#page_359)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods
  prefs: []
  type: TYPE_NORMAL
- en: calling, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [352](ch13.xhtml#page_352)–[353](ch13.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: instantiating objects, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355),
    [357](ch13.xhtml#page_357)–[358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: object control, [359](ch13.xhtml#page_359)–[361](ch13.xhtml#page_361)
  prefs: []
  type: TYPE_NORMAL
- en: classification problems, [587](ch20.xhtml#page_587). *See also* Palmer Penguins
    project
  prefs: []
  type: TYPE_NORMAL
- en: class modules, creating, [373](ch13.xhtml#page_373)–[375](ch13.xhtml#page_375)
  prefs: []
  type: TYPE_NORMAL
- en: cleaning package cache, [48](ch02.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: clearing
  prefs: []
  type: TYPE_NORMAL
- en: namespace in IPython console (Spyder), [76](ch04.xhtml#page_76)–[77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: workspaces in JupyterLab, [157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: CLI
  prefs: []
  type: TYPE_NORMAL
- en: conda environments, [34](ch02.xhtml#page_34)–[48](ch02.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: cleaning package cache, [48](ch02.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [36](ch02.xhtml#page_36)–[37](ch02.xhtml#page_37)
  prefs: []
  type: TYPE_NORMAL
- en: duplicating and sharing, [44](ch02.xhtml#page_44)–[46](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: list of commands, [35](ch02.xhtml#page_35)
  prefs: []
  type: TYPE_NORMAL
- en: package management with, [39](ch02.xhtml#page_39)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [47](ch02.xhtml#page_47)
  prefs: []
  type: TYPE_NORMAL
- en: restoring, [46](ch02.xhtml#page_46)–[47](ch02.xhtml#page_47)
  prefs: []
  type: TYPE_NORMAL
- en: storage locations for, [37](ch02.xhtml#page_37)–[39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: extensions, installing, [169](ch06.xhtml#page_169)–[170](ch06.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, installing and launching, [142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, installing and launching, [96](ch05.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Qt console, installing and launching, [52](ch03.xhtml#page_52)–[53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: launching, [34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, installing and launching, [63](ch04.xhtml#page_63)–[64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: cloning. *See* duplicating conda environments
  prefs: []
  type: TYPE_NORMAL
- en: '`close()` method, [326](ch12.xhtml#page_326)'
  prefs: []
  type: TYPE_NORMAL
- en: closing
  prefs: []
  type: TYPE_NORMAL
- en: files, [326](ch12.xhtml#page_326), [329](ch12.xhtml#page_329)–[330](ch12.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: notebooks, [109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: shelves, [338](ch12.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: workspaces, in JupyterLab, [157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: Code Analysis pane (Spyder), [85](ch04.xhtml#page_85)–[86](ch04.xhtml#page_86),
    [391](ch14.xhtml#page_391)–[395](ch14.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: code blocks, [259](ch10.xhtml#page_259)–[260](ch10.xhtml#page_260)
  prefs: []
  type: TYPE_NORMAL
- en: code cells, [101](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: in Editor pane (Spyder), [81](ch04.xhtml#page_81)–[83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [150](ch06.xhtml#page_150)–[152](ch06.xhtml#page_152)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [104](ch05.xhtml#page_104)–[106](ch05.xhtml#page_106)
  prefs: []
  type: TYPE_NORMAL
- en: code repositories, sharing notebooks, [125](ch05.xhtml#page_125)–[128](ch05.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: Colab, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: collection-controlled loops, [264](ch10.xhtml#page_264)
  prefs: []
  type: TYPE_NORMAL
- en: color blindness, [578](ch19.xhtml#page_578)
  prefs: []
  type: TYPE_NORMAL
- en: columns, renaming in pandas, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: '`column_stack()` functions, [522](ch18.xhtml#page_522)'
  prefs: []
  type: TYPE_NORMAL
- en: combining
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [252](ch09.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: sequences into dictionaries, [248](ch09.xhtml#page_248)–[249](ch09.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: sets, [244](ch09.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: command line interface. *See* CLI
  prefs: []
  type: TYPE_NORMAL
- en: command mode keyboard shortcuts in Jupyter Notebook, [110](ch05.xhtml#page_110)–[111](ch05.xhtml#page_111)
  prefs: []
  type: TYPE_NORMAL
- en: command palette in Jupyter Notebook, [112](ch05.xhtml#page_112)
  prefs: []
  type: TYPE_NORMAL
- en: commands (conda)
  prefs: []
  type: TYPE_NORMAL
- en: environment management, [35](ch02.xhtml#page_35)
  prefs: []
  type: TYPE_NORMAL
- en: package management, [39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: command shell, defined, [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: comments, [210](ch08.xhtml#page_210), [377](ch14.xhtml#page_377), [378](ch14.xhtml#page_378)–[382](ch14.xhtml#page_382)
  prefs: []
  type: TYPE_NORMAL
- en: commenting-out code, [381](ch14.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: inline, [380](ch14.xhtml#page_380)–[381](ch14.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: multiline, [380](ch14.xhtml#page_380)
  prefs: []
  type: TYPE_NORMAL
- en: single-line, [379](ch14.xhtml#page_379)
  prefs: []
  type: TYPE_NORMAL
- en: Community tab (Anaconda Navigator), [17](ch01.xhtml#page_17)–[18](ch01.xhtml#page_18)
  prefs: []
  type: TYPE_NORMAL
- en: comparison operators, [214](ch08.xhtml#page_214)–[217](ch08.xhtml#page_217)
  prefs: []
  type: TYPE_NORMAL
- en: comprehensions, [271](ch10.xhtml#page_271)–[274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: computer vision libraries, [409](ch15.xhtml#page_409)
  prefs: []
  type: TYPE_NORMAL
- en: concrete paths, [320](ch12.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: conda, [8](ch01.xhtml#page_8)–[9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: pip and, [24](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: prompt, changing, [38](ch02.xhtml#page_38)–[39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: conda configuration file, [38](ch02.xhtml#page_38)
  prefs: []
  type: TYPE_NORMAL
- en: conda environment manager, purpose of, [22](ch02.xhtml#page_22)
  prefs: []
  type: TYPE_NORMAL
- en: conda environments
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [15](ch01.xhtml#page_15)–[17](ch01.xhtml#page_17), [24](ch02.xhtml#page_24)–[34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: backing up, [33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [25](ch02.xhtml#page_25)–[26](ch02.xhtml#page_26)
  prefs: []
  type: TYPE_NORMAL
- en: duplicating, [33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: package management in, [27](ch02.xhtml#page_27)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: base environment, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [34](ch02.xhtml#page_34)–[48](ch02.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: cleaning package cache, [48](ch02.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [36](ch02.xhtml#page_36)–[37](ch02.xhtml#page_37)
  prefs: []
  type: TYPE_NORMAL
- en: duplicating and sharing, [44](ch02.xhtml#page_44)–[46](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: list of commands, [35](ch02.xhtml#page_35)
  prefs: []
  type: TYPE_NORMAL
- en: package management with, [39](ch02.xhtml#page_39)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [47](ch02.xhtml#page_47)
  prefs: []
  type: TYPE_NORMAL
- en: restoring, [46](ch02.xhtml#page_46)–[47](ch02.xhtml#page_47)
  prefs: []
  type: TYPE_NORMAL
- en: storage locations for, [37](ch02.xhtml#page_37)–[39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, installing, [140](ch06.xhtml#page_140)–[143](ch06.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, installing, [94](ch05.xhtml#page_94)–[97](ch05.xhtml#page_97)
  prefs: []
  type: TYPE_NORMAL
- en: organization of, [22](ch02.xhtml#page_22)–[23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: Palmer Penguins project setup, [587](ch20.xhtml#page_587)–[588](ch20.xhtml#page_588)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [21](ch02.xhtml#page_21)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, installing, [66](ch04.xhtml#page_66)–[68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: conda info command, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: conda package manager, purpose of, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: condition-controlled loops, [264](ch10.xhtml#page_264)
  prefs: []
  type: TYPE_NORMAL
- en: conditions in flow control statements, [259](ch10.xhtml#page_259)
  prefs: []
  type: TYPE_NORMAL
- en: configuring Spyder interface, [64](ch04.xhtml#page_64)–[66](ch04.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: consoles, adding in JupyterLab, [152](ch06.xhtml#page_152)–[153](ch06.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: constants, [209](ch08.xhtml#page_209), [295](ch11.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: container data types
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [246](ch09.xhtml#page_246)–[256](ch09.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [220](ch09.xhtml#page_220)
  prefs: []
  type: TYPE_NORMAL
- en: lists, [229](ch09.xhtml#page_229)–[238](ch09.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: sets, [239](ch09.xhtml#page_239)–[246](ch09.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [220](ch09.xhtml#page_220)–[229](ch09.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: Contextily, [462](ch17.xhtml#page_462)–[463](ch17.xhtml#page_463)
  prefs: []
  type: TYPE_NORMAL
- en: '`continue` statement, [270](ch10.xhtml#page_270)'
  prefs: []
  type: TYPE_NORMAL
- en: control statements. *See* flow control statements
  prefs: []
  type: TYPE_NORMAL
- en: converting strings to dates and times, [630](ch21.xhtml#page_630)–[631](ch21.xhtml#page_631)
  prefs: []
  type: TYPE_NORMAL
- en: coordinated universal time, [633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: copying
  prefs: []
  type: TYPE_NORMAL
- en: cells between notebooks in JupyterLab, [158](ch06.xhtml#page_158)–[159](ch06.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: lists, [235](ch09.xhtml#page_235)–[237](ch09.xhtml#page_237)
  prefs: []
  type: TYPE_NORMAL
- en: '`copy()` method, [236](ch09.xhtml#page_236)'
  prefs: []
  type: TYPE_NORMAL
- en: '`copy` module, [237](ch09.xhtml#page_237)'
  prefs: []
  type: TYPE_NORMAL
- en: correlations, quantifying, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: '`corr()` method, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)'
  prefs: []
  type: TYPE_NORMAL
- en: counting in DataFrames, [600](ch20.xhtml#page_600)–[601](ch20.xhtml#page_601)
  prefs: []
  type: TYPE_NORMAL
- en: '`count()` method, [196](ch07.xhtml#page_196)'
  prefs: []
  type: TYPE_NORMAL
- en: '`countplot()` method, [597](ch20.xhtml#page_597)–[601](ch20.xhtml#page_601)'
  prefs: []
  type: TYPE_NORMAL
- en: c`ross_validate()` method, [618](ch20.xhtml#page_618)
  prefs: []
  type: TYPE_NORMAL
- en: cross-validation, [616](ch20.xhtml#page_616)–[620](ch20.xhtml#page_620)
  prefs: []
  type: TYPE_NORMAL
- en: cufflinks, [435](ch16.xhtml#page_435)
  prefs: []
  type: TYPE_NORMAL
- en: current date and time, retrieving, [626](ch21.xhtml#page_626)–[627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: current figure in Matplotlib, [546](ch19.xhtml#page_546)
  prefs: []
  type: TYPE_NORMAL
- en: current working directory, [317](ch12.xhtml#page_317)–[319](ch12.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: custom extensions, creating in JupyterLab, [171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: customizing widgets, [121](ch05.xhtml#page_121)–[122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: '**D**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Dash, [433](ch16.xhtml#page_433), [446](ch16.xhtml#page_446)–[447](ch16.xhtml#page_447)
  prefs: []
  type: TYPE_NORMAL
- en: dashboards, [445](ch16.xhtml#page_445)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Dash, [446](ch16.xhtml#page_446)–[447](ch16.xhtml#page_447)
  prefs: []
  type: TYPE_NORMAL
- en: Panel, [449](ch16.xhtml#page_449)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit, [447](ch16.xhtml#page_447)–[448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: Voilà, [448](ch16.xhtml#page_448)–[449](ch16.xhtml#page_449)
  prefs: []
  type: TYPE_NORMAL
- en: Dask, [404](ch15.xhtml#page_404), [416](ch15.xhtml#page_416)–[418](ch15.xhtml#page_418),
    [441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: data
  prefs: []
  type: TYPE_NORMAL
- en: loading in JSON format, [341](ch12.xhtml#page_341)
  prefs: []
  type: TYPE_NORMAL
- en: requesting, [413](ch15.xhtml#page_413)–[418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: saving in JSON format, [340](ch12.xhtml#page_340)
  prefs: []
  type: TYPE_NORMAL
- en: databases, [336](ch12.xhtml#page_336)
  prefs: []
  type: TYPE_NORMAL
- en: dataclasses, [361](ch13.xhtml#page_361)–[362](ch13.xhtml#page_362)
  prefs: []
  type: TYPE_NORMAL
- en: decorators, [362](ch13.xhtml#page_362)–[364](ch13.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [365](ch13.xhtml#page_365)–[368](ch13.xhtml#page_368)
  prefs: []
  type: TYPE_NORMAL
- en: optimizing, [372](ch13.xhtml#page_372)–[373](ch13.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: plotting with, [368](ch13.xhtml#page_368)–[370](ch13.xhtml#page_370)
  prefs: []
  type: TYPE_NORMAL
- en: post-initialization processing, [370](ch13.xhtml#page_370)–[372](ch13.xhtml#page_372)
  prefs: []
  type: TYPE_NORMAL
- en: '`dataclass` module, [361](ch13.xhtml#page_361)–[362](ch13.xhtml#page_362)'
  prefs: []
  type: TYPE_NORMAL
- en: DataFrames, [403](ch15.xhtml#page_403), [585](ch20.xhtml#page_585)–[586](ch20.xhtml#page_586)
  prefs: []
  type: TYPE_NORMAL
- en: converting categorical data to numerical data, [610](ch20.xhtml#page_610)–[612](ch20.xhtml#page_612)
  prefs: []
  type: TYPE_NORMAL
- en: counting in, [600](ch20.xhtml#page_600)–[601](ch20.xhtml#page_601)
  prefs: []
  type: TYPE_NORMAL
- en: describing, [596](ch20.xhtml#page_596)–[597](ch20.xhtml#page_597)
  prefs: []
  type: TYPE_NORMAL
- en: displaying, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: duplicates in, [592](ch20.xhtml#page_592)
  prefs: []
  type: TYPE_NORMAL
- en: missing values in, [592](ch20.xhtml#page_592)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: quantifying correlations, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: reindexing, [595](ch20.xhtml#page_595)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: data normalization with scikit-learn, [613](ch20.xhtml#page_613)–[615](ch20.xhtml#page_615)
  prefs: []
  type: TYPE_NORMAL
- en: data serialization
  prefs: []
  type: TYPE_NORMAL
- en: with `json` module, [339](ch12.xhtml#page_339)–[342](ch12.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: with `pickle` module, [334](ch12.xhtml#page_334)–[336](ch12.xhtml#page_336)
  prefs: []
  type: TYPE_NORMAL
- en: pickling vs. JSON, [334](ch12.xhtml#page_334)
  prefs: []
  type: TYPE_NORMAL
- en: datasets. *See also* DataFrames; Palmer Penguins project
  prefs: []
  type: TYPE_NORMAL
- en: exploring, [596](ch20.xhtml#page_596)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: loading, [589](ch20.xhtml#page_589)–[590](ch20.xhtml#page_590)
  prefs: []
  type: TYPE_NORMAL
- en: in seaborn, [589](ch20.xhtml#page_589)
  prefs: []
  type: TYPE_NORMAL
- en: size of, [451](ch16.xhtml#page_451)
  prefs: []
  type: TYPE_NORMAL
- en: for training algorithms, [612](ch20.xhtml#page_612)–[613](ch20.xhtml#page_613)
  prefs: []
  type: TYPE_NORMAL
- en: Datashader, [441](ch16.xhtml#page_441)–[443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: data structures. *See* arrays
  prefs: []
  type: TYPE_NORMAL
- en: data types
  prefs: []
  type: TYPE_NORMAL
- en: accessing, [185](ch07.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean, [215](ch08.xhtml#page_215)
  prefs: []
  type: TYPE_NORMAL
- en: built-in, [184](ch07.xhtml#page_184)–[185](ch07.xhtml#page_185)
  prefs: []
  type: TYPE_NORMAL
- en: containers, list of, [219](ch09.xhtml#page_219)–[220](ch09.xhtml#page_220)
  prefs: []
  type: TYPE_NORMAL
- en: in `datetime` module, [627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [246](ch09.xhtml#page_246)–[256](ch09.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: floats, [186](ch07.xhtml#page_186)–[189](ch07.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: integers, [185](ch07.xhtml#page_185)–[186](ch07.xhtml#page_186)
  prefs: []
  type: TYPE_NORMAL
- en: lists, [229](ch09.xhtml#page_229)–[238](ch09.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: in NumPy, [495](ch18.xhtml#page_495)
  prefs: []
  type: TYPE_NORMAL
- en: sets, [239](ch09.xhtml#page_239)–[246](ch09.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [189](ch07.xhtml#page_189)–[200](ch07.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [220](ch09.xhtml#page_220)–[229](ch09.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: type casting, [186](ch07.xhtml#page_186)–[187](ch07.xhtml#page_187)
  prefs: []
  type: TYPE_NORMAL
- en: data visualization
  prefs: []
  type: TYPE_NORMAL
- en: dashboards, [445](ch16.xhtml#page_445)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Dash, [446](ch16.xhtml#page_446)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Panel, [449](ch16.xhtml#page_449)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit, [447](ch16.xhtml#page_447)–[448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: Voilà, [448](ch16.xhtml#page_448)–[449](ch16.xhtml#page_449)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial libraries
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: Cartopy, [464](ch17.xhtml#page_464)–[465](ch17.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [484](ch17.xhtml#page_484)–[487](ch17.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: folium, [470](ch17.xhtml#page_470)–[473](ch17.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas, [460](ch17.xhtml#page_460)–[464](ch17.xhtml#page_464)
  prefs: []
  type: TYPE_NORMAL
- en: Geoplot, [465](ch17.xhtml#page_465)–[467](ch17.xhtml#page_467)
  prefs: []
  type: TYPE_NORMAL
- en: GeoViews, [476](ch17.xhtml#page_476)–[479](ch17.xhtml#page_479)
  prefs: []
  type: TYPE_NORMAL
- en: ipyleaflet, [473](ch17.xhtml#page_473)–[476](ch17.xhtml#page_476)
  prefs: []
  type: TYPE_NORMAL
- en: KeplerGL, [479](ch17.xhtml#page_479)–[481](ch17.xhtml#page_481)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [459](ch17.xhtml#page_459)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [467](ch17.xhtml#page_467)–[469](ch17.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [458](ch17.xhtml#page_458)
  prefs: []
  type: TYPE_NORMAL
- en: pydeck, [481](ch17.xhtml#page_481)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: plotting libraries, [419](ch16.xhtml#page_419)–[420](ch16.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: Altair, [429](ch16.xhtml#page_429)–[430](ch16.xhtml#page_430)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [430](ch16.xhtml#page_430)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [450](ch16.xhtml#page_450)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Datashader, [441](ch16.xhtml#page_441)–[443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViews, [436](ch16.xhtml#page_436)–[441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: for InfoVis, [421](ch16.xhtml#page_421)
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [422](ch16.xhtml#page_422)–[456](ch16.xhtml#page_456), [537](ch19.xhtml#page_537)–[538](ch19.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: Mayavi, [443](ch16.xhtml#page_443)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: pandas plotting API, [428](ch16.xhtml#page_428)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [431](ch16.xhtml#page_431)–[436](ch16.xhtml#page_436)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [424](ch16.xhtml#page_424)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: radial visualization, [605](ch20.xhtml#page_605)–[608](ch20.xhtml#page_608)
  prefs: []
  type: TYPE_NORMAL
- en: types of, [420](ch16.xhtml#page_420)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: data wrangling, [413](ch15.xhtml#page_413)
  prefs: []
  type: TYPE_NORMAL
- en: date offsets (pandas), [636](ch21.xhtml#page_636), [645](ch21.xhtml#page_645)
  prefs: []
  type: TYPE_NORMAL
- en: '`date_range()` method, [640](ch21.xhtml#page_640)–[642](ch21.xhtml#page_642)'
  prefs: []
  type: TYPE_NORMAL
- en: date ranges in pandas, [640](ch21.xhtml#page_640)–[642](ch21.xhtml#page_642)
  prefs: []
  type: TYPE_NORMAL
- en: '`DatetimeIndex` class (pandas), [637](ch21.xhtml#page_637)'
  prefs: []
  type: TYPE_NORMAL
- en: '`datetime()` method, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)'
  prefs: []
  type: TYPE_NORMAL
- en: '`datetime` module, [626](ch21.xhtml#page_626)'
  prefs: []
  type: TYPE_NORMAL
- en: converting strings to dates and times, [630](ch21.xhtml#page_630)–[631](ch21.xhtml#page_631)
  prefs: []
  type: TYPE_NORMAL
- en: current date and time, [626](ch21.xhtml#page_626)–[627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: durations, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: formatting dates and times, [628](ch21.xhtml#page_628)–[630](ch21.xhtml#page_630)
  prefs: []
  type: TYPE_NORMAL
- en: plotting with, [632](ch21.xhtml#page_632)–[633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: timestamps, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: time zones, [633](ch21.xhtml#page_633)–[636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: date times (pandas), [636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: '`dbm` module, [336](ch12.xhtml#page_336)'
  prefs: []
  type: TYPE_NORMAL
- en: Debugger pane (Spyder), [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: debugging, defined, [3](part01.xhtml#page_3), [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: '`decimal` module, [186](ch07.xhtml#page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: decorators, [362](ch13.xhtml#page_362)–[364](ch13.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: decrementing arrays, [528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: '`deepcopy()` method, [237](ch09.xhtml#page_237)'
  prefs: []
  type: TYPE_NORMAL
- en: deep learning frameworks, [406](ch15.xhtml#page_406)–[407](ch15.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: default key values, creating, [252](ch09.xhtml#page_252)–[253](ch09.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: default parameters, [287](ch11.xhtml#page_287)–[288](ch11.xhtml#page_288)
  prefs: []
  type: TYPE_NORMAL
- en: defining
  prefs: []
  type: TYPE_NORMAL
- en: classes, [349](ch13.xhtml#page_349)–[352](ch13.xhtml#page_352), [364](ch13.xhtml#page_364)–[365](ch13.xhtml#page_365)
  prefs: []
  type: TYPE_NORMAL
- en: code cells
  prefs: []
  type: TYPE_NORMAL
- en: in Editor pane (Spyder), [81](ch04.xhtml#page_81)–[83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [150](ch06.xhtml#page_150)–[152](ch06.xhtml#page_152)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [104](ch05.xhtml#page_104)–[106](ch05.xhtml#page_106)
  prefs: []
  type: TYPE_NORMAL
- en: dataclasses, [365](ch13.xhtml#page_365)–[368](ch13.xhtml#page_368)
  prefs: []
  type: TYPE_NORMAL
- en: functions, [284](ch11.xhtml#page_284)–[285](ch11.xhtml#page_285)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods, [352](ch13.xhtml#page_352)–[353](ch13.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: '`def` keyword, [284](ch11.xhtml#page_284)'
  prefs: []
  type: TYPE_NORMAL
- en: deleting. *See* removing
  prefs: []
  type: TYPE_NORMAL
- en: delimiters in `split()` method, [198](ch07.xhtml#page_198)
  prefs: []
  type: TYPE_NORMAL
- en: dependencies
  prefs: []
  type: TYPE_NORMAL
- en: circular, [309](ch11.xhtml#page_309)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [8](ch01.xhtml#page_8), [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: depth of recursion, [298](ch11.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: derived classes, [355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: '`describe()` method, [597](ch20.xhtml#page_597)'
  prefs: []
  type: TYPE_NORMAL
- en: describing DataFrames, [596](ch20.xhtml#page_596)–[597](ch20.xhtml#page_597)
  prefs: []
  type: TYPE_NORMAL
- en: de-serialization, [334](ch12.xhtml#page_334)
  prefs: []
  type: TYPE_NORMAL
- en: designing functions, [298](ch11.xhtml#page_298)–[299](ch11.xhtml#page_299)
  prefs: []
  type: TYPE_NORMAL
- en: '`dict()` function, [248](ch09.xhtml#page_248)'
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [246](ch09.xhtml#page_246)–[256](ch09.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: combining, [252](ch09.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: combining sequences into, [248](ch09.xhtml#page_248)–[249](ch09.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [247](ch09.xhtml#page_247)–[248](ch09.xhtml#page_248)
  prefs: []
  type: TYPE_NORMAL
- en: creating empty, [249](ch09.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: functions and methods for, [249](ch09.xhtml#page_249)–[250](ch09.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: key-value pairs
  prefs: []
  type: TYPE_NORMAL
- en: adding, [251](ch09.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [252](ch09.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: key values
  prefs: []
  type: TYPE_NORMAL
- en: creating default, [252](ch09.xhtml#page_252)–[253](ch09.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: retrieving, [251](ch09.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: printing, [254](ch09.xhtml#page_254)–[255](ch09.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: retrieving contents, [250](ch09.xhtml#page_250)–[251](ch09.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: reverse lookups, [253](ch09.xhtml#page_253)–[254](ch09.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: sorting, [254](ch09.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: dictionary comprehensions, [273](ch10.xhtml#page_273)–[274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: '`difference()` method, [243](ch09.xhtml#page_243)'
  prefs: []
  type: TYPE_NORMAL
- en: differences between sets, finding, [243](ch09.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: dimension of arrays, [492](ch18.xhtml#page_492)–[494](ch18.xhtml#page_494)
  prefs: []
  type: TYPE_NORMAL
- en: directories
  prefs: []
  type: TYPE_NORMAL
- en: current working directory, [317](ch12.xhtml#page_317)–[319](ch12.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: for Jupyter notebooks, [98](ch05.xhtml#page_98)–[100](ch05.xhtml#page_100),
    [144](ch06.xhtml#page_144)–[145](ch06.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: for Spyder project files, [69](ch04.xhtml#page_69)–[72](ch04.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: directory paths
  prefs: []
  type: TYPE_NORMAL
- en: absolute and relative, [319](ch12.xhtml#page_319)–[320](ch12.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: naming, [316](ch12.xhtml#page_316)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing, [319](ch12.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: '`os` module, [317](ch12.xhtml#page_317)–[319](ch12.xhtml#page_319)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pathlib` module, [320](ch12.xhtml#page_320)–[322](ch12.xhtml#page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: '`shutil` module, [322](ch12.xhtml#page_322)–[324](ch12.xhtml#page_324)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dir()` function, [306](ch11.xhtml#page_306)'
  prefs: []
  type: TYPE_NORMAL
- en: disabling logging, [280](ch10.xhtml#page_280)
  prefs: []
  type: TYPE_NORMAL
- en: displaying
  prefs: []
  type: TYPE_NORMAL
- en: DataFrames, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: image files in JupyterLab, [153](ch06.xhtml#page_153)–[154](ch06.xhtml#page_154)
  prefs: []
  type: TYPE_NORMAL
- en: division operator (`/`), [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings, [74](ch04.xhtml#page_74), [377](ch14.xhtml#page_377), [382](ch14.xhtml#page_382)–[395](ch14.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: for classes, [386](ch14.xhtml#page_386)–[387](ch14.xhtml#page_387)
  prefs: []
  type: TYPE_NORMAL
- en: formats for, [392](ch14.xhtml#page_392)
  prefs: []
  type: TYPE_NORMAL
- en: for functions and methods, [387](ch14.xhtml#page_387)–[388](ch14.xhtml#page_388)
  prefs: []
  type: TYPE_NORMAL
- en: for modules, [384](ch14.xhtml#page_384)–[386](ch14.xhtml#page_386)
  prefs: []
  type: TYPE_NORMAL
- en: in Spyder Code Analysis pane, [391](ch14.xhtml#page_391)–[395](ch14.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: updating, [388](ch14.xhtml#page_388)–[391](ch14.xhtml#page_391)
  prefs: []
  type: TYPE_NORMAL
- en: '`doctest` module, [388](ch14.xhtml#page_388)–[391](ch14.xhtml#page_391)'
  prefs: []
  type: TYPE_NORMAL
- en: documentation, [377](ch14.xhtml#page_377)–[378](ch14.xhtml#page_378)
  prefs: []
  type: TYPE_NORMAL
- en: comments, [378](ch14.xhtml#page_378)–[382](ch14.xhtml#page_382)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings, [382](ch14.xhtml#page_382)–[395](ch14.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: with JupyterLab text editor, [164](ch06.xhtml#page_164)–[165](ch06.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: '`dot()` function, [528](ch18.xhtml#page_528)'
  prefs: []
  type: TYPE_NORMAL
- en: dot notation, [180](ch07.xhtml#page_180)
  prefs: []
  type: TYPE_NORMAL
- en: dot product for matrices, [527](ch18.xhtml#page_527)–[528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: downloading notebooks, [123](ch05.xhtml#page_123)–[125](ch05.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: downsampling time series in pandas, [650](ch21.xhtml#page_650)–[656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: '`drop_duplicates()` method, [592](ch20.xhtml#page_592)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dropna()` method, [594](ch20.xhtml#page_594)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dstack()` function, [522](ch18.xhtml#page_522)'
  prefs: []
  type: TYPE_NORMAL
- en: dtypes. *See* data types
  prefs: []
  type: TYPE_NORMAL
- en: dunder (double underscore) methods, [351](ch13.xhtml#page_351), [365](ch13.xhtml#page_365)
  prefs: []
  type: TYPE_NORMAL
- en: '`duplicated()` method, [592](ch20.xhtml#page_592)'
  prefs: []
  type: TYPE_NORMAL
- en: duplicates
  prefs: []
  type: TYPE_NORMAL
- en: in datasets, [592](ch20.xhtml#page_592)
  prefs: []
  type: TYPE_NORMAL
- en: finding, [243](ch09.xhtml#page_243)–[244](ch09.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: duplicating conda environments
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [44](ch02.xhtml#page_44)–[46](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: durations in `datetime` module, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: dynamic typing, [184](ch07.xhtml#page_184), [211](ch08.xhtml#page_211)
  prefs: []
  type: TYPE_NORMAL
- en: '**E**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Earth Engine, [483](ch17.xhtml#page_483)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: edit mode keyboard shortcuts in Jupyter Notebook, [111](ch05.xhtml#page_111)–[112](ch05.xhtml#page_112)
  prefs: []
  type: TYPE_NORMAL
- en: Editor pane (Spyder), [78](ch04.xhtml#page_78)–[84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: autocompleting text, [84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: defining code cells, [81](ch04.xhtml#page_81)–[83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: setting run configuration, [83](ch04.xhtml#page_83)–[84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: writing programs with, [78](ch04.xhtml#page_78)–[81](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: '`elif` clause, [260](ch10.xhtml#page_260)–[262](ch10.xhtml#page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: '`else` clause, [259](ch10.xhtml#page_259), [260](ch10.xhtml#page_260)–[262](ch10.xhtml#page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: embedding widgets, [122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: empty dictionaries, creating, [249](ch09.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: '`empty()` function, [503](ch18.xhtml#page_503)'
  prefs: []
  type: TYPE_NORMAL
- en: enabling extensions in Jupyter Notebook, [113](ch05.xhtml#page_113)–[115](ch05.xhtml#page_115)
  prefs: []
  type: TYPE_NORMAL
- en: end-of-line (EOL) markers, [329](ch12.xhtml#page_329)
  prefs: []
  type: TYPE_NORMAL
- en: '`enumerate()` function, [269](ch10.xhtml#page_269)'
  prefs: []
  type: TYPE_NORMAL
- en: environment files, creating, [44](ch02.xhtml#page_44)–[46](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: environments. *See* conda environments
  prefs: []
  type: TYPE_NORMAL
- en: Environments tab (Anaconda Navigator), [15](ch01.xhtml#page_15)–[17](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: error messages, [182](ch07.xhtml#page_182)–[183](ch07.xhtml#page_183)
  prefs: []
  type: TYPE_NORMAL
- en: errors, ignoring, [277](ch10.xhtml#page_277)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: escape sequences, [190](ch07.xhtml#page_190)–[191](ch07.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: events, handling with widgets, [120](ch05.xhtml#page_120)–[121](ch05.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: exceptions
  prefs: []
  type: TYPE_NORMAL
- en: catching when opening files, [342](ch12.xhtml#page_342)–[343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: handling, [274](ch10.xhtml#page_274)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: ignoring errors, [277](ch10.xhtml#page_277)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: '`try` and `except` statements, [274](ch10.xhtml#page_274)–[276](ch10.xhtml#page_276)'
  prefs: []
  type: TYPE_NORMAL
- en: raising, [182](ch07.xhtml#page_182)–[183](ch07.xhtml#page_183), [274](ch10.xhtml#page_274),
    [276](ch10.xhtml#page_276)–[277](ch10.xhtml#page_277)
  prefs: []
  type: TYPE_NORMAL
- en: '`except` statement, [274](ch10.xhtml#page_274)–[276](ch10.xhtml#page_276)'
  prefs: []
  type: TYPE_NORMAL
- en: exploring
  prefs: []
  type: TYPE_NORMAL
- en: datasets, [596](ch20.xhtml#page_596)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: simulations in JupyterLab, [154](ch06.xhtml#page_154)–[155](ch06.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: exponent operator (`**`), [177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: expressions
  prefs: []
  type: TYPE_NORMAL
- en: assigning variables, [204](ch08.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: generator, [302](ch11.xhtml#page_302)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical. *See* mathematical expressions
  prefs: []
  type: TYPE_NORMAL
- en: ternary, [262](ch10.xhtml#page_262)
  prefs: []
  type: TYPE_NORMAL
- en: '`extend()` method, [231](ch09.xhtml#page_231)'
  prefs: []
  type: TYPE_NORMAL
- en: extensibility, defined, [3](part01.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: eXtensible Markup Language (XML), [343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: Extension Manager, [166](ch06.xhtml#page_166)–[169](ch06.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: extensions
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab
  prefs: []
  type: TYPE_NORMAL
- en: creating custom, [171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: installing and managing with CLI, [169](ch06.xhtml#page_169)–[170](ch06.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: installing and managing with Extension Manager, [166](ch06.xhtml#page_166)–[169](ch06.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [165](ch06.xhtml#page_165)–[166](ch06.xhtml#page_166)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [113](ch05.xhtml#page_113)–[115](ch05.xhtml#page_115)
  prefs: []
  type: TYPE_NORMAL
- en: '**F**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: facet plots, [435](ch16.xhtml#page_435)
  prefs: []
  type: TYPE_NORMAL
- en: '`ffill()` method, [648](ch21.xhtml#page_648)'
  prefs: []
  type: TYPE_NORMAL
- en: '`Figure` object (Matplotlib), [538](ch19.xhtml#page_538)–[539](ch19.xhtml#page_539)'
  prefs: []
  type: TYPE_NORMAL
- en: methods for, [559](ch19.xhtml#page_559)–[560](ch19.xhtml#page_560)
  prefs: []
  type: TYPE_NORMAL
- en: File menu (Anaconda Navigator), [18](ch01.xhtml#page_18)–[19](ch01.xhtml#page_19)
  prefs: []
  type: TYPE_NORMAL
- en: files. *See also* text files
  prefs: []
  type: TYPE_NORMAL
- en: binary files, accessing, [335](ch12.xhtml#page_335)
  prefs: []
  type: TYPE_NORMAL
- en: closing, [326](ch12.xhtml#page_326), [329](ch12.xhtml#page_329)–[330](ch12.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: opening, catching exceptions, [342](ch12.xhtml#page_342)–[343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: filling missing values in datasets, [594](ch20.xhtml#page_594)–[595](ch20.xhtml#page_595)
  prefs: []
  type: TYPE_NORMAL
- en: '`fillna()` method, [594](ch20.xhtml#page_594), [650](ch21.xhtml#page_650)'
  prefs: []
  type: TYPE_NORMAL
- en: '`filter()` function, [300](ch11.xhtml#page_300)'
  prefs: []
  type: TYPE_NORMAL
- en: finding
  prefs: []
  type: TYPE_NORMAL
- en: differences between sets, [243](ch09.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: duplicates in sets, [243](ch09.xhtml#page_243)–[244](ch09.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: list index, [233](ch09.xhtml#page_233)–[234](ch09.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: missing values in datasets, [593](ch20.xhtml#page_593)
  prefs: []
  type: TYPE_NORMAL
- en: packages
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [27](ch02.xhtml#page_27)–[30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [40](ch02.xhtml#page_40)–[42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: flattening arrays, [519](ch18.xhtml#page_519)–[520](ch18.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: '`flatten()` method, [519](ch18.xhtml#page_519)'
  prefs: []
  type: TYPE_NORMAL
- en: '`float()` function, [187](ch07.xhtml#page_187)'
  prefs: []
  type: TYPE_NORMAL
- en: floats, [186](ch07.xhtml#page_186)–[189](ch07.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: converting to/from integers, [186](ch07.xhtml#page_186)–[187](ch07.xhtml#page_187)
  prefs: []
  type: TYPE_NORMAL
- en: rounding, [187](ch07.xhtml#page_187)–[189](ch07.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: floor division operator (`//`), [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: flow control statements, [258](ch10.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: '`if` statement, [258](ch10.xhtml#page_258)–[264](ch10.xhtml#page_264)'
  prefs: []
  type: TYPE_NORMAL
- en: loops, [264](ch10.xhtml#page_264)–[274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: flow of execution, [258](ch10.xhtml#page_258)
  prefs: []
  type: TYPE_NORMAL
- en: functions and, [292](ch11.xhtml#page_292)–[297](ch11.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: tracing, [278](ch10.xhtml#page_278)–[281](ch10.xhtml#page_281)
  prefs: []
  type: TYPE_NORMAL
- en: folders. *See* directories
  prefs: []
  type: TYPE_NORMAL
- en: folium, [470](ch17.xhtml#page_470)–[473](ch17.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: formats for docstrings, [392](ch14.xhtml#page_392)
  prefs: []
  type: TYPE_NORMAL
- en: formatting
  prefs: []
  type: TYPE_NORMAL
- en: dates and times, [628](ch21.xhtml#page_628)–[630](ch21.xhtml#page_630)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [192](ch07.xhtml#page_192)–[194](ch07.xhtml#page_194), [206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: '`for` statement, [267](ch10.xhtml#page_267)–[269](ch10.xhtml#page_269)'
  prefs: []
  type: TYPE_NORMAL
- en: frequencies for time series, [641](ch21.xhtml#page_641)
  prefs: []
  type: TYPE_NORMAL
- en: From Data to Viz website, [456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: '`fromkeys()` method, [253](ch09.xhtml#page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`frozenset()` function, [245](ch09.xhtml#page_245)–[246](ch09.xhtml#page_246)'
  prefs: []
  type: TYPE_NORMAL
- en: frozensets, creating, [245](ch09.xhtml#page_245)–[246](ch09.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: fruitful functions, [285](ch11.xhtml#page_285)
  prefs: []
  type: TYPE_NORMAL
- en: f-strings, [192](ch07.xhtml#page_192)–[194](ch07.xhtml#page_194), [206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: '`full()` function, [503](ch18.xhtml#page_503)'
  prefs: []
  type: TYPE_NORMAL
- en: '`FuncAnimation` class (Matplotlib), [569](ch19.xhtml#page_569), [571](ch19.xhtml#page_571)–[573](ch19.xhtml#page_573)'
  prefs: []
  type: TYPE_NORMAL
- en: functions, [283](ch11.xhtml#page_283). *See also* methods
  prefs: []
  type: TYPE_NORMAL
- en: assigning variables, [204](ch08.xhtml#page_204)–[205](ch08.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: base condition, [297](ch11.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: built-in, [290](ch11.xhtml#page_290)–[292](ch11.xhtml#page_292)
  prefs: []
  type: TYPE_NORMAL
- en: calling, [284](ch11.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [253](ch09.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: creating arrays
  prefs: []
  type: TYPE_NORMAL
- en: '`arange()` function, [499](ch18.xhtml#page_499)–[501](ch18.xhtml#page_501)'
  prefs: []
  type: TYPE_NORMAL
- en: '`array()` function, [497](ch18.xhtml#page_497)'
  prefs: []
  type: TYPE_NORMAL
- en: '`linspace()` function, [501](ch18.xhtml#page_501)–[502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: list of, [494](ch18.xhtml#page_494)
  prefs: []
  type: TYPE_NORMAL
- en: prefilled, [502](ch18.xhtml#page_502)–[504](ch18.xhtml#page_504)
  prefs: []
  type: TYPE_NORMAL
- en: default parameters, [287](ch11.xhtml#page_287)–[288](ch11.xhtml#page_288)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [284](ch11.xhtml#page_284)–[285](ch11.xhtml#page_285)
  prefs: []
  type: TYPE_NORMAL
- en: designing, [298](ch11.xhtml#page_298)–[299](ch11.xhtml#page_299)
  prefs: []
  type: TYPE_NORMAL
- en: for dictionaries, [249](ch09.xhtml#page_249)–[250](ch09.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings for, [387](ch14.xhtml#page_387)–[388](ch14.xhtml#page_388)
  prefs: []
  type: TYPE_NORMAL
- en: flow of execution, [292](ch11.xhtml#page_292)–[297](ch11.xhtml#page_297)
  prefs: []
  type: TYPE_NORMAL
- en: generators, [300](ch11.xhtml#page_300)–[303](ch11.xhtml#page_303)
  prefs: []
  type: TYPE_NORMAL
- en: global variables, [294](ch11.xhtml#page_294)–[295](ch11.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: lambda, [299](ch11.xhtml#page_299)–[300](ch11.xhtml#page_300)
  prefs: []
  type: TYPE_NORMAL
- en: for lists, [230](ch09.xhtml#page_230)–[231](ch09.xhtml#page_231)
  prefs: []
  type: TYPE_NORMAL
- en: '`main()`, [295](ch11.xhtml#page_295)–[297](ch11.xhtml#page_297)'
  prefs: []
  type: TYPE_NORMAL
- en: '`math` module, [179](ch07.xhtml#page_179)–[181](ch07.xhtml#page_181)'
  prefs: []
  type: TYPE_NORMAL
- en: namespaces and scopes, [293](ch11.xhtml#page_293)–[294](ch11.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: naming, [290](ch11.xhtml#page_290)
  prefs: []
  type: TYPE_NORMAL
- en: in NumPy
  prefs: []
  type: TYPE_NORMAL
- en: aggregate, [531](ch18.xhtml#page_531)–[533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom numbers, [533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: universal, [529](ch18.xhtml#page_529)–[531](ch18.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: parameters and arguments, [285](ch11.xhtml#page_285)–[286](ch11.xhtml#page_286)
  prefs: []
  type: TYPE_NORMAL
- en: positional and keyword arguments, [286](ch11.xhtml#page_286)–[287](ch11.xhtml#page_287)
  prefs: []
  type: TYPE_NORMAL
- en: recursion, [297](ch11.xhtml#page_297)–[298](ch11.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: returning values, [289](ch11.xhtml#page_289)
  prefs: []
  type: TYPE_NORMAL
- en: for sets, [241](ch09.xhtml#page_241)–[242](ch09.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: for tuples, [222](ch09.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: '**G**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: garbage collection, [203](ch08.xhtml#page_203)
  prefs: []
  type: TYPE_NORMAL
- en: generator expressions, [302](ch11.xhtml#page_302)
  prefs: []
  type: TYPE_NORMAL
- en: generators, [300](ch11.xhtml#page_300)–[303](ch11.xhtml#page_303)
  prefs: []
  type: TYPE_NORMAL
- en: Gensim, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas, [460](ch17.xhtml#page_460)–[464](ch17.xhtml#page_464)
  prefs: []
  type: TYPE_NORMAL
- en: Geoplot, [465](ch17.xhtml#page_465)–[467](ch17.xhtml#page_467)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial data, [457](ch17.xhtml#page_457)–[458](ch17.xhtml#page_458)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial libraries
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: Cartopy, [464](ch17.xhtml#page_464)–[465](ch17.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [484](ch17.xhtml#page_484)–[487](ch17.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: folium, [470](ch17.xhtml#page_470)–[473](ch17.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas, [460](ch17.xhtml#page_460)–[464](ch17.xhtml#page_464)
  prefs: []
  type: TYPE_NORMAL
- en: Geoplot, [465](ch17.xhtml#page_465)–[467](ch17.xhtml#page_467)
  prefs: []
  type: TYPE_NORMAL
- en: GeoViews, [476](ch17.xhtml#page_476)–[479](ch17.xhtml#page_479)
  prefs: []
  type: TYPE_NORMAL
- en: ipyleaflet, [473](ch17.xhtml#page_473)–[476](ch17.xhtml#page_476)
  prefs: []
  type: TYPE_NORMAL
- en: KeplerGL, [479](ch17.xhtml#page_479)–[481](ch17.xhtml#page_481)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [459](ch17.xhtml#page_459)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [467](ch17.xhtml#page_467)–[469](ch17.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [458](ch17.xhtml#page_458)
  prefs: []
  type: TYPE_NORMAL
- en: pydeck, [481](ch17.xhtml#page_481)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: GeoViews, [476](ch17.xhtml#page_476)–[479](ch17.xhtml#page_479)
  prefs: []
  type: TYPE_NORMAL
- en: GeoVis, [420](ch16.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: '`getcwd()` function, [309](ch11.xhtml#page_309)'
  prefs: []
  type: TYPE_NORMAL
- en: '`get_dummies()` method, [600](ch20.xhtml#page_600), [611](ch20.xhtml#page_611)'
  prefs: []
  type: TYPE_NORMAL
- en: '`get()` method, [251](ch09.xhtml#page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: Gist, sharing notebooks, [125](ch05.xhtml#page_125)–[128](ch05.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: GitHub, sharing notebooks, [125](ch05.xhtml#page_125)–[128](ch05.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: global scope, [293](ch11.xhtml#page_293)–[294](ch11.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: '`global` statement, [295](ch11.xhtml#page_295)'
  prefs: []
  type: TYPE_NORMAL
- en: global variables, [294](ch11.xhtml#page_294)–[295](ch11.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: globular clusters, [144](ch06.xhtml#page_144)
  prefs: []
  type: TYPE_NORMAL
- en: Google Earth Engine, [483](ch17.xhtml#page_483)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: GridSearchCV class (scikit-learn), [620](ch20.xhtml#page_620)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: GridSpec class, creating multipanel displays, [549](ch19.xhtml#page_549)–[555](ch19.xhtml#page_555),
    [564](ch19.xhtml#page_564)–[567](ch19.xhtml#page_567)
  prefs: []
  type: TYPE_NORMAL
- en: '`groupby()` method, [600](ch20.xhtml#page_600)'
  prefs: []
  type: TYPE_NORMAL
- en: '**H**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: handling
  prefs: []
  type: TYPE_NORMAL
- en: events with widgets, [120](ch05.xhtml#page_120)–[121](ch05.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: exceptions, [274](ch10.xhtml#page_274)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: ignoring errors, [277](ch10.xhtml#page_277)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: '`try` and `except` statements, [274](ch10.xhtml#page_274)–[276](ch10.xhtml#page_276)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hash()` function, [240](ch09.xhtml#page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: hash symbol (`#`) , [378](ch14.xhtml#page_378)
  prefs: []
  type: TYPE_NORMAL
- en: hash tables, [239](ch09.xhtml#page_239)
  prefs: []
  type: TYPE_NORMAL
- en: HDF5 (Hierarchical Data Format), [343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: '`head()` method, [591](ch20.xhtml#page_591), [596](ch20.xhtml#page_596), [651](ch21.xhtml#page_651)'
  prefs: []
  type: TYPE_NORMAL
- en: heatmaps in seaborn, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: helper libraries, [413](ch15.xhtml#page_413)–[418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: Help menu (Jupyter Notebook), [109](ch05.xhtml#page_109)–[110](ch05.xhtml#page_110)
  prefs: []
  type: TYPE_NORMAL
- en: Help pane (Spyder), [72](ch04.xhtml#page_72)–[74](ch04.xhtml#page_74)
  prefs: []
  type: TYPE_NORMAL
- en: Heroku, [448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: Hierarchical Data Format (HDF5), [343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: History pane in IPython console (Spyder), [77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViews, [436](ch16.xhtml#page_436)–[441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViz, [441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: '`home()` method, [322](ch12.xhtml#page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: Home tab (Anaconda Navigator), [13](ch01.xhtml#page_13)–[14](ch01.xhtml#page_14)
  prefs: []
  type: TYPE_NORMAL
- en: '`hsplit()` function, [523](ch18.xhtml#page_523)'
  prefs: []
  type: TYPE_NORMAL
- en: '`hstack()` function, [522](ch18.xhtml#page_522)'
  prefs: []
  type: TYPE_NORMAL
- en: HTML (HyperText Markup Language), [413](ch15.xhtml#page_413)
  prefs: []
  type: TYPE_NORMAL
- en: HTTP (HyperText Transfer Protocol), [413](ch15.xhtml#page_413)
  prefs: []
  type: TYPE_NORMAL
- en: hvPlot, [440](ch16.xhtml#page_440)–[441](ch16.xhtml#page_441), [462](ch17.xhtml#page_462)
  prefs: []
  type: TYPE_NORMAL
- en: hyperparameters, [616](ch20.xhtml#page_616), [620](ch20.xhtml#page_620)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: '**I**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: identities of variables, [202](ch08.xhtml#page_202)–[203](ch08.xhtml#page_203)
  prefs: []
  type: TYPE_NORMAL
- en: IDEs (integrated development environments), defined, [2](part01.xhtml#page_2),
    [3](part01.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: '`idxmax()` method, [618](ch20.xhtml#page_618), [653](ch21.xhtml#page_653)'
  prefs: []
  type: TYPE_NORMAL
- en: '`if` statement, [258](ch10.xhtml#page_258)–[264](ch10.xhtml#page_264)'
  prefs: []
  type: TYPE_NORMAL
- en: Boolean operators, [263](ch10.xhtml#page_263)–[264](ch10.xhtml#page_264)
  prefs: []
  type: TYPE_NORMAL
- en: code blocks, [259](ch10.xhtml#page_259)–[260](ch10.xhtml#page_260)
  prefs: []
  type: TYPE_NORMAL
- en: '`elif` clause, [260](ch10.xhtml#page_260)–[262](ch10.xhtml#page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: '`else` clause, [259](ch10.xhtml#page_259), [260](ch10.xhtml#page_260)–[262](ch10.xhtml#page_262)'
  prefs: []
  type: TYPE_NORMAL
- en: ternary expressions, [262](ch10.xhtml#page_262)
  prefs: []
  type: TYPE_NORMAL
- en: ignoring errors, [277](ch10.xhtml#page_277)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: image files, displaying in JupyterLab, [153](ch06.xhtml#page_153)–[154](ch06.xhtml#page_154)
  prefs: []
  type: TYPE_NORMAL
- en: image manipulation libraries, [409](ch15.xhtml#page_409)
  prefs: []
  type: TYPE_NORMAL
- en: images, adding in notebooks, [107](ch05.xhtml#page_107)–[109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: immutability of strings, [197](ch07.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: importing
  prefs: []
  type: TYPE_NORMAL
- en: modules, [179](ch07.xhtml#page_179), [304](ch11.xhtml#page_304)–[306](ch11.xhtml#page_306)
  prefs: []
  type: TYPE_NORMAL
- en: packages, [589](ch20.xhtml#page_589)
  prefs: []
  type: TYPE_NORMAL
- en: incrementing arrays, [528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: indexes
  prefs: []
  type: TYPE_NORMAL
- en: of list items, finding, [233](ch09.xhtml#page_233)–[234](ch09.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: in series, [584](ch20.xhtml#page_584)–[585](ch20.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: indexing
  prefs: []
  type: TYPE_NORMAL
- en: arrays
  prefs: []
  type: TYPE_NORMAL
- en: Boolean indexing, [515](ch18.xhtml#page_515)–[517](ch18.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: multidimensional arrays, [511](ch18.xhtml#page_511)–[514](ch18.xhtml#page_514)
  prefs: []
  type: TYPE_NORMAL
- en: 1D arrays, [507](ch18.xhtml#page_507)–[509](ch18.xhtml#page_509)
  prefs: []
  type: TYPE_NORMAL
- en: 2D arrays, [509](ch18.xhtml#page_509)–[511](ch18.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: time series in pandas, [646](ch21.xhtml#page_646)–[647](ch21.xhtml#page_647)
  prefs: []
  type: TYPE_NORMAL
- en: '`index()` method, [233](ch09.xhtml#page_233)–[234](ch09.xhtml#page_234)'
  prefs: []
  type: TYPE_NORMAL
- en: InfoVis plotting libraries, [420](ch16.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: Altair, [429](ch16.xhtml#page_429)–[430](ch16.xhtml#page_430)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [430](ch16.xhtml#page_430)–[431](ch16.xhtml#page_431)
  prefs: []
  type: TYPE_NORMAL
- en: Datashader, [441](ch16.xhtml#page_441)–[443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViews, [436](ch16.xhtml#page_436)–[441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [421](ch16.xhtml#page_421)
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [422](ch16.xhtml#page_422)–[423](ch16.xhtml#page_423)
  prefs: []
  type: TYPE_NORMAL
- en: pandas plotting API, [428](ch16.xhtml#page_428)–[429](ch16.xhtml#page_429)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [431](ch16.xhtml#page_431)–[436](ch16.xhtml#page_436)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [424](ch16.xhtml#page_424)–[428](ch16.xhtml#page_428)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [355](ch13.xhtml#page_355)–[359](ch13.xhtml#page_359)
  prefs: []
  type: TYPE_NORMAL
- en: initialization methods, [351](ch13.xhtml#page_351)
  prefs: []
  type: TYPE_NORMAL
- en: '`__init__()` method, [351](ch13.xhtml#page_351)'
  prefs: []
  type: TYPE_NORMAL
- en: inline comments, [380](ch14.xhtml#page_380)–[381](ch14.xhtml#page_381)
  prefs: []
  type: TYPE_NORMAL
- en: in operator, [196](ch07.xhtml#page_196)
  prefs: []
  type: TYPE_NORMAL
- en: '`input()` function, [213](ch08.xhtml#page_213)–[214](ch08.xhtml#page_214)'
  prefs: []
  type: TYPE_NORMAL
- en: inserting list items, [232](ch09.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: '`insert()` method, [232](ch09.xhtml#page_232)'
  prefs: []
  type: TYPE_NORMAL
- en: insetting plots, [567](ch19.xhtml#page_567)–[568](ch19.xhtml#page_568)
  prefs: []
  type: TYPE_NORMAL
- en: insignificant variables, [212](ch08.xhtml#page_212)
  prefs: []
  type: TYPE_NORMAL
- en: inspecting modules, [306](ch11.xhtml#page_306)–[307](ch11.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: installing
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda
  prefs: []
  type: TYPE_NORMAL
- en: on Linux, [12](ch01.xhtml#page_12)–[13](ch01.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: on macOS, [11](ch01.xhtml#page_11)–[12](ch01.xhtml#page_12)
  prefs: []
  type: TYPE_NORMAL
- en: space requirements, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: on Windows, [9](ch01.xhtml#page_9)–[11](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: extensions
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [169](ch06.xhtml#page_169)–[170](ch06.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: with Extension Manager, [166](ch06.xhtml#page_166)–[169](ch06.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [113](ch05.xhtml#page_113)
  prefs: []
  type: TYPE_NORMAL
- en: ipywidgets, [115](ch05.xhtml#page_115)–[116](ch05.xhtml#page_116), [170](ch06.xhtml#page_170)–[171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, [140](ch06.xhtml#page_140)–[143](ch06.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [140](ch06.xhtml#page_140)–[142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, [94](ch05.xhtml#page_94)–[97](ch05.xhtml#page_97)
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [95](ch05.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [96](ch05.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Qt console
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [51](ch03.xhtml#page_51)–[52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [52](ch03.xhtml#page_52)–[53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: packages
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [27](ch02.xhtml#page_27)–[30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [40](ch02.xhtml#page_40)–[42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: with conda and pip, [24](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: RISE extension, [132](ch05.xhtml#page_132)–[133](ch05.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [50](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [62](ch04.xhtml#page_62)–[63](ch04.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [63](ch04.xhtml#page_63)–[64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: for conda environments and packages, [66](ch04.xhtml#page_66)–[68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: instance attributes, [351](ch13.xhtml#page_351)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods
  prefs: []
  type: TYPE_NORMAL
- en: calling, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [352](ch13.xhtml#page_352)–[353](ch13.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: instantiating objects, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355),
    [357](ch13.xhtml#page_357)–[358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: instantiation, [351](ch13.xhtml#page_351)
  prefs: []
  type: TYPE_NORMAL
- en: integers, [185](ch07.xhtml#page_185)–[186](ch07.xhtml#page_186)
  prefs: []
  type: TYPE_NORMAL
- en: converting to/from floats, [186](ch07.xhtml#page_186)–[187](ch07.xhtml#page_187)
  prefs: []
  type: TYPE_NORMAL
- en: integrated development environments (IDEs), defined, [2](part01.xhtml#page_2),
    [3](part01.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: '`interact` class, creating widgets, [116](ch05.xhtml#page_116)–[118](ch05.xhtml#page_118)'
  prefs: []
  type: TYPE_NORMAL
- en: '`interactive` class, creating widgets, [118](ch05.xhtml#page_118)–[119](ch05.xhtml#page_119)'
  prefs: []
  type: TYPE_NORMAL
- en: Interactive Python (IPython), [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: interfaces for Matplotlib, [539](ch19.xhtml#page_539)–[540](ch19.xhtml#page_540)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented, [555](ch19.xhtml#page_555)–[557](ch19.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: pyplot, [539](ch19.xhtml#page_539)–[541](ch19.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: internment, [205](ch08.xhtml#page_205)–[206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: '`interpolate()` method, [656](ch21.xhtml#page_656)–[657](ch21.xhtml#page_657)'
  prefs: []
  type: TYPE_NORMAL
- en: interpolation in pandas, [656](ch21.xhtml#page_656)–[660](ch21.xhtml#page_660)
  prefs: []
  type: TYPE_NORMAL
- en: '`intersection()` method, [243](ch09.xhtml#page_243)–[244](ch09.xhtml#page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: '`int()` function, [187](ch07.xhtml#page_187)'
  prefs: []
  type: TYPE_NORMAL
- en: introspection, defined, [4](part01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: invoking, objects, [284](ch11.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: ipyleaflet, [473](ch17.xhtml#page_473)–[476](ch17.xhtml#page_476)
  prefs: []
  type: TYPE_NORMAL
- en: IPython console (Spyder), [74](ch04.xhtml#page_74)–[77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: clearing namespace, [76](ch04.xhtml#page_76)–[77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: History pane, [77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: kernels in, [76](ch04.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: output and plotting, [75](ch04.xhtml#page_75)
  prefs: []
  type: TYPE_NORMAL
- en: IPython (Interactive Python), [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: IPython notebooks. *See* notebooks
  prefs: []
  type: TYPE_NORMAL
- en: ipywidgets, installing, [115](ch05.xhtml#page_115)–[116](ch05.xhtml#page_116),
    [170](ch06.xhtml#page_170)–[171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: irregular time series in pandas, [656](ch21.xhtml#page_656)–[660](ch21.xhtml#page_660)
  prefs: []
  type: TYPE_NORMAL
- en: '`isinstance()` function, [185](ch07.xhtml#page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: '`isnull()` method, [595](ch20.xhtml#page_595)'
  prefs: []
  type: TYPE_NORMAL
- en: '`issubset()` method, [245](ch09.xhtml#page_245)'
  prefs: []
  type: TYPE_NORMAL
- en: '`issuperset()` function, [245](ch09.xhtml#page_245)'
  prefs: []
  type: TYPE_NORMAL
- en: '`items()` method, [250](ch09.xhtml#page_250)–[251](ch09.xhtml#page_251), [339](ch12.xhtml#page_339)'
  prefs: []
  type: TYPE_NORMAL
- en: iterables, [220](ch09.xhtml#page_220)
  prefs: []
  type: TYPE_NORMAL
- en: '**J**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: joining arrays, [521](ch18.xhtml#page_521)–[522](ch18.xhtml#page_522)
  prefs: []
  type: TYPE_NORMAL
- en: '`join()` method, [228](ch09.xhtml#page_228)'
  prefs: []
  type: TYPE_NORMAL
- en: '`jointplot()` method, [604](ch20.xhtml#page_604)–[605](ch20.xhtml#page_605)'
  prefs: []
  type: TYPE_NORMAL
- en: Jovian, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: JSON (JavaScript Object Notation), [334](ch12.xhtml#page_334)
  prefs: []
  type: TYPE_NORMAL
- en: data
  prefs: []
  type: TYPE_NORMAL
- en: loading, [341](ch12.xhtml#page_341)
  prefs: []
  type: TYPE_NORMAL
- en: saving, [340](ch12.xhtml#page_340)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, saving, [341](ch12.xhtml#page_341)–[342](ch12.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: '`json.dumps()` method, [254](ch09.xhtml#page_254), [340](ch12.xhtml#page_340)'
  prefs: []
  type: TYPE_NORMAL
- en: '`json` module, [339](ch12.xhtml#page_339)–[342](ch12.xhtml#page_342)'
  prefs: []
  type: TYPE_NORMAL
- en: pickle vs., [334](ch12.xhtml#page_334)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter, [3](part01.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterDash, [446](ch16.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter-gmaps, [476](ch17.xhtml#page_476)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterHub, [2](part01.xhtml#page_2), [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, [94](ch05.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: code cells, defining, [150](ch06.xhtml#page_150)–[152](ch06.xhtml#page_152)
  prefs: []
  type: TYPE_NORMAL
- en: consoles, adding, [152](ch06.xhtml#page_152)–[153](ch06.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: extensions, [3](part01.xhtml#page_3)
  prefs: []
  type: TYPE_NORMAL
- en: creating custom, [171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: installing and managing with CLI, [169](ch06.xhtml#page_169)–[170](ch06.xhtml#page_170)
  prefs: []
  type: TYPE_NORMAL
- en: installing and managing with Extension Manager, [166](ch06.xhtml#page_166)–[169](ch06.xhtml#page_169)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [165](ch06.xhtml#page_165)–[166](ch06.xhtml#page_166)
  prefs: []
  type: TYPE_NORMAL
- en: image files, displaying, [153](ch06.xhtml#page_153)–[154](ch06.xhtml#page_154)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [140](ch06.xhtml#page_140)–[143](ch06.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [140](ch06.xhtml#page_140)–[142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: vs. Jupyter Notebook, [140](ch06.xhtml#page_140)
  prefs: []
  type: TYPE_NORMAL
- en: left sidebar, [147](ch06.xhtml#page_147)–[148](ch06.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: Markdown cells, [149](ch06.xhtml#page_149)–[150](ch06.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: menu bar, [146](ch06.xhtml#page_146)–[147](ch06.xhtml#page_147)
  prefs: []
  type: TYPE_NORMAL
- en: navigating, [145](ch06.xhtml#page_145)–[146](ch06.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: notebooks
  prefs: []
  type: TYPE_NORMAL
- en: copying cells between, [158](ch06.xhtml#page_158)–[159](ch06.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [148](ch06.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: naming, [149](ch06.xhtml#page_149)
  prefs: []
  type: TYPE_NORMAL
- en: opening multiple, [156](ch06.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: sharing, [171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: project folders, creating, [144](ch06.xhtml#page_144)–[145](ch06.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [139](ch06.xhtml#page_139)
  prefs: []
  type: TYPE_NORMAL
- en: simulations, exploring, [154](ch06.xhtml#page_154)–[155](ch06.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: single document mode, [160](ch06.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: synchronized views, creating, [158](ch06.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: text editor
  prefs: []
  type: TYPE_NORMAL
- en: documentation with, [164](ch06.xhtml#page_164)–[165](ch06.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: running scripts in notebooks, [163](ch06.xhtml#page_163)–[164](ch06.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: running scripts in terminal, [162](ch06.xhtml#page_162)–[163](ch06.xhtml#page_163)
  prefs: []
  type: TYPE_NORMAL
- en: writing scripts, [161](ch06.xhtml#page_161)–[162](ch06.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: widgets, [170](ch06.xhtml#page_170)–[171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: workspace
  prefs: []
  type: TYPE_NORMAL
- en: clearing, [157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: closing, [157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: saving, [156](ch06.xhtml#page_156)–[157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook. *See also* notebooks
  prefs: []
  type: TYPE_NORMAL
- en: command palette, [112](ch05.xhtml#page_112)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: extensions, [113](ch05.xhtml#page_113)–[115](ch05.xhtml#page_115)
  prefs: []
  type: TYPE_NORMAL
- en: Help menu, [109](ch05.xhtml#page_109)–[110](ch05.xhtml#page_110)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [94](ch05.xhtml#page_94)–[97](ch05.xhtml#page_97)
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [95](ch05.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [96](ch05.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: vs. JupyterLab, [140](ch06.xhtml#page_140)
  prefs: []
  type: TYPE_NORMAL
- en: keyboard shortcuts, [110](ch05.xhtml#page_110)–[112](ch05.xhtml#page_112)
  prefs: []
  type: TYPE_NORMAL
- en: navigating, [100](ch05.xhtml#page_100)–[101](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: Palmer Penguins project setup, [587](ch20.xhtml#page_587)–[588](ch20.xhtml#page_588)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [93](ch05.xhtml#page_93)–[94](ch05.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: widgets, [115](ch05.xhtml#page_115)
  prefs: []
  type: TYPE_NORMAL
- en: creating manually, [119](ch05.xhtml#page_119)–[120](ch05.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: creating with `interact` class, [116](ch05.xhtml#page_116)–[118](ch05.xhtml#page_118)
  prefs: []
  type: TYPE_NORMAL
- en: creating with `interactive` class, [118](ch05.xhtml#page_118)–[119](ch05.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: customizing, [121](ch05.xhtml#page_121)–[122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: embedding, [122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: handling events, [120](ch05.xhtml#page_120)–[121](ch05.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: installing ipywidgets, [115](ch05.xhtml#page_115)–[116](ch05.xhtml#page_116)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook Viewer, sharing notebooks, [128](ch05.xhtml#page_128)–[129](ch05.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Qt console
  prefs: []
  type: TYPE_NORMAL
- en: defined, [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: installing and launching
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [51](ch03.xhtml#page_51)–[52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [52](ch03.xhtml#page_52)–[53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: as interactive, [53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: keyboard shortcuts, [54](ch03.xhtml#page_54)–[55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: multiline editing, [58](ch03.xhtml#page_58)–[59](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: printing and saving, [56](ch03.xhtml#page_56)–[58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [49](ch03.xhtml#page_49)
  prefs: []
  type: TYPE_NORMAL
- en: syntax highlighting, [53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: syntax styles, choosing, [53](ch03.xhtml#page_53)–[54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: tab and kernel options, [55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: '**K**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: KeplerGL, [479](ch17.xhtml#page_479)–[481](ch17.xhtml#page_481)
  prefs: []
  type: TYPE_NORMAL
- en: Keras, [407](ch15.xhtml#page_407)–[418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: kernel density estimation (KDE), [604](ch20.xhtml#page_604)
  prefs: []
  type: TYPE_NORMAL
- en: Kernel menu (Jupyter Notebook), checking and running notebooks, [123](ch05.xhtml#page_123)
  prefs: []
  type: TYPE_NORMAL
- en: kernels
  prefs: []
  type: TYPE_NORMAL
- en: defined, [4](part01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: in IPython console (Spyder), [76](ch04.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Qt console, [55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: restarting, [310](ch11.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: keyboard shortcuts
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [110](ch05.xhtml#page_110)–[112](ch05.xhtml#page_112)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Qt console, [54](ch03.xhtml#page_54)–[55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: '`keys()` method, [250](ch09.xhtml#page_250)–[251](ch09.xhtml#page_251), [338](ch12.xhtml#page_338)'
  prefs: []
  type: TYPE_NORMAL
- en: key-value pairs
  prefs: []
  type: TYPE_NORMAL
- en: adding, [251](ch09.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: creating default, [252](ch09.xhtml#page_252)–[253](ch09.xhtml#page_253)
  prefs: []
  type: TYPE_NORMAL
- en: removing, [252](ch09.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: retrieving, [251](ch09.xhtml#page_251)
  prefs: []
  type: TYPE_NORMAL
- en: keyword arguments, [286](ch11.xhtml#page_286)–[287](ch11.xhtml#page_287)
  prefs: []
  type: TYPE_NORMAL
- en: '*k*-NN (*k*-Nearest Neighbor), [609](ch20.xhtml#page_609)–[622](ch20.xhtml#page_622)'
  prefs: []
  type: TYPE_NORMAL
- en: converting categorical data to numerical data, [610](ch20.xhtml#page_610)–[612](ch20.xhtml#page_612)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing data, [613](ch20.xhtml#page_613)–[615](ch20.xhtml#page_615)
  prefs: []
  type: TYPE_NORMAL
- en: optimizing
  prefs: []
  type: TYPE_NORMAL
- en: with cross-validation, [616](ch20.xhtml#page_616)–[620](ch20.xhtml#page_620)
  prefs: []
  type: TYPE_NORMAL
- en: with GridSearchCV class, [620](ch20.xhtml#page_620)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: prediction accuracy, [615](ch20.xhtml#page_615)–[616](ch20.xhtml#page_616)
  prefs: []
  type: TYPE_NORMAL
- en: running, [615](ch20.xhtml#page_615)–[616](ch20.xhtml#page_616)
  prefs: []
  type: TYPE_NORMAL
- en: training dataset, [612](ch20.xhtml#page_612)–[613](ch20.xhtml#page_613)
  prefs: []
  type: TYPE_NORMAL
- en: '**L**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: lambda functions, [299](ch11.xhtml#page_299)–[300](ch11.xhtml#page_300)
  prefs: []
  type: TYPE_NORMAL
- en: launching
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda Navigator, [13](ch01.xhtml#page_13), [25](ch02.xhtml#page_25)
  prefs: []
  type: TYPE_NORMAL
- en: CLI, [34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [140](ch06.xhtml#page_140)–[142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [95](ch05.xhtml#page_95)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [96](ch05.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Qt console
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [51](ch03.xhtml#page_51)–[52](ch03.xhtml#page_52)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [52](ch03.xhtml#page_52)–[53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [62](ch04.xhtml#page_62)–[63](ch04.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [63](ch04.xhtml#page_63)–[64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: from Start menu, [64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: lazy evaluation, [300](ch11.xhtml#page_300)
  prefs: []
  type: TYPE_NORMAL
- en: Learning tab (Anaconda Navigator), [17](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: left sidebar (JupyterLab), [147](ch06.xhtml#page_147)–[148](ch06.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: '`len()` function, [223](ch09.xhtml#page_223)–[224](ch09.xhtml#page_224)'
  prefs: []
  type: TYPE_NORMAL
- en: length of tuples, [223](ch09.xhtml#page_223)–[224](ch09.xhtml#page_224)
  prefs: []
  type: TYPE_NORMAL
- en: libraries
  prefs: []
  type: TYPE_NORMAL
- en: Beautiful Soup, [414](ch15.xhtml#page_414)
  prefs: []
  type: TYPE_NORMAL
- en: for computer vision (image manipulation), [409](ch15.xhtml#page_409)
  prefs: []
  type: TYPE_NORMAL
- en: dashboards
  prefs: []
  type: TYPE_NORMAL
- en: Dash, [446](ch16.xhtml#page_446)–[447](ch16.xhtml#page_447)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [446](ch16.xhtml#page_446)
  prefs: []
  type: TYPE_NORMAL
- en: Panel, [449](ch16.xhtml#page_449)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit, [447](ch16.xhtml#page_447)–[448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: Voilà, [448](ch16.xhtml#page_448)–[449](ch16.xhtml#page_449)
  prefs: []
  type: TYPE_NORMAL
- en: Dask, [416](ch15.xhtml#page_416)–[418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: deep learning frameworks, [406](ch15.xhtml#page_406)–[407](ch15.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [8](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial libraries
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: Cartopy, [464](ch17.xhtml#page_464)–[465](ch17.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [484](ch17.xhtml#page_484)–[487](ch17.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: folium, [470](ch17.xhtml#page_470)–[473](ch17.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas, [460](ch17.xhtml#page_460)–[464](ch17.xhtml#page_464)
  prefs: []
  type: TYPE_NORMAL
- en: Geoplot, [465](ch17.xhtml#page_465)–[467](ch17.xhtml#page_467)
  prefs: []
  type: TYPE_NORMAL
- en: GeoViews, [476](ch17.xhtml#page_476)–[479](ch17.xhtml#page_479)
  prefs: []
  type: TYPE_NORMAL
- en: ipyleaflet, [473](ch17.xhtml#page_473)–[476](ch17.xhtml#page_476)
  prefs: []
  type: TYPE_NORMAL
- en: KeplerGL, [479](ch17.xhtml#page_479)–[481](ch17.xhtml#page_481)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [459](ch17.xhtml#page_459)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [467](ch17.xhtml#page_467)–[469](ch17.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [458](ch17.xhtml#page_458)
  prefs: []
  type: TYPE_NORMAL
- en: pydeck, [481](ch17.xhtml#page_481)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: helper libraries, [413](ch15.xhtml#page_413)–[418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: Keras, [407](ch15.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [400](ch15.xhtml#page_400)
  prefs: []
  type: TYPE_NORMAL
- en: for machine learning, [404](ch15.xhtml#page_404)–[406](ch15.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: for natural language processing, [411](ch15.xhtml#page_411)–[412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: NLTK, [411](ch15.xhtml#page_411)–[412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: NumPy, [401](ch15.xhtml#page_401)–[418](ch15.xhtml#page_418)
  prefs: []
  type: TYPE_NORMAL
- en: OpenCV, [409](ch15.xhtml#page_409)–[410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: pandas, [403](ch15.xhtml#page_403)–[404](ch15.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: Pillow, [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: plotting libraries, [419](ch16.xhtml#page_419)–[420](ch16.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: Altair, [429](ch16.xhtml#page_429)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [430](ch16.xhtml#page_430)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [450](ch16.xhtml#page_450)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Datashader, [441](ch16.xhtml#page_441)–[443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViews, [436](ch16.xhtml#page_436)–[441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [422](ch16.xhtml#page_422)–[456](ch16.xhtml#page_456), [537](ch19.xhtml#page_537)–[538](ch19.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: Mayavi, [443](ch16.xhtml#page_443)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: pandas plotting API, [428](ch16.xhtml#page_428)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [431](ch16.xhtml#page_431)–[436](ch16.xhtml#page_436)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [424](ch16.xhtml#page_424)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: PyTorch, [408](ch15.xhtml#page_408)
  prefs: []
  type: TYPE_NORMAL
- en: for regular expressions, [415](ch15.xhtml#page_415)–[416](ch15.xhtml#page_416)
  prefs: []
  type: TYPE_NORMAL
- en: requests, [413](ch15.xhtml#page_413)–[414](ch15.xhtml#page_414)
  prefs: []
  type: TYPE_NORMAL
- en: scikit-image, [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: scikit-learn, [404](ch15.xhtml#page_404)–[407](ch15.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: SciPy, [401](ch15.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: spaCy, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: statsmodels, [406](ch15.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: SymPy, [402](ch15.xhtml#page_402)–[403](ch15.xhtml#page_403)
  prefs: []
  type: TYPE_NORMAL
- en: TensorFlow, [407](ch15.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: line continuation character (`\`), [189](ch07.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: '`lineplot()` method, [619](ch20.xhtml#page_619)'
  prefs: []
  type: TYPE_NORMAL
- en: '`linspace()` function, [501](ch18.xhtml#page_501)–[502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: Linux, Anaconda installation, [12](ch01.xhtml#page_12)–[13](ch01.xhtml#page_13)
  prefs: []
  type: TYPE_NORMAL
- en: list comprehensions, [272](ch10.xhtml#page_272)–[273](ch10.xhtml#page_273)
  prefs: []
  type: TYPE_NORMAL
- en: '`list()` function, [230](ch09.xhtml#page_230), [251](ch09.xhtml#page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: lists, [229](ch09.xhtml#page_229)–[238](ch09.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: adding items to, [231](ch09.xhtml#page_231)–[232](ch09.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: changing item values, [233](ch09.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: checking for membership, [237](ch09.xhtml#page_237)–[238](ch09.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: converting data types to, [230](ch09.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: copying, [235](ch09.xhtml#page_235)–[237](ch09.xhtml#page_237)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [230](ch09.xhtml#page_230)
  prefs: []
  type: TYPE_NORMAL
- en: finding index of items, [233](ch09.xhtml#page_233)–[234](ch09.xhtml#page_234)
  prefs: []
  type: TYPE_NORMAL
- en: functions and methods for, [230](ch09.xhtml#page_230)–[231](ch09.xhtml#page_231)
  prefs: []
  type: TYPE_NORMAL
- en: inserting items, [232](ch09.xhtml#page_232)
  prefs: []
  type: TYPE_NORMAL
- en: removing items, [232](ch09.xhtml#page_232)–[233](ch09.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: sorting, [234](ch09.xhtml#page_234)–[235](ch09.xhtml#page_235)
  prefs: []
  type: TYPE_NORMAL
- en: '`load_dataset()` method, [590](ch20.xhtml#page_590)'
  prefs: []
  type: TYPE_NORMAL
- en: '`load()` function, [534](ch18.xhtml#page_534)'
  prefs: []
  type: TYPE_NORMAL
- en: loading
  prefs: []
  type: TYPE_NORMAL
- en: data in JSON format, [341](ch12.xhtml#page_341)
  prefs: []
  type: TYPE_NORMAL
- en: datasets, [589](ch20.xhtml#page_589)–[590](ch20.xhtml#page_590)
  prefs: []
  type: TYPE_NORMAL
- en: '`localize()` method, [634](ch21.xhtml#page_634)'
  prefs: []
  type: TYPE_NORMAL
- en: local scope, [293](ch11.xhtml#page_293)–[294](ch11.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: '`logging.disable()` function, [280](ch10.xhtml#page_280)'
  prefs: []
  type: TYPE_NORMAL
- en: logging levels, [279](ch10.xhtml#page_279)
  prefs: []
  type: TYPE_NORMAL
- en: '`logging` module, [278](ch10.xhtml#page_278)–[281](ch10.xhtml#page_281)'
  prefs: []
  type: TYPE_NORMAL
- en: loop control statements, [269](ch10.xhtml#page_269)–[271](ch10.xhtml#page_271)
  prefs: []
  type: TYPE_NORMAL
- en: loops, [264](ch10.xhtml#page_264)–[274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: animating plots, [569](ch19.xhtml#page_569)–[571](ch19.xhtml#page_571)
  prefs: []
  type: TYPE_NORMAL
- en: '`break` statement, [270](ch10.xhtml#page_270)'
  prefs: []
  type: TYPE_NORMAL
- en: '`continue` statement, [270](ch10.xhtml#page_270)'
  prefs: []
  type: TYPE_NORMAL
- en: '`for` statement, [267](ch10.xhtml#page_267)–[269](ch10.xhtml#page_269)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pass` statement, [271](ch10.xhtml#page_271)'
  prefs: []
  type: TYPE_NORMAL
- en: replacing with comprehensions, [271](ch10.xhtml#page_271)–[274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: '`while` statement, [265](ch10.xhtml#page_265)–[267](ch10.xhtml#page_267)'
  prefs: []
  type: TYPE_NORMAL
- en: '**M**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: machine learning, [404](ch15.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: with *k*-NN, [609](ch20.xhtml#page_609)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: libraries, [404](ch15.xhtml#page_404)–[406](ch15.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: macOS, Anaconda installation, [11](ch01.xhtml#page_11)–[12](ch01.xhtml#page_12)
  prefs: []
  type: TYPE_NORMAL
- en: magic commands
  prefs: []
  type: TYPE_NORMAL
- en: defined, [57](ch03.xhtml#page_57)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: magic methods, [351](ch13.xhtml#page_351), [365](ch13.xhtml#page_365)
  prefs: []
  type: TYPE_NORMAL
- en: '`main()` function, [295](ch11.xhtml#page_295)–[297](ch11.xhtml#page_297)'
  prefs: []
  type: TYPE_NORMAL
- en: '`make_column_transformer()` method, [614](ch20.xhtml#page_614)'
  prefs: []
  type: TYPE_NORMAL
- en: '`maketrans()` method, [199](ch07.xhtml#page_199)'
  prefs: []
  type: TYPE_NORMAL
- en: manually creating widgets, [119](ch05.xhtml#page_119)–[120](ch05.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: maps. *See* geospatial libraries
  prefs: []
  type: TYPE_NORMAL
- en: Markdown cells
  prefs: []
  type: TYPE_NORMAL
- en: adding images in, [107](ch05.xhtml#page_107)–[109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: adding text with, [102](ch05.xhtml#page_102)–[104](ch05.xhtml#page_104)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [149](ch06.xhtml#page_149)–[150](ch06.xhtml#page_150)
  prefs: []
  type: TYPE_NORMAL
- en: markers, [470](ch17.xhtml#page_470)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical expressions
  prefs: []
  type: TYPE_NORMAL
- en: assignment operator, [177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: augmented assignment operators, [178](ch07.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical operators, [176](ch07.xhtml#page_176)–[177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: '`math` module, [179](ch07.xhtml#page_179)–[181](ch07.xhtml#page_181)'
  prefs: []
  type: TYPE_NORMAL
- en: precedence, [178](ch07.xhtml#page_178)–[179](ch07.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: '`math` module, [179](ch07.xhtml#page_179)–[181](ch07.xhtml#page_181)'
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [422](ch16.xhtml#page_422)–[456](ch16.xhtml#page_456), [537](ch19.xhtml#page_537)–[538](ch19.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: with `datetime` module, [632](ch21.xhtml#page_632)–[633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: interfaces for, [539](ch19.xhtml#page_539)–[540](ch19.xhtml#page_540)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented, [555](ch19.xhtml#page_555)–[557](ch19.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: pyplot, [539](ch19.xhtml#page_539)–[541](ch19.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: multipanel displays, creating with GridSpec class, [549](ch19.xhtml#page_549)–[555](ch19.xhtml#page_555),
    [564](ch19.xhtml#page_564)–[567](ch19.xhtml#page_567)
  prefs: []
  type: TYPE_NORMAL
- en: plots
  prefs: []
  type: TYPE_NORMAL
- en: 3D plots, [568](ch19.xhtml#page_568)–[569](ch19.xhtml#page_569)
  prefs: []
  type: TYPE_NORMAL
- en: animating, [569](ch19.xhtml#page_569)–[573](ch19.xhtml#page_573)
  prefs: []
  type: TYPE_NORMAL
- en: creating with object-oriented approach, [557](ch19.xhtml#page_557)–[561](ch19.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: creating with pyplot, [542](ch19.xhtml#page_542)–[545](ch19.xhtml#page_545)
  prefs: []
  type: TYPE_NORMAL
- en: insetting, [567](ch19.xhtml#page_567)–[568](ch19.xhtml#page_568)
  prefs: []
  type: TYPE_NORMAL
- en: styling, [573](ch19.xhtml#page_573)–[580](ch19.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: subplots, [545](ch19.xhtml#page_545)–[549](ch19.xhtml#page_549), [561](ch19.xhtml#page_561)–[564](ch19.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: terminology for, [538](ch19.xhtml#page_538)–[539](ch19.xhtml#page_539)
  prefs: []
  type: TYPE_NORMAL
- en: matrix, [493](ch18.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: matrix dot product, [527](ch18.xhtml#page_527)–[528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: '`max()` function, [224](ch09.xhtml#page_224)–[225](ch09.xhtml#page_225)'
  prefs: []
  type: TYPE_NORMAL
- en: maximum values of tuples, [224](ch09.xhtml#page_224)–[225](ch09.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: '`max()` method, [653](ch21.xhtml#page_653)'
  prefs: []
  type: TYPE_NORMAL
- en: Mayavi, [443](ch16.xhtml#page_443)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: '`mean()` function, [531](ch18.xhtml#page_531)'
  prefs: []
  type: TYPE_NORMAL
- en: '`melt()` method, [619](ch20.xhtml#page_619)'
  prefs: []
  type: TYPE_NORMAL
- en: membership operators, [196](ch07.xhtml#page_196)
  prefs: []
  type: TYPE_NORMAL
- en: memory allocation in NumPy, [496](ch18.xhtml#page_496)
  prefs: []
  type: TYPE_NORMAL
- en: menu bar (JupyterLab), [146](ch06.xhtml#page_146)–[147](ch06.xhtml#page_147)
  prefs: []
  type: TYPE_NORMAL
- en: '`meshgrid()` function, [502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: '`meshgrid()` method, [552](ch19.xhtml#page_552)'
  prefs: []
  type: TYPE_NORMAL
- en: Method Resolution Order, [358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: methods, [347](ch13.xhtml#page_347). *See also* functions
  prefs: []
  type: TYPE_NORMAL
- en: for dictionaries, [249](ch09.xhtml#page_249)–[250](ch09.xhtml#page_250)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings for, [387](ch14.xhtml#page_387)–[388](ch14.xhtml#page_388)
  prefs: []
  type: TYPE_NORMAL
- en: for file objects, [326](ch12.xhtml#page_326)
  prefs: []
  type: TYPE_NORMAL
- en: initialization, [351](ch13.xhtml#page_351)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods, [352](ch13.xhtml#page_352)–[355](ch13.xhtml#page_355), [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: for lists, [230](ch09.xhtml#page_230)–[231](ch09.xhtml#page_231)
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented
  prefs: []
  type: TYPE_NORMAL
- en: for `Axes` objects, [560](ch19.xhtml#page_560)–[561](ch19.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: creating plots, [559](ch19.xhtml#page_559)
  prefs: []
  type: TYPE_NORMAL
- en: for `Figure` objects, [559](ch19.xhtml#page_559)–[560](ch19.xhtml#page_560)
  prefs: []
  type: TYPE_NORMAL
- en: in `os` module, [317](ch12.xhtml#page_317)
  prefs: []
  type: TYPE_NORMAL
- en: in pandas
  prefs: []
  type: TYPE_NORMAL
- en: aggregation methods, [650](ch21.xhtml#page_650)
  prefs: []
  type: TYPE_NORMAL
- en: handling missing values, [594](ch20.xhtml#page_594)
  prefs: []
  type: TYPE_NORMAL
- en: I/O methods, [590](ch20.xhtml#page_590)
  prefs: []
  type: TYPE_NORMAL
- en: in `pathlib` module, [321](ch12.xhtml#page_321), [332](ch12.xhtml#page_332)
  prefs: []
  type: TYPE_NORMAL
- en: in pyplot
  prefs: []
  type: TYPE_NORMAL
- en: creating plots, [543](ch19.xhtml#page_543)
  prefs: []
  type: TYPE_NORMAL
- en: manipulating plots, [544](ch19.xhtml#page_544)
  prefs: []
  type: TYPE_NORMAL
- en: in seaborn
  prefs: []
  type: TYPE_NORMAL
- en: '`boxplot()`, [603](ch20.xhtml#page_603)–[604](ch20.xhtml#page_604)'
  prefs: []
  type: TYPE_NORMAL
- en: '`countplot()`, [597](ch20.xhtml#page_597)–[601](ch20.xhtml#page_601)'
  prefs: []
  type: TYPE_NORMAL
- en: '`jointplot()`, [604](ch20.xhtml#page_604)–[605](ch20.xhtml#page_605)'
  prefs: []
  type: TYPE_NORMAL
- en: list of, [598](ch20.xhtml#page_598)
  prefs: []
  type: TYPE_NORMAL
- en: '`pairplot()`, [601](ch20.xhtml#page_601)–[602](ch20.xhtml#page_602)'
  prefs: []
  type: TYPE_NORMAL
- en: '`scatterplot()`, [602](ch20.xhtml#page_602)–[603](ch20.xhtml#page_603)'
  prefs: []
  type: TYPE_NORMAL
- en: '`stripplot()`, [603](ch20.xhtml#page_603)–[604](ch20.xhtml#page_604)'
  prefs: []
  type: TYPE_NORMAL
- en: for sets, [241](ch09.xhtml#page_241)–[242](ch09.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: in `shelve` module, [338](ch12.xhtml#page_338)–[339](ch12.xhtml#page_339)
  prefs: []
  type: TYPE_NORMAL
- en: in `shutil` module, [323](ch12.xhtml#page_323)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [196](ch07.xhtml#page_196)–[200](ch07.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: for tuples, [222](ch09.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: '`mgrid()` function, [502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Azure Notebooks, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: '`min()` function, [224](ch09.xhtml#page_224)–[225](ch09.xhtml#page_225)'
  prefs: []
  type: TYPE_NORMAL
- en: Miniconda, [9](ch01.xhtml#page_9)
  prefs: []
  type: TYPE_NORMAL
- en: minimum values of tuples, [224](ch09.xhtml#page_224)–[225](ch09.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: '`MinMaxScaler()` method, [614](ch20.xhtml#page_614)'
  prefs: []
  type: TYPE_NORMAL
- en: missing values in datasets, [592](ch20.xhtml#page_592)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: Modin, [404](ch15.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: modular approach for installation
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, [142](ch06.xhtml#page_142)–[143](ch06.xhtml#page_143)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, [96](ch05.xhtml#page_96)–[97](ch05.xhtml#page_97)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, [66](ch04.xhtml#page_66)–[68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: modules, [283](ch11.xhtml#page_283)
  prefs: []
  type: TYPE_NORMAL
- en: built-in, [311](ch11.xhtml#page_311)–[313](ch11.xhtml#page_313)
  prefs: []
  type: TYPE_NORMAL
- en: class modules, creating, [373](ch13.xhtml#page_373)–[375](ch13.xhtml#page_375)
  prefs: []
  type: TYPE_NORMAL
- en: '`copy`, [237](ch09.xhtml#page_237)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dataclass`, [361](ch13.xhtml#page_361)–[362](ch13.xhtml#page_362)'
  prefs: []
  type: TYPE_NORMAL
- en: '`datetime`, [626](ch21.xhtml#page_626)–[636](ch21.xhtml#page_636)'
  prefs: []
  type: TYPE_NORMAL
- en: '`dbm`, [336](ch12.xhtml#page_336)'
  prefs: []
  type: TYPE_NORMAL
- en: '`decimal`, [186](ch07.xhtml#page_186)'
  prefs: []
  type: TYPE_NORMAL
- en: defined, [8](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings for, [384](ch14.xhtml#page_384)–[386](ch14.xhtml#page_386)
  prefs: []
  type: TYPE_NORMAL
- en: '`doctest`, [388](ch14.xhtml#page_388)–[391](ch14.xhtml#page_391)'
  prefs: []
  type: TYPE_NORMAL
- en: importing, [179](ch07.xhtml#page_179), [304](ch11.xhtml#page_304)–[306](ch11.xhtml#page_306)
  prefs: []
  type: TYPE_NORMAL
- en: inspecting, [306](ch11.xhtml#page_306)–[307](ch11.xhtml#page_307)
  prefs: []
  type: TYPE_NORMAL
- en: '`json`, [334](ch12.xhtml#page_334), [339](ch12.xhtml#page_339)–[342](ch12.xhtml#page_342)'
  prefs: []
  type: TYPE_NORMAL
- en: '`logging`, [278](ch10.xhtml#page_278)–[281](ch10.xhtml#page_281)'
  prefs: []
  type: TYPE_NORMAL
- en: '`math`, [179](ch07.xhtml#page_179)–[181](ch07.xhtml#page_181)'
  prefs: []
  type: TYPE_NORMAL
- en: naming, [310](ch11.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: '`os`, [317](ch12.xhtml#page_317)–[319](ch12.xhtml#page_319)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pathlib`, [320](ch12.xhtml#page_320)–[322](ch12.xhtml#page_322), [332](ch12.xhtml#page_332)–[333](ch12.xhtml#page_333)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pickle`, [334](ch12.xhtml#page_334)–[336](ch12.xhtml#page_336)'
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [303](ch11.xhtml#page_303)–[304](ch11.xhtml#page_304)
  prefs: []
  type: TYPE_NORMAL
- en: '`re`, [415](ch15.xhtml#page_415)–[416](ch15.xhtml#page_416)'
  prefs: []
  type: TYPE_NORMAL
- en: '`shelve`, [336](ch12.xhtml#page_336)–[339](ch12.xhtml#page_339)'
  prefs: []
  type: TYPE_NORMAL
- en: '`shutil`, [322](ch12.xhtml#page_322)–[324](ch12.xhtml#page_324)'
  prefs: []
  type: TYPE_NORMAL
- en: stand-alone mode, [310](ch11.xhtml#page_310)–[311](ch11.xhtml#page_311)
  prefs: []
  type: TYPE_NORMAL
- en: '`string`, [199](ch07.xhtml#page_199)'
  prefs: []
  type: TYPE_NORMAL
- en: writing, [307](ch11.xhtml#page_307)–[310](ch11.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: modulo operator (`%`), [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: moving averages, [660](ch21.xhtml#page_660)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: MRO (Method Resolution Order), [358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: multidimensional arrays, [493](ch18.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: indexing and slicing, [511](ch18.xhtml#page_511)–[514](ch18.xhtml#page_514)
  prefs: []
  type: TYPE_NORMAL
- en: multiline comments, [380](ch14.xhtml#page_380)
  prefs: []
  type: TYPE_NORMAL
- en: multiline editing in Jupyter Qt console, [58](ch03.xhtml#page_58)–[59](ch03.xhtml#page_59)
  prefs: []
  type: TYPE_NORMAL
- en: multipanel displays, creating with GridSpec class, [549](ch19.xhtml#page_549)–[555](ch19.xhtml#page_555),
    [564](ch19.xhtml#page_564)–[567](ch19.xhtml#page_567)
  prefs: []
  type: TYPE_NORMAL
- en: multiple inheritance, [358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: multiple notebooks, opening in JupyterLab, [156](ch06.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: mutability, [220](ch09.xhtml#page_220)
  prefs: []
  type: TYPE_NORMAL
- en: hashability and, [240](ch09.xhtml#page_240)
  prefs: []
  type: TYPE_NORMAL
- en: tuples and, [227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: '**N**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: naive approach for installation
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, [140](ch06.xhtml#page_140)–[142](ch06.xhtml#page_142)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, [94](ch05.xhtml#page_94)–[96](ch05.xhtml#page_96)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, [66](ch04.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: naive objects in `datetime` module, [633](ch21.xhtml#page_633)–[636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: namespaces
  prefs: []
  type: TYPE_NORMAL
- en: clearing in IPython console (Spyder), [76](ch04.xhtml#page_76)–[77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: in functions, [293](ch11.xhtml#page_293)–[294](ch11.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: naming
  prefs: []
  type: TYPE_NORMAL
- en: directory paths, [316](ch12.xhtml#page_316)
  prefs: []
  type: TYPE_NORMAL
- en: functions, [290](ch11.xhtml#page_290)
  prefs: []
  type: TYPE_NORMAL
- en: modules, [310](ch11.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: notebooks
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [149](ch06.xhtml#page_149)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [101](ch05.xhtml#page_101)–[102](ch05.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: variables, [206](ch08.xhtml#page_206)–[213](ch08.xhtml#page_213)
  prefs: []
  type: TYPE_NORMAL
- en: natural language processing, [411](ch15.xhtml#page_411)–[412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: Natural Language Tool Kit, [411](ch15.xhtml#page_411)–[412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: navigating
  prefs: []
  type: TYPE_NORMAL
- en: JupyterLab, [145](ch06.xhtml#page_145)–[146](ch06.xhtml#page_146)
  prefs: []
  type: TYPE_NORMAL
- en: Jupyter Notebook, [100](ch05.xhtml#page_100)–[101](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: Navigator. *See* Anaconda Navigator
  prefs: []
  type: TYPE_NORMAL
- en: nbextensions. *See* extensions
  prefs: []
  type: TYPE_NORMAL
- en: nbviewer, sharing notebooks, [128](ch05.xhtml#page_128)–[129](ch05.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: '`ndarray` class, [494](ch18.xhtml#page_494). *See also* arrays'
  prefs: []
  type: TYPE_NORMAL
- en: nested code blocks, [260](ch10.xhtml#page_260)
  prefs: []
  type: TYPE_NORMAL
- en: NLP (natural language processing), [411](ch15.xhtml#page_411)–[412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: NLTK (Natural Language Tool Kit), [411](ch15.xhtml#page_411)–[412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing
  prefs: []
  type: TYPE_NORMAL
- en: pathnames, [319](ch12.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: data with scikit-learn, [613](ch20.xhtml#page_613)–[615](ch20.xhtml#page_615)
  prefs: []
  type: TYPE_NORMAL
- en: notebooks. *See also* Jupyter Notebook
  prefs: []
  type: TYPE_NORMAL
- en: closing, [109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: code cells, defining, [104](ch05.xhtml#page_104)–[106](ch05.xhtml#page_106)
  prefs: []
  type: TYPE_NORMAL
- en: consoles, adding, [152](ch06.xhtml#page_152)–[153](ch06.xhtml#page_153)
  prefs: []
  type: TYPE_NORMAL
- en: copying cells between in JupyterLab, [158](ch06.xhtml#page_158)–[159](ch06.xhtml#page_159)
  prefs: []
  type: TYPE_NORMAL
- en: creating
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [100](ch05.xhtml#page_100)–[101](ch05.xhtml#page_101)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [148](ch06.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: images, adding, [107](ch05.xhtml#page_107)–[109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: Markdown cells
  prefs: []
  type: TYPE_NORMAL
- en: adding images, [107](ch05.xhtml#page_107)–[109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: adding text, [102](ch05.xhtml#page_102)–[104](ch05.xhtml#page_104)
  prefs: []
  type: TYPE_NORMAL
- en: naming
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [149](ch06.xhtml#page_149)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [101](ch05.xhtml#page_101)–[102](ch05.xhtml#page_102)
  prefs: []
  type: TYPE_NORMAL
- en: opening multiple in JupyterLab, [156](ch06.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: output cells, [106](ch05.xhtml#page_106)–[107](ch05.xhtml#page_107)
  prefs: []
  type: TYPE_NORMAL
- en: project folders, creating, [98](ch05.xhtml#page_98)–[100](ch05.xhtml#page_100),
    [144](ch06.xhtml#page_144)–[145](ch06.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [93](ch05.xhtml#page_93)–[94](ch05.xhtml#page_94)
  prefs: []
  type: TYPE_NORMAL
- en: running scripts in, [163](ch06.xhtml#page_163)–[164](ch06.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: saving, [109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: sharing, [122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: via Binder, [129](ch05.xhtml#page_129)–[130](ch05.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: checking and running from Kernel menu, [123](ch05.xhtml#page_123)
  prefs: []
  type: TYPE_NORMAL
- en: with Colab, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: downloading, [123](ch05.xhtml#page_123)–[125](ch05.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: via GitHub and Gist, [125](ch05.xhtml#page_125)–[128](ch05.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: with Jovian, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: with JupyterHub, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: via Jupyter Notebook Viewer, [128](ch05.xhtml#page_128)–[129](ch05.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: with Microsoft Azure Notebooks, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: trusting, [131](ch05.xhtml#page_131)–[132](ch05.xhtml#page_132)
  prefs: []
  type: TYPE_NORMAL
- en: as slideshows
  prefs: []
  type: TYPE_NORMAL
- en: creating, [133](ch05.xhtml#page_133)–[136](ch05.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: installing RISE extension, [132](ch05.xhtml#page_132)–[133](ch05.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: speaker notes, [136](ch05.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: synchronized views, creating, [158](ch06.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: text, adding, [102](ch05.xhtml#page_102)–[104](ch05.xhtml#page_104)
  prefs: []
  type: TYPE_NORMAL
- en: '`not in` operator, [196](ch07.xhtml#page_196)'
  prefs: []
  type: TYPE_NORMAL
- en: '`now()` method, [626](ch21.xhtml#page_626)–[627](ch21.xhtml#page_627)'
  prefs: []
  type: TYPE_NORMAL
- en: '`np.eye()` function, [503](ch18.xhtml#page_503)'
  prefs: []
  type: TYPE_NORMAL
- en: '`np.savez()` function, [534](ch18.xhtml#page_534)'
  prefs: []
  type: TYPE_NORMAL
- en: Numba, [441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: numerical data, converting categorical data to, [610](ch20.xhtml#page_610)–[612](ch20.xhtml#page_612)
  prefs: []
  type: TYPE_NORMAL
- en: NumPy (Numerical Python), [401](ch15.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: arrays
  prefs: []
  type: TYPE_NORMAL
- en: accessing attributes, [504](ch18.xhtml#page_504)–[506](ch18.xhtml#page_506)
  prefs: []
  type: TYPE_NORMAL
- en: broadcasting, [526](ch18.xhtml#page_526)–[527](ch18.xhtml#page_527)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [494](ch18.xhtml#page_494)–[504](ch18.xhtml#page_504)
  prefs: []
  type: TYPE_NORMAL
- en: describing with dimension and shape, [492](ch18.xhtml#page_492)–[494](ch18.xhtml#page_494)
  prefs: []
  type: TYPE_NORMAL
- en: flattening, [519](ch18.xhtml#page_519)–[520](ch18.xhtml#page_520)
  prefs: []
  type: TYPE_NORMAL
- en: incrementing and decrementing, [528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: indexing and slicing, [506](ch18.xhtml#page_506)–[517](ch18.xhtml#page_517)
  prefs: []
  type: TYPE_NORMAL
- en: joining, [521](ch18.xhtml#page_521)–[522](ch18.xhtml#page_522)
  prefs: []
  type: TYPE_NORMAL
- en: matrix dot product, [527](ch18.xhtml#page_527)–[528](ch18.xhtml#page_528)
  prefs: []
  type: TYPE_NORMAL
- en: printing, [497](ch18.xhtml#page_497)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [492](ch18.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: reading and writing data, [533](ch18.xhtml#page_533)–[535](ch18.xhtml#page_535)
  prefs: []
  type: TYPE_NORMAL
- en: shaping, [518](ch18.xhtml#page_518)–[519](ch18.xhtml#page_519)
  prefs: []
  type: TYPE_NORMAL
- en: splitting, [522](ch18.xhtml#page_522)–[524](ch18.xhtml#page_524)
  prefs: []
  type: TYPE_NORMAL
- en: transposing, [520](ch18.xhtml#page_520)–[521](ch18.xhtml#page_521)
  prefs: []
  type: TYPE_NORMAL
- en: vectorization, [524](ch18.xhtml#page_524)–[526](ch18.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [495](ch18.xhtml#page_495)
  prefs: []
  type: TYPE_NORMAL
- en: functions
  prefs: []
  type: TYPE_NORMAL
- en: aggregate, [531](ch18.xhtml#page_531)–[533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom numbers, [533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: universal, [529](ch18.xhtml#page_529)–[531](ch18.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: memory allocation, [496](ch18.xhtml#page_496)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [491](ch18.xhtml#page_491)–[492](ch18.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: '**O**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: object-oriented approach (Matplotlib), [555](ch19.xhtml#page_555)–[557](ch19.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: multipanel displays, [564](ch19.xhtml#page_564)–[567](ch19.xhtml#page_567)
  prefs: []
  type: TYPE_NORMAL
- en: plots, [557](ch19.xhtml#page_557)–[561](ch19.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: objects, [348](ch13.xhtml#page_348)
  prefs: []
  type: TYPE_NORMAL
- en: controlling with objects, [359](ch13.xhtml#page_359)–[361](ch13.xhtml#page_361)
  prefs: []
  type: TYPE_NORMAL
- en: as instances, [351](ch13.xhtml#page_351)
  prefs: []
  type: TYPE_NORMAL
- en: instantiating, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355), [357](ch13.xhtml#page_357)–[358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: invoking, [284](ch11.xhtml#page_284)
  prefs: []
  type: TYPE_NORMAL
- en: variables and, [202](ch08.xhtml#page_202)
  prefs: []
  type: TYPE_NORMAL
- en: 1D arrays, [493](ch18.xhtml#page_493), [507](ch18.xhtml#page_507)–[509](ch18.xhtml#page_509)
  prefs: []
  type: TYPE_NORMAL
- en: '`ones()` function, [502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: OOP (object-oriented programming), [347](ch13.xhtml#page_347)
  prefs: []
  type: TYPE_NORMAL
- en: classes
  prefs: []
  type: TYPE_NORMAL
- en: defining, [349](ch13.xhtml#page_349)–[352](ch13.xhtml#page_352), [364](ch13.xhtml#page_364)–[365](ch13.xhtml#page_365)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings for, [386](ch14.xhtml#page_386)–[387](ch14.xhtml#page_387)
  prefs: []
  type: TYPE_NORMAL
- en: inheritance, [355](ch13.xhtml#page_355)–[359](ch13.xhtml#page_359)
  prefs: []
  type: TYPE_NORMAL
- en: instance methods, [352](ch13.xhtml#page_352)–[353](ch13.xhtml#page_353)
  prefs: []
  type: TYPE_NORMAL
- en: instantiating objects, [353](ch13.xhtml#page_353)–[355](ch13.xhtml#page_355),
    [357](ch13.xhtml#page_357)–[358](ch13.xhtml#page_358)
  prefs: []
  type: TYPE_NORMAL
- en: class modules, creating, [373](ch13.xhtml#page_373)–[375](ch13.xhtml#page_375)
  prefs: []
  type: TYPE_NORMAL
- en: dataclasses, [361](ch13.xhtml#page_361)–[362](ch13.xhtml#page_362)
  prefs: []
  type: TYPE_NORMAL
- en: decorators, [362](ch13.xhtml#page_362)–[364](ch13.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: defining, [365](ch13.xhtml#page_365)–[368](ch13.xhtml#page_368)
  prefs: []
  type: TYPE_NORMAL
- en: optimizing, [372](ch13.xhtml#page_372)–[373](ch13.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: plotting with, [368](ch13.xhtml#page_368)–[370](ch13.xhtml#page_370)
  prefs: []
  type: TYPE_NORMAL
- en: post-initialization processing, [370](ch13.xhtml#page_370)–[372](ch13.xhtml#page_372)
  prefs: []
  type: TYPE_NORMAL
- en: object control, [359](ch13.xhtml#page_359)–[361](ch13.xhtml#page_361)
  prefs: []
  type: TYPE_NORMAL
- en: when to use, [348](ch13.xhtml#page_348)
  prefs: []
  type: TYPE_NORMAL
- en: OpenCV, [409](ch15.xhtml#page_409)–[410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: '`open()` function, [325](ch12.xhtml#page_325)'
  prefs: []
  type: TYPE_NORMAL
- en: opening
  prefs: []
  type: TYPE_NORMAL
- en: files, catching exceptions, [342](ch12.xhtml#page_342)–[343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: multiple notebooks in JupyterLab, [156](ch06.xhtml#page_156)
  prefs: []
  type: TYPE_NORMAL
- en: operators
  prefs: []
  type: TYPE_NORMAL
- en: assignment, [177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: augmented assignment, [178](ch07.xhtml#page_178)
  prefs: []
  type: TYPE_NORMAL
- en: Boolean, [263](ch10.xhtml#page_263)–[264](ch10.xhtml#page_264)
  prefs: []
  type: TYPE_NORMAL
- en: comparison, [214](ch08.xhtml#page_214)–[217](ch08.xhtml#page_217)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical, [176](ch07.xhtml#page_176)–[177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: membership, [196](ch07.xhtml#page_196)
  prefs: []
  type: TYPE_NORMAL
- en: overloading
  prefs: []
  type: TYPE_NORMAL
- en: in strings, [191](ch07.xhtml#page_191)–[192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: in tuples, [227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: in variable assignment, [204](ch08.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: precedence, [178](ch07.xhtml#page_178)–[179](ch07.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: optimizing
  prefs: []
  type: TYPE_NORMAL
- en: dataclasses, [372](ch13.xhtml#page_372)–[373](ch13.xhtml#page_373)
  prefs: []
  type: TYPE_NORMAL
- en: '*k*-NN'
  prefs: []
  type: TYPE_NORMAL
- en: with cross-validation, [616](ch20.xhtml#page_616)–[620](ch20.xhtml#page_620)
  prefs: []
  type: TYPE_NORMAL
- en: with GridSearchCV class, [620](ch20.xhtml#page_620)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: '`os.chdir()` method, [318](ch12.xhtml#page_318)'
  prefs: []
  type: TYPE_NORMAL
- en: '`os.getcwd()` method, [317](ch12.xhtml#page_317)'
  prefs: []
  type: TYPE_NORMAL
- en: '`os` module, [317](ch12.xhtml#page_317)–[319](ch12.xhtml#page_319)'
  prefs: []
  type: TYPE_NORMAL
- en: '`os.normpath()` method, [319](ch12.xhtml#page_319)'
  prefs: []
  type: TYPE_NORMAL
- en: '`os.path.join()` method, [318](ch12.xhtml#page_318)'
  prefs: []
  type: TYPE_NORMAL
- en: output cells in notebooks, [106](ch05.xhtml#page_106)–[107](ch05.xhtml#page_107)
  prefs: []
  type: TYPE_NORMAL
- en: output in IPython console (Spyder), [75](ch04.xhtml#page_75)
  prefs: []
  type: TYPE_NORMAL
- en: overfitting, [616](ch20.xhtml#page_616)
  prefs: []
  type: TYPE_NORMAL
- en: overloading operators
  prefs: []
  type: TYPE_NORMAL
- en: in strings, [191](ch07.xhtml#page_191)–[192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: in tuples, [227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: in variable assignment, [204](ch08.xhtml#page_204)
  prefs: []
  type: TYPE_NORMAL
- en: '**P**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: package cache, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: cleaning, [48](ch02.xhtml#page_48)
  prefs: []
  type: TYPE_NORMAL
- en: packages
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [15](ch01.xhtml#page_15)–[17](ch01.xhtml#page_17)
  prefs: []
  type: TYPE_NORMAL
- en: conda package manager, purpose of, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [8](ch01.xhtml#page_8)
  prefs: []
  type: TYPE_NORMAL
- en: dependencies, defined, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: finding
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [27](ch02.xhtml#page_27)–[30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [40](ch02.xhtml#page_40)–[42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: importing, [589](ch20.xhtml#page_589)
  prefs: []
  type: TYPE_NORMAL
- en: installing
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [27](ch02.xhtml#page_27)–[30](ch02.xhtml#page_30)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [40](ch02.xhtml#page_40)–[42](ch02.xhtml#page_42)
  prefs: []
  type: TYPE_NORMAL
- en: with conda and pip, [24](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: managing
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [27](ch02.xhtml#page_27)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [39](ch02.xhtml#page_39)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: removing
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [30](ch02.xhtml#page_30)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [42](ch02.xhtml#page_42)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder, installing, [66](ch04.xhtml#page_66)–[68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: updating
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [30](ch02.xhtml#page_30)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [42](ch02.xhtml#page_42)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: '`pairplot()` method, [601](ch20.xhtml#page_601)–[602](ch20.xhtml#page_602)'
  prefs: []
  type: TYPE_NORMAL
- en: pairplots, [424](ch16.xhtml#page_424)
  prefs: []
  type: TYPE_NORMAL
- en: Palmer Penguins project
  prefs: []
  type: TYPE_NORMAL
- en: displaying DataFrames, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: duplicates in, [592](ch20.xhtml#page_592)
  prefs: []
  type: TYPE_NORMAL
- en: exploring dataset, [596](ch20.xhtml#page_596)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: importing packages, [589](ch20.xhtml#page_589)
  prefs: []
  type: TYPE_NORMAL
- en: loading dataset, [589](ch20.xhtml#page_589)–[590](ch20.xhtml#page_590)
  prefs: []
  type: TYPE_NORMAL
- en: missing values in, [592](ch20.xhtml#page_592)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: predictions with, [609](ch20.xhtml#page_609)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [586](ch20.xhtml#page_586)–[587](ch20.xhtml#page_587)
  prefs: []
  type: TYPE_NORMAL
- en: renaming columns, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: setup, [587](ch20.xhtml#page_587)–[588](ch20.xhtml#page_588)
  prefs: []
  type: TYPE_NORMAL
- en: steps in, [587](ch20.xhtml#page_587)
  prefs: []
  type: TYPE_NORMAL
- en: pandas, [403](ch15.xhtml#page_403)–[404](ch15.xhtml#page_404), [583](ch20.xhtml#page_583)
  prefs: []
  type: TYPE_NORMAL
- en: aggregation methods, [650](ch21.xhtml#page_650)
  prefs: []
  type: TYPE_NORMAL
- en: alternatives to, [404](ch15.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: DataFrames, [585](ch20.xhtml#page_585)–[586](ch20.xhtml#page_586)
  prefs: []
  type: TYPE_NORMAL
- en: converting categorical data to numerical data, [610](ch20.xhtml#page_610)–[612](ch20.xhtml#page_612)
  prefs: []
  type: TYPE_NORMAL
- en: counting in, [600](ch20.xhtml#page_600)–[601](ch20.xhtml#page_601)
  prefs: []
  type: TYPE_NORMAL
- en: describing, [596](ch20.xhtml#page_596)–[597](ch20.xhtml#page_597)
  prefs: []
  type: TYPE_NORMAL
- en: displaying, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: duplicates in, [592](ch20.xhtml#page_592)
  prefs: []
  type: TYPE_NORMAL
- en: missing values in, [592](ch20.xhtml#page_592)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: quantifying correlations, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: reindexing, [595](ch20.xhtml#page_595)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: datasets, loading, [589](ch20.xhtml#page_589)–[590](ch20.xhtml#page_590)
  prefs: []
  type: TYPE_NORMAL
- en: plotting API, [428](ch16.xhtml#page_428)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: plotting syntax, [620](ch20.xhtml#page_620)
  prefs: []
  type: TYPE_NORMAL
- en: radial visualization, [605](ch20.xhtml#page_605)–[608](ch20.xhtml#page_608)
  prefs: []
  type: TYPE_NORMAL
- en: resources for information, [623](ch20.xhtml#page_623)
  prefs: []
  type: TYPE_NORMAL
- en: series, [584](ch20.xhtml#page_584)–[585](ch20.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: time series, [636](ch21.xhtml#page_636)–[637](ch21.xhtml#page_637)
  prefs: []
  type: TYPE_NORMAL
- en: changing start date, [656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: date offsets, [645](ch21.xhtml#page_645)
  prefs: []
  type: TYPE_NORMAL
- en: date ranges, [640](ch21.xhtml#page_640)–[642](ch21.xhtml#page_642)
  prefs: []
  type: TYPE_NORMAL
- en: downsampling, [650](ch21.xhtml#page_650)–[656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: indexing and slicing, [646](ch21.xhtml#page_646)–[647](ch21.xhtml#page_647)
  prefs: []
  type: TYPE_NORMAL
- en: interpolation, [656](ch21.xhtml#page_656)–[660](ch21.xhtml#page_660)
  prefs: []
  type: TYPE_NORMAL
- en: parsing data, [637](ch21.xhtml#page_637)–[640](ch21.xhtml#page_640)
  prefs: []
  type: TYPE_NORMAL
- en: resampling, [647](ch21.xhtml#page_647)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: sliding window functions, [660](ch21.xhtml#page_660)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: time deltas, [644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: time spans, [642](ch21.xhtml#page_642)–[644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: upsampling, [648](ch21.xhtml#page_648)–[650](ch21.xhtml#page_650)
  prefs: []
  type: TYPE_NORMAL
- en: Pandas-Bokeh, [431](ch16.xhtml#page_431)
  prefs: []
  type: TYPE_NORMAL
- en: Panel, [449](ch16.xhtml#page_449)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: parallel processing, [417](ch15.xhtml#page_417)
  prefs: []
  type: TYPE_NORMAL
- en: parameters
  prefs: []
  type: TYPE_NORMAL
- en: default, [287](ch11.xhtml#page_287)–[288](ch11.xhtml#page_288)
  prefs: []
  type: TYPE_NORMAL
- en: of functions, [285](ch11.xhtml#page_285)–[286](ch11.xhtml#page_286)
  prefs: []
  type: TYPE_NORMAL
- en: ParaView, [444](ch16.xhtml#page_444)
  prefs: []
  type: TYPE_NORMAL
- en: '`parse()` method, [630](ch21.xhtml#page_630)'
  prefs: []
  type: TYPE_NORMAL
- en: parsing time series data in pandas, [637](ch21.xhtml#page_637)–[640](ch21.xhtml#page_640)
  prefs: []
  type: TYPE_NORMAL
- en: '`pass` statement, [271](ch10.xhtml#page_271)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pathlib` module, [320](ch12.xhtml#page_320)–[322](ch12.xhtml#page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: reading and writing text files, [332](ch12.xhtml#page_332)–[333](ch12.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: pathnames, [316](ch12.xhtml#page_316)
  prefs: []
  type: TYPE_NORMAL
- en: absolute and relative, [319](ch12.xhtml#page_319)–[320](ch12.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: normalizing, [319](ch12.xhtml#page_319)
  prefs: []
  type: TYPE_NORMAL
- en: '`os` module, [317](ch12.xhtml#page_317)–[319](ch12.xhtml#page_319)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pathlib` module, [320](ch12.xhtml#page_320)–[322](ch12.xhtml#page_322)'
  prefs: []
  type: TYPE_NORMAL
- en: '`shutil` module, [322](ch12.xhtml#page_322)–[324](ch12.xhtml#page_324)'
  prefs: []
  type: TYPE_NORMAL
- en: Pattern, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: '`period_range()` method, [643](ch21.xhtml#page_643)'
  prefs: []
  type: TYPE_NORMAL
- en: periods (pandas), creating, [642](ch21.xhtml#page_642)–[644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: pickled data, shelving, [336](ch12.xhtml#page_336)–[338](ch12.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: '`pickle.dump()` function, [335](ch12.xhtml#page_335)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pickle.load()` function, [335](ch12.xhtml#page_335)'
  prefs: []
  type: TYPE_NORMAL
- en: '`pickle` module, [334](ch12.xhtml#page_334)–[336](ch12.xhtml#page_336)'
  prefs: []
  type: TYPE_NORMAL
- en: pie charts, [553](ch19.xhtml#page_553)
  prefs: []
  type: TYPE_NORMAL
- en: PIL (Python Image Library), [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: Pillow libraries, [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: pip, conda and, [24](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: plaintext files, [325](ch12.xhtml#page_325). *See also* text files
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [431](ch16.xhtml#page_431)–[436](ch16.xhtml#page_436), [467](ch17.xhtml#page_467)–[469](ch17.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly Express, [433](ch16.xhtml#page_433)–[436](ch16.xhtml#page_436), [467](ch17.xhtml#page_467)–[469](ch17.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: plots
  prefs: []
  type: TYPE_NORMAL
- en: with `datetime` module, [632](ch21.xhtml#page_632)–[633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: in Matplotlib
  prefs: []
  type: TYPE_NORMAL
- en: animating, [569](ch19.xhtml#page_569)–[573](ch19.xhtml#page_573)
  prefs: []
  type: TYPE_NORMAL
- en: creating with object-oriented approach, [557](ch19.xhtml#page_557)–[561](ch19.xhtml#page_561)
  prefs: []
  type: TYPE_NORMAL
- en: creating with pyplot, [542](ch19.xhtml#page_542)–[545](ch19.xhtml#page_545)
  prefs: []
  type: TYPE_NORMAL
- en: insetting, [567](ch19.xhtml#page_567)–[568](ch19.xhtml#page_568)
  prefs: []
  type: TYPE_NORMAL
- en: pyplot approach, [539](ch19.xhtml#page_539)–[541](ch19.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: styling, [573](ch19.xhtml#page_573)–[580](ch19.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: subplots, [545](ch19.xhtml#page_545)–[549](ch19.xhtml#page_549), [561](ch19.xhtml#page_561)–[564](ch19.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: terminology for, [538](ch19.xhtml#page_538)–[539](ch19.xhtml#page_539)
  prefs: []
  type: TYPE_NORMAL
- en: 3D plots, [568](ch19.xhtml#page_568)–[569](ch19.xhtml#page_569)
  prefs: []
  type: TYPE_NORMAL
- en: types of, [452](ch16.xhtml#page_452)
  prefs: []
  type: TYPE_NORMAL
- en: plotting
  prefs: []
  type: TYPE_NORMAL
- en: with dataclasses, [368](ch13.xhtml#page_368)–[370](ch13.xhtml#page_370)
  prefs: []
  type: TYPE_NORMAL
- en: in IPython console (Spyder), [75](ch04.xhtml#page_75)
  prefs: []
  type: TYPE_NORMAL
- en: plotting libraries, [419](ch16.xhtml#page_419)–[420](ch16.xhtml#page_420). *See
    also* geospatial libraries
  prefs: []
  type: TYPE_NORMAL
- en: Altair, [429](ch16.xhtml#page_429)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [430](ch16.xhtml#page_430)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [450](ch16.xhtml#page_450)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Datashader, [441](ch16.xhtml#page_441)–[443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViews, [436](ch16.xhtml#page_436)–[441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: for InfoVis and SciVis, [421](ch16.xhtml#page_421)
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [422](ch16.xhtml#page_422)–[456](ch16.xhtml#page_456), [537](ch19.xhtml#page_537)–[538](ch19.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: Mayavi, [443](ch16.xhtml#page_443)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: pandas plotting API, [428](ch16.xhtml#page_428)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [431](ch16.xhtml#page_431)–[436](ch16.xhtml#page_436)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [424](ch16.xhtml#page_424)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: '`plt.pie()` method, [553](ch19.xhtml#page_553)'
  prefs: []
  type: TYPE_NORMAL
- en: plus sign (`+`)
  prefs: []
  type: TYPE_NORMAL
- en: addition operator, [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: string concatenation operator, [192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: Polyglot, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: '`pop()` method, [232](ch09.xhtml#page_232)–[233](ch09.xhtml#page_233), [252](ch09.xhtml#page_252)'
  prefs: []
  type: TYPE_NORMAL
- en: positional arguments, [286](ch11.xhtml#page_286)–[287](ch11.xhtml#page_287)
  prefs: []
  type: TYPE_NORMAL
- en: postBuild files, [130](ch05.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: '`__post_init__` function, [370](ch13.xhtml#page_370)–[372](ch13.xhtml#page_372)'
  prefs: []
  type: TYPE_NORMAL
- en: post-initialization processing in dataclasses, [370](ch13.xhtml#page_370)–[372](ch13.xhtml#page_372)
  prefs: []
  type: TYPE_NORMAL
- en: power operator (`**`), [177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: precedence, [178](ch07.xhtml#page_178)–[179](ch07.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: predictions with *k*-NN, [609](ch20.xhtml#page_609)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: '`predict()` method, [615](ch20.xhtml#page_615)'
  prefs: []
  type: TYPE_NORMAL
- en: prefilled arrays, creating, [502](ch18.xhtml#page_502)–[504](ch18.xhtml#page_504)
  prefs: []
  type: TYPE_NORMAL
- en: '`print()` function, [278](ch10.xhtml#page_278)'
  prefs: []
  type: TYPE_NORMAL
- en: printing
  prefs: []
  type: TYPE_NORMAL
- en: arrays, [497](ch18.xhtml#page_497)
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [254](ch09.xhtml#page_254)–[255](ch09.xhtml#page_255)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Qt console, [56](ch03.xhtml#page_56)–[58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [228](ch09.xhtml#page_228)–[229](ch09.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: processes, [318](ch12.xhtml#page_318)
  prefs: []
  type: TYPE_NORMAL
- en: Profiler pane (Spyder), [89](ch04.xhtml#page_89)–[90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: profiling, defined, [4](part01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: project files in Spyder, [68](ch04.xhtml#page_68)–[72](ch04.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: project folders, creating
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [144](ch06.xhtml#page_144)–[145](ch06.xhtml#page_145)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Notebook, [98](ch05.xhtml#page_98)–[100](ch05.xhtml#page_100)
  prefs: []
  type: TYPE_NORMAL
- en: Project pane (Spyder), [72](ch04.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: projects, creating in Spyder, [316](ch12.xhtml#page_316), [348](ch13.xhtml#page_348)–[349](ch13.xhtml#page_349).
    *See also* Palmer Penguins project
  prefs: []
  type: TYPE_NORMAL
- en: prompt (conda), changing, [38](ch02.xhtml#page_38)–[39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandom numbers in NumPy, [533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: pure paths, [320](ch12.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: pydeck, [481](ch17.xhtml#page_481)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: PyPI (Python Package Index), [24](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: pyplot, [539](ch19.xhtml#page_539)–[541](ch19.xhtml#page_541)
  prefs: []
  type: TYPE_NORMAL
- en: multipanel displays, [549](ch19.xhtml#page_549)–[555](ch19.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: plots, [542](ch19.xhtml#page_542)–[545](ch19.xhtml#page_545)
  prefs: []
  type: TYPE_NORMAL
- en: subplots, [545](ch19.xhtml#page_545)–[549](ch19.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: Python. *See also* flow control statements; functions; libraries; modules; variables
  prefs: []
  type: TYPE_NORMAL
- en: comments, [210](ch08.xhtml#page_210)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [184](ch07.xhtml#page_184)–[200](ch07.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: '`datetime` module, [626](ch21.xhtml#page_626)'
  prefs: []
  type: TYPE_NORMAL
- en: converting strings to dates and times, [630](ch21.xhtml#page_630)–[631](ch21.xhtml#page_631)
  prefs: []
  type: TYPE_NORMAL
- en: current date and time, [626](ch21.xhtml#page_626)–[627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: durations, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: formatting dates and times, [628](ch21.xhtml#page_628)–[630](ch21.xhtml#page_630)
  prefs: []
  type: TYPE_NORMAL
- en: plotting with, [632](ch21.xhtml#page_632)–[633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: timestamps, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: time zones, [633](ch21.xhtml#page_633)–[636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [246](ch09.xhtml#page_246)–[256](ch09.xhtml#page_256)
  prefs: []
  type: TYPE_NORMAL
- en: documentation, [377](ch14.xhtml#page_377)–[378](ch14.xhtml#page_378)
  prefs: []
  type: TYPE_NORMAL
- en: comments, [378](ch14.xhtml#page_378)–[382](ch14.xhtml#page_382)
  prefs: []
  type: TYPE_NORMAL
- en: docstrings, [382](ch14.xhtml#page_382)–[395](ch14.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: error messages, [182](ch07.xhtml#page_182)–[183](ch07.xhtml#page_183)
  prefs: []
  type: TYPE_NORMAL
- en: exception handling, [274](ch10.xhtml#page_274)–[278](ch10.xhtml#page_278)
  prefs: []
  type: TYPE_NORMAL
- en: lists, [229](ch09.xhtml#page_229)–[238](ch09.xhtml#page_238)
  prefs: []
  type: TYPE_NORMAL
- en: mathematical expressions, [176](ch07.xhtml#page_176)–[181](ch07.xhtml#page_181)
  prefs: []
  type: TYPE_NORMAL
- en: objects, [202](ch08.xhtml#page_202)
  prefs: []
  type: TYPE_NORMAL
- en: reserved keywords, [207](ch08.xhtml#page_207)–[209](ch08.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: resources for information, [174](part02.xhtml#page_174)
  prefs: []
  type: TYPE_NORMAL
- en: scientific ecosystem, [397](part03.xhtml#page_397)–[398](part03.xhtml#page_398)
  prefs: []
  type: TYPE_NORMAL
- en: sets, [239](ch09.xhtml#page_239)–[246](ch09.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: standard library, [303](ch11.xhtml#page_303)
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [220](ch09.xhtml#page_220)–[229](ch09.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: Python Data Analysis library. *See* pandas
  prefs: []
  type: TYPE_NORMAL
- en: Python Image Library, [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: Python Package Index, [24](ch02.xhtml#page_24)
  prefs: []
  type: TYPE_NORMAL
- en: Python package management system. *See* pip
  prefs: []
  type: TYPE_NORMAL
- en: PyTorch, [408](ch15.xhtml#page_408)
  prefs: []
  type: TYPE_NORMAL
- en: pytz library, [634](ch21.xhtml#page_634)
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Qt console. *See* Jupyter Qt console
  prefs: []
  type: TYPE_NORMAL
- en: Qt, defined, [4](part01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: quantifying correlations, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: quotation marks for strings, [189](ch07.xhtml#page_189)–[190](ch07.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: radial visualization, [605](ch20.xhtml#page_605)–[608](ch20.xhtml#page_608)
  prefs: []
  type: TYPE_NORMAL
- en: '`radviz()` method, [605](ch20.xhtml#page_605)–[608](ch20.xhtml#page_608)'
  prefs: []
  type: TYPE_NORMAL
- en: '`raise` keyword, [276](ch10.xhtml#page_276)–[277](ch10.xhtml#page_277)'
  prefs: []
  type: TYPE_NORMAL
- en: raising exceptions, [182](ch07.xhtml#page_182)–[183](ch07.xhtml#page_183), [274](ch10.xhtml#page_274),
    [276](ch10.xhtml#page_276)–[277](ch10.xhtml#page_277)
  prefs: []
  type: TYPE_NORMAL
- en: '`random()` function, [504](ch18.xhtml#page_504)'
  prefs: []
  type: TYPE_NORMAL
- en: random numbers in NumPy, [533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: '`range()` function, [300](ch11.xhtml#page_300)'
  prefs: []
  type: TYPE_NORMAL
- en: rank of arrays, [492](ch18.xhtml#page_492)
  prefs: []
  type: TYPE_NORMAL
- en: raster data, [457](ch17.xhtml#page_457)
  prefs: []
  type: TYPE_NORMAL
- en: '`ravel()` function, [519](ch18.xhtml#page_519)'
  prefs: []
  type: TYPE_NORMAL
- en: raw strings, [191](ch07.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: RcParams class (Matplotlib), [574](ch19.xhtml#page_574)
  prefs: []
  type: TYPE_NORMAL
- en: reading
  prefs: []
  type: TYPE_NORMAL
- en: array data, [533](ch18.xhtml#page_533)–[535](ch18.xhtml#page_535)
  prefs: []
  type: TYPE_NORMAL
- en: text files, [325](ch12.xhtml#page_325)–[329](ch12.xhtml#page_329)
  prefs: []
  type: TYPE_NORMAL
- en: with pathlib, [332](ch12.xhtml#page_332)–[333](ch12.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: '`readline()` method, [328](ch12.xhtml#page_328)'
  prefs: []
  type: TYPE_NORMAL
- en: '`readlines()` method, [328](ch12.xhtml#page_328)'
  prefs: []
  type: TYPE_NORMAL
- en: '`read()` method, [327](ch12.xhtml#page_327)'
  prefs: []
  type: TYPE_NORMAL
- en: recursion, [297](ch11.xhtml#page_297)–[298](ch11.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: regular expressions (regex), [415](ch15.xhtml#page_415)–[416](ch15.xhtml#page_416)
  prefs: []
  type: TYPE_NORMAL
- en: reindexing DataFrames, [595](ch20.xhtml#page_595)–[596](ch20.xhtml#page_596)
  prefs: []
  type: TYPE_NORMAL
- en: relational operators. *See* comparison operators
  prefs: []
  type: TYPE_NORMAL
- en: relative paths, [319](ch12.xhtml#page_319)–[320](ch12.xhtml#page_320)
  prefs: []
  type: TYPE_NORMAL
- en: '`re` module, [415](ch15.xhtml#page_415)–[416](ch15.xhtml#page_416)'
  prefs: []
  type: TYPE_NORMAL
- en: '`remove()` method, [233](ch09.xhtml#page_233)'
  prefs: []
  type: TYPE_NORMAL
- en: removing
  prefs: []
  type: TYPE_NORMAL
- en: conda environments
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [34](ch02.xhtml#page_34)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [47](ch02.xhtml#page_47)
  prefs: []
  type: TYPE_NORMAL
- en: key-value pairs, [252](ch09.xhtml#page_252)
  prefs: []
  type: TYPE_NORMAL
- en: list items, [232](ch09.xhtml#page_232)–[233](ch09.xhtml#page_233)
  prefs: []
  type: TYPE_NORMAL
- en: missing values in datasets, [594](ch20.xhtml#page_594)–[595](ch20.xhtml#page_595)
  prefs: []
  type: TYPE_NORMAL
- en: packages
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [30](ch02.xhtml#page_30)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [42](ch02.xhtml#page_42)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: renaming columns in pandas, [590](ch20.xhtml#page_590)–[591](ch20.xhtml#page_591)
  prefs: []
  type: TYPE_NORMAL
- en: '`replace()` method, [198](ch07.xhtml#page_198)'
  prefs: []
  type: TYPE_NORMAL
- en: replacing loops with comprehensions, [271](ch10.xhtml#page_271)–[274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: requesting data, [413](ch15.xhtml#page_413)–[414](ch15.xhtml#page_414)
  prefs: []
  type: TYPE_NORMAL
- en: requests library, [413](ch15.xhtml#page_413)–[414](ch15.xhtml#page_414)
  prefs: []
  type: TYPE_NORMAL
- en: '`resample()` method, [647](ch21.xhtml#page_647)–[650](ch21.xhtml#page_650)'
  prefs: []
  type: TYPE_NORMAL
- en: resampling time series in pandas, [647](ch21.xhtml#page_647)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: reserved keywords, [207](ch08.xhtml#page_207)–[209](ch08.xhtml#page_209)
  prefs: []
  type: TYPE_NORMAL
- en: '`reset_index()` method, [595](ch20.xhtml#page_595)'
  prefs: []
  type: TYPE_NORMAL
- en: '`reshape()` function, [518](ch18.xhtml#page_518)'
  prefs: []
  type: TYPE_NORMAL
- en: reshaping arrays, [518](ch18.xhtml#page_518)–[519](ch18.xhtml#page_519)
  prefs: []
  type: TYPE_NORMAL
- en: resizing multipanel displays, [554](ch19.xhtml#page_554)–[555](ch19.xhtml#page_555)
  prefs: []
  type: TYPE_NORMAL
- en: resources for information on Python, [174](part02.xhtml#page_174)
  prefs: []
  type: TYPE_NORMAL
- en: restarting kernels, [310](ch11.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: restoring conda environments with CLI, [46](ch02.xhtml#page_46)–[47](ch02.xhtml#page_47)
  prefs: []
  type: TYPE_NORMAL
- en: retrieving current date and time, [626](ch21.xhtml#page_626)–[627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: return address of functions, [286](ch11.xhtml#page_286)
  prefs: []
  type: TYPE_NORMAL
- en: returning function values, [289](ch11.xhtml#page_289)
  prefs: []
  type: TYPE_NORMAL
- en: return keyword, [286](ch11.xhtml#page_286)
  prefs: []
  type: TYPE_NORMAL
- en: reverse lookups, [253](ch09.xhtml#page_253)–[254](ch09.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: RISE extension, installing, [132](ch05.xhtml#page_132)–[133](ch05.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: '`rmtree()` method, [324](ch12.xhtml#page_324)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rolling()` method, [661](ch21.xhtml#page_661)'
  prefs: []
  type: TYPE_NORMAL
- en: '`round()` function, [187](ch07.xhtml#page_187)–[189](ch07.xhtml#page_189)'
  prefs: []
  type: TYPE_NORMAL
- en: rounding floats, [187](ch07.xhtml#page_187)–[189](ch07.xhtml#page_189)
  prefs: []
  type: TYPE_NORMAL
- en: '`row_stack()` functions, [522](ch18.xhtml#page_522)'
  prefs: []
  type: TYPE_NORMAL
- en: '`rstrip()` method, [329](ch12.xhtml#page_329)'
  prefs: []
  type: TYPE_NORMAL
- en: run configuration, setting in Editor pane (Spyder), [83](ch04.xhtml#page_83)–[84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: running
  prefs: []
  type: TYPE_NORMAL
- en: '*k*-NN, [615](ch20.xhtml#page_615)–[616](ch20.xhtml#page_616)'
  prefs: []
  type: TYPE_NORMAL
- en: scripts
  prefs: []
  type: TYPE_NORMAL
- en: in notebooks, [163](ch06.xhtml#page_163)–[164](ch06.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: in terminal, [162](ch06.xhtml#page_162)–[163](ch06.xhtml#page_163)
  prefs: []
  type: TYPE_NORMAL
- en: runtime configuration parameters, changing, [574](ch19.xhtml#page_574)–[576](ch19.xhtml#page_576)
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Sankey diagrams, [466](ch17.xhtml#page_466)
  prefs: []
  type: TYPE_NORMAL
- en: '`save()` function, [534](ch18.xhtml#page_534)'
  prefs: []
  type: TYPE_NORMAL
- en: '`savez_compressed()` function, [534](ch18.xhtml#page_534)'
  prefs: []
  type: TYPE_NORMAL
- en: saving
  prefs: []
  type: TYPE_NORMAL
- en: data in JSON format, [340](ch12.xhtml#page_340)
  prefs: []
  type: TYPE_NORMAL
- en: in Jupyter Qt console, [56](ch03.xhtml#page_56)–[58](ch03.xhtml#page_58)
  prefs: []
  type: TYPE_NORMAL
- en: notebooks, [109](ch05.xhtml#page_109)
  prefs: []
  type: TYPE_NORMAL
- en: tuples in JSON format, [341](ch12.xhtml#page_341)–[342](ch12.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: workspaces in JupyterLab, [156](ch06.xhtml#page_156)–[157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: '`scatterplot()` method, [602](ch20.xhtml#page_602)–[603](ch20.xhtml#page_603)'
  prefs: []
  type: TYPE_NORMAL
- en: scatterplots, [552](ch19.xhtml#page_552)
  prefs: []
  type: TYPE_NORMAL
- en: scientific libraries. *See* libraries
  prefs: []
  type: TYPE_NORMAL
- en: Scientific Python Development IDE. *See* Spyder
  prefs: []
  type: TYPE_NORMAL
- en: scikit-image, [410](ch15.xhtml#page_410)
  prefs: []
  type: TYPE_NORMAL
- en: scikit-learn, [404](ch15.xhtml#page_404)–[407](ch15.xhtml#page_407), [584](ch20.xhtml#page_584)
  prefs: []
  type: TYPE_NORMAL
- en: cross-validation, [616](ch20.xhtml#page_616)–[620](ch20.xhtml#page_620)
  prefs: []
  type: TYPE_NORMAL
- en: GridSearchCV class, [620](ch20.xhtml#page_620)–[622](ch20.xhtml#page_622)
  prefs: []
  type: TYPE_NORMAL
- en: '*k*-NN, [609](ch20.xhtml#page_609)–[622](ch20.xhtml#page_622)'
  prefs: []
  type: TYPE_NORMAL
- en: normalizing data, [613](ch20.xhtml#page_613)–[615](ch20.xhtml#page_615)
  prefs: []
  type: TYPE_NORMAL
- en: prediction accuracy, [615](ch20.xhtml#page_615)–[616](ch20.xhtml#page_616)
  prefs: []
  type: TYPE_NORMAL
- en: resources for information, [623](ch20.xhtml#page_623)
  prefs: []
  type: TYPE_NORMAL
- en: training datasets, [612](ch20.xhtml#page_612)–[613](ch20.xhtml#page_613)
  prefs: []
  type: TYPE_NORMAL
- en: SciPy, [401](ch15.xhtml#page_401)
  prefs: []
  type: TYPE_NORMAL
- en: SciPy stack, [400](ch15.xhtml#page_400)
  prefs: []
  type: TYPE_NORMAL
- en: SciVis plotting libraries, [420](ch16.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: Mayavi, [443](ch16.xhtml#page_443)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: scopes in functions, [293](ch11.xhtml#page_293)–[294](ch11.xhtml#page_294)
  prefs: []
  type: TYPE_NORMAL
- en: scripts
  prefs: []
  type: TYPE_NORMAL
- en: running
  prefs: []
  type: TYPE_NORMAL
- en: in notebooks, [163](ch06.xhtml#page_163)–[164](ch06.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: in terminal, [162](ch06.xhtml#page_162)–[163](ch06.xhtml#page_163)
  prefs: []
  type: TYPE_NORMAL
- en: writing in JupyterLab text editor, [161](ch06.xhtml#page_161)–[162](ch06.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [424](ch16.xhtml#page_424)–[456](ch16.xhtml#page_456), [584](ch20.xhtml#page_584)
  prefs: []
  type: TYPE_NORMAL
- en: datasets
  prefs: []
  type: TYPE_NORMAL
- en: loading, [590](ch20.xhtml#page_590)
  prefs: []
  type: TYPE_NORMAL
- en: practice datasets, [589](ch20.xhtml#page_589)
  prefs: []
  type: TYPE_NORMAL
- en: heatmaps, [608](ch20.xhtml#page_608)–[609](ch20.xhtml#page_609)
  prefs: []
  type: TYPE_NORMAL
- en: installing, [50](ch03.xhtml#page_50)
  prefs: []
  type: TYPE_NORMAL
- en: methods
  prefs: []
  type: TYPE_NORMAL
- en: '`boxplot()`, [603](ch20.xhtml#page_603)–[604](ch20.xhtml#page_604)'
  prefs: []
  type: TYPE_NORMAL
- en: '`countplot()`, [597](ch20.xhtml#page_597)–[601](ch20.xhtml#page_601)'
  prefs: []
  type: TYPE_NORMAL
- en: '`jointplot()`, [604](ch20.xhtml#page_604)–[605](ch20.xhtml#page_605)'
  prefs: []
  type: TYPE_NORMAL
- en: list of, [598](ch20.xhtml#page_598)
  prefs: []
  type: TYPE_NORMAL
- en: '`pairplot()`, [601](ch20.xhtml#page_601)–[602](ch20.xhtml#page_602)'
  prefs: []
  type: TYPE_NORMAL
- en: '`scatterplot()`, [602](ch20.xhtml#page_602)–[603](ch20.xhtml#page_603)'
  prefs: []
  type: TYPE_NORMAL
- en: '`stripplot()`, [603](ch20.xhtml#page_603)–[604](ch20.xhtml#page_604)'
  prefs: []
  type: TYPE_NORMAL
- en: resources for information, [623](ch20.xhtml#page_623)
  prefs: []
  type: TYPE_NORMAL
- en: wide-form and long-form data, [619](ch20.xhtml#page_619)
  prefs: []
  type: TYPE_NORMAL
- en: '`seek()` method, [327](ch12.xhtml#page_327)'
  prefs: []
  type: TYPE_NORMAL
- en: '`select_dtypes()` method, [612](ch20.xhtml#page_612)'
  prefs: []
  type: TYPE_NORMAL
- en: sequences, [220](ch09.xhtml#page_220), [248](ch09.xhtml#page_248)–[249](ch09.xhtml#page_249)
  prefs: []
  type: TYPE_NORMAL
- en: serialization
  prefs: []
  type: TYPE_NORMAL
- en: with `json` module, [339](ch12.xhtml#page_339)–[342](ch12.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: with `pickle` module, [334](ch12.xhtml#page_334)–[336](ch12.xhtml#page_336)
  prefs: []
  type: TYPE_NORMAL
- en: pickling vs. JSON, [334](ch12.xhtml#page_334)
  prefs: []
  type: TYPE_NORMAL
- en: series, [584](ch20.xhtml#page_584)–[585](ch20.xhtml#page_585)
  prefs: []
  type: TYPE_NORMAL
- en: set comprehensions, [274](ch10.xhtml#page_274)
  prefs: []
  type: TYPE_NORMAL
- en: '`setdefault()` method, [252](ch09.xhtml#page_252)–[253](ch09.xhtml#page_253)'
  prefs: []
  type: TYPE_NORMAL
- en: '`set()` function, [240](ch09.xhtml#page_240)'
  prefs: []
  type: TYPE_NORMAL
- en: sets, [239](ch09.xhtml#page_239)–[246](ch09.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: combining, [244](ch09.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [239](ch09.xhtml#page_239)–[241](ch09.xhtml#page_241)
  prefs: []
  type: TYPE_NORMAL
- en: differences between, [243](ch09.xhtml#page_243)
  prefs: []
  type: TYPE_NORMAL
- en: duplicates in, [243](ch09.xhtml#page_243)–[244](ch09.xhtml#page_244)
  prefs: []
  type: TYPE_NORMAL
- en: frozensets, [245](ch09.xhtml#page_245)–[246](ch09.xhtml#page_246)
  prefs: []
  type: TYPE_NORMAL
- en: functions and methods for, [241](ch09.xhtml#page_241)–[242](ch09.xhtml#page_242)
  prefs: []
  type: TYPE_NORMAL
- en: supersets, [245](ch09.xhtml#page_245)
  prefs: []
  type: TYPE_NORMAL
- en: '`shape()` function, [519](ch18.xhtml#page_519), [520](ch18.xhtml#page_520)'
  prefs: []
  type: TYPE_NORMAL
- en: shape of arrays, [492](ch18.xhtml#page_492)–[494](ch18.xhtml#page_494)
  prefs: []
  type: TYPE_NORMAL
- en: shaping arrays, [518](ch18.xhtml#page_518)–[519](ch18.xhtml#page_519)
  prefs: []
  type: TYPE_NORMAL
- en: shared package cache, [23](ch02.xhtml#page_23)
  prefs: []
  type: TYPE_NORMAL
- en: sharing
  prefs: []
  type: TYPE_NORMAL
- en: conda environments
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [44](ch02.xhtml#page_44)–[46](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: notebooks, [122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: via Binder, [129](ch05.xhtml#page_129)–[130](ch05.xhtml#page_130)
  prefs: []
  type: TYPE_NORMAL
- en: checking and running from Kernel menu, [123](ch05.xhtml#page_123)
  prefs: []
  type: TYPE_NORMAL
- en: with Colab, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: downloading, [123](ch05.xhtml#page_123)–[125](ch05.xhtml#page_125)
  prefs: []
  type: TYPE_NORMAL
- en: via GitHub and Gist, [125](ch05.xhtml#page_125)–[128](ch05.xhtml#page_128)
  prefs: []
  type: TYPE_NORMAL
- en: with Jovian, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: with JupyterHub, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: via Jupyter Notebook Viewer, [128](ch05.xhtml#page_128)–[129](ch05.xhtml#page_129)
  prefs: []
  type: TYPE_NORMAL
- en: with Microsoft Azure Notebooks, [131](ch05.xhtml#page_131)
  prefs: []
  type: TYPE_NORMAL
- en: trusting, [131](ch05.xhtml#page_131)–[132](ch05.xhtml#page_132)
  prefs: []
  type: TYPE_NORMAL
- en: shell utilities (`shutil`) module, [322](ch12.xhtml#page_322)–[324](ch12.xhtml#page_324)
  prefs: []
  type: TYPE_NORMAL
- en: '`shelve` module, [336](ch12.xhtml#page_336)–[339](ch12.xhtml#page_339)'
  prefs: []
  type: TYPE_NORMAL
- en: '`shelve.open()` method, [336](ch12.xhtml#page_336)'
  prefs: []
  type: TYPE_NORMAL
- en: shelves, closing, [338](ch12.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: shelving pickled data, [336](ch12.xhtml#page_336)–[338](ch12.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: '`shutil` module, [322](ch12.xhtml#page_322)–[324](ch12.xhtml#page_324)'
  prefs: []
  type: TYPE_NORMAL
- en: sidebar (JupyterLab), [147](ch06.xhtml#page_147)–[148](ch06.xhtml#page_148)
  prefs: []
  type: TYPE_NORMAL
- en: simulations, exploring in JupyterLab, [154](ch06.xhtml#page_154)–[155](ch06.xhtml#page_155)
  prefs: []
  type: TYPE_NORMAL
- en: single document mode (JupyterLab), [160](ch06.xhtml#page_160)
  prefs: []
  type: TYPE_NORMAL
- en: single-line comments, [379](ch14.xhtml#page_379)
  prefs: []
  type: TYPE_NORMAL
- en: size of datasets, [451](ch16.xhtml#page_451)
  prefs: []
  type: TYPE_NORMAL
- en: slicing
  prefs: []
  type: TYPE_NORMAL
- en: arrays
  prefs: []
  type: TYPE_NORMAL
- en: multidimensional arrays, [511](ch18.xhtml#page_511)–[514](ch18.xhtml#page_514)
  prefs: []
  type: TYPE_NORMAL
- en: 1D arrays, [507](ch18.xhtml#page_507)–[509](ch18.xhtml#page_509)
  prefs: []
  type: TYPE_NORMAL
- en: 2D arrays, [509](ch18.xhtml#page_509)–[511](ch18.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [194](ch07.xhtml#page_194)–[196](ch07.xhtml#page_196)
  prefs: []
  type: TYPE_NORMAL
- en: time series in pandas, [646](ch21.xhtml#page_646)–[647](ch21.xhtml#page_647)
  prefs: []
  type: TYPE_NORMAL
- en: slideshows, notebooks as
  prefs: []
  type: TYPE_NORMAL
- en: creating, [133](ch05.xhtml#page_133)–[136](ch05.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: installing RISE extension, [132](ch05.xhtml#page_132)–[133](ch05.xhtml#page_133)
  prefs: []
  type: TYPE_NORMAL
- en: speaker notes, [136](ch05.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: sliding window functions, [660](ch21.xhtml#page_660)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: '`__slots__` class variable, [372](ch13.xhtml#page_372)–[373](ch13.xhtml#page_373)'
  prefs: []
  type: TYPE_NORMAL
- en: '`sorted()` function, [254](ch09.xhtml#page_254)'
  prefs: []
  type: TYPE_NORMAL
- en: sorting
  prefs: []
  type: TYPE_NORMAL
- en: dictionaries, [254](ch09.xhtml#page_254)
  prefs: []
  type: TYPE_NORMAL
- en: lists, [234](ch09.xhtml#page_234)–[235](ch09.xhtml#page_235)
  prefs: []
  type: TYPE_NORMAL
- en: '`sort()` method, [234](ch09.xhtml#page_234)–[235](ch09.xhtml#page_235)'
  prefs: []
  type: TYPE_NORMAL
- en: spaCy, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: spatial indexing, [463](ch17.xhtml#page_463)
  prefs: []
  type: TYPE_NORMAL
- en: speaker notes for slideshows, [136](ch05.xhtml#page_136)
  prefs: []
  type: TYPE_NORMAL
- en: special consoles in Spyder, [77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: special methods, [351](ch13.xhtml#page_351), [365](ch13.xhtml#page_365)
  prefs: []
  type: TYPE_NORMAL
- en: specifications files, creating, [46](ch02.xhtml#page_46)
  prefs: []
  type: TYPE_NORMAL
- en: spines, [557](ch19.xhtml#page_557)
  prefs: []
  type: TYPE_NORMAL
- en: splat (`*`) operator, [226](ch09.xhtml#page_226), [228](ch09.xhtml#page_228)
  prefs: []
  type: TYPE_NORMAL
- en: '`split()` function, [523](ch18.xhtml#page_523)'
  prefs: []
  type: TYPE_NORMAL
- en: SplitMap, [474](ch17.xhtml#page_474)
  prefs: []
  type: TYPE_NORMAL
- en: '`split()` method, [198](ch07.xhtml#page_198)'
  prefs: []
  type: TYPE_NORMAL
- en: splitting arrays, [522](ch18.xhtml#page_522)–[524](ch18.xhtml#page_524)
  prefs: []
  type: TYPE_NORMAL
- en: Spyder
  prefs: []
  type: TYPE_NORMAL
- en: Code Analysis pane, [85](ch04.xhtml#page_85)–[86](ch04.xhtml#page_86), [391](ch14.xhtml#page_391)–[395](ch14.xhtml#page_395)
  prefs: []
  type: TYPE_NORMAL
- en: configuring interface, [64](ch04.xhtml#page_64)–[66](ch04.xhtml#page_66)
  prefs: []
  type: TYPE_NORMAL
- en: Debugger pane, [90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: defined, [2](part01.xhtml#page_2)
  prefs: []
  type: TYPE_NORMAL
- en: Editor pane, [78](ch04.xhtml#page_78)–[84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: autocompleting text, [84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: defining code cells, [81](ch04.xhtml#page_81)–[83](ch04.xhtml#page_83)
  prefs: []
  type: TYPE_NORMAL
- en: setting run configuration, [83](ch04.xhtml#page_83)–[84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: writing programs with, [78](ch04.xhtml#page_78)–[81](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: Help pane, [72](ch04.xhtml#page_72)–[74](ch04.xhtml#page_74)
  prefs: []
  type: TYPE_NORMAL
- en: installing
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [62](ch04.xhtml#page_62)–[63](ch04.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [63](ch04.xhtml#page_63)–[64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: for conda environments and packages, [66](ch04.xhtml#page_66)–[68](ch04.xhtml#page_68)
  prefs: []
  type: TYPE_NORMAL
- en: IPython console, [74](ch04.xhtml#page_74)–[77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: clearing namespace, [76](ch04.xhtml#page_76)–[77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: History pane, [77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: kernels in, [76](ch04.xhtml#page_76)
  prefs: []
  type: TYPE_NORMAL
- en: output and plotting, [75](ch04.xhtml#page_75)
  prefs: []
  type: TYPE_NORMAL
- en: launching
  prefs: []
  type: TYPE_NORMAL
- en: with Anaconda Navigator, [62](ch04.xhtml#page_62)–[63](ch04.xhtml#page_63)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [63](ch04.xhtml#page_63)–[64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: from Start menu, [64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: Profiler pane, [89](ch04.xhtml#page_89)–[90](ch04.xhtml#page_90)
  prefs: []
  type: TYPE_NORMAL
- en: project files and folders, [68](ch04.xhtml#page_68)–[72](ch04.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: Project pane, [72](ch04.xhtml#page_72)
  prefs: []
  type: TYPE_NORMAL
- en: projects, creating, [316](ch12.xhtml#page_316), [348](ch13.xhtml#page_348)–[349](ch13.xhtml#page_349)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [61](ch04.xhtml#page_61)
  prefs: []
  type: TYPE_NORMAL
- en: special consoles, [77](ch04.xhtml#page_77)
  prefs: []
  type: TYPE_NORMAL
- en: Variable Explorer pane, [86](ch04.xhtml#page_86)–[89](ch04.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: SQLite, [343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: stacking, arrays, [521](ch18.xhtml#page_521)–[522](ch18.xhtml#page_522)
  prefs: []
  type: TYPE_NORMAL
- en: stack overflow, [298](ch11.xhtml#page_298)
  prefs: []
  type: TYPE_NORMAL
- en: stand-alone mode for modules, [310](ch11.xhtml#page_310)–[311](ch11.xhtml#page_311)
  prefs: []
  type: TYPE_NORMAL
- en: standard library (Python), [303](ch11.xhtml#page_303)
  prefs: []
  type: TYPE_NORMAL
- en: start date, changing, [656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: Start menu (Spyder), launching, [64](ch04.xhtml#page_64)
  prefs: []
  type: TYPE_NORMAL
- en: statements, [177](ch07.xhtml#page_177)
  prefs: []
  type: TYPE_NORMAL
- en: static typing, [184](ch07.xhtml#page_184)
  prefs: []
  type: TYPE_NORMAL
- en: statistical methods in NumPy, [531](ch18.xhtml#page_531)–[533](ch18.xhtml#page_533)
  prefs: []
  type: TYPE_NORMAL
- en: statsmodels, [406](ch15.xhtml#page_406)
  prefs: []
  type: TYPE_NORMAL
- en: storage locations for conda environments, specifying, [37](ch02.xhtml#page_37)–[39](ch02.xhtml#page_39)
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit, [447](ch16.xhtml#page_447)–[448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: '`strftime()` method, [628](ch21.xhtml#page_628)–[630](ch21.xhtml#page_630)'
  prefs: []
  type: TYPE_NORMAL
- en: '`str()` function, [190](ch07.xhtml#page_190)'
  prefs: []
  type: TYPE_NORMAL
- en: string concatenation operator (`+`), [192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: '`string` module, [199](ch07.xhtml#page_199)'
  prefs: []
  type: TYPE_NORMAL
- en: string replication operator (`*`), [192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: strings, [189](ch07.xhtml#page_189)–[200](ch07.xhtml#page_200). *See also* text
  prefs: []
  type: TYPE_NORMAL
- en: converting to dates and times, [630](ch21.xhtml#page_630)–[631](ch21.xhtml#page_631)
  prefs: []
  type: TYPE_NORMAL
- en: escape sequences, [190](ch07.xhtml#page_190)–[191](ch07.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: formatting, [192](ch07.xhtml#page_192)–[194](ch07.xhtml#page_194), [206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: immutability of, [197](ch07.xhtml#page_197)
  prefs: []
  type: TYPE_NORMAL
- en: interning, [205](ch08.xhtml#page_205)
  prefs: []
  type: TYPE_NORMAL
- en: membership operators, [196](ch07.xhtml#page_196)
  prefs: []
  type: TYPE_NORMAL
- en: methods, [196](ch07.xhtml#page_196)–[200](ch07.xhtml#page_200)
  prefs: []
  type: TYPE_NORMAL
- en: operator overloading, [191](ch07.xhtml#page_191)–[192](ch07.xhtml#page_192)
  prefs: []
  type: TYPE_NORMAL
- en: quotation marks for, [189](ch07.xhtml#page_189)–[190](ch07.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: raw, [191](ch07.xhtml#page_191)
  prefs: []
  type: TYPE_NORMAL
- en: slicing, [194](ch07.xhtml#page_194)–[196](ch07.xhtml#page_196)
  prefs: []
  type: TYPE_NORMAL
- en: '`stripplot()` method, [603](ch20.xhtml#page_603)–[604](ch20.xhtml#page_604)'
  prefs: []
  type: TYPE_NORMAL
- en: stripplots, [425](ch16.xhtml#page_425)
  prefs: []
  type: TYPE_NORMAL
- en: '`strptime()` method, [631](ch21.xhtml#page_631)'
  prefs: []
  type: TYPE_NORMAL
- en: structured arrays, [535](ch18.xhtml#page_535)
  prefs: []
  type: TYPE_NORMAL
- en: style files, creating, [576](ch19.xhtml#page_576)–[578](ch19.xhtml#page_578)
  prefs: []
  type: TYPE_NORMAL
- en: style sheets, applying, [578](ch19.xhtml#page_578)–[580](ch19.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: '`style.use()` method, [577](ch19.xhtml#page_577)'
  prefs: []
  type: TYPE_NORMAL
- en: styling plots, [573](ch19.xhtml#page_573)–[580](ch19.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: runtime configuration parameters, [574](ch19.xhtml#page_574)–[576](ch19.xhtml#page_576)
  prefs: []
  type: TYPE_NORMAL
- en: style files, [576](ch19.xhtml#page_576)–[578](ch19.xhtml#page_578)
  prefs: []
  type: TYPE_NORMAL
- en: style sheets, [578](ch19.xhtml#page_578)–[580](ch19.xhtml#page_580)
  prefs: []
  type: TYPE_NORMAL
- en: subclasses, [355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: '`subplot()` method, [545](ch19.xhtml#page_545)–[549](ch19.xhtml#page_549)'
  prefs: []
  type: TYPE_NORMAL
- en: '`subplot_mosaic()` method, [566](ch19.xhtml#page_566)'
  prefs: []
  type: TYPE_NORMAL
- en: subplots in Matplotlib
  prefs: []
  type: TYPE_NORMAL
- en: object-oriented approach, [561](ch19.xhtml#page_561)–[564](ch19.xhtml#page_564)
  prefs: []
  type: TYPE_NORMAL
- en: pyplot, [545](ch19.xhtml#page_545)–[549](ch19.xhtml#page_549)
  prefs: []
  type: TYPE_NORMAL
- en: '`subplots()` method, [561](ch19.xhtml#page_561)–[564](ch19.xhtml#page_564)'
  prefs: []
  type: TYPE_NORMAL
- en: subtraction operator (`-`), [176](ch07.xhtml#page_176)
  prefs: []
  type: TYPE_NORMAL
- en: superclasses, [355](ch13.xhtml#page_355)
  prefs: []
  type: TYPE_NORMAL
- en: '`super()` function, [358](ch13.xhtml#page_358)–[359](ch13.xhtml#page_359)'
  prefs: []
  type: TYPE_NORMAL
- en: supersets, [245](ch09.xhtml#page_245)
  prefs: []
  type: TYPE_NORMAL
- en: '`swapaxes()` function, [521](ch18.xhtml#page_521)'
  prefs: []
  type: TYPE_NORMAL
- en: swapping array axes, [520](ch18.xhtml#page_520)–[521](ch18.xhtml#page_521)
  prefs: []
  type: TYPE_NORMAL
- en: SymPy, [402](ch15.xhtml#page_402)–[403](ch15.xhtml#page_403)
  prefs: []
  type: TYPE_NORMAL
- en: synchronized views, creating in JupyterLab, [158](ch06.xhtml#page_158)
  prefs: []
  type: TYPE_NORMAL
- en: syntactic sugar, [363](ch13.xhtml#page_363)–[364](ch13.xhtml#page_364)
  prefs: []
  type: TYPE_NORMAL
- en: syntax highlighting, [53](ch03.xhtml#page_53)
  prefs: []
  type: TYPE_NORMAL
- en: syntax styles, choosing in Jupyter Qt console, [53](ch03.xhtml#page_53)–[54](ch03.xhtml#page_54)
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: tabs in Jupyter Qt console, [55](ch03.xhtml#page_55)
  prefs: []
  type: TYPE_NORMAL
- en: TensorFlow, [407](ch15.xhtml#page_407)
  prefs: []
  type: TYPE_NORMAL
- en: tensors, [493](ch18.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: terminal
  prefs: []
  type: TYPE_NORMAL
- en: defined, [4](part01.xhtml#page_4)
  prefs: []
  type: TYPE_NORMAL
- en: running scripts in, [162](ch06.xhtml#page_162)–[163](ch06.xhtml#page_163)
  prefs: []
  type: TYPE_NORMAL
- en: terminal window. *See* CLI
  prefs: []
  type: TYPE_NORMAL
- en: ternary expressions, [262](ch10.xhtml#page_262)
  prefs: []
  type: TYPE_NORMAL
- en: text. *See also* strings
  prefs: []
  type: TYPE_NORMAL
- en: adding in notebooks, [102](ch05.xhtml#page_102)–[104](ch05.xhtml#page_104)
  prefs: []
  type: TYPE_NORMAL
- en: autocompleting in Editor pane (Spyder), [84](ch04.xhtml#page_84)
  prefs: []
  type: TYPE_NORMAL
- en: TextBlob, [412](ch15.xhtml#page_412)
  prefs: []
  type: TYPE_NORMAL
- en: text editor, JupyterLab
  prefs: []
  type: TYPE_NORMAL
- en: documentation with, [164](ch06.xhtml#page_164)–[165](ch06.xhtml#page_165)
  prefs: []
  type: TYPE_NORMAL
- en: running scripts
  prefs: []
  type: TYPE_NORMAL
- en: in notebooks, [163](ch06.xhtml#page_163)–[164](ch06.xhtml#page_164)
  prefs: []
  type: TYPE_NORMAL
- en: in terminal, [162](ch06.xhtml#page_162)–[163](ch06.xhtml#page_163)
  prefs: []
  type: TYPE_NORMAL
- en: writing scripts, [161](ch06.xhtml#page_161)–[162](ch06.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: text editor, Spyder. *See* Editor pane, (Spyder)
  prefs: []
  type: TYPE_NORMAL
- en: text files
  prefs: []
  type: TYPE_NORMAL
- en: closing, [329](ch12.xhtml#page_329)–[330](ch12.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: reading, [325](ch12.xhtml#page_325)–[329](ch12.xhtml#page_329)
  prefs: []
  type: TYPE_NORMAL
- en: with pathlib, [332](ch12.xhtml#page_332)–[333](ch12.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: writing to, [330](ch12.xhtml#page_330)–[331](ch12.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: with pathlib, [332](ch12.xhtml#page_332)–[333](ch12.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: '`text()` method, [551](ch19.xhtml#page_551)'
  prefs: []
  type: TYPE_NORMAL
- en: threads, [417](ch15.xhtml#page_417)
  prefs: []
  type: TYPE_NORMAL
- en: 3D arrays. *See* multidimensional arrays
  prefs: []
  type: TYPE_NORMAL
- en: 3D plots, [568](ch19.xhtml#page_568)–[569](ch19.xhtml#page_569)
  prefs: []
  type: TYPE_NORMAL
- en: thresholding, [515](ch18.xhtml#page_515)
  prefs: []
  type: TYPE_NORMAL
- en: '`tight_layout()` method, [547](ch19.xhtml#page_547), [554](ch19.xhtml#page_554)'
  prefs: []
  type: TYPE_NORMAL
- en: tile maps, [463](ch17.xhtml#page_463)
  prefs: []
  type: TYPE_NORMAL
- en: '`timedelta` object, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)'
  prefs: []
  type: TYPE_NORMAL
- en: '`timedelta_range()` method, [644](ch21.xhtml#page_644)'
  prefs: []
  type: TYPE_NORMAL
- en: time deltas (pandas), [636](ch21.xhtml#page_636), [644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: time series
  prefs: []
  type: TYPE_NORMAL
- en: '`datetime` module, [626](ch21.xhtml#page_626)'
  prefs: []
  type: TYPE_NORMAL
- en: converting strings to dates and times, [630](ch21.xhtml#page_630)–[631](ch21.xhtml#page_631)
  prefs: []
  type: TYPE_NORMAL
- en: current date and time, [626](ch21.xhtml#page_626)–[627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: data types, [627](ch21.xhtml#page_627)
  prefs: []
  type: TYPE_NORMAL
- en: durations, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: formatting dates and times, [628](ch21.xhtml#page_628)–[630](ch21.xhtml#page_630)
  prefs: []
  type: TYPE_NORMAL
- en: plotting with, [632](ch21.xhtml#page_632)–[633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: timestamps, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: time zones, [633](ch21.xhtml#page_633)–[636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: pandas, [636](ch21.xhtml#page_636)–[637](ch21.xhtml#page_637)
  prefs: []
  type: TYPE_NORMAL
- en: changing start date, [656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: date offsets, [645](ch21.xhtml#page_645)
  prefs: []
  type: TYPE_NORMAL
- en: date ranges, [640](ch21.xhtml#page_640)–[642](ch21.xhtml#page_642)
  prefs: []
  type: TYPE_NORMAL
- en: downsampling, [650](ch21.xhtml#page_650)–[656](ch21.xhtml#page_656)
  prefs: []
  type: TYPE_NORMAL
- en: indexing and slicing, [646](ch21.xhtml#page_646)–[647](ch21.xhtml#page_647)
  prefs: []
  type: TYPE_NORMAL
- en: interpolation, [656](ch21.xhtml#page_656)–[660](ch21.xhtml#page_660)
  prefs: []
  type: TYPE_NORMAL
- en: parsing data, [637](ch21.xhtml#page_637)–[640](ch21.xhtml#page_640)
  prefs: []
  type: TYPE_NORMAL
- en: resampling, [647](ch21.xhtml#page_647)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: sliding window functions, [660](ch21.xhtml#page_660)–[663](ch21.xhtml#page_663)
  prefs: []
  type: TYPE_NORMAL
- en: time deltas, [644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: time spans, [636](ch21.xhtml#page_636), [642](ch21.xhtml#page_642)–[644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: upsampling, [648](ch21.xhtml#page_648)–[650](ch21.xhtml#page_650)
  prefs: []
  type: TYPE_NORMAL
- en: time spans (pandas), [636](ch21.xhtml#page_636), [642](ch21.xhtml#page_642)–[644](ch21.xhtml#page_644)
  prefs: []
  type: TYPE_NORMAL
- en: '`Timestamp` class (pandas), [637](ch21.xhtml#page_637)'
  prefs: []
  type: TYPE_NORMAL
- en: timestamps
  prefs: []
  type: TYPE_NORMAL
- en: in `datetime` module, [627](ch21.xhtml#page_627)–[628](ch21.xhtml#page_628)
  prefs: []
  type: TYPE_NORMAL
- en: in pandas, [637](ch21.xhtml#page_637)
  prefs: []
  type: TYPE_NORMAL
- en: time zones
  prefs: []
  type: TYPE_NORMAL
- en: in `datetime` module, [633](ch21.xhtml#page_633)–[636](ch21.xhtml#page_636)
  prefs: []
  type: TYPE_NORMAL
- en: in pandas, [639](ch21.xhtml#page_639)–[640](ch21.xhtml#page_640)
  prefs: []
  type: TYPE_NORMAL
- en: '`to_datetime()` method, [637](ch21.xhtml#page_637)–[640](ch21.xhtml#page_640)'
  prefs: []
  type: TYPE_NORMAL
- en: tracebacks, [182](ch07.xhtml#page_182)
  prefs: []
  type: TYPE_NORMAL
- en: tracing flow of execution, [278](ch10.xhtml#page_278)–[281](ch10.xhtml#page_281)
  prefs: []
  type: TYPE_NORMAL
- en: training datasets, [612](ch20.xhtml#page_612)–[613](ch20.xhtml#page_613)
  prefs: []
  type: TYPE_NORMAL
- en: '`train_test_split()` method, [612](ch20.xhtml#page_612)–[613](ch20.xhtml#page_613)'
  prefs: []
  type: TYPE_NORMAL
- en: '`translate()` function, [199](ch07.xhtml#page_199)'
  prefs: []
  type: TYPE_NORMAL
- en: '`transpose()` function, [520](ch18.xhtml#page_520)'
  prefs: []
  type: TYPE_NORMAL
- en: transposing arrays, [520](ch18.xhtml#page_520)–[521](ch18.xhtml#page_521)
  prefs: []
  type: TYPE_NORMAL
- en: trusting notebooks, [131](ch05.xhtml#page_131)–[132](ch05.xhtml#page_132)
  prefs: []
  type: TYPE_NORMAL
- en: '`try` statement, [274](ch10.xhtml#page_274)–[276](ch10.xhtml#page_276)'
  prefs: []
  type: TYPE_NORMAL
- en: '`tuple()` function, [221](ch09.xhtml#page_221)–[222](ch09.xhtml#page_222)'
  prefs: []
  type: TYPE_NORMAL
- en: tuples, [220](ch09.xhtml#page_220)–[229](ch09.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: converting data types to, [221](ch09.xhtml#page_221)–[222](ch09.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: creating, [221](ch09.xhtml#page_221)
  prefs: []
  type: TYPE_NORMAL
- en: functions and methods for, [222](ch09.xhtml#page_222)
  prefs: []
  type: TYPE_NORMAL
- en: length of, [223](ch09.xhtml#page_223)–[224](ch09.xhtml#page_224)
  prefs: []
  type: TYPE_NORMAL
- en: minimum and maximum values, [224](ch09.xhtml#page_224)–[225](ch09.xhtml#page_225)
  prefs: []
  type: TYPE_NORMAL
- en: mutability and, [227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: operator overloading, [227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: printing, [228](ch09.xhtml#page_228)–[229](ch09.xhtml#page_229)
  prefs: []
  type: TYPE_NORMAL
- en: saving in JSON format, [341](ch12.xhtml#page_341)–[342](ch12.xhtml#page_342)
  prefs: []
  type: TYPE_NORMAL
- en: unpacking, [225](ch09.xhtml#page_225)–[227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: 2D arrays, [493](ch18.xhtml#page_493), [509](ch18.xhtml#page_509)–[511](ch18.xhtml#page_511)
  prefs: []
  type: TYPE_NORMAL
- en: type annotations, [366](ch13.xhtml#page_366)–[367](ch13.xhtml#page_367)
  prefs: []
  type: TYPE_NORMAL
- en: type casting, [186](ch07.xhtml#page_186)–[187](ch07.xhtml#page_187)
  prefs: []
  type: TYPE_NORMAL
- en: '`type()` function, [185](ch07.xhtml#page_185)'
  prefs: []
  type: TYPE_NORMAL
- en: type hints, [184](ch07.xhtml#page_184), [366](ch13.xhtml#page_366)–[367](ch13.xhtml#page_367)
  prefs: []
  type: TYPE_NORMAL
- en: '`tz_convert()` method, [639](ch21.xhtml#page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '`tz_localize()` method, [639](ch21.xhtml#page_639)'
  prefs: []
  type: TYPE_NORMAL
- en: '**U**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: unary universal functions in NumPy, [529](ch18.xhtml#page_529)–[530](ch18.xhtml#page_530)
  prefs: []
  type: TYPE_NORMAL
- en: Unicode, [190](ch07.xhtml#page_190)
  prefs: []
  type: TYPE_NORMAL
- en: '`union()` method, [244](ch09.xhtml#page_244)'
  prefs: []
  type: TYPE_NORMAL
- en: universal functions in NumPy, [529](ch18.xhtml#page_529)–[531](ch18.xhtml#page_531)
  prefs: []
  type: TYPE_NORMAL
- en: unpacking tuples, [225](ch09.xhtml#page_225)–[227](ch09.xhtml#page_227)
  prefs: []
  type: TYPE_NORMAL
- en: '`update()` method, [251](ch09.xhtml#page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: updating
  prefs: []
  type: TYPE_NORMAL
- en: docstrings, [388](ch14.xhtml#page_388)–[391](ch14.xhtml#page_391)
  prefs: []
  type: TYPE_NORMAL
- en: packages
  prefs: []
  type: TYPE_NORMAL
- en: in Anaconda Navigator, [30](ch02.xhtml#page_30)–[33](ch02.xhtml#page_33)
  prefs: []
  type: TYPE_NORMAL
- en: with CLI, [42](ch02.xhtml#page_42)–[44](ch02.xhtml#page_44)
  prefs: []
  type: TYPE_NORMAL
- en: upsampling time series in pandas, [648](ch21.xhtml#page_648)–[650](ch21.xhtml#page_650)
  prefs: []
  type: TYPE_NORMAL
- en: user input, [213](ch08.xhtml#page_213)–[214](ch08.xhtml#page_214)
  prefs: []
  type: TYPE_NORMAL
- en: UTC (coordinated universal time), [633](ch21.xhtml#page_633)
  prefs: []
  type: TYPE_NORMAL
- en: '**V**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Vaex, [404](ch15.xhtml#page_404)
  prefs: []
  type: TYPE_NORMAL
- en: '`value_counts()` method, [659](ch21.xhtml#page_659)'
  prefs: []
  type: TYPE_NORMAL
- en: '`values()` method, [250](ch09.xhtml#page_250)–[251](ch09.xhtml#page_251)'
  prefs: []
  type: TYPE_NORMAL
- en: Variable Explorer pane (Spyder), [86](ch04.xhtml#page_86)–[89](ch04.xhtml#page_89)
  prefs: []
  type: TYPE_NORMAL
- en: variables, [201](ch08.xhtml#page_201)
  prefs: []
  type: TYPE_NORMAL
- en: assigning, [177](ch07.xhtml#page_177), [203](ch08.xhtml#page_203)–[206](ch08.xhtml#page_206)
  prefs: []
  type: TYPE_NORMAL
- en: comparison operators, [214](ch08.xhtml#page_214)–[217](ch08.xhtml#page_217)
  prefs: []
  type: TYPE_NORMAL
- en: global, [294](ch11.xhtml#page_294)–[295](ch11.xhtml#page_295)
  prefs: []
  type: TYPE_NORMAL
- en: identities of, [202](ch08.xhtml#page_202)–[203](ch08.xhtml#page_203)
  prefs: []
  type: TYPE_NORMAL
- en: insignificant, [212](ch08.xhtml#page_212)
  prefs: []
  type: TYPE_NORMAL
- en: naming, [206](ch08.xhtml#page_206)–[213](ch08.xhtml#page_213)
  prefs: []
  type: TYPE_NORMAL
- en: for user input, [213](ch08.xhtml#page_213)–[214](ch08.xhtml#page_214)
  prefs: []
  type: TYPE_NORMAL
- en: vector data, [457](ch17.xhtml#page_457)
  prefs: []
  type: TYPE_NORMAL
- en: vectorization, [524](ch18.xhtml#page_524)–[526](ch18.xhtml#page_526)
  prefs: []
  type: TYPE_NORMAL
- en: vectors, [493](ch18.xhtml#page_493)
  prefs: []
  type: TYPE_NORMAL
- en: visualizing data
  prefs: []
  type: TYPE_NORMAL
- en: dashboards, [445](ch16.xhtml#page_445)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Dash, [446](ch16.xhtml#page_446)–[447](ch16.xhtml#page_447)
  prefs: []
  type: TYPE_NORMAL
- en: Panel, [449](ch16.xhtml#page_449)–[450](ch16.xhtml#page_450)
  prefs: []
  type: TYPE_NORMAL
- en: Streamlit, [447](ch16.xhtml#page_447)–[448](ch16.xhtml#page_448)
  prefs: []
  type: TYPE_NORMAL
- en: Voilà, [448](ch16.xhtml#page_448)–[449](ch16.xhtml#page_449)
  prefs: []
  type: TYPE_NORMAL
- en: geospatial libraries
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: Cartopy, [464](ch17.xhtml#page_464)–[465](ch17.xhtml#page_465)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [484](ch17.xhtml#page_484)–[487](ch17.xhtml#page_487)
  prefs: []
  type: TYPE_NORMAL
- en: folium, [470](ch17.xhtml#page_470)–[473](ch17.xhtml#page_473)
  prefs: []
  type: TYPE_NORMAL
- en: GeoPandas, [460](ch17.xhtml#page_460)–[464](ch17.xhtml#page_464)
  prefs: []
  type: TYPE_NORMAL
- en: Geoplot, [465](ch17.xhtml#page_465)–[467](ch17.xhtml#page_467)
  prefs: []
  type: TYPE_NORMAL
- en: GeoViews, [476](ch17.xhtml#page_476)–[479](ch17.xhtml#page_479)
  prefs: []
  type: TYPE_NORMAL
- en: ipyleaflet, [473](ch17.xhtml#page_473)–[476](ch17.xhtml#page_476)
  prefs: []
  type: TYPE_NORMAL
- en: KeplerGL, [479](ch17.xhtml#page_479)–[481](ch17.xhtml#page_481)
  prefs: []
  type: TYPE_NORMAL
- en: list of, [459](ch17.xhtml#page_459)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [467](ch17.xhtml#page_467)–[469](ch17.xhtml#page_469)
  prefs: []
  type: TYPE_NORMAL
- en: purpose of, [458](ch17.xhtml#page_458)
  prefs: []
  type: TYPE_NORMAL
- en: pydeck, [481](ch17.xhtml#page_481)–[484](ch17.xhtml#page_484)
  prefs: []
  type: TYPE_NORMAL
- en: plotting libraries, [419](ch16.xhtml#page_419)–[420](ch16.xhtml#page_420)
  prefs: []
  type: TYPE_NORMAL
- en: Altair, [429](ch16.xhtml#page_429)–[430](ch16.xhtml#page_430)
  prefs: []
  type: TYPE_NORMAL
- en: Bokeh, [430](ch16.xhtml#page_430)–[431](ch16.xhtml#page_431)
  prefs: []
  type: TYPE_NORMAL
- en: choosing, [450](ch16.xhtml#page_450)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Datashader, [441](ch16.xhtml#page_441)–[443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: HoloViews, [436](ch16.xhtml#page_436)–[441](ch16.xhtml#page_441)
  prefs: []
  type: TYPE_NORMAL
- en: for InfoVis, [421](ch16.xhtml#page_421)
  prefs: []
  type: TYPE_NORMAL
- en: Matplotlib, [422](ch16.xhtml#page_422)–[456](ch16.xhtml#page_456), [537](ch19.xhtml#page_537)–[538](ch19.xhtml#page_538)
  prefs: []
  type: TYPE_NORMAL
- en: Mayavi, [443](ch16.xhtml#page_443)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: pandas plotting API, [428](ch16.xhtml#page_428)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: Plotly, [431](ch16.xhtml#page_431)–[436](ch16.xhtml#page_436)
  prefs: []
  type: TYPE_NORMAL
- en: seaborn, [424](ch16.xhtml#page_424)–[456](ch16.xhtml#page_456)
  prefs: []
  type: TYPE_NORMAL
- en: radial visualization, [605](ch20.xhtml#page_605)–[608](ch20.xhtml#page_608)
  prefs: []
  type: TYPE_NORMAL
- en: types of visualizations, [420](ch16.xhtml#page_420)–[445](ch16.xhtml#page_445)
  prefs: []
  type: TYPE_NORMAL
- en: void functions, [285](ch11.xhtml#page_285)
  prefs: []
  type: TYPE_NORMAL
- en: Voilà, [448](ch16.xhtml#page_448)–[449](ch16.xhtml#page_449)
  prefs: []
  type: TYPE_NORMAL
- en: '`vsplit()` function, [523](ch18.xhtml#page_523)'
  prefs: []
  type: TYPE_NORMAL
- en: '`vstack()` function, [522](ch18.xhtml#page_522)'
  prefs: []
  type: TYPE_NORMAL
- en: '**W**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Wang, Peter, [443](ch16.xhtml#page_443)
  prefs: []
  type: TYPE_NORMAL
- en: web scraping, [413](ch15.xhtml#page_413)
  prefs: []
  type: TYPE_NORMAL
- en: '`while` statement, [265](ch10.xhtml#page_265)–[267](ch10.xhtml#page_267)'
  prefs: []
  type: TYPE_NORMAL
- en: whitespace in mathematical expressions, [179](ch07.xhtml#page_179)
  prefs: []
  type: TYPE_NORMAL
- en: widgets, [115](ch05.xhtml#page_115)
  prefs: []
  type: TYPE_NORMAL
- en: creating
  prefs: []
  type: TYPE_NORMAL
- en: with `interact` class, [116](ch05.xhtml#page_116)–[118](ch05.xhtml#page_118)
  prefs: []
  type: TYPE_NORMAL
- en: with `interactive` class, [118](ch05.xhtml#page_118)–[119](ch05.xhtml#page_119)
  prefs: []
  type: TYPE_NORMAL
- en: manually, [119](ch05.xhtml#page_119)–[120](ch05.xhtml#page_120)
  prefs: []
  type: TYPE_NORMAL
- en: customizing, [121](ch05.xhtml#page_121)–[122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: embedding, [122](ch05.xhtml#page_122)
  prefs: []
  type: TYPE_NORMAL
- en: handling events, [120](ch05.xhtml#page_120)–[121](ch05.xhtml#page_121)
  prefs: []
  type: TYPE_NORMAL
- en: installing ipywidgets, [115](ch05.xhtml#page_115)–[116](ch05.xhtml#page_116)
  prefs: []
  type: TYPE_NORMAL
- en: in JupyterLab, [170](ch06.xhtml#page_170)–[171](ch06.xhtml#page_171)
  prefs: []
  type: TYPE_NORMAL
- en: Windows, Anaconda installation, [9](ch01.xhtml#page_9)–[11](ch01.xhtml#page_11)
  prefs: []
  type: TYPE_NORMAL
- en: '`with` statement'
  prefs: []
  type: TYPE_NORMAL
- en: closing files, [329](ch12.xhtml#page_329)–[330](ch12.xhtml#page_330)
  prefs: []
  type: TYPE_NORMAL
- en: closing shelves, [338](ch12.xhtml#page_338)
  prefs: []
  type: TYPE_NORMAL
- en: workspaces (JupyterLab)
  prefs: []
  type: TYPE_NORMAL
- en: clearing, [157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: closing, [157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: saving, [156](ch06.xhtml#page_156)–[157](ch06.xhtml#page_157)
  prefs: []
  type: TYPE_NORMAL
- en: '`writelines()` method, [331](ch12.xhtml#page_331)'
  prefs: []
  type: TYPE_NORMAL
- en: '`write()` method, [330](ch12.xhtml#page_330)'
  prefs: []
  type: TYPE_NORMAL
- en: writing
  prefs: []
  type: TYPE_NORMAL
- en: array data, [533](ch18.xhtml#page_533)–[535](ch18.xhtml#page_535)
  prefs: []
  type: TYPE_NORMAL
- en: with Editor pane (Spyder), [78](ch04.xhtml#page_78)–[81](ch04.xhtml#page_81)
  prefs: []
  type: TYPE_NORMAL
- en: modules, [307](ch11.xhtml#page_307)–[310](ch11.xhtml#page_310)
  prefs: []
  type: TYPE_NORMAL
- en: scripts in JupyterLab text editor, [161](ch06.xhtml#page_161)–[162](ch06.xhtml#page_162)
  prefs: []
  type: TYPE_NORMAL
- en: to text files, [330](ch12.xhtml#page_330)–[331](ch12.xhtml#page_331)
  prefs: []
  type: TYPE_NORMAL
- en: with pathlib, [332](ch12.xhtml#page_332)–[333](ch12.xhtml#page_333)
  prefs: []
  type: TYPE_NORMAL
- en: '**X**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: XML (eXtensible Markup Language), [343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: '**Y**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: YAML, [44](ch02.xhtml#page_44), [343](ch12.xhtml#page_343)
  prefs: []
  type: TYPE_NORMAL
- en: '`yield` statement, [301](ch11.xhtml#page_301)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Z**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '`zero()` function, [502](ch18.xhtml#page_502)'
  prefs: []
  type: TYPE_NORMAL
- en: '`zip()` function, [248](ch09.xhtml#page_248)'
  prefs: []
  type: TYPE_NORMAL
