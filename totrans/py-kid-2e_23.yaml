- en: C
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Troubleshooting
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](Images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this appendix, you’ll find information on how to fix some less common problems
    with Python. If you happen to be running older versions of some operating systems,
    you may experience these issues.
  prefs: []
  type: TYPE_NORMAL
- en: “TK” Errors Importing Turtle on Ubuntu
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you’re using an older version of Ubuntu Linux and get errors when you import
    turtle, you might need to install a piece of software called *tkinter*. To do
    so, open the Ubuntu Software Center and enter **python-tk** in the search box.
    “Tkinter—Writing Tk Applications with Python” should appear in the window. Click
    **Install** to install this package. This shouldn’t be required if you’re running
    a more recent version of Ubuntu—if possible, you should get the owner of your
    computer to update it for you.
  prefs: []
  type: TYPE_NORMAL
- en: Attribute Error Using Turtle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Some new programmers experience strange *attribute* errors when trying to use
    turtle:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The most typical cause of this error is when you have created a file called
    *turtle.py* in your home folder. In this case, when you enter import turtle, you’re
    getting the file you created and not Python’s turtle module. If you delete or
    rename that file, the correct module should import correctly.
  prefs: []
  type: TYPE_NORMAL
- en: Problems Running Turtle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you have problems when using the turtle module, and the turtle window itself
    doesn’t appear to be working, try using the Python console instead of the Python
    Shell, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In Windows, enter **Python** in the search box and click **Python 3.1*x***
    in the Apps list. You can use the Windows command prompt instead (click the Windows
    icon and type **cmd** in the search box). When that opens, you’ll need to enter
    the path to a program called *python.exe*. If you’ve installed Python 3.10, the
    path might be something like this: *AppData\Local\Programs\Python \Python310\python.exe*.
    However, it very much depends on what version of Python you’ve installed, so this
    method should probably be the last resort (you can see the result of running this
    in [Figure C-1](app03.xhtml#app03fig01)).![Image](Images/f0325-01.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Figure C-1: Running the Python console from Windows command prompt*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In macOS, click the Spotlight Search icon at the top-right corner of the screen
    (it should look like a magnifying glass) and enter **Terminal** in the input box.
    Then enter python3 when the terminal opens.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In Ubuntu Linux, open the terminal from your **Show Applications** menu and
    enter python3.10 (note that your version number may be different).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In Raspberry Pi, click the Terminal icon on the menu bar at the top, or click
    **Terminal** in the **Accessories** menu and enter /usr/local/opt/python-3.10.0
    (this will work only if you followed the Raspberry Pi installation instructions
    in [Chapter 1](ch01.xhtml#ch01); note that your version number may be different).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Python console is similar to the Python Shell (IDLE), but it doesn’t have
    syntax highlighting (colored text), easy save options, and other beneficial features.
    However, if you’re having problems running turtle in the Python Shell, using the
    Python console might help.
  prefs: []
  type: TYPE_NORMAL
- en: Class Takes No Arguments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A common error some readers hit is a TypeError, usually first seen in [Chapter
    11](ch11.xhtml#ch11). You might see an error similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The reason for this is generally missing underscores. The Ball class is first
    defined like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: However, if you mistype the __init__ function with a single underscore on either
    side (_init_), Python will no longer recognize it as an initialization function.
    This is why calling Ball(...) with any arguments results in an error—Python thinks
    there is no initialization function to call (in fact, it creates a default initialization
    function for you that has no parameters).
  prefs: []
  type: TYPE_NORMAL
