["```py\n$ **git config --global user.name \"**`username`**\"**\n$ **git config --global user.email \"**`username@example.com`**\"**\n```", "```py\n$ **git config --global init.defaultBranch main**\n```", "```py\nprint(\"Hello Git world!\")\n```", "```py\n__pycache__/\n```", "```py\ngit_practice$ **git init**\nInitialized empty Git repository in git_practice/.git/\ngit_practice$\n```", "```py\ngit_practice$ **git status**\n❶ On branch main\nNo commits yet\n\n❷ Untracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n      .gitignore\n      hello_git.py\n\n❸ nothing added to commit but untracked files present (use \"git add\" to track)\ngit_practice$\n```", "```py\n❶ git_practice$ **git add .**\n❷ git_practice$ **git status**\nOn branch main\nNo commits yet\n\nChanges to be committed:\n  (use \"git rm --cached <file>...\" to unstage)\n❸       new file:   .gitignore\n      new file:   hello_git.py\n\ngit_practice$\n```", "```py\n❶ git_practice$ **git commit -m \"Started project.\"**\n❷ [main (root-commit) cea13dd] Started project.\n❸ 2 files changed, 5 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 hello_git.py\n❹ git_practice$ **git status**\nOn branch main\nnothing to commit, working tree clean\ngit_practice$\n```", "```py\ngit_practice$ **git log**\ncommit cea13ddc51b885d05a410201a54faf20e0d2e246 (HEAD -> main)\nAuthor: eric <eric@example.com>\nDate:   Mon Jun 6 19:37:26 2022 -0800\n\n    Started project.\ngit_practice$\n```", "```py\ngit_practice$ **git log --pretty=oneline**\ncea13ddc51b885d05a410201a54faf20e0d2e246 (HEAD -> main) Started project.\ngit_practice$\n```", "```py\nprint(\"Hello Git world!\")\nprint(\"Hello everyone.\")\n```", "```py\ngit_practice$ **git status**\n❶ On branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\n❷  modified:   hello_git.py\n\n❸ no changes added to commit (use \"git add\" and/or \"git commit -a\")\ngit_practice$\n```", "```py\n❶ git_practice$ **git commit -am \"Extended greeting.\"**\n[main 945fa13] Extended greeting.\n 1 file changed, 1 insertion(+), 1 deletion(-)\n❷ git_practice$ **git status**\nOn branch main\nnothing to commit, working tree clean\n❸ git_practice$ **git log --pretty=oneline**\n945fa13af128a266d0114eebb7a3276f7d58ecd2 (HEAD -> main) Extended greeting.\ncea13ddc51b885d05a410201a54faf20e0d2e246 Started project.\ngit_practice$\n```", "```py\nprint(\"Hello Git world!\")\nprint(\"Hello everyone.\")\n\nprint(\"Oh no, I broke the project!\")\n```", "```py\ngit_practice$ **git status**\nOn branch main\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n\n❶     modified:   hello_git.py\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\ngit_practice$\n```", "```py\ngit_practice$ **git restore .**\ngit_practice$ **git status**\nOn branch main\nnothing to commit, working tree clean\ngit_practice$\n```", "```py\nprint(\"Hello Git world!\")\nprint(\"Hello everyone.\")\n```", "```py\ngit_practice$ **git log --pretty=oneline**\n945fa13af128a266d0114eebb7a3276f7d58ecd2 (HEAD -> main) Extended greeting.\ncea13ddc51b885d05a410201a54faf20e0d2e246 Started project.\ngit_practice$ **git checkout cea13d**\nNote: switching to 'cea13d'.\n\n❶ You are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by switching back to a branch.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -c with the switch command. Example:\n\n  git switch -c <new-branch-name>\n\n❷ Or undo this operation with:\n\n  git switch -\n\nTurn off this advice by setting config variable advice.detachedHead to false\n\nHEAD is now at cea13d Started project.\ngit_practice$\n```", "```py\ngit_practice$ **git switch -**\nPrevious HEAD position was cea13d Started project.\nSwitched to branch 'main'\ngit_practice$\n```", "```py\n❶ git_practice$ **git status**\nOn branch main\nnothing to commit, working directory clean\n❷ git_practice$ **git log --pretty=oneline**\n945fa13af128a266d0114eebb7a3276f7d58ecd2 (HEAD -> main) Extended greeting.\ncea13ddc51b885d05a410201a54faf20e0d2e246 Started project.\n❸ git_practice$ **git reset --hard cea13d**\nHEAD is now at cea13dd Started project.\n❹ git_practice$ **git status**\nOn branch main\nnothing to commit, working directory clean\n❺ git_practice$ **git log --pretty=oneline**\ncea13ddc51b885d05a410201a54faf20e0d2e246 (HEAD -> main) Started project.\ngit_practice$\n```", "```py\n❶ git_practice$ **git status**\nOn branch main\nnothing to commit, working directory clean\n❷ git_practice$ **rm -rf .git/**\n❸ git_practice$ **git status**\nfatal: Not a git repository (or any of the parent directories): .git\n❹ git_practice$ **git init**\nInitialized empty Git repository in git_practice/.git/\n❺ git_practice$ **git status**\nOn branch main\nNo commits yet\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n      .gitignore\n      hello_git.py\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n❻ git_practice$ **git add .**\ngit_practice$ **git commit -m \"Starting over.\"**\n[main (root-commit) 14ed9db] Starting over.\n 2 files changed, 5 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 hello_git.py\n❼ git_practice$ **git status**\nOn branch main\nnothing to commit, working tree clean\ngit_practice$\n```"]