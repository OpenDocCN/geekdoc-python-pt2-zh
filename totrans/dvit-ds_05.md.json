["```py\nimport pandas as pd\nattrition_past=pd.read_csv('https://bradfordtuckfield.com/attrition_past.csv')\n```", "```py\nprint(attrition_past.head())\n```", "```py\n corporation  lastmonth_activity  ...  number_of_employees  exited\n0        abcd                  78  ...                   12       1\n1        asdf                  14  ...                   20       0\n2        xyzz                 182  ...                   35       0\n3        acme                 101  ...                    2       1\n4        qwer                   0  ...                   42       1\n```", "```py\npd.set_option('display.max_columns', 6)\n```", "```py\nprint(attrition_past['exited'].mean())\n```", "```py\nfrom matplotlib import pyplot as plt\nplt.scatter(attrition_past['lastmonth_activity'],attrition_past['exited'])\nplt.title('Historical Attrition')\nplt.xlabel('Last Month\\'s Activity')\nplt.ylabel('Attrition')\nplt.show()\n```", "```py\nx = attrition_past['lastmonth_activity'].values.reshape(-1,1)\ny = attrition_past['exited'].values.reshape(-1,1)\n\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x, y)\n```", "```py\nfrom matplotlib import pyplot as plt\nplt.scatter(attrition_past['lastmonth_activity'],attrition_past['exited'])\nprediction = [regressor.coef_[0]*x+regressor.intercept_[0] for x in \\\nlist(attrition_past['lastmonth_activity'])]\nplt.plot(attrition_past['lastmonth_activity'],  prediction, color='red')\nplt.title('Historical Attrition')\nplt.xlabel('Last Month\\'s Activity')\nplt.ylabel('Attrition')\nplt.show()\n```", "```py\nattrition_past['predicted']=regressor.predict(x)\n```", "```py\nattrition_future=pd.read_csv('http://bradfordtuckfield.com/attrition2.csv')\n```", "```py\n corporation  lastmonth_activity  lastyear_activity  number_of_employees\n0        hhtn                 166               1393                   91\n1        slfm                 824              16920                  288\n2        pryr                  68                549                   12\n3        ahva                 121               1491                   16\n4        dmai                   4                 94                    2\n```", "```py\nx = attrition_future['lastmonth_activity'].values.reshape(-1,1)\nattrition_future['predicted']=regressor.predict(x)\n```", "```py\n corporation  lastmonth_activity  ...  number_of_employees  predicted\n0        hhtn                 166  ...                   91   0.576641\n1        slfm                 824  ...                  288   0.040352\n2        pryr                  68  ...                   12   0.656514\n3        ahva                 121  ...                   16   0.613317\n4        dmai                   4  ...                    2   0.708676\n```", "```py\nprint(attrition_future.nlargest(5,'predicted'))\n```", "```py\n corporation  lastmonth_activity  ...  number_of_employees  predicted\n8         whsh                   0  ...                   52   0.711936\n12        mike                   0  ...                   49   0.711936\n24        pian                   0  ...                   19   0.711936\n21        bass                   2  ...                 1400   0.710306\n4         dmai                   4  ...                    2   0.708676\n\n[5 rows x 5 columns]\n```", "```py\nprint(list(attrition_future.sort_values(by='predicted',ascending=False).loc[:,'corporation']))\n```", "```py\n['whsh', 'pian', 'mike', 'bass', 'pevc', 'dmai', 'ynus', 'kdic', 'hlpd',\\\n 'angl', 'erin', 'oscr', 'grce', 'zamk', 'hlly', 'xkcd', 'dwgt', 'pryr',\\\n 'skct', 'frgv', 'ejdc', 'ahva', 'wlcj', 'hhtn', 'slfm', 'cred']\n```", "```py\nprint(list(attrition_future.loc[attrition_future['predicted']>0.7,'corporation']))\n```", "```py\nthemedian=attrition_past['predicted'].median()\nprediction=list(1*(attrition_past['predicted']>themedian))\nactual=list(attrition_past['exited'])\n```", "```py\nfrom sklearn.metrics import confusion_matrix\nprint(confusion_matrix(prediction,actual))\n```", "```py\n>>> **print(confusion_matrix(prediction,actual))**\n[[7 6]\n[4 9]]\n```", "```py\n[[`true positives`       `false positives`]\n [`false negatives`     `true negatives`]]\n```", "```py\nconf_mat = confusion_matrix(prediction,actual)\nprecision = conf_mat[0][0]/(conf_mat[0][0]+conf_mat[0][1])\nrecall = conf_mat[0][0]/(conf_mat[0][0]+conf_mat[1][0])\n```", "```py\nx3 = attrition_past.loc[:,['lastmonth_activity', 'lastyear_activity',\\\n 'number_of_employees']].values.reshape(-1,3)\ny = attrition_past['exited'].values.reshape(-1,1)\nregressor_multi = LinearRegression()\nregressor_multi.fit(x3, y)\n```", "```py\nattrition_future['predicted_multi']=regressor_multi.predict(x3)\n```", "```py\n corporation  lastmonth_activity  lastyear_activity  number_of_employees  \\\n11        ejdc                  95               1005                   61\n12        mike                   0                  0                   49\n13        pevc                   4                  6                 1686\n4         dmai                   4                 94                    2\n22        ynus                   9                 90                   12\n\n    predicted  predicted_multi\n11   0.634508         0.870000\n12   0.711936         0.815677\n13   0.708676         0.788110\n4    0.708676         0.755625\n22   0.704600         0.715362\n\n[5 rows x 5 columns]\n```", "```py\nprint(list(attrition_future.sort_values(by='predicted_multi',\\\nascending=False).loc[:,'corporation']))\n```", "```py\n['ejdc', 'mike', 'pevc', 'dmai', 'ynus', 'wlcj', 'angl', 'pian', 'slfm',\\\n 'hlpd', 'frgv', 'hlly', 'oscr', 'cred', 'dwgt', 'hhtn', 'whsh', 'grce',\\\n 'pryr', 'xkcd', 'bass', 'ahva', 'erin', 'zamk', 'skct', 'kdic']\n```", "```py\nattrition_future['activity_per_employee']=attrition_future.loc[:,\\\n'lastmonth_activity']/attrition_future.loc[:,'number_of_employees']\n```", "```py\nattrition_past['activity_per_employee']=attrition_past.loc[:,\\\n'lastmonth_activity']/attrition_past.loc[:,'number_of_employees']\nx = attrition_past.loc[:,['activity_per_employee','lastmonth_activity',\\\n 'lastyear_activity', 'number_of_employees']].values.reshape(-1,4)\ny = attrition_past['exited'].values.reshape(-1,1)\n\nregressor_derived= LinearRegression()\nregressor_derived.fit(x, y)\nattrition_past['predicted3']=regressor_derived.predict(x)\n\nx = attrition_future.loc[:,['activity_per_employee','lastmonth_activity',\\\n 'lastyear_activity', 'number_of_employees']].values.reshape(-1,4)\nattrition_future['predicted3']=regressor_derived.predict(x)\n```", "```py\nprint(list(attrition_future.sort_values(by='predicted3',ascending=False).loc[:,'corporation']))\n```", "```py\n['pevc', 'bass', 'frgv', 'hlpd', 'angl', 'oscr', 'zamk', 'whsh', 'mike',\\\n 'hhtn', 'ejdc', 'grce', 'pian', 'ynus', 'dmai', 'kdic', 'erin', 'slfm',\\\n 'dwgt', 'pryr', 'hlly', 'xkcd', 'skct', 'ahva', 'wlcj', 'cred']\n```", "```py\nthemedian=attrition_past['predicted3'].median()\nprediction=list(1*(attrition_past['predicted3']>themedian))\nactual=list(attrition_past['exited'])\n```", "```py\n>>> **print(confusion_matrix(prediction,actual))**\n[[9 4]\n[2 11]]\n```", "```py\nconf_mat = confusion_matrix(prediction,actual)\nprecision = conf_mat[0][0]/(conf_mat[0][0]+conf_mat[0][1])\nrecall = conf_mat[0][0]/(conf_mat[0][0]+conf_mat[1][0])\n```", "```py\nfrom matplotlib import pyplot as plt\nimport numpy as np\nimport math\nx = np.arange(-5, 5, 0.05)\ny = (1/(1+np.exp(-1-2*x)))\nplt.plot(x,y)\nplt.xlabel(\"X\")\nplt.ylabel(\"Value of Logistic Function\")\nplt.title('A Logistic Curve')\nplt.show()\n```", "```py\nfrom matplotlib import pyplot as plt\nimport numpy as np\nimport math\nx = np.arange(-5, 5, 0.05)\ny = (1/(1+np.exp(**1+2***x)))\nplt.plot(x,y)\nplt.xlabel(\"X\")\nplt.ylabel(\"Value of Logistic Function\")\nplt.title('A Logistic Curve')\nplt.show()\n```", "```py\nfrom sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression(solver='liblinear', random_state=0)\nx = attrition_past['lastmonth_activity'].values.reshape(-1,1)\ny = attrition_past['exited']\nmodel.fit(x, y)\n```", "```py\nattrition_past['logisticprediction']=model.predict_proba(x)[:,1]\n```", "```py\nfig = plt.scatter(attrition_past['lastmonth_activity'],attrition_past['exited'], color='blue')\nattrition_past.sort_values('lastmonth_activity').plot('lastmonth_activity',\\\n'logisticprediction',ls='--', ax=fig.axes,color='red')\nplt.title('Logistic Regression for Attrition Predictions')\nplt.xlabel('Last Month\\'s Activity')\nplt.ylabel('Attrition (1=Exited)')\nplt.show()\n```", "```py\nx = attrition_future['lastmonth_activity'].values.reshape(-1,1)\nattrition_future['logisticprediction']=model.predict_proba(x)[:,1]\nprint(list(attrition_future.sort_values(by='logisticprediction',\\\nascending=False).loc[:,'corporation']))\n```", "```py\n['whsh', 'pian', 'mike', 'bass', 'pevc', 'dmai', 'ynus', 'kdic', 'hlpd',\\\n'angl', 'erin', 'oscr', 'grce', 'zamk', 'hlly', 'xkcd', 'dwgt', 'pryr',\\\n'skct', 'frgv', 'ejdc', 'ahva', 'wlcj', 'hhtn', 'slfm', 'cred']\n```"]