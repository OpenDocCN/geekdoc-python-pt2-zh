["```py\nlearning_log$ **python -m venv ll_env**\nlearning_log$\n```", "```py\nlearning_log$ **source ll_env/bin/activate**\n(ll_env)learning_log$\n```", "```py\n(ll_env)learning_log$ **deactivate**\nlearning_log$\n```", "```py\n(ll_env)learning_log$ **pip install --upgrade pip**\n(ll_env)learning_log$ **pip install django**\nCollecting django\n`--snip--`\nInstalling collected packages: sqlparse, asgiref, django\nSuccessfully installed asgiref-3.5.2 django-4.1 sqlparse-0.4.2\n(ll_env)learning_log$\n```", "```py\n❶ (ll_env)learning_log$ **django-admin startproject ll_project .**\n❷ (ll_env)learning_log$ **ls**\nll_env ll_project manage.py\n❸ (ll_env)learning_log$ **ls ll_project**\n__init__.py asgi.py settings.py urls.py wsgi.py\n```", "```py\n(ll_env)learning_log$ **python manage.py migrate**\n❶ Operations to perform:\n Apply all migrations: admin, auth, contenttypes, sessions\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n `--snip--`\n  Applying sessions.0001_initial... OK\n❷ (ll_env)learning_log$ **ls**\ndb.sqlite3 ll_env ll_project manage.py\n```", "```py\n(ll_env)learning_log$ **python manage.py runserver**\nWatching for file changes with StatReloader\nPerforming system checks...\n\n❶ System check identified no issues (0 silenced).\nMay 19, 2022 - 21:52:35\n❷ Django version 4.1, using settings 'll_project.settings'\n❸ Starting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```", "```py\nlearning_log$ **source ll_env/bin/activate**\n(ll_env)learning_log$ **python manage.py startapp learning_logs**\n❶ (ll_env)learning_log$ **ls**\ndb.sqlite3 learning_logs ll_env ll_project manage.py\n❷ (ll_env)learning_log$ **ls learning_logs/**\n__init__.py admin.py apps.py migrations models.py tests.py views.py\n```", "```py\nfrom django.db import models\n\n# Create your models here.\n```", "```py\nfrom django.db import models\n\nclass Topic(models.Model):\n    \"\"\"A topic the user is learning about.\"\"\"\n❶     text = models.CharField(max_length=200)\n❷     date_added = models.DateTimeField(auto_now_add=True)\n\n❸     def __str__(self):\n        \"\"\"Return a string representation of the model.\"\"\"\n        return self.text\n```", "```py\n`--snip--`\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n`--snip--`\n```", "```py\n*--snip--*\nINSTALLED_APPS = [\n    # My apps.\n    'learning_logs',\n\n # Default django apps.\n 'django.contrib.admin',\n  *--snip--*\n]\n*--snip--*\n```", "```py\n(ll_env)learning_log$ **python manage.py makemigrations learning_logs**\nMigrations for 'learning_logs':\n  learning_logs/migrations/0001_initial.py\n    - Create model Topic\n(ll_env)learning_log$\n```", "```py\n(ll_env)learning_log$ **python manage.py migrate**\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, learning_logs, sessions\nRunning migrations:\n  Applying learning_logs.0001_initial... OK\n```", "```py\n(ll_env)learning_log$ **python manage.py createsuperuser**\n❶ Username (leave blank to use 'eric'): **ll_admin**\n❷ Email address:\n❸ Password:\nPassword (again):\nSuperuser created successfully.\n(ll_env)learning_log$\n```", "```py\nfrom django.contrib import admin\n\n# Register your models here.\n```", "```py\nfrom django.contrib import admin\n\nfrom .models import Topic\n\nadmin.site.register(Topic)\n```", "```py\nfrom django.db import models\n\nclass Topic(models.Model):\n  *--snip--*\n\n❶ class Entry(models.Model):\n    \"\"\"Something specific learned about a topic.\"\"\"\n❷     topic = models.ForeignKey(Topic, on_delete=models.CASCADE)\n❸     text = models.TextField()\n    date_added = models.DateTimeField(auto_now_add=True)\n\n❹     class Meta:\n        verbose_name_plural = 'entries'\n\n    def __str__(self):\n        \"\"\"Return a simple string representing the entry.\"\"\"\n❺         return f\"{self.text[:50]}...\"\n```", "```py\n(ll_env)learning_log$ **python manage.py makemigrations learning_logs**\nMigrations for 'learning_logs':\n❶   learning_logs/migrations/0002_entry.py\n    - Create model Entry\n(ll_env)learning_log$ **python manage.py migrate**\nOperations to perform:\n `--snip--`\n❷   Applying learning_logs.0002_entry... OK\n```", "```py\nfrom django.contrib import admin\n\nfrom .models import Topic, Entry\n\nadmin.site.register(Topic)\nadmin.site.register(Entry)\n```", "```py\n(ll_env)learning_log$ **python manage.py shell**\n❶ >>> **from learning_logs.models import Topic**\n>>> **Topic.objects.all()**\n<QuerySet [<Topic: Chess>, <Topic: Rock Climbing>]>\n```", "```py\n>>> **topics = Topic.objects.all()**\n>>> **for topic in topics:**\n...     **print(topic.id, topic)**\n...\n1 Chess\n2 Rock Climbing\n```", "```py\n>>> **t = Topic.objects.get(id=1)**\n>>> **t.text**\n'Chess'\n>>> **t.date_added**\ndatetime.datetime(2022, 5, 20, 3, 33, 36, 928759,\n    tzinfo=datetime.timezone.utc)\n```", "```py\n❶ >>> **t.entry_set.all()**\n<QuerySet [<Entry: The opening is the first part of the game, roughly...>, <Entry:\nIn the opening phase of the game, it's important t...>]>\n```", "```py\n❶ from django.contrib import admin\nfrom django.urls import path\n\n❷ urlpatterns = [\n❸     path('admin/', admin.site.urls),\n]\n```", "```py\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n path('admin/', admin.site.urls),\n  path('', include('learning_logs.urls')),\n]\n```", "```py\n❶ \"\"\"Defines URL patterns for learning_logs.\"\"\"\n\n❷ from django.urls import path\n\n❸ from . import views\n\n❹ app_name = 'learning_logs'\n❺ urlpatterns = [\n    # Home page\n❻     path('', views.index, name='index'),\n]\n```", "```py\nfrom django.shortcuts import render\n\n# Create your views here.\n```", "```py\nfrom django.shortcuts import render\n\ndef index(request):\n    \"\"\"The home page for Learning Log.\"\"\"\n    return render(request, 'learning_logs/index.xhtml')\n```", "```py\n<p>Learning Log</p>\n\n<p>Learning Log helps you keep track of your learning, for any topic you're\ninterested in.</p>\n```", "```py\n<p>\n❶   <a href=\"{% url 'learning_logs:index' %}\">Learning Log</a>\n</p>\n\n❷ {% block content %}{% endblock content %}\n```", "```py\n<a href=\"`link_url`\">`link text`</a>\n```", "```py\n❶ {% extends 'learning_logs/base.xhtml' %}\n\n❷ {% block content %}\n <p>Learning Log helps you keep track of your learning, for any topic you're\n interested in.</p>\n❸ {% endblock content %}\n```", "```py\n\"\"\"Defines URL patterns for learning_logs.\"\"\"\n*--snip--*\nurlpatterns = [\n # Home page\n path('', views.index, name='index'),\n    # Page that shows all topics.\n    path('topics/', views.topics, name='topics'),\n]\n```", "```py\nfrom django.shortcuts import render\n\n❶ from .models import Topic\n\ndef index(request):\n  *--snip--*\n\n❷ def topics(request):\n    \"\"\"Show all topics.\"\"\"\n❸     topics = Topic.objects.order_by('date_added')\n❹     context = {'topics': topics}\n❺     return render(request, 'learning_logs/topics.xhtml', context)\n```", "```py\n{% extends 'learning_logs/base.xhtml' %}\n\n{% block content %}\n\n  <p>Topics</p>\n\n❶   <ul>\n❷     {% for topic in topics %}\n❸       <li>{{ topic.text }}</li>\n❹     {% empty %}\n      <li>No topics have been added yet.</li>\n❺     {% endfor %}\n❻   </ul>\n\n{% endblock content %}\n```", "```py\n{% for `item` in `list` %}\n  `do something with each item`\n{% endfor %}\n```", "```py\n<p>\n❶   <a href=\"{% url 'learning_logs:index' %}\">Learning Log</a> -\n❷   <a href=\"{% url 'learning_logs:topics' %}\">Topics</a>\n</p>\n\n{% block content %}{% endblock content %}\n```", "```py\n*--snip--*\nurlpatterns = [\n  *--snip--*\n    # Detail page for a single topic.\n    path('topics/<int:topic_id>/', views.topic, name='topic'),\n]\n```", "```py\n`--snip--`\n❶ def topic(request, topic_id):\n    \"\"\"Show a single topic and all its entries.\"\"\"\n❷     topic = Topic.objects.get(id=topic_id)\n❸     entries = topic.entry_set.order_by('-date_added')\n❹     context = {'topic': topic, 'entries': entries}\n❺     return render(request, 'learning_logs/topic.xhtml', context)\n```", "```py\n{% extends 'learning_logs/base.xhtml' %}\n\n{% block content %}\n\n❶   <p>Topic: {{ topic.text }}</p>\n\n  <p>Entries:</p>\n❷   <ul>\n❸     {% for entry in entries %}\n      <li>\n❹         <p>{{ entry.date_added|date:'M d, Y H:i' }}</p>\n❺         <p>{{ entry.text|linebreaks }}</p>\n      </li>\n❻     {% empty %}\n <li>There are no entries for this topic yet.</li>\n    {% endfor %}\n  </ul>\n\n{% endblock content %}\n```", "```py\n*--snip--*\n    {% for topic in topics %}\n      <li>\n        <a href=\"{% url 'learning_logs:topic' topic.id %}\">\n          {{ topic.text }}</a></li>\n      </li>\n {% empty %}\n*--snip--*\n```"]