["```py\nimport seaborn as sns\ntips = sns.load_dataset('tips')\nsns.jointplot(data=tips, x='total_bill', y='tip', kind='reg');\n```", "```py\nimport seaborn as sns\npenguins = sns.load_dataset('penguins')\nsns.pairplot(data=penguins, hue='species', markers=['o', 'X', 's']);\n```", "```py\nsns.set_theme(style='whitegrid')\nstrip = sns.stripplot(x='bill_length_mm', y='species', data=penguins);\n```", "```py\nbar = sns.barplot(data=penguins, x='species', y='body_mass_g', estimator=len)\nbar.set(xlabel='Penguin Species', ylabel='Number of Samples');\n```", "```py\nimport pandas as pd\nimport seaborn as sns\n\nsns.set_style('whitegrid')\ndf = pd.read_csv('johns_hopkins_covid_stats_apr_2021.csv')\nscatter = sns.scatterplot(data=df, \n                          x='Deaths', \n                          y='Deaths/100K Popl', \n                          hue='Country', \n                          style='Country',\n                          size='Fatality Rate', \n                          sizes=(50, 200))\nscatter.legend(loc='center right', bbox_to_anchor=(1.4, 0.5), ncol=1);\n```", "```py\nimport pandas as pd\n\nfemale_ht_vs_wt = {'height': [137, 152, 168, 183, 198, 213],\n                  'weight': [31.2, 45.2, 58.8, 72.3, 85.5, 108.3]}\ndf = pd.DataFrame(female_ht_vs_wt)\ndf.plot(kind='scatter', x='weight', y='height')\ndf.plot.bar('weight');\n```", "```py\nimport pandas as pd\n\npd.options.plotting.backend = 'holoviews'\nfemale_ht_vs_wt = {'height': [137, 152, 168, 183, 196, 213],\n                  'weight': [31.2, 45.2, 58.8, 72.3, 84.5, 108.3]}\ndf = pd.DataFrame(female_ht_vs_wt)\ndf.plot(kind='scatter', x='weight', y='height')\n```", "```py\nimport pandas as pd\nimport plotly.express as px\n\ndf = pd.read_csv('johns_hopkins_covid_stats_apr_2021.csv')\nfig = px.scatter(data_frame=df, \n                 x='Deaths', \n                 y='Deaths/100K Popl', \n                 color='Country', \n                 size='Fatality Rate', \n                 text='Country')\nfig.update_layout(showlegend=False)\nfig.show()\n```", "```py\n--snip--\nfig = px.scatter(data_frame=df, \n                 x='Deaths', \n                 y='Deaths/100K Popl', \n                 color='Country', \n                 size='Fatality Rate', \n                 text='Country',\n              ➊ facet_col='Region')\nfig.update_layout(showlegend=False)\nfig.show()\n```", "```py\n   import seaborn as sns  # For access to penguins dataset.\n   import holoviews as hv\n   import panel as pn, panel.widgets as pnw\n   hv.extension('bokeh')\n\n➊ hv.opts.defaults(hv.opts.Points(height=400, width=500, \n                                   legend_position='right',\n                                   show_grid=True))\n\n   penguins = sns.load_dataset('penguins')\n   columns = penguins.columns\n   discrete = [x for x in columns if penguins[x].dtype == object]\n   continuous = [x for x in columns if x not in discrete]\n➋ x = pnw.Select(name='X-Axis', value='bill_length_mm', options=continuous)\n   y = pnw.Select(name='Y-Axis', value='bill_depth_mm', options=continuous)\n   size = pnw.Select(name='Size', value='None', options=['None'] + continuous)\n   color = pnw.Select(name='Color', value='None', \n                      options=['None'] + ['species'] + ['island'] + ['sex'])\n   @pn.depends(x.param.value, y.param.value, \n               color.param.value, size.param.value) \n\n➌ def create_figure(x, y, color, size):\n       opts = dict(cmap='Category10', line_color='black')\n       if color != 'None':\n           opts['color'] = color \n       if size != 'None':\n           opts['size'] = hv.dim(size).norm() * 20\n       return hv.Points(penguins, [x, y], label=\"{} vs {}\".\n                        format(x.title(), y.title())).opts(**opts)\n\n   widgets = pn.WidgetBox(x, y, color, size, width=200)\n   pn.Row(widgets, create_figure).servable('Cross-selector')\n```", "```py\nimport hvplot.pandas\nfrom bokeh.sampledata.degrees import data as degrees\n\ndegrees.hvplot.line(x='Year', y=['Art and Performance', \n                                 'Business', 'Biology', \n                                 'Education', 'Computer Science'], \n                    value_label='% of Degrees Earned by Women', \n                    legend='top')\n```"]