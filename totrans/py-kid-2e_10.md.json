["```py\n>>> import turtle\n>>> t = turtle.Turtle()\n\n```", "```py\n>>> t.forward(50)\n>>> t.left(90)\n>>> t.forward(50)\n>>> t.left(90)\n>>> t.forward(50)\n>>> t.left(90)\n>>> t.forward(50)\n>>> t.left(90)\n\n```", "```py\n>>> t.reset()\n>>> for x in range(1, 5):\n        t.forward(50)\n        t.left(90)\n\n```", "```py\n>>> t.reset()\n>>> for x in range(1, 9):\n        t.forward(100)\n        t.left(225)\n\n```", "```py\n>>> t.reset()\n>>> for x in range(1, 38):\n        t.forward(100)\n        t.left(175)\n\n```", "```py\n>>> t.reset()\n>>> for x in range(1, 20):\n        t.forward(100)\n        t.left(95)\n\n```", "```py\n   t.reset()\n➊ for x in range(1, 19):\n    ➋ t.forward(100)\n       if x % 2 == 0:\n           t.left(175)\n       else:\n           t.left(225)\n\n```", "```py\nt.reset()\nt.color(1,0,0)\nt.begin_fill()\nt.forward(100)\nt.left(90)\nt.forward(20)\nt.left(90)\nt.forward(20)\nt.right(90)\nt.forward(20)\nt.left(90)\nt.forward(60)\nt.left(90)\nt.forward(20)\nt.right(90)\nt.forward(20)\nt.left(90)\nt.forward(20)\nt.end_fill() \n```", "```py\nt.color(0,0,0)\nt.up()\nt.forward(10)\nt.down()\nt.begin_fill()\nt.circle(10)\nt.end_fill()\n\n```", "```py\nt.setheading(0)\nt.up()\nt.forward(90)\nt.right(90)\nt.forward(10)\nt.setheading(0)\nt.begin_fill()\nt.down()\nt.circle(10)\nt.end_fill()\n\n```", "```py\n   >>> t.color(1,1,0)\n   >>> t.begin_fill()\n➊ >>> t.circle(50)\n   >>> t.end_fill()\n\n```", "```py\n>>> def mycircle(red, green, blue):\n        t.color(red, green, blue)\n        t.begin_fill()\n        t.circle(50)\n        t.end_fill()\n\n```", "```py\n>>> mycircle(0, 1, 0)\n\n```", "```py\n>>> mycircle(0, 0.5, 0)\n\n```", "```py\n>>> mycircle(1, 0, 0)\n>>> mycircle(0.5, 0, 0)\n>>> mycircle(0, 0, 1)\n>>> mycircle(0, 0, 0.5)\n\n```", "```py\n>>> mycircle(0.9, 0.75, 0)\n\n```", "```py\n>>> mycircle(1, 0.7, 0.75)\n\n```", "```py\n>>> mycircle(1, 0.5, 0)\n>>> mycircle(0.9, 0.5, 0.15)\n\n```", "```py\n>>> mycircle(0, 0, 0)\n\n```", "```py\n>>> mycircle(1, 1, 1)\n\n```", "```py\n>>> def mysquare(size):\n        for x in range(1, 5):\n            t.forward(size)\n            t.left(90)\n\n```", "```py\n>>> mysquare(50)\n\n```", "```py\n>>> t.reset()\n>>> mysquare(25)\n>>> mysquare(50)\n>>> mysquare(75)\n>>> mysquare(100)\n>>> mysquare(125)\n\n```", "```py\n>>> t.reset()\n>>> t.begin_fill()\n>>> mysquare(50)\n\n```", "```py\n>>> t.end_fill()\n\n```", "```py\n>>> def mysquare(size, filled):\n        if filled == True:\n            t.begin_fill()\n        for x in range(1, 5):\n            t.forward(size)\n            t.left(90)\n        if filled == True:\n            t.end_fill()\n\n```", "```py\n>>> mysquare(50, True)\n\n```", "```py\n>>> mysquare(150, False)\n\n```", "```py\nfor x in range(1, 19):\n    t.forward(100)\n    if x % 2 == 0:\n        t.left(175)\n    else:\n        t.left(225)\n\n```", "```py\n>>> def mystar(size, filled):\n        if filled == True:\n            t.begin_fill()\n        for x in range(1, 19):\n            t.forward(size)\n            if x % 2 == 0:\n                t.left(175)\n            else:\n                t.left(225)\n        if filled == True:\n            t.end_fill()\n\n```", "```py\n>>> t.color(0.9, 0.75, 0)\n>>> mystar(120, True)\n\n```", "```py\n>>> t.color(0,0,0)\n>>> mystar(120, False)\n\n```", "```py\ndef draw_star(size, points):\n\n```"]