["```py\npond_sim.py, part 1\nimport turtle\n\npond = turtle.Screen()\npond.setup(600, 400)\npond.bgcolor('light blue')\npond.title(\"Yertle's Pond\")\n\nmud = turtle.Turtle('circle')\nmud.shapesize(stretch_wid=5, stretch_len=5, outline=None)\nmud.pencolor('tan')\nmud.fillcolor('tan')\n```", "```py\npond_sim.py, part 2\n   SIDE = 80\n   ANGLE = 90\n   log = turtle.Turtle()\n   log.hideturtle()\n   log.pencolor('peru')\n   log.fillcolor('peru')\n   log.speed(0)\n➊ log.penup()\n   log.setpos(215, -30)\n   log.lt(45)\n   log.begin_fill()\n➋ for _ in range(2):\n       log.fd(SIDE)\n       log.lt(ANGLE)\n       log.fd(SIDE / 4)\n       log.lt(ANGLE)\n   log.end_fill()\n\n   knot = turtle.Turtle()\n   knot.hideturtle()\n   knot.speed(0)\n   knot.penup()\n   knot.setpos(245, 5)\n   knot.begin_fill()\n   knot.circle(5)\n   knot.end_fill()\n\n   yertle = turtle.Turtle('turtle')\n   yertle.color('green')\n   yertle.speed(1)  # Slowest.\n   yertle.fd(200)\n   yertle.lt(180)\n   yertle.fd(200)\n➌ yertle.rt(176)\n   yertle.fd(200)\n```", "```py\n>>> import turtle\n>>> \n>>> t = turtle.Turtle()\n>>> t.hideturtle()\n>>> t.penup()\n>>> \n>>> def dotfunc(x, y):\n       t.setpos(x, y)\n       for _ in range(10):\n              t.dot()\n              t.fd(10)\n\n>>> for i in range(0, 100, 10):\n       dotfunc(0, -i)\n```", "```py\nline_compare.py\nfrom time import perf_counter\nimport statistics\nimport turtle\n\nturtle.setup(1200, 600)\nscreen = turtle.Screen()\n\nANGLES = (0, 3.695220532)  # In degrees.\nNUM_RUNS = 20\nSPEED = 0\nfor angle in ANGLES:\n ➊ times = []\n    for _ in range(NUM_RUNS):\n        line = turtle.Turtle()\n        line.speed(SPEED)  \n        line.hideturtle()\n        line.penup()\n        line.lt(angle)\n        line.setpos(-470, 0)\n        line.pendown()\n        line.showturtle()\n     ➋ start_time = perf_counter()\n        line.fd(962)\n        end_time = perf_counter()\n        times.append(end_time - start_time)\n\n    line_ave = statistics.mean(times)\n    print(\"Angle {} degrees: average time for {} runs at speed {} = {:.5f}\"\n          .format(angle, NUM_RUNS, SPEED, line_ave))\n```", "```py\nAngle 0 degrees: average time for 500 runs at speed 0 = 0.06492\nAngle 3.695220532 degrees: average time for 500 runs at speed 0 = 0.15691\n```", "```py\nAngle 0 degrees: average time for 1000 runs at speed 0 = 0.10911\nAngle 3.695220532 degrees: average time for 1000 runs at speed 0 = 0.29681\n```", "```py\nAngle 0 degrees: average time for 500 runs at speed 6 = 1.12522\nAngle 3.695220532 degrees: average time for 500 runs at speed 6 = 2.90180\n```"]