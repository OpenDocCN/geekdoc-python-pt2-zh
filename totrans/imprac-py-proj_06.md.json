["```py\nBuild assets:\nIn Word, create an empty doc with desired formatting/styles (template)\nIn Word, create an innocuous fake message that will be visible & have enough     blank lines to hold the real message\nIn Word, create the real message that will be hidden\nImport docx to allow manipulation of Word docs with Python\nUse docx module to load the fake & real messages as lists\nUse docx to assign the empty doc to a variable\nUse docx to add letterhead banner to empty doc\nMake counter variable for lines in real message\nDefine function to format paragraph spacing with docx\nFor line in fake message:\n    If line is blank and there are still lines in the real message:\n        Use docx & counter to fill blank with line from real message\n        Use docx to set real message font color to white\n        Advance counter for real message\n    Otherwise:\n        Use docx to write fake line\n    Run paragraph spacing function\nUse docx to save final Word document\n```", "```py\n   import docx\n➊ from docx.shared import RGBColor, Pt\n\n➋ # get text from fake message & make each line a list item\n   fake_text = docx.Document('fakeMessage.docx')\n   fake_list = []\n   for paragraph in fake_text.paragraphs:\n       fake_list.append(paragraph.text)\n\n➌ # get text from real message & make each line a list item\n   real_text = docx.Document('realMessage.docx')\n   real_list = []\n   for paragraph in real_text.paragraphs:\n    ➍ if len(paragraph.text) != 0:  # remove blank lines\n           real_list.append(paragraph.text)\n\n➎ # load template that sets style, font, margins, etc.\n   doc = docx.Document('template.docx')\n\n➏ # add letterhead\n   doc.add_heading('Morland Holmes', 0)\n   subtitle = doc.add_heading('Global Consulting & Negotiations', 1)\n   subtitle.alignment = 1\n   doc.add_heading('', 1)\n➐ doc.add_paragraph('December 17, 2015')\n   doc.add_paragraph('')\n```", "```py\n➊ def set_spacing(paragraph):\n       \"\"\"Use docx to set line spacing between paragraphs.\"\"\"\n       paragraph_format = paragraph.paragraph_format\n       paragraph_format.space_before = Pt(0)\n       paragraph_format.space_after = Pt(0)\n\n➋ length_real = len(real_list)\n   count_real = 0  # index of current line in real (hidden) message\n\n   # interleave real and fake message lines\n   for line in fake_list:\n    ➌ if count_real < length_real and line == \"\":\n        ➍ paragraph = doc.add_paragraph(real_list[count_real])\n        ➎ paragraph_index = len(doc.paragraphs) - 1\n           # set real message color to white\n           run = doc.paragraphs[paragraph_index].runs[0]\n           font = run.font\n        ➏ font.color.rgb = RGBColor(255, 255, 255) # make it red to test\n        ➐ count_real += 1\n       else:\n        ➑ paragraph = doc.add_paragraph(line)\n\n    ➒ set_spacing(paragraph)\n\n➓ doc.save('ciphertext_message_letterhead.docx')\n\n   print(\"Done\")\n```", "```py\nreal_text = docx.Document('realMessage.docx')\n```", "```py\nreal_text = docx.Document('realMessage_Vig.docx')\n```"]