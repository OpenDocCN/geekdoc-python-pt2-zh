- en: '**1'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: INSTALLING AND LAUNCHING ANACONDA**
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/common.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Anaconda, the world’s most popular data science platform, provides access to
    a large collection of commonly used science libraries. This chapter walks you
    through the Anaconda installation process for Windows, macOS, and Linux. To verify
    the installation, you’ll launch Navigator, the GUI interface for Anaconda, and
    take a quick tour of its features.
  prefs: []
  type: TYPE_NORMAL
- en: '**About Anaconda**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Among other features, Anaconda includes tools to help you write code and work
    with datasets; the Python language itself; collections of prewritten programs
    called *packages*; the Navigator GUI; and *Nucleus*, a community learning and
    sharing resource. Much of this content, summarized in [Figure 1-1](ch01.xhtml#ch01fig1),
    is created and maintained by other organizations and distributed through Anaconda.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-1: The key components of Anaconda*'
  prefs: []
  type: TYPE_NORMAL
- en: If you’re new to programming, you might be unfamiliar with the concept of packages.
    Packages are collections of *modules*, which are single programs that perform
    tasks that other programs can use. For example, a module might load an image and
    convert it from color to grayscale. Another module might resize or crop the image.
    Several of these image-manipulation modules might be grouped together into a package,
    and groups of packages form a *library* ([Figure 1-2](ch01.xhtml#ch01fig2)). The
    OpenCV computer vision library, for example, includes packages that do simple
    image manipulations, others that work with streaming video, and others still that
    perform machine learning tasks like detecting human faces.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-2: The definitions of modules, packages, and libraries*'
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, the terms *module*, *package*, and *library* are used interchangeably
    so often that they might as well refer to the same thing. To make matters worse,
    *package* may also refer to a unit of distribution, sharable with a community,
    that can contain a library, an executable, or both. So, you shouldn’t get too
    hung up on the definitions.
  prefs: []
  type: TYPE_NORMAL
- en: Many of the scientific packages that ship with Anaconda require numerous *dependencies*
    (specific versions of other supporting packages) to run. They might require a
    specific version of Python, as well. To keep the various Python installations
    and other packages from interacting and breaking, and to keep them up to date,
    Anaconda uses a binary package and environment manager called *conda*. You can
    use conda to install thousands of packages from the Anaconda public repository.
    There are also tens of thousands of packages from community channels such as conda-forge.
    These are in addition to several hundred packages that are automatically installed
    with Anaconda.
  prefs: []
  type: TYPE_NORMAL
- en: Conda will make sure that all necessary dependencies are installed with each
    library, saving you considerable trouble. It will also alert you if you are missing
    a dependency. Lastly, to prevent various packages from conflicting, conda lets
    you create *conda environments*, which are secure, isolated laboratories for your
    science projects. Packages in a conda environment will not interfere with packages
    in other locations, and when you share an environment, you can be sure that all
    the necessary packages are included. You’ll learn how to create conda environments
    in [Chapter 2](ch02.xhtml).
  prefs: []
  type: TYPE_NORMAL
- en: When you download Anaconda, you get access to *[Anaconda.org](http://Anaconda.org)*,
    a package management system that makes it easy to find, access, store, and share
    public notebooks, environments, databases, and packages in both conda and the
    Python Package Index (PyPI). You can use it to share your work collaboratively
    on the cloud or search and download popular Python packages and notebooks. You
    can also build new conda packages using conda-build and then upload them to the
    cloud to share with others (or to access them from anywhere).
  prefs: []
  type: TYPE_NORMAL
- en: Anaconda is developed and maintained by Anaconda, Inc. In addition to the free
    Anaconda Distribution (previously called *Anaconda Individual Edition*) that we’ll
    be using, the company also provides commercial versions. You can find the official
    documentation for all editions at *[https://docs.anaconda.com/anacondaorg/](https://docs.anaconda.com/anacondaorg/)*.
    Anaconda is also a distribution of the R programming language, and conda provides
    package, dependency, and environment management for languages such as Ruby, Lua,
    Scala, Java, JavaScript, C/C++, FORTRAN, and more. In this book, however, we’ll
    focus solely on its use with Python.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll need about 5GB of free hard drive space to install Anaconda. Otherwise,
    you’ll need to install Miniconda, a minimal installation that requires around
    400MB and comes with Python but not the other preinstalled libraries. There is
    also no need to uninstall any existing Python installations or packages prior
    to installing Anaconda.
  prefs: []
  type: TYPE_NORMAL
- en: In the event that you encounter problems, see the troubleshooting guide at *[https://docs.anaconda.com/anaconda/user-guide/troubleshooting/](https://docs.anaconda.com/anaconda/user-guide/troubleshooting/)*
    and the FAQ at *[https://docs.anaconda.com/anaconda/user-guide/faq/](https://docs.anaconda.com/anaconda/user-guide/faq/)*.
    If you encounter any divergence in the instructions, defer to those in the installation
    wizard.
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Anaconda on Windows**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can find the official Windows-specific installation instructions at *[https://docs.anaconda.com/anaconda/install/windows/](https://docs.anaconda.com/anaconda/install/windows/)*.
    Step 1 is to download the Anaconda Installer. You might need to choose between
    the 32- or 64-bit installer. Unless you have a very dated computer, you’ll want
    to click the 64-bit option. If you’re unsure, you should be able to verify your
    system type by navigating to **Settings** ▸ **System** ▸ **About**.
  prefs: []
  type: TYPE_NORMAL
- en: Clicking an installer downloads an .*exe* file into your *Downloads* folder
    (this can take a few minutes to complete). At this point, you have the option
    of checking the integrity of the installer using the SHA-256 *checksum*, which
    is a mathematical algorithm that checks files for corruption. Comparing a newly
    generated checksum against one generated ahead of time lets you detect errors
    introduced during data transmission. If you choose to run the checksum, see the
    instructions at *[https://docs.anaconda.com/anaconda/install/hashes/](https://docs.anaconda.com/anaconda/install/hashes/)*.
  prefs: []
  type: TYPE_NORMAL
- en: To start the installation, right-click the downloaded *.exe* file and choose
    the **Run as Administrator** option from the pop-up window. As Administrator,
    you’ll have permission to install Anaconda anywhere you want on your system. The
    installer will ask you for permission to make changes to your computer. Click
    **Yes**. The setup wizard should now appear. Click **Next** and then agree to
    the license.
  prefs: []
  type: TYPE_NORMAL
- en: The next window asks you to choose the installation type. Select the recommended
    **Just Me** option and then click **Next**. Next, you’re asked to choose an installation
    location. The installer will suggest a folder on the *C:\* drive under your username.
    Note that this path should contain only 7-bit ASCII characters (numbers, letters,
    and certain symbols) and no spaces. Make a note of this default location and then
    click **Next**.
  prefs: []
  type: TYPE_NORMAL
- en: In the Advanced Installation Options window, register Anaconda *as default Python*
    and don’t add it to PATH. This is the recommended approach. It just means that
    you’ll need to open Anaconda Navigator or the Anaconda Command Prompt using the
    Start menu. By selecting the environment variable checkbox Add Anaconda3 to my
    PATH, you’ll be able to use Anaconda in the command prompt; however, this can
    cause problems down the road. Also, you can always add Anaconda to your PATH later.
    Click **Install** to continue. When the installation is complete, click **Next**.
  prefs: []
  type: TYPE_NORMAL
- en: After the installation window closes, you might be presented with the option
    to install the PyCharm or DataSpell IDE. If so, ignore it and click **Next**.
    We’ll be using the Spyder IDE, which comes preinstalled on Anaconda.
  prefs: []
  type: TYPE_NORMAL
- en: The installation should now be complete. In the final window, check the tutorial
    boxes if you want to view these later, and then click **Finish**. At this point,
    a window might open, welcoming you to Anaconda and inviting you to register for
    Anaconda Nucleus. You should also see an *Anaconda3* folder in your Start Menu
    ([Figure 1-3](ch01.xhtml#ch01fig3)). This folder should contain a number of items,
    such as Navigator and prompts, which are terminals for entering text commands.
    You might also see icons for launching Jupyter and Spyder.
  prefs: []
  type: TYPE_NORMAL
- en: To verify that Anaconda loaded correctly, click the Windows **Start** button,
    navigate to the Anaconda3 app, and then launch Anaconda Navigator from the drop-down
    menu. You can also enter anaconda-navigator in the Anaconda Prompt terminal. This
    window doesn’t always automatically pop up, so be sure to check the taskbar at
    the bottom of your screen.
  prefs: []
  type: TYPE_NORMAL
- en: To see detailed information about your Anaconda distribution and Python version,
    type conda info in Anaconda Prompt.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-3: The Anaconda3 program folder on the Windows Start menu*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Anaconda on macOS**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can install Anaconda Individual Edition on macOS using either a graphical
    setup wizard or through the command line. You can find instructions for both at
    *[https://docs.anaconda.com/anaconda/install/mac-os/](https://docs.anaconda.com/anaconda/install/mac-os/)*.
    Choose the installer for your version of the operating system by scrolling to
    the bottom of the download page. When the download completes, you have the option
    of verifying the data’s integrity using the SHA-256 checksum algorithm (see the
    section “Installing Anaconda on Windows” on [page 9](ch01.xhtml#ch00lev1sec6)).
    Then, double-click the downloaded file and click **Continue** to launch the installation
    process.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll be taken through the obligatory Introduction, Read Me, and License screens.
    The Important Information box in the Read Me screen will include specific instructions
    in the event that you want to deviate from any of the recommended default choices.
    When you finish with these screens, click the **Install** button to install Anaconda
    in your *~/opt* directory. This is the recommended location, though you have the
    option of changing it using the Change Install Location button.
  prefs: []
  type: TYPE_NORMAL
- en: On the next screen, choose **Install for me only** and then click **Continue**.
    You might now have the option to install the PyCharm or DataSpell IDE. We will
    be using the Spyder IDE that comes preinstalled with Anaconda, so skip this step
    by clicking **Continue**. At this point you should see a screen indicating a successful
    installation. I highly recommend taking the time to look at the quick start guide
    and tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: To end the installation process, click **Close**.
  prefs: []
  type: TYPE_NORMAL
- en: To verify installation, click **Launchpad** and then select **Anaconda Navigator**.
    Alternatively, use CMD-SPACE to open Spotlight Search and then enter `Navigator`
    to open the program. You can also see detailed information on the installed Anaconda
    distribution and Python version by visiting the Mac terminal and entering `conda
    info`.
  prefs: []
  type: TYPE_NORMAL
- en: '**Installing Anaconda on Linux**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Because there are so many flavors of Linux, I strongly recommend you visit the
    official Anaconda installation instructions at *[https://docs.anaconda.com/anaconda/install/linux/](https://docs.anaconda.com/anaconda/install/linux/)*.
    If you are running Linux on an IBM PowerPC or Power ISA computer, see *[https://docs.anaconda.com/anaconda/install/linux-power8/](https://docs.anaconda.com/anaconda/install/linux-power8/)*.
    These sites will help you install the dependencies that you’ll need to use GUI
    packages with your particular Linux distribution. The instructions presented in
    this section are for the x86 architecture.
  prefs: []
  type: TYPE_NORMAL
- en: 'Linux has no graphical installation option for installing Anaconda, so you’ll
    need to use the command line for most of the process. To begin, scroll to the
    bottom of the download page and click the installer for your system. When the
    download completes, you have the option of verifying the data integrity using
    the SHA-256 checksum algorithm (see the section “Installing Anaconda on Windows”
    on [page 9](ch01.xhtml#ch00lev1sec6)). Open a terminal and enter the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, enter the following to begin installation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note the date in the *.sh* filename above. This should be set to the name of
    the file you downloaded. If you did not download the installer to your *Downloads*
    directory, replace `~/Downloads/` with the correct path.
  prefs: []
  type: TYPE_NORMAL
- en: 'At the installer prompt, click **Enter** to view the license terms and then
    click **Yes** to agree. Next, the installer will prompt you to click **Enter**
    to accept the default install location, which is recommended, or specify an alternate
    installation directory. If you accept the default, the installer displays the
    following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It then continues the installation, which may take a few minutes to complete.
    When the installer asks, “Do you wish the installer to initialize Anaconda3 by
    running conda init?” the recommended answer is “yes.” If for some reason you decide
    to say “no,” see the instructions and FAQ on the installation website.
  prefs: []
  type: TYPE_NORMAL
- en: When the installer finishes, you’ll see a message, thanking you for installing
    Anaconda. Ignore the link for installing the PyCharm or DataSpell IDE, as we’ll
    be using the Spyder IDE that comes preinstalled.
  prefs: []
  type: TYPE_NORMAL
- en: For the installation to take effect, you’ll need to either close and open your
    terminal window or enter the command source ~/.bashrc. To control whether each
    shell session has the base environment activated by default, run conda config
    –set auto_activate_base True. If base activation is not desired, set this to `False`.
    In general, you will want to use the base environment as the default.
  prefs: []
  type: TYPE_NORMAL
- en: To verify installation, open a terminal and type conda list. If Anaconda is
    working correctly, this will display a list of all installed packages and their
    version numbers. You can also enter anaconda-navigator to open Navigator.
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting to Know Anaconda Navigator**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Anaconda Navigator is a desktop GUI. It provides a friendly point-and-click
    alternative to opening a command prompt or terminal and using typed commands to
    manipulate Anaconda. You can use Navigator to launch applications, search for
    packages on *[Anaconda.org](http://Anaconda.org)* or in a local Anaconda repository,
    manage conda environments, channels, and packages, and access a huge volume of
    training material. It works on Windows, macOS, and Linux.
  prefs: []
  type: TYPE_NORMAL
- en: '***Launching Navigator***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: On Windows, the installer will create a Start menu shortcut for Navigator. For
    Linux or macOS with Anaconda installed via the **.sh* installer (as we did previously),
    open a terminal and enter anaconda-navigator. If you used the GUI (*.pkg*) installer
    on macOS, click the Navigator icon in Launchpad.
  prefs: []
  type: TYPE_NORMAL
- en: '***The Home Tab***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Navigator opens with a window similar to the one shown in [Figure 1-4](ch01.xhtml#ch01fig4).
    The app tiles, such as for Jupyter Notebook and Spyder, may be arranged differently
    in your view.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-4: The Anaconda Navigator Home tab*'
  prefs: []
  type: TYPE_NORMAL
- en: The initial window you see is the Home tab ➊. Additional pages are listed below
    Home and include Environments, Learning, and Community. When you launch Navigator,
    you’ll start in the base (root) environment ➋. Environments are just folders or
    directories used to isolate and manage packages. The base environment is the folder
    in which Anaconda is installed, such as *C:\Users\<your_username>\anaconda3\*
    on Windows.
  prefs: []
  type: TYPE_NORMAL
- en: The scrollable main screen is filled with square tiles for applications such
    as Datalore, Spyder, Command Prompts, and more ➌. Each tile contains a logo icon,
    the name of the app, a description of the app, and either a Launch ➍ or Install
    ➎ button depending on its current state. The “gear” icon in the upper-right corner
    of each tile also lets you install the app as well as update, remove, or install
    a specific version. The nice thing about Anaconda is that when it installs an
    app, it automatically finds and installs all the dependencies (other packages)
    that the app needs to run, and it shows you a list of these in a pop-up window.
  prefs: []
  type: TYPE_NORMAL
- en: If you install a package or tool from the Anaconda Prompt command line interface,
    the Navigator Home tab might not reflect the change. To ensure this tab is always
    up to date, you can click the Refresh button in the upper right ➏.
  prefs: []
  type: TYPE_NORMAL
- en: At the lower left of the Home tab, you might see a link for Anaconda Nucleus
    ➐. You can join here, or sign into an existing account using the button in the
    upper-right corner ➑. Note that this button may be named either “Sign in” or “Connect.”
    You need to sign in only if you’re going to be accessing Anaconda Nucleus for
    sharing projects over the cloud or if you’re accessing repositories such as *[Anaconda.org](http://Anaconda.org)*.
  prefs: []
  type: TYPE_NORMAL
- en: '***The Environments Tab***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Now let’s take a look at the Environments tab ([Figure 1-5](ch01.xhtml#ch01fig5)).
    To open it, click the **Environments** link ➊ beneath Home. Here, you’ll be able
    to manage conda environments and install and uninstall libraries from Anaconda,
    conda forge, and other sites. We’ll go into the details of this in [Chapter 2](ch02.xhtml).
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-5: Anaconda Navigator Environments tab*'
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you should only see the base (root) environment ➋. The other
    environments shown, such as “Levy,” “golden_spiral,” and “penguins,” are ones
    I’ve created previously using the Create button ➌ at the bottom of the screen.
    Note that there are additional buttons for cloning, importing, and removing environments.
    Newer versions may show an additional button for backing up environments to the
    cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Only one environment can be active at a time. Clicking an environment link deactivates
    the current environment (such as “base”) and activates the one you’ve clicked
    (such as “penguins”). It can take a few seconds for the screen to update. The
    right half of the screen will now show you a list of the packages installed in
    that environment, along with a description and version number. Also note that
    you can change environments using the applications in the drop-down menu on the
    Home tab.
  prefs: []
  type: TYPE_NORMAL
- en: If you click the Installed drop-down menu, you’ll see choices for Not installed,
    Updatable, Selected, and All ➍. At the bottom of the screen, you’ll see how many
    packages are currently installed and available ➎. For the base environment, the
    packages preinstalled by Anaconda may change slightly over time, so the number
    you see might be different.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*You can also see which packages come preinstalled with Anaconda by going to*
    [https://docs.anaconda.com/anaconda/packages/pkg-docs/](https://docs.anaconda.com/anaconda/packages/pkg-docs/).
    *You’ll need to know your operating system and Python version.*'
  prefs: []
  type: TYPE_NORMAL
- en: When you select **Not installed**, you’ll see a list of packages available from
    Anaconda but not currently installed in the selected environment. To see packages
    available from other sources, such as conda-forge, simply click the **Channels**
    button ➏ and select or add a new channel ([Figure 1-6](ch01.xhtml#ch01fig6)).
    A *channel* is just the path that conda takes to look for packages. Other options
    for working with packages include updating the packages list for the enabled channels
    (Update index) and searching for a package.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-6: The Channels drop-down menu lets you add, update, and delete channels.*'
  prefs: []
  type: TYPE_NORMAL
- en: To remove a package from the active environment, click the checkbox next to
    the package ([Figure 1-7](ch01.xhtml#ch01fig7)). This opens a menu that offers
    choices such as marking a package for removal or installing a specific version
    number, which opens another menu.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-7: Marking a package for an action*'
  prefs: []
  type: TYPE_NORMAL
- en: We talk more about managing packages in the next chapter. You can also visit
    the Anaconda documentation for more on this subject (*[https://docs.anaconda.com/anaconda/navigator/tutorials/manage-packages/](https://docs.anaconda.com/anaconda/navigator/tutorials/manage-packages/)*).
  prefs: []
  type: TYPE_NORMAL
- en: '***The Learning Tab***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: On the Learning tab ([Figure 1-8](ch01.xhtml#ch01fig8)), you can discover more
    about Navigator, the Anaconda platform, and open data science. To open it, click
    the **Learning** link beneath Home ➊.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-8: The Anaconda Navigator Learning tab*'
  prefs: []
  type: TYPE_NORMAL
- en: Click the Documentation, Training, Webinars, or Video buttons ➋ to see related
    tile items ➌. You can turn on all the categories at once. To turn off a highlighted
    category, just click it again. Clicking a tile item button will open it in a browser
    window ➍. The button choices are Read, View, and Explore.
  prefs: []
  type: TYPE_NORMAL
- en: '***The Community Tab***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: On the Community tab ([Figure 1-9](ch01.xhtml#ch01fig9)) you can learn more
    about events, free support forums, and social networking relating to Navigator.
    To open it, click the **Community** link beneath Home ➊.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-9: The Anaconda Navigator Community tab*'
  prefs: []
  type: TYPE_NORMAL
- en: Clicking the Events, Forum, or Social buttons ➋ changes the displayed tiles.
    Depending on the type of tile, you can Learn More ➌, Explore ➍, or Engage ➎. Clicking
    a tile button opens it in a browser window.
  prefs: []
  type: TYPE_NORMAL
- en: '***File Menu***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The File menu in the upper-left corner of the Navigator screen includes options
    to let you set preferences ([Figure 1-10](ch01.xhtml#ch01fig10)) and quit the
    program. Users of macOS will see additional options in the Preferences menu, including
    Services, for linking to your computer’s system preferences menu; Hide Anaconda-Navigator,
    for hiding the Navigator window; Hide Others, to hide all window except Navigator;
    and Show All, for showing all windows. For a detailed explanation of the Preferences
    menu options, see *[https://docs.anaconda.com/anaconda/navigator/overview/](https://docs.anaconda.com/anaconda/navigator/overview/)*.
  prefs: []
  type: TYPE_NORMAL
- en: The Quit option shuts down Navigator and releases the memory resources used
    by Anaconda.
  prefs: []
  type: TYPE_NORMAL
- en: This completes the overview of Anaconda Navigator. You can find more information
    in the official documentation at *[https://docs.anaconda.com/anaconda/navigator/](https://docs.anaconda.com/anaconda/navigator/)*.
    In the next chapter, we’ll use Navigator, along with the command line interface,
    to set up conda environments that keep your projects separate, safe, and organized.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](../images/01fig10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 1-10: The Anaconda Navigator File ▸ Preferences menu on Windows*'
  prefs: []
  type: TYPE_NORMAL
- en: '**Summary**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With Anaconda installed on your computer, you now have easy access to Python
    and its ecosystem of thousands of useful packages. You’re also part of the Anaconda
    community, with storage options, lots of learning opportunities, and the ability
    to upload and share packages you’ve built yourself. Lastly, you’ve become familiar
    with the Navigator interface, letting you run Anaconda with point-and-click convenience.
  prefs: []
  type: TYPE_NORMAL
