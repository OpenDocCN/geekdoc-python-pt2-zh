["```py\ntext = \"The oneperfectly divine thing, the oneglimpse of God's paradisegiven on earth, is to fight a losingbattle - and notlose it.\"\n```", "```py\nword_list = ['The','one','perfectly','divine']\n```", "```py\nword_list_copy = [word for word in word_list]\n```", "```py\nhas_n = [word for word in word_list if 'n' in word]\n```", "```py\n['one', 'divine']\n```", "```py\nimport re\nlocs = list(set([(m.start(),m.end()) for word in word_list for m in re.finditer(word, text)]))\n```", "```py\n[(17, 23), (7, 16), (0, 3), (35, 38), (4, 7)]\n```", "```py\nspacestarts = [m.start() for m in re.finditer(' ', text)]\nspacestarts.append(-1)\nspacestarts.append(len(text))\nspacestarts.sort()\n```", "```py\nspacestarts_affine = [ss+1 for ss in spacestarts]\nspacestarts_affine.sort()\n```", "```py\nbetween_spaces = [(spacestarts[k] + 1,spacestarts[k + 1]) for k in range(0,len(spacestarts) - 1 )]\n```", "```py\nbetween_spaces_notvalid = [loc for loc in between_spaces if \\text[loc[0]:loc[1]] not in word_list]\n```", "```py\n[(4, 16), (24, 30), (31, 34), (35, 45), (46, 48), (49, 54), (55, 68), (69, 71), (72, 78), (79, 81), (82, 84), (85, 90), (91, 92), (93, 105), (106, 107), (108, 111), (112, 119), (120, 123)]\n```", "```py\nimport nltk\nnltk.download('brown')\n```", "```py\nfrom nltk.corpus import brown\nwordlist = set(brown.words())\nword_list = list(wordlist)\n```", "```py\nword_list = [word.replace('*','') for word in word_list]\nword_list = [word.replace('[','') for word in word_list]\nword_list = [word.replace(']','') for word in word_list]\nword_list = [word.replace('?','') for word in word_list]\nword_list = [word.replace('.','') for word in word_list]\nword_list = [word.replace('+','') for word in word_list]\nword_list = [word.replace('/','') for word in word_list]\nword_list = [word.replace(';','') for word in word_list]\nword_list = [word.replace(':','') for word in word_list]\nword_list = [word.replace(',','') for word in word_list]\nword_list = [word.replace(')','') for word in word_list]\nword_list = [word.replace('(','') for word in word_list]\nword_list.remove('')\n```", "```py\nbetween_spaces_notvalid = [loc for loc in between_spaces if \\text[loc[0]:loc[1]] not in word_list]\n```", "```py\n[(4, 16), (24, 30), (35, 45), (55, 68), (72, 78), (93, 105), (112, 119), (120, 123)]\n```", "```py\npartial_words = [loc for loc in locs if loc[0] in spacestarts_affine and \\loc[1] not in spacestarts]\n```", "```py\npartial_words_end = [loc for loc in locs if loc[0] not in spacestarts_affine \\and loc[1] in spacestarts]\n```", "```py\nloc = between_spaces_notvalid[0]\n```", "```py\nendsofbeginnings = [loc2[1] for loc2 in partial_words if loc2[0] == loc[0] \\and (loc2[1] - loc[0]) > 1]\n```", "```py\nbeginningsofends = [loc2[0] for loc2 in partial_words_end if loc2[1] == loc[1] and \\(loc2[1] - loc[0]) > 1]\n```", "```py\npivot = list(set(endsofbeginnings).intersection(beginningsofends))\n```", "```py\nimport numpy as np\npivot = np.min(pivot)\n```", "```py\ntextnew = text\ntextnew = textnew.replace(text[loc[0]:loc[1]],text[loc[0]:pivot]+' '+text[pivot:loc[1]])\n```", "```py\nThe one perfectly divine thing, the oneglimpse of God's paradisegiven on earth, is to fight a losingbattle - and notlose it.\n```", "```py\ndef insertspaces(text,word_list):\n\n    locs = list(set([(m.start(),m.end()) for word in word_list for m in re.finditer(word, \\text)]))\n spacestarts = [m.start() for m in re.finditer(' ', text)]\n    spacestarts.append(-1)\n    spacestarts.append(len(text))\n    spacestarts.sort()\n    spacestarts_affine = [ss + 1 for ss in spacestarts]\n    spacestarts_affine.sort()\n    partial_words = [loc for loc in locs if loc[0] in spacestarts_affine and loc[1] not in \\    spacestarts]\n    partial_words_end = [loc for loc in locs if loc[0] not in spacestarts_affine and loc[1] \\    in spacestarts]\n    between_spaces = [(spacestarts[k] + 1,spacestarts[k+1]) for k in \\    range(0,len(spacestarts) - 1)]\n    between_spaces_notvalid = [loc for loc in between_spaces if text[loc[0]:loc[1]] not in \\    word_list]\n    textnew = text\n    for loc in between_spaces_notvalid:\n        endsofbeginnings = [loc2[1] for loc2 in partial_words if loc2[0] == loc[0] and \\    (loc2[1] - loc[0]) > 1]\n        beginningsofends = [loc2[0] for loc2 in partial_words_end if loc2[1] == loc[1] and \\    (loc2[1] - loc[0]) > 1]\n        pivot = list(set(endsofbeginnings).intersection(beginningsofends))\n        if(len(pivot) > 0):\n            pivot = np.min(pivot)\n            textnew = textnew.replace(text[loc[0]:loc[1]],text[loc[0]:pivot]+' \\            '+text[pivot:loc[1]])\n    textnew = textnew.replace('  ',' ')\n    return(textnew)\n```", "```py\ntext = \"The oneperfectly divine thing, the oneglimpse of God's paradisegiven on earth, is to \\fight a losingbattle - and notlose it.\"\nprint(insertspaces(text,word_list))\n```", "```py\nThe one perfectly divine thing, the one glimpse of God's paradise given on earth, is to fight a losing battle - and not lose it.\n```", "```py\nfrom nltk.tokenize import sent_tokenize, word_tokenize\ntext = \"Time forks perpetually toward innumerable futures\"\nprint(word_tokenize(text))\n```", "```py\n['Time', 'forks', 'perpetually', 'toward', 'innumerable', 'futures']\n```", "```py\nimport nltk\nfrom nltk.util import ngrams\ntoken = nltk.word_tokenize(text)\nbigrams = ngrams(token,2)\ntrigrams = ngrams(token,3)\nfourgrams = ngrams(token,4)\nfivegrams = ngrams(token,5)\n```", "```py\ngrams = [ngrams(token,2),ngrams(token,3),ngrams(token,4),ngrams(token,5)]\n```", "```py\nimport requests\nfile = requests.get('http://www.bradfordtuckfield.com/shakespeare.txt')\nfile = file.text\ntext = file.replace('\\n', '')\n```", "```py\ntoken = nltk.word_tokenize(text)\nbigrams = ngrams(token,2)\ntrigrams = ngrams(token,3)\nfourgrams = ngrams(token,4)\nfivegrams = ngrams(token,5)\ngrams = [ngrams(token,2),ngrams(token,3),ngrams(token,4),ngrams(token,5)]\n```", "```py\nfrom nltk.tokenize import sent_tokenize, word_tokenize\nsearch_term = 'life is a'\nsplit_term = tuple(search_term.split(' '))\nsearch_term_length = len(search_term.split(' '))\n```", "```py\nfrom collections import Counter\ncounted_grams = Counter(grams[search_term_length - 1])\n```", "```py\nprint(list(counted_grams.items())[0])\n```", "```py\n(('From', 'fairest', 'creatures', 'we'), 1)\n```", "```py\nmatching_terms = [element for element in list(counted_grams.items()) if \\element[0][:-1] == tuple(split_term)]\n```", "```py\nif(len(matching_terms)>0):\n    frequencies = [item[1] for item in matching_terms]\n    maximum_frequency = np.max(frequencies)\n    highest_frequency_term = [item[0] for item in matching_terms if item[1] == \\maximum_frequency][0]\n    combined_term = ' '.join(highest_frequency_term)\n```", "```py\ndef search_suggestion(search_term, text):\n    token = nltk.word_tokenize(text)\n    bigrams = ngrams(token,2)\n    trigrams = ngrams(token,3)\n    fourgrams = ngrams(token,4)\n    fivegrams = ngrams(token,5)\n    grams = [ngrams(token,2),ngrams(token,3),ngrams(token,4),ngrams(token,5)]\n    split_term = tuple(search_term.split(' '))\n    search_term_length = len(search_term.split(' '))\n    counted_grams = Counter(grams[search_term_length-1])\n    combined_term = 'No suggested searches'    \n    matching_terms = [element for element in list(counted_grams.items()) if \\element[0][:-1] == tuple(split_term)]\n    if(len(matching_terms) > 0):\n        frequencies = [item[1] for item in matching_terms]\n        maximum_frequency = np.max(frequencies)\n highest_frequency_term = [item[0] for item in matching_terms if item[1] == \\maximum_frequency][0]\n        combined_term = ' '.join(highest_frequency_term)\n    return(combined_term)\n```", "```py\nfile = requests.get('http://www.bradfordtuckfield.com/shakespeare.txt')\nfile = file=file.text\ntext = file.replace('\\n', '')\nprint(search_suggestion('life is a', text))\n```", "```py\nfile = requests.get('http://www.bradfordtuckfield.com/marktwain.txt')\nfile = file=file.text\ntext = file.replace('\\n', '')\n```", "```py\nprint(search_suggestion('life is a',text))\n```"]