["```py\noptimizer=keras.optimizers.SGD(lr=0.01, momentum=0.9)\n```", "```py\nfrom sklearn.metrics import roc_auc_score, roc_curve\n\ndef roc_curve_area(model, x, y):\n\n    pp = model.predict(x)\n\n    p = np.zeros(pp.shape[0], dtype=\"uint8\")\n\n    for i in range(pp.shape[0]):\n\n        p[i] = 0 if (pp[i,0] > pp[i,1]) else 1\n\n    auc = roc_auc_score(y,p)\n\n    roc = roc_curve(y,pp[:,1])\n\n    return [auc, roc]\n```", "```py\nvehicles as animals: [189  69   0   0   0   0   0   0 105 117]\n\nanimals as vehicles: [ 0  0 64 34 23 11 12 15  0  0]\n```", "```py\n$ python3 make_label_files.py 1 train_1.npy test_1.npy\n```", "```py\nx_test = np.load(\"cifar10_test_images.npy\")/255.0\n\ny_test = np.load(\"cifar10_test_labels.npy\")\n\nmm = load_model(\"cifar10_cnn_model.h5\")\n\nm = []\n\nfor i in range(10):\n\n    m.append(load_model(\"cifar10_cnn_%d_model.h5\" % i))\n```", "```py\nmp = np.argmax(mm.predict(x_test), axis=1)\n\np = np.zeros((10,10000), dtype=\"float32\")\n\nfor i in range(10):\n\n    p[i,:] = m[i].predict(x_test)[:,1]\n\nbp = np.argmax(p, axis=0)\n```", "```py\ncm = np.zeros((10,10), dtype=\"uint16\")\n\ncb = np.zeros((10,10), dtype=\"uint16\")\n\nfor i in range(10000):\n\n    cm[y_test[i],mp[i]] += 1\n\n    cb[y_test[i],bp[i]] += 1\n\nnp.save(\"cifar10_multiclass_conf_mat.npy\", cm)\n\nnp.save(\"cifar10_binary_conf_mat.npy\", cb)\n```", "```py\nimport numpy as np\n\nfrom keras.models import load_model\n\nfrom keras import backend as K\n\nfrom keras.datasets import mnist\n\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\n\nx_train = x_train/255.0\n\nx_test = x_test/255.0\n\nmodel = load_model(\"cifar10_cnn_model.h5\")\n```", "```py\ndef conf_mat(clf,x,y):\n\n    p = clf.predict(x)\n\n    c = np.zeros((10,10))\n\n    for i in range(p.shape[0]):\n\n        c[y[i],p[i]] += 1\n\n    return c\n\ncs = conf_mat(clf, test, y_test)\n\ncs = 100.0*cs / cs.sum(axis=1)\n\nnp.set_printoptions(suppress=True)\n\nprint(np.array2string(cs, precision=1, floatmode=\"fixed\"))\n```", "```py\nbatch_size = 64\n\nnum_classes = 4\n\nepochs = 12\n\nimg_rows, img_cols = 28,28\n\nx_train = np.load(\"cifar10_train_vehicles_images.npy\")\n\ny_train = np.load(\"cifar10_train_vehicles_labels.npy\")\n\nx_test = np.load(\"cifar10_test_vehicles_images.npy\")\n\ny_test = np.load(\"cifar10_test_vehicles_labels.npy\")\n```", "```py\nfor i in range(5):\n\n    model.layers[i].trainable = False\n```"]