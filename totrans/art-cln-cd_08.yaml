- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Less Is More in Design
  prefs: []
  type: TYPE_NORMAL
- en: '![](image_fi/book_art/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: Simplicity is a way of life for coders. While you may not see yourself as a
    designer, chances are that you will create many user interfaces in your coding
    career. Whether you need to create a visually appealing dashboard as a data scientist,
    an easy-to-use API as a database engineer, or a simple web frontend to fill data
    into a smart contract as a blockchain developer, knowing basic design principles
    will save the day for you and your team—and they’re easy to grasp, too! The design
    principles covered in this chapter are universal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifically, you’ll explore one vital area in computer science that benefits
    most from a minimalistic mindset: design and user experience (UX). To get an idea
    of the importance of minimalism in design and UX, think of the differences between
    Yahoo Search and Google Search, the Blackberry and the iPhone, Facebook Dating
    and Tinder: the winning technologies often come with a radically simple user interface.
    Could it be that *less is more* in design?'
  prefs: []
  type: TYPE_NORMAL
- en: We’ll first take a brief tour of some creations that have benefited from the
    radical focus of their creators. Later, we’ll see how you can apply minimalism
    in your own design efforts.
  prefs: []
  type: TYPE_NORMAL
- en: Minimalism in the Evolution of Mobile Phones
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A prime example of minimalism in computing design can be seen in the evolution
    of mobile phones (see [Figure 8-1](#figure8-1)). The Nokia Mobira Senator, one
    of the earliest commercial “mobile” phones, was released in the 1980s, weighed
    10 kg, and was quite complicated to handle. A year later, Motorola marketed its
    own DynaTAC 8000X model that was 10 times lighter—weighing only 1 kg. Nokia had
    to up its game. In 1992, Nokia came up with the 1011 at half the weight of the
    DynaTAC 8000X. Nearly a decade later in 2000, in accordance with Moore’s laws,
    Nokia achieved mega-success with its iconic Nokia 3310, weighing only 88 g. As
    mobile phone technology grew more sophisticated and complex, the user interface,
    including the size, weight, and even number of buttons, became drastically less
    complex. The evolution of mobile phones proves that radically minimalistic design
    can be done, even as the complexity of the applications increases by orders of
    magnitude. You could even argue that minimalistic design has paved the way for
    the success of smartphone apps and their exploding usage in today’s world. You’d
    have a hard time browsing the web, using mapping services, or sending video messages
    with the Nokia Senator!
  prefs: []
  type: TYPE_NORMAL
- en: '![Timeline of cell phones from 1980 to 2010, starting with the 10-kg Nokia
    Senator and ending with the 135-g iPhone in 2007.](image_fi/502185c08/f08001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-1: Some milestones in the evolution of mobile phones'
  prefs: []
  type: TYPE_NORMAL
- en: Minimalistic design is apparent in many products besides smartphones. Companies
    use it to improve UX and create focused applications. What better example could
    there be than the Google search engine?
  prefs: []
  type: TYPE_NORMAL
- en: Minimalism in Search
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [Figure 8-2](#figure8-2), I’ve sketched a minimalistic design that resembles
    how Google—and its copycats—designs its primary user interface as a radically
    simplified gate into the web. Make no mistake, the minimalistic and clean design
    is not an accident. This landing page is frequented by billions of users every
    day. It may be *the* primary real estate on the web. A small advertisement on
    the Google landing page could generate billions of clicks and, likely, billions
    of USD in revenue for Google, but Google hasn’t allowed these ads to clutter its
    landing page, despite the loss of short-term revenue opportunity—the company managers
    know that maintaining brand integrity and focus, expressed through minimalistic
    design, is even more valuable than the revenues that could be generated through
    selling this prime real estate.
  prefs: []
  type: TYPE_NORMAL
- en: '![Example of a browser showing a page with nothing but a search box and a search
    button.](image_fi/502185c08/f08002.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-2: An example of a modern search engine with a minimalist design'
  prefs: []
  type: TYPE_NORMAL
- en: Now compare this clean, focused design to the kind that alternative search engines
    like Bing and Yahoo! use to exploit their primary real estate (see [Figure 8-3](#figure8-3)).
  prefs: []
  type: TYPE_NORMAL
- en: '![Example of a page with a search box and button crammed into the top right
    and ads and articles littering the rest of the space.](image_fi/502185c08/f08003.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-3: Search engine or news aggregator?'
  prefs: []
  type: TYPE_NORMAL
- en: 'Even for basic search engine sites, companies like Yahoo! have followed the
    same path: they cluttered their valuable real estate with news and advertisements
    to boost short-term revenues. But these revenues didn’t last because the design
    drove away the commodity that generated it: users. Reduced usability led to a
    competitive disadvantage and ongoing erosion of users’ habitual search behavior.
    Any additional website element unrelated to search increases the cognitive challenge
    to the user, who must ignore attention-grabbing headlines, ads, and images. The
    smooth search experience is one of the reasons why Google continuously increased
    its market share. The last word isn’t spoken yet, but the rising popularity of
    focused search engines during the last decades indicates the superiority of minimalistic
    and focused design.'
  prefs: []
  type: TYPE_NORMAL
- en: Material Design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Google developed and currently adheres to the *Material Design* philosophy
    and design language, which describes a way to organize and design screen elements
    according to what users already understand intuitively: physical world elements
    such as paper, cards, pens, and shadow. [Figure 8-3](#figure8-3) from the previous
    section shows such an example of material design. The website is structured into
    cards, each card representing a piece of content, which creates a layout that
    resembles a newspaper with an image and some headline text. The look and feel
    of the website are almost materialistic, even though the three-dimensional (3D)
    effect is a pure illusion on the two-dimensional (2D) screen.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-4](#figure8-4) compares a material design on the left and a non-material
    design with unnecessary elements stripped out on the right. You could argue that
    the non-material design is more minimalistic, and, in a way, you would be right.
    It takes less space and uses fewer colors and fewer nonfunctional visual elements
    like shadows. However, lacking boundaries and an intuitively familiar layout,
    the non-material design is often more confusing to the reader. The true minimalist
    will always use fewer costly resources to accomplish the same task. In some cases,
    this means reducing the number of visual elements on a website. In other cases,
    this means adding some elements to reduce the time the user has to think. As a
    rule of thumb: user time is a much scarcer resource than screen space.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find a full introduction to material design with many beautiful case
    studies at [https://material.io/design/](https://material.io/design/). New design
    systems will emerge and users will get more and more used to digital work, so
    the material metaphors may well become less useful for the next generation of
    computer users. For now, just note that minimalism requires careful consideration
    of the relevant resources: time, space, and money—and you must weigh them according
    to the needs of your application. To sum up, minimalistic design gets rid of all
    unnecessary elements and results in a beautiful product likely to delight your
    users.'
  prefs: []
  type: TYPE_NORMAL
- en: Next, you’ll learn how to achieve it.
  prefs: []
  type: TYPE_NORMAL
- en: '![On the left is a website card that follows a material design, with a clear
    card boundary and clear structure for the headline and text. On the right is a
    non-material design, with no card boundaries and free-floating text.](image_fi/502185c08/f08004.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-4: Material versus “non-material” design'
  prefs: []
  type: TYPE_NORMAL
- en: How to Achieve Minimalistic Design
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, you’ll learn some technical tips and methods for how to achieve
    a focused, minimalistic design.
  prefs: []
  type: TYPE_NORMAL
- en: Use Whitespace
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Whitespace is one of the key pillars of minimalistic design. Adding whitespace
    to your application may seem like a waste of valuable real estate. You must be
    crazy not to use every inch of a highly-trafficked website, right? You could use
    it for advertisements, “call to actions” to sell more products, additional information
    about the value proposition, or more personalized recommendations. The more successful
    your app becomes, the more stakeholders will fight for every bit of attention
    they can get, and it’s likely that nobody will ask you to remove non-whitespace
    elements from your app.
  prefs: []
  type: TYPE_NORMAL
- en: 'Thinking “subtractively” may not come naturally; however, replacing design
    elements with whitespace will improve clarity and result in a more focused UX.
    Successful companies manage to keep the main thing the main thing by using whitespace
    to remain focused and sharp. For example, Google’s landing page uses a lot of
    whitespace, and Apple uses lots of whitespace when presenting its products. When
    thinking about your users, remember this: if you confuse them, you’ll lose them.
    Whitespace increases the clarity of user interfaces.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-5](#figure8-5) shows a simple design idea for an online pizza delivery
    service. The whitespace supports the focus on the main thing: getting customers
    to order pizza. Unfortunately, seldom will a pizza delivery service be bold enough
    to use whitespace in such an extreme way.'
  prefs: []
  type: TYPE_NORMAL
- en: '![a pizza service webpage with a simple black-and-white pizza line drawing
    above an “order your pizza” button. The rest of the page is whitespace.](image_fi/502185c08/f08005.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-5: Use lots of whitespace'
  prefs: []
  type: TYPE_NORMAL
- en: Whitespace can improve the clarity of text, too. Have a look at [Figure 8-6](#figure8-6),
    which compares two ways of formatting a paragraph.
  prefs: []
  type: TYPE_NORMAL
- en: '![two webpages that display the same text. The text on the right is cramped
    and difficult to read. The text on the right is double-spaced, has extra space
    between paragraphs, and has paragraph indentations, making it much easier to read.](image_fi/502185c08/f08006.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-6: Whitespace in text'
  prefs: []
  type: TYPE_NORMAL
- en: 'The left side of [Figure 8-6](#figure8-6) is far less readable. The right side
    injects whitespace to improve readability and UX: margins on the left and right
    around the text block, indentation of paragraphs, an increased line height, top
    and bottom margins around paragraphs, and increased font size. The costs of this
    additional space are negligible: scrolling is cheap, and we don’t have to physically
    cut more trees for paper when the publication is digital. On the other hand, the
    benefits are very real: the UX of your website or application improves significantly!'
  prefs: []
  type: TYPE_NORMAL
- en: Remove Design Elements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The principle is simple: go over each design element, one by one, and throw
    it out if possible. *Design elements* are any visible elements of the user interface,
    such as menu items, calls to action, featured lists, buttons, images, boxes, shadows,
    form fields, pop-ups, videos, and everything else that takes up real estate in
    your user interface. Literally, go over all design elements and ask: *Can I remove
    it?* You’ll be surprised how often the answer will be *yes!*'
  prefs: []
  type: TYPE_NORMAL
- en: Make no mistake—removing design elements is not easy! You’ve spent time and
    effort creating them, and the sunk cost bias makes you tempted to hold on to your
    creations even when they’re unnecessary. [Figure 8-7](#figure8-7) shows an idealized
    editing process in which you classify each element according to its importance
    regarding the UX. For example, does a menu item referring to your company’s blog
    help the user in the checkout process when ordering a product? No, so it should
    be classified as not important. Amazon has stripped all unnecessary design elements
    from the ordering process, for instance, by introducing the one-click buy button.
    When I first learned about this method in a scientific writing workshop, it completely
    transformed the way I thought about editing. Removing unimportant and less important
    design elements guarantees improved usability with little risk. But only truly
    great designers have the boldness to remove *important* design elements and leave
    only *very* *important* elements. Yet, this is what separates great from merely
    good design.
  prefs: []
  type: TYPE_NORMAL
- en: '![Two lists, both listing “Very important,” “Important,” “Somehow important,”
    “Less important,” and “Not important.” On the right, everything is struck out
    except Very “important” and “Important.” ](image_fi/502185c08/f08007.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-7: Idealized editing process'
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 8-8](#figure8-8) shows an example of a cluttered design and a minimalistic,
    edited design. The order page on the left is what you may well see from an online
    pizza delivery service. Some elements are very important, such as the address
    to which to deliver the pizza and the order button, but those like the overly
    detailed ingredient list and “What’s New?” info box are less so. On the right,
    you see an edited version of this order page. We removed unnecessary elements,
    focused on the most popular upsells, combined the ingredients list with the headline,
    and combined the labels with the form elements. This allowed us to add more whitespace
    and even increase the size of a very important design element: the image of the
    tasty pizza! The reduced clutter and increased focus are likely to increase the
    conversion rate of the order page through an improved UX.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Two pizza delivery service pages. The left is cluttered with many options
    to choose from and fields to fill in for delivery, as well as a “what’s new” section.
    The right structures the content one element above another and has removed the
    “what’s new” section and lots of the less important input fields. ](image_fi/502185c08/f08008.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-8: Remove unimportant elements: unfocused order page with many design
    elements (left); focused order page with unnecessary design elements removed (right).'
  prefs: []
  type: TYPE_NORMAL
- en: Remove Features
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The best way to implement a minimalistic design is to remove whole features
    from your application! You’ve already studied this idea in Chapter 3 about creating
    MVPs, which have the minimum number of features needed to validate a hypothesis.
    Minimizing the number of features is equally helpful in helping an established
    business refocus its product offerings.
  prefs: []
  type: TYPE_NORMAL
- en: Over time, applications tend to accumulate features—a phenomenon known as *feature
    creep*. As a result, more and more focus must be shifted toward maintaining existing
    features. Feature creep leads to bloated software, and bloated software leads
    to technical debt. This reduces the agility of an organization. The idea behind
    removing features is to release energy, time, and resources and to reinvest into
    the few features that matter most to your users.
  prefs: []
  type: TYPE_NORMAL
- en: Popular examples of feature creep and its harmful effects on usability are Yahoo!,
    AOL, and MySpace, who all somehow lost their focused products by adding too much
    stuff to the user interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: 'In contrast, the most successful products in the world are focused and have
    resisted feature creep, even if it doesn’t look like it. Microsoft is a great
    example of how building *focused products* helped it become a super successful
    company. A common perception is that Microsoft products such as Windows are slow,
    inefficient, and loaded with too many features. But nothing could be further from
    the truth! *What you see is all there is*—you don’t *see* the myriads of features
    Microsoft has removed. Although Microsoft is huge, it’s actually very focused
    considering its size. Hundreds of thousands of software developers write new Microsoft
    code every day. Here’s what Eric Traut, a famous engineer who’s worked for both
    Apple and Microsoft, has to say about Microsoft’s focused approach to software
    engineering:'
  prefs: []
  type: TYPE_NORMAL
- en: A lot of people think of Windows as this really large, bloated operating system,
    and that may be a fair characterization, I have to admit. It is large. It contains
    a lot of stuff in it. But at its core, the kernel and the components that make
    up the very core of the operating system actually is pretty streamlined.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To sum this up, when creating an application used by many users for a long period,
    removing features must be a core activity of your daily effort because it frees
    up resources, time, energy, and user interface space that can be reinvested into
    improving features that matter.
  prefs: []
  type: TYPE_NORMAL
- en: Reduce Variations of Fonts and Colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Extensive variability leads to complexity. If you vary the font types, font
    sizes, and colors too much, you’ll increase cognitive friction, increase the perceived
    complexity of the user interface, and sacrifice clarity. As a minimalistic coder,
    you don’t want to build these psychological effects into your application. Effective
    minimalist design often focuses on only one or two font types, one or two colors,
    and one or two font sizes. [Figure 8-9](#figure8-9) exemplifies the consistent
    and minimalistic use of font types, sizes, colors, and contrasts. That said, do
    note that there are many approaches to design and many ways to accomplish focus
    and minimalism on all levels. A minimalistic design might, for instance, use many
    different colors to make the playful, colorful attributes of an application stand
    out.
  prefs: []
  type: TYPE_NORMAL
- en: '![This is the page from the right side of figure 8-8, which highlights the
    font consistency throughout the page; the button uses a different background color
    to stand out.](image_fi/502185c08/f08009.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8-9: Minimalistic use of font sizes, font types, colors, and contrasts'
  prefs: []
  type: TYPE_NORMAL
- en: Be Consistent
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'An application doesn’t normally consist of a single user interface but a series
    of interfaces handling the user interaction. This leads us to another dimension
    of minimalistic design: *consistency*. We define consistency as the degree to
    which we’ve minimized the variability of design choices in a given app. Instead
    of presenting the user a different “look and feel” in each step in the interaction,
    consistency ensures that the application feels like a coherent whole. For example,
    Apple provides many iPhone apps, such as browsers, health apps, and mapping services,
    and all have a similar look and feel and are recognizable as Apple products. It
    can be challenging to get different app developers to agree on a consistent design,
    but it’s extremely important for the strength of the Apple brand. To ensure brand
    consistency, software companies use *brand guidelines* that any contributing developer
    must adhere to. Make sure to check off this box when creating your own application.
    You might accomplish this with the consistent use of templates and (CSS) stylesheets.'
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This chapter focused on how minimalistic designers have come to dominate the
    world of design, as exemplified by some of the most successful software companies
    such as Apple and Google. More often than not, the leading technologies and user
    interfaces are radically simple. Nobody knows what the future holds, but it seems
    that the wide adoption of speech recognition and virtual reality will result in
    even simpler user interfaces. The ultimate minimalistic design is invisible. With
    ubiquitous computing on the rise—for example, Alexa and Siri—I think we’ll see
    even simpler and even more focused user interfaces in the decades ahead. So, to
    answer the question posed in the beginning: *yes, less is more in design!*'
  prefs: []
  type: TYPE_NORMAL
- en: In the next and final chapter of this book, we’ll conclude by discussing focus—and
    its relevance for today’s programmers.
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Apple’s documentation of human interface design: [https://developer.apple.com/design/human-interface-guidelines/](https://developer.apple.com/design/human-interface-guidelines/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Documentation for the material design style: [https://material.io/design/introduction/](https://material.io/design/introduction/)'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
