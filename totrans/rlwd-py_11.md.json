["```py\nconda install -c pyviz holoviews bokeh\n```", "```py\npip install 'holoviews[recommended]'\n```", "```py\n>>> import bokeh\n>>> import bokeh.sampledata\n>>> bokeh.sampledata.download()\nCreating C:\\Users\\lee_v\\.bokeh directory\nCreating C:\\Users\\lee_v\\.bokeh\\data directory\nUsing data directory: C:\\Users\\lee_v\\.bokeh\\data\n```", "```py\ntexas_choropleth_example.html\n   import holoviews as hv\n   from holoviews import opts\n   hv.extension('bokeh')\n➊ from bokeh.sampledata.us_counties import data as counties\n   from bokeh.sampledata.unemployment import data as unemployment\n\n   counties = [dict(county, ➋Unemployment=unemployment[cid])\n               for cid, county in counties.items()\n            ➌ if county[\"state\"] == \"tx\"]\n\n   choropleth = hv.Polygons(counties, ['lons', 'lats'],\n                            [('detailed name', 'County'), 'Unemployment'])\n\n   choropleth.opts(opts.Polygons(logz=True,\n                                 tools=['hover'],\n                                 xaxis=None, yaxis=None,\n                                 show_grid=False,\n                                 show_frame=False,\n                                 width=500, height=500,\n                                 color_index='Unemployment',\n                                 colorbar=True, toolbar='above',\n                                 line_color='white'))\n```", "```py\n   >>> from bokeh.sampledata.unemployment import data as unemployment\n➊ >>> type(unemployment)\n   <class 'dict'>\n➋ >>> first_2 = {k: unemployment[k] for k in list(unemployment)[:2]}\n   >>> for k in first_2:\n          print(f\"{k} : {first_2[k]}\")\n➌ (1, 1) : 9.7\n   (1, 3) : 9.1\n   >>>\n   >>> for k in first_2:\n          for item in k:\n             print(f\"{item}: {type(item)}\")\n➍ 1: <class 'int'>\n   1: <class 'int'>\n   1: <class 'int'>\n   3: <class 'int'>\n```", "```py\nchoropleth.py, part 1\n   from os.path import abspath\n   import webbrowser\n   import pandas as pd\n   import holoviews as hv\n   from holoviews import opts\n➊ hv.extension('bokeh')\n   from bokeh.sampledata.us_counties import data as counties\n\n➋ df = pd.read_csv('census_data_popl_2010.csv', encoding=\"ISO-8859-1\")\n\n   df = pd.DataFrame(df,\n                     columns=\n                     ['Target Geo Id2',\n                     'Geographic area.1',\n                     'Density per square mile of land area - Population'])\n\n   df.rename(columns =\n             {'Target Geo Id2':'fips',\n              'Geographic area.1': 'County',\n              'Density per square mile of land area - Population':'Density'},\n             inplace = True)\n\n   print(f\"\\nInitial popl data:\\n {df.head()}\")\n   print(f\"Shape of df = {df.shape}\\n\")\n```", "```py\ndf = pd.read_csv('census_data_popl_2010.csv')\n```", "```py\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf1 in position 31: \ninvalid continuation byte\n```", "```py\nInitial popl data:\n      fips          County  Density\n0     NaN   United States     87.4\n1     1.0         Alabama     94.4\n2  1001.0  Autauga County     91.8\n3  1003.0  Baldwin County    114.6\n4  1005.0  Barbour County     31.0\nShape of df = (3274, 3)\n```", "```py\n   choropleth.py, part 2\n   df = df[df['fips'] > 100]\n   print(f\"Popl data with non-county rows removed:\\n {df.head()}\")\n   print(f\"Shape of df = {df.shape}\\n\")\n\n➊ df['state_id'] = (df['fips'] // 1000).astype('int64')\n   df['cid'] = (df['fips'] % 1000).astype('int64') \n   print(f\"Popl data with new ID columns:\\n {df.head()}\")\n   print(f\"Shape of df = {df.shape}\\n\")\n   print(\"df info:\")\n➋ print(df.info())\n\n   print(\"\\nPopl data at row 500:\")\n➌ print(df.loc[500])\n```", "```py\n Popl data with non-county rows removed:\n      fips          County  Density\n2  1001.0  Autauga County     91.8\n3  1003.0  Baldwin County    114.6\n4  1005.0  Barbour County     31.0\n5  1007.0     Bibb County     36.8\n6  1009.0   Blount County     88.9\nShape of df = (3221, 3)\n```", "```py\nPopl data with new ID columns:\n      fips          County  Density  state_id  cid\n2  1001.0  Autauga County     91.8         1    1\n3  1003.0  Baldwin County    114.6         1    3\n4  1005.0  Barbour County     31.0         1    5\n5  1007.0     Bibb County     36.8         1    7\n6  1009.0   Blount County     88.9         1    9\nShape of df = (3221, 5)\n\ndf info:\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 3221 entries, 2 to 3273\nData columns (total 5 columns):\nfips        3221 non-null float64\nCounty      3221 non-null object\nDensity     3221 non-null float64\nstate_id    3221 non-null int64\ncid         3221 non-null int64\ndtypes: float64(2), int64(2), object(1)\nmemory usage: 151.0+ KB\nNone\n```", "```py\nPopl data at row 500:\nfips                13207\nCounty      Monroe County\nDensity              66.8\nstate_id               13\ncid                   207\nName: 500, dtype: object\n```", "```py\nchoropleth.py, part 3\nstate_ids = df.state_id.tolist()\ncids = df.cid.tolist()\nden = df.Density.tolist()\n\ntuple_list = tuple(zip(state_ids, cids))\npopl_dens_dict = dict(zip(tuple_list, den))\n\nEXCLUDED = ('ak', 'hi', 'pr', 'gu', 'vi', 'mp', 'as')\n\ncounties = [dict(county, Density=popl_dens_dict[cid])\n            for cid, county in counties.items()\n            if county[\"state\"] not in EXCLUDED]\n```", "```py\n(1, 1) : 9.7\n(1, 3) : 9.1\n--snip--\n```", "```py\n[{'name': 'Autauga', 'detailed name': 'Autauga County, Alabama', 'state': \n'al', 'lats': [32.4757, 32.46599, 32.45054, 32.44245, 32.43993, 32.42573, \n32.42417, --snip-- -86.41231, -86.41234, -86.4122, -86.41212, -86.41197, \n-86.41197, -86.41187], 'Density': 91.8}]\n```", "```py\nchoropleth.py, part 4\n   choropleth = hv.Polygons(counties,\n                            ['lons', 'lats'],\n                            [('detailed name', 'County'), 'Density'])\n\n➊ choropleth.opts(opts.Polygons(logz=True,\n                     tools=['hover'],\n                     xaxis=None, yaxis=None,\n                     show_grid=False, show_frame=False,\n                     width=1100, height=700,\n                     colorbar=True, toolbar='above',\n                     color_index='Density', cmap='Greys', line_color=None,\n                     title='2010 Population Density per Square Mile of Land Area'\n                     ))\n\n➋ hv.save(choropleth, 'choropleth.html', backend='bokeh')\n   url = abspath('choropleth.html')\n   webbrowser.open(url)\n```", "```py\ndf.loc[df.Density >= 65, ['Density']] = 1000\n```", "```py\n>>> import pandas as pd\n>>>\n>>> # Generate example population data by county:\n>>> pop_2010 = {'county': ['Autauga', 'Baldwin', 'Barbour', 'Bibb'],\n 'popl': [54571, 182265, 27457, 22915]}\n>>> pop_2020 = {'county': ['Autauga', 'Baldwin', 'Barbour', 'Bibb'],\n 'popl': [52910, 258321, 29073, 29881]}\n>>>\n>>> df_2010 = pd.DataFrame(pop_2010)\n>>> df_2020 = pd.DataFrame(pop_2020)\n>>> df_diff = df_2020.copy()  # Copy the 2020 dataframe to a new df\n>>> df_diff['diff'] = df_diff['popl'].sub(df_2010['popl'])  # Subtract popl columns\n>>> print(df_diff.loc[:4, ['county', 'diff']])\n    county   diff\n0  Autauga  -1661\n1  Baldwin  76056\n2  Barbour   1616\n3     Bibb   6966\n```"]