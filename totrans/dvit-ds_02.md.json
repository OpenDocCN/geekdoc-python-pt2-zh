["```py\nimport pandas as pd\ncarsales=pd.read_csv('carsales.csv')\n```", "```py\n>>> **print(carsales.head())**\n     Month  Monthly car sales in Quebec 1960-1968\n0  1960-01                                 6550.0\n1  1960-02                                 8728.0\n2  1960-03                                12026.0\n3  1960-04                                14395.0\n4  1960-05                                14587.0\n```", "```py\ncarsales.columns= ['month','sales']\n```", "```py\n>>> **print(carsales.tail())**\n                                     month    sales\n104                                1968-09  14385.0\n105                                1968-10  21342.0\n106                                1968-11  17180.0\n107                                1968-12  14577.0\n108  Monthly car sales in Quebec 1960-1968      NaN\n```", "```py\ncarsales=carsales.loc[0:107,:].copy()\n```", "```py\ncarsales['period']=list(range(108))\n```", "```py\nfrom matplotlib import pyplot as plt\nplt.scatter(carsales['period'],carsales['sales'])\nplt.title('Car Sales by Month')\nplt.xlabel('Month')\nplt.ylabel('Sales')\nplt.show()\n```", "```py\nx = carsales['period'].values.reshape(-1,1)\ny = carsales['sales'].values.reshape(-1,1)\n```", "```py\nfrom sklearn.linear_model import LinearRegression\nregressor = LinearRegression()\nregressor.fit(x, y)\n```", "```py\nprint(regressor.coef_)\nprint(regressor.intercept_)\n```", "```py\nplt.scatter(carsales['period'],carsales['sales'])\nplt.plot(carsales['period'],[81.2 * i + 10250.8 for i in \\\ncarsales['period']],'r-',label='Regression Line')\nplt.plot(carsales['period'],[125 * i + 8000 for i in\ncarsales['period']],'r--',label='Hypothesized Line')\nplt.legend(loc=\"upper left\")\nplt.title('Car Sales by Month')\nplt.xlabel('Month')\nplt.ylabel('Sales')\nplt.show()\n```", "```py\nsaleslist=carsales['sales'].tolist()\nregressionline=[81.2 * i + 10250.8 for i in carsales['period']]\nhypothesizedline=[125 * i + 8000 for i in carsales['period']]\nerror1=[(x-y) for x, y in zip(regressionline,saleslist)]\nerror2=[(x-y) for x, y in zip(hypothesizedline,saleslist)]\n```", "```py\nprint(error1)\nprint(error2)\n```", "```py\nimport numpy as np\n\nerror1abs=[abs(value) for value in error1]\nerror2abs=[abs(value) for value in error2]\n\nprint(np.mean(error1abs))\nprint(np.mean(error2abs))\n```", "```py\nerror1squared=[(value)**2 for value in error1]\nerror2squared=[(value)**2 for value in error2]\n\nprint(np.sqrt(np.mean(error1squared)))\nprint(np.sqrt(np.mean(error2squared)))\n```", "```py\ndef get_mae(line,actual):\n    error=[(x-y) for x,y in zip(line,actual)]\n    errorabs=[abs(value) for value in error]\n    mae=np.mean(errorabs)\n    return(mae)\n\ndef get_rmse(line,actual):\n    error=[(x-y) for x,y in zip(line,actual)]\n    errorsquared=[(value)**2 for value in error]\n    rmse=np.sqrt(np.mean(errorsquared))\n    return(rmse)\n```", "```py\nx_extended = np.append(carsales['period'], np.arange(108, 116))\n```", "```py\nx_extended=x_extended.reshape(-1,1)\nextended_prediction=regressor.predict(x_extended)\n```", "```py\nplt.scatter(carsales['period'],carsales['sales'])\nplt.plot(x_extended,extended_prediction,'r--')\nplt.title('Car Sales by Month')\nplt.xlabel('Month')\nplt.ylabel('Sales')\nplt.show()\n```", "```py\ncarsales['quadratic']=carsales['period'].apply(lambda x: x**2)\ncarsales['cubic']=carsales['period'].apply(lambda x: x**3)\n\nx3 = carsales.loc[:,['period','quadratic','cubic']].values.reshape(-1,3)\ny = carsales['sales'].values.reshape(-1,1)\n\nregressor_cubic = LinearRegression()\nregressor_cubic.fit(x3, y)\nplt.scatter(carsales['period'],carsales['sales'])\nplt.plot(x,regressor.predict(x),'r-')\nplt.plot(x,regressor_cubic.predict(x3),'r--')\nplt.title('Car Sales by Month')\nplt.xlabel('Month')\nplt.ylabel('Sales')\nplt.show()\n```", "```py\nprint(regressor_cubic.coef_)\nprint(regressor_cubic.intercept_)\n```", "```py\n[[ 8.13410634e+01 7.90279561e-01 -8.19451188e-03]]\n[9746.41276055]\n```", "```py\nfrom matplotlib import pyplot as plt\nplt**.plot**(carsales['period'],carsales['sales'])\nplt.title('Car Sales by Month')\nplt.xlabel('Month')\nplt.ylabel('Sales')\nplt.show()\n```", "```py\nimport math\ncarsales['sin_period']=carsales['period'].apply(lambda x: math.sin(x*2*math.pi/12))\ncarsales['cos_period']=carsales['period'].apply(lambda x: math.cos(x*2*math.pi/12))\n\nx_trig = carsales.loc[:,['period','sin_period','cos_period']].values.reshape(-1,3)\ny = carsales['sales'].values.reshape(-1,1)\n\nregressor_trig = LinearRegression()\nregressor_trig.fit(x_trig, y)\n\nplt.plot(carsales['period'],carsales['sales'])\nplt.plot(x,regressor_trig.predict(x_trig),'r--')\nplt.title('Car Sales by Month')\nplt.xlabel('Month')\nplt.ylabel('Sales')\nplt.show()\n```", "```py\ntrig_line=regressor_trig.predict(x_trig)[:, 0]\nprint(get_rmse(trig_line,saleslist))\n```", "```py\ncarsales['squareroot']=carsales['period'].apply(lambda x: x**0.5)\ncarsales['exponent15']=carsales['period'].apply(lambda x: x**1.5)\ncarsales['log']=carsales['period'].apply(lambda x: math.log(x+1))\n\nx_complex = carsales.loc[:,['period','log','sin_period','cos_period', \\\n'squareroot','exponent15','log','quadratic', 'cubic']].values.reshape(-1,9)\ny = carsales['sales'].values.reshape(-1,1)\n\nregressor_complex = LinearRegression()\nregressor_complex.fit(x_complex,y)\n\ncomplex_line=[prediction for sublist in regressor_complex.predict(x_complex) \\\nfor prediction in sublist]\nprint(get_rmse(complex_line,saleslist))\n```", "```py\nx_complex_train = carsales.loc[0:80,['period','log','sin_period','cos_period','squareroot', \\\n'exponent15','log','quadratic','cubic']].values.reshape(-1,9)\ny_train = carsales.loc[0:80,'sales'].values.reshape(-1,1)\n\nx_complex_test = carsales.loc[81:107,['period','log','sin_period','cos_period','squareroot', \\\n'exponent15','log','quadratic','cubic']].values.reshape(-1,9)\ny_test = carsales.loc[81:107,'sales'].values.reshape(-1,1)\n\nregressor_complex.fit(x_complex_train, y_train)\n```", "```py\nx_train = carsales.loc[0:80,['period']].values.reshape(-1,1)\nx_test = carsales.loc[81:107,['period']].values.reshape(-1,1)\nx_trig_train = carsales.loc[0:80,['period','sin_period','cos_period']].values.reshape(-1,3)\nx_trig_test = carsales.loc[81:107,['period','sin_period','cos_period']].values.reshape(-1,3)\n\nregressor.fit(x_train, y_train)\nregressor_trig.fit(x_trig_train, y_train)\n\ncomplex_test_predictions=[prediction for sublist in \\\n      regressor_complex.predict(x_complex_test) for prediction in sublist]\ntest_predictions=[prediction for sublist in regressor.predict(x_test) for \\\n      prediction in sublist]\ntrig_test_predictions=[prediction for sublist in \\\n      regressor_trig.predict(x_trig_test) for prediction in sublist]\n\nprint(get_rmse(test_predictions,saleslist[81:107]))\nprint(get_rmse(trig_test_predictions,saleslist[81:107]))\nprint(get_rmse(complex_test_predictions,saleslist[81:107]))\n```"]