- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Flow
  prefs: []
  type: TYPE_NORMAL
- en: Flow is the source code of ultimate human performance.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Steven Kotler
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](image_fi/book_art/chapterart.png)'
  prefs: []
  type: TYPE_IMG
- en: In this chapter, you’ll learn about the concept of flow and how you can use
    it to ramp up your programming productivity. Many programmers find themselves
    in office environments with constant interruptions, meetings, and other diversions
    that can make it nearly impossible to reach a pure state of productive programming.
    To gain more insight on what flow is and how to accomplish it in practice, we’ll
    examine many examples throughout this chapter, but generally speaking, *flow*
    is a state of pure concentration and focus—what some people might call “being
    in the zone.”
  prefs: []
  type: TYPE_NORMAL
- en: Flow is not a strictly programmatic concept but a state that can be applied
    to any task in any field. Here, we’ll look at how you can go about attaining a
    state of flow and how it can be useful to you.
  prefs: []
  type: TYPE_NORMAL
- en: What Is Flow?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The concept of flow was popularized by Mihaly Csikszentmihalyi (pronounced “chick-sent-me-high”),
    a distinguished professor of psychology and management at Claremont Graduate University
    and former head of the department of psychology at the University of Chicago.
    In 1990, Csikszentmihalyi published the groundbreaking book about his life’s work
    titled, appropriately, *Flow*.
  prefs: []
  type: TYPE_NORMAL
- en: But what is flow? Let’s start with the somewhat subjective definition of how
    it feels. Afterward, you’ll learn a more tangible definition of flow based on
    what you can measure—as a coder, you’ll like the second definition more!
  prefs: []
  type: TYPE_NORMAL
- en: 'Experiencing flow is being in a state of complete immersion in the task at
    hand: focused and concentrated. You forget about time; you’re in the zone, hyper-aware.
    You might feel a sense of ecstasy, freed from all other burdens of everyday life.
    Your inner clarity increases, and it becomes evident to you what you need to be
    doing next—the activities flow naturally from one to another. Your confidence
    in your ability to complete the next activity is unshaken. Completing the activity
    is its own reward, and you enjoy every second. Both your performance and your
    results go through the roof.'
  prefs: []
  type: TYPE_NORMAL
- en: According to psychological research led by Csikszentmihalyi, a state of flow
    has six components
  prefs: []
  type: TYPE_NORMAL
- en: Attention You feel a deep sense of concentration and complete focus.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Action You feel a bias toward action, and you move forward with your current
    task quickly and efficiently—your focused awareness helps drive the momentum.
    Every action feeds into the next action, creating a flow of successful actions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Self You become less aware of yourself, and you shut down your inner critics,
    doubts, and fears. You think less about yourself (*reflection*) and more about
    the task at hand (*action*). You lose yourself in the task at hand.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Control Even as you’re less self-aware, you enjoy an increased sense of control
    about the present situation, giving you calm confidence and allowing you to think
    outside the box and develop creative solutions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Time You lose the ability to experience time passing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reward The labor of the activity is all you want to do; there may be no external
    reward, but being immersed in the activity is intrinsically rewarding in itself.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The terms *flow* and *attention* are closely related. In a 2013 dissertation
    on attention deficit hyperactivity disorder (ADHD), Rony Sklar points out that
    the term *attention deficit* wrongly implies that patients experiencing it cannot
    focus. Another term for flow is *hyperfocus*, and legions of psychology researchers
    (for example, Kaufmann et al. 2000) have proven that ADHD patients are quite capable
    of hyperfocus; they only struggle with sustaining attention for tasks that are
    not intrinsically rewarding. You don’t need to get diagnosed with ADHD to know
    that it’s hard to focus on things you don’t enjoy doing.
  prefs: []
  type: TYPE_NORMAL
- en: But if you’ve ever completely lost yourself playing an exciting game, programming
    a fun application, or watching an interesting movie—you know how easy it is to
    reach flow if you like the activity. In a state of flow, your body releases five
    *feel-good* neurochemical pleasure drugs such as endorphins, dopamine, and serotonin.
    It’s like experiencing the “benefits” of taking recreational drugs but without
    some of the negative consequences—even Csikszentmihalyi warned that flow can be
    addictive. Learning to enter a state of flow makes you smarter and more productive—if
    you manage to direct the flow activity into productive endeavors such as programming.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you may ask: Show me the meat—how do I get flow? Let’s answer this next!'
  prefs: []
  type: TYPE_NORMAL
- en: How to Achieve Flow
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Csikszentmihalyi laid out three conditions to achieve flow: (1) your goals
    must be clear, (2) the feedback mechanism in your environment must be immediate,
    and (3) there must be a balance between opportunity and capacity.'
  prefs: []
  type: TYPE_NORMAL
- en: Clear Goals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you’re writing code, you must have a clear goal toward which the smaller
    actions are oriented. In a state of flow, every action naturally leads to the
    next, which leads to the next, so there must be an end goal. People often reach
    a state of flow when playing computer games because if you succeed in the small
    actions—such as jumping over a moving obstacle—you ultimately succeed in the big
    goal—such as winning the level. To use flow to accelerate your programming productivity,
    you must have a clear project goal. Every line of code leads you closer to the
    successful completion of the larger code project. Keeping track of the lines of
    code you’ve written is one way to gamify your coding work!
  prefs: []
  type: TYPE_NORMAL
- en: Feedback Mechanism
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A feedback mechanism rewards desired behavior and punishes undesired behavior.
    Machine learning engineers know that they need to have a great feedback mechanism
    to train highly effective models. For example, you may teach a robot how to walk
    by rewarding it for each second it doesn’t fall and telling it to optimize for
    a maximum total reward. The robot can then automatically adjust its action to
    obtain maximum rewards over time. We humans behave quite similarly when learning
    new things. We seek appreciation from our parents, teachers, friends, or mentors—even
    from neighbors we don’t like—and adjust our actions to maximize appreciation while
    minimizing (social) punishments. This way, we learn to take specific actions and
    avoid others. Receiving feedback is vital for this way of learning.
  prefs: []
  type: TYPE_NORMAL
- en: Feedback is a precondition for flow. To implement more flow in your workday,
    seek more feedback. Meet weekly with project partners to discuss your code and
    project goals, then incorporate your partners’ feedback. Publish your code on
    Reddit or StackOverflow and ask for feedback. Publish your MVP early and often
    to receive user feedback. Seeking feedback for your programming efforts works
    like a charm, even if it is delayed gratification, because it’ll increase your
    level of engagement in the activity that led to the feedback. After I published
    Finxter, my software application for learning Python, I started to receive a never-ending
    stream of user feedback, and I was hooked. The feedback kept me going back to
    work on the code and allowed for many states of flow when I worked on the code
    to improve the app.
  prefs: []
  type: TYPE_NORMAL
- en: Balance Opportunity and Capacity
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Flow is an active state of mind. If the task is too easy, you get bored and
    lose the sense of immersion. If it’s too hard, you’ll throw in the towel early.
    The task must be challenging but not overwhelming.
  prefs: []
  type: TYPE_NORMAL
- en: '[Figure 6-1](#figure6-1) shows the landscape of possible states of mind; this
    image is taken and redrawn from Csikszentmihalyi’s original research.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Graph with x-axis representing your level of skill and y-axis representing
    the challenge of a task. Emotional states are labeled on the graph, from top left
    to bottom right: Panic, anxiety, flow, boredom, and apathy. A state of flow is
    a direct balance of challenge and skill. ](image_fi/502185c06/f06001.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6-1: In a state of flow, you find the challenge is neither too hard
    nor too easy, given your current skill level.'
  prefs: []
  type: TYPE_NORMAL
- en: The x-axis quantifies your skill level from low to high, and the y-axis quantifies
    the difficulty of a given task from low to high. So, for example, if the task
    is much too hard for your skill level, you’ll feel panic, and if it’s much too
    easy, you’ll feel apathy. But if a task’s difficulty matches your current skills,
    you’ll maximize the likelihood of attaining flow.
  prefs: []
  type: TYPE_NORMAL
- en: The trick is to constantly seek harder challenges without reaching anxiety levels
    and increase your skill level accordingly. This learning loop keeps you in a cycle
    toward higher and higher productivity and skill, and greater enjoyment of work
    at the same time.
  prefs: []
  type: TYPE_NORMAL
- en: Flow Tips for Coders
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In his 2015 white paper titled “Crafting Fun User Experiences: A Method to
    Facilitate Flow,” Owen Schaffer identified these seven flow conditions: (1) know
    what to do, (2) know how to do it, (3) know how well you’re doing, (4) know where
    to go, (5) seek challenges, (6) work on your skills to overcome the high challenges,
    and (7) free yourself from distractions (Human Factors International). Based on
    these conditions and my own considerations, I’ve compiled some quick tips and
    tactics for attaining flow that are highly biased toward the coding niche.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Always have a practical code project in the works** rather than spending
    your time in a state of unfocused learning. You can absorb new information more
    quickly when it has a real impact on something you care about. I recommend splitting
    your learning time into 70 percent working on a practical fun project of your
    choice and 30 percent reading books and tutorials or watching educational courses.
    I’ve learned from my personal interaction and correspondence with tens of thousands
    of coders in the Finxter community that a significant portion of coding students
    have this backward and get stuck in the learning loop, never feeling quite ready
    to leap into a real project. It’s always the same story: these coders remain stuck
    in programming theory, learning and learning without practical application, making
    them even more aware of their knowledge limitations—a negative spiral toward paralysis.
    The way out is to set your clear project goal and push the project through to
    completion, no matter what. This coincides with one of the three preconditions
    of flow.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Work on fun projects that fulfill your purpose.** Flow is a state of excitement,
    so you must be excited about your work. If you’re a professional coder, spend
    time thinking about the purpose of your work. Find the value of your project.
    If you’re learning to code, lucky you—you can choose a fun project that excites
    you! Work on projects that are meaningful for you. You’ll have more fun, a higher
    probability of success, and more resilience against temporary setbacks. If you
    wake up and cannot wait to work on your project, you know that flow is just around
    the corner.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Perform from your strengths.** This tip from management consultant Peter
    Drucker is gold. There will always be more areas in which you are weak than strong.
    In most activities, your skills are below average. If you focus on your weaknesses,
    you’re virtually guaranteeing failure. Instead, focus on your strengths, build
    large skill islands around them, and essentially ignore most of your weaknesses.
    What are you uniquely good at? What are your specific interests in the broad area
    of computer science? Make lists to answer those questions. One of the activities
    that will most benefit your progression is figuring out your strengths and then
    brutally structuring your day around those.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Block out your coding time in large chunks.** This will give you time to
    both comprehend the issues and tasks ahead of you—every coder knows that it takes
    time to load a complicated code project into their head—and get into the rhythm
    of your tasks. Say Alice and Bob work on a given code project. It takes 20 minutes
    to attain a state where each completely understands the demands of their code
    project by glancing over the project, diving into a few code functions, and thinking
    about the big picture. Alice spends three hours every three days on the project,
    while Bob spends one hour every day. Who will make more progress in the project?
    Alice works 53 minutes on the project per day ([3 hours – 20 minutes] / 3). Given
    the high constant loading time, Bob works only 40 minutes on the project every
    day. Thus, all other things being equal, Alice will outwork Bob by 13 minutes
    every day. She has a much higher chance of achieving a state of flow as she can
    dive deeper into the problem and lose herself entirely in it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Eliminate distractions during your flow time.** It seems obvious, but how
    seldomly it is implemented! Coders who can reduce distractions—social networks,
    entertainment applications, chitchat about colleagues—attain flow much more often
    than coders who can’t. To reach success, you must do what most others are unwilling
    to do: shut down distractions. Switch off your smartphone and close that social
    media tab.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Do the obvious things you know you need to do**, outside of the task at hand:
    get plenty of sleep, eat healthily, and get regular exercise. As a coder, you
    know the expression *garbage-in, garbage-out*: if you feed a system with bad inputs,
    you’ll obtain bad results. Try to cook a tasty meal with decayed food—almost impossible!
    High-quality input leads to high-quality output.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Consume high-quality information** because the better your inputs, the better
    your output. Read programming books instead of shallow blog articles; better yet,
    read research papers published in top-rated journals, the highest-quality information
    there is.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To summarize, here are some of the easiest ways in which you can begin to attempt
    to attain flow: block large chunks of time, focus on one task, stay healthy and
    sleep properly, set clear goals, find work you enjoy doing, and actively seek
    flow.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you seek flow, you’ll eventually find it. If you systematically work in
    a state of flow daily, you’ll boost your work productivity by an order of magnitude.
    This is a simple yet powerful concept for programmers and other knowledge workers
    alike. As Mihaly Csikszentmihalyi says:'
  prefs: []
  type: TYPE_NORMAL
- en: The best moments in our lives are not the passive, receptive, relaxing times
    . . . The best moments usually occur if a person’s body or mind is stretched to
    its limits in a voluntary effort to accomplish something difficult and worthwhile.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In the next chapter, you’ll dive into the Unix philosophy about *doing one thing
    well*, a principle that’s proven to be not only an excellent way to create a scalable
    operating system but also a great way to live!
  prefs: []
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Troy Erstling, “The Neurochemistry of Flow States,” *Troy Erstling* (blog),
    [https://troyerstling.com/the-neurochemistry-of-flow-states/](https://troyerstling.com/the-neurochemistry-of-flow-states/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Steven Kotler, “How to Get into the Flow State,” filmed at A-Fest Jamaica, February
    19, 2019, Mindvalley video, [https://youtu.be/XG_hNZ5T4nY/](https://youtu.be/XG_hNZ5T4nY/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'F. Massimini, M. Csikszentmihalyi, and M. Carli, “The Monitoring of Optimal
    Experience: A Tool for Psychiatric Rehabilitation,” *Journal of Nervous and Mental
    Disease* 175, no. 9 (September 1987).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Kevin Rathunde, “Montessori Education and Optimal Experience: A Framework for
    New Research,” *NAMTA Journal* 26, no. 1 (January 2001): 11–43.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Owen Schaffer, “*[Crafting Fun User Experiences: A Method to Facilitate Flow](http://humanfactors.com/funexperiences.asp)*,”
    Human Factors International white paper (2015), [https://humanfactors.com/hfi_new/whitepapers/crafting_fun_ux.asp](https://humanfactors.com/hfi_new/whitepapers/crafting_fun_ux.asp).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Rony Sklar, “Hyperfocus in Adult ADHD: An EEG Study of the Differences in Cortical
    Activity in Resting and Arousal States” (MA thesis, University of Johannesburg,
    2013), [https://hdl.handle.net/10210/8640](https://hdl.handle.net/10210/8640).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
