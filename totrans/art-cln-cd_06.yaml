- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Flow
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 心流
- en: Flow is the source code of ultimate human performance.
  id: totrans-2
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 心流是极致人类表现的源代码。
- en: ''
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: —Steven Kotler
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: —Steven Kotler
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: In this chapter, you’ll learn about the concept of flow and how you can use
    it to ramp up your programming productivity. Many programmers find themselves
    in office environments with constant interruptions, meetings, and other diversions
    that can make it nearly impossible to reach a pure state of productive programming.
    To gain more insight on what flow is and how to accomplish it in practice, we’ll
    examine many examples throughout this chapter, but generally speaking, *flow*
    is a state of pure concentration and focus—what some people might call “being
    in the zone.”
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将了解心流的概念，以及如何利用它提升你的编程生产力。许多程序员发现自己身处充满不断干扰、会议和其他分心事物的办公环境中，这使得他们几乎不可能进入纯粹的高效编程状态。为了更深入地理解什么是心流，以及如何在实践中实现它，我们将在本章中探讨许多例子，但一般来说，*心流*是一种纯粹的集中和专注状态——有些人可能称之为“进入状态”。
- en: Flow is not a strictly programmatic concept but a state that can be applied
    to any task in any field. Here, we’ll look at how you can go about attaining a
    state of flow and how it can be useful to you.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 心流不是一个严格的程序化概念，而是一种可以应用于任何领域中任何任务的状态。在这里，我们将探讨如何达到心流状态，以及它如何对你有益。
- en: What Is Flow?
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是心流？
- en: The concept of flow was popularized by Mihaly Csikszentmihalyi (pronounced “chick-sent-me-high”),
    a distinguished professor of psychology and management at Claremont Graduate University
    and former head of the department of psychology at the University of Chicago.
    In 1990, Csikszentmihalyi published the groundbreaking book about his life’s work
    titled, appropriately, *Flow*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 心流这一概念由米哈伊·奇克森米哈伊（Mihaly Csikszentmihalyi）普及，他是克莱蒙特研究生大学的心理学和管理学杰出教授，曾任芝加哥大学心理学系主任。1990年，奇克森米哈伊出版了关于他一生工作的开创性著作，名为*心流*。
- en: But what is flow? Let’s start with the somewhat subjective definition of how
    it feels. Afterward, you’ll learn a more tangible definition of flow based on
    what you can measure—as a coder, you’ll like the second definition more!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 但什么是心流呢？我们从心流的主观定义开始，看看它的感觉如何。之后，你将学到一个更具可衡量性的心流定义——作为程序员，你会更喜欢第二个定义！
- en: 'Experiencing flow is being in a state of complete immersion in the task at
    hand: focused and concentrated. You forget about time; you’re in the zone, hyper-aware.
    You might feel a sense of ecstasy, freed from all other burdens of everyday life.
    Your inner clarity increases, and it becomes evident to you what you need to be
    doing next—the activities flow naturally from one to another. Your confidence
    in your ability to complete the next activity is unshaken. Completing the activity
    is its own reward, and you enjoy every second. Both your performance and your
    results go through the roof.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 经历心流就是完全沉浸在手头任务中的状态：专注且集中。你忘记了时间，你进入了状态，超常觉醒。你可能会感受到一种欣喜，仿佛从日常生活的重担中解脱出来。你的内在清晰度提高了，你能清楚地知道接下来该做什么——活动自然而然地从一个接一个地进行。你对完成下一个活动的信心毫不动摇。完成任务本身就是一种奖励，你享受每一秒钟。你的表现和结果飞速提升。
- en: According to psychological research led by Csikszentmihalyi, a state of flow
    has six components
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 根据由Csikszentmihalyi主导的心理学研究，心流状态有六个组成部分。
- en: Attention You feel a deep sense of concentration and complete focus.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意力 你会感到一种深度的专注和完全的集中。
- en: Action You feel a bias toward action, and you move forward with your current
    task quickly and efficiently—your focused awareness helps drive the momentum.
    Every action feeds into the next action, creating a flow of successful actions.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 行动 你会产生一种行动偏向，你迅速而高效地推进当前的任务——你的专注意识帮助推动动能。每个动作都为下一个动作提供动力，形成一个成功行动的流动。
- en: Self You become less aware of yourself, and you shut down your inner critics,
    doubts, and fears. You think less about yourself (*reflection*) and more about
    the task at hand (*action*). You lose yourself in the task at hand.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自我 你变得不那么意识到自己，关闭了内心的批评、怀疑和恐惧。你少考虑自己（*反思*），更多地专注于手头的任务（*行动*）。你会完全投入到任务中。
- en: Control Even as you’re less self-aware, you enjoy an increased sense of control
    about the present situation, giving you calm confidence and allowing you to think
    outside the box and develop creative solutions.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制 即使你变得较少自我意识，你也会享受到一种更强的对当前情境的控制感，这赋予你冷静的自信，并让你跳出框架思考，发展创造性的解决方案。
- en: Time You lose the ability to experience time passing.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 时间 你失去了体验时间流逝的能力。
- en: Reward The labor of the activity is all you want to do; there may be no external
    reward, but being immersed in the activity is intrinsically rewarding in itself.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The terms *flow* and *attention* are closely related. In a 2013 dissertation
    on attention deficit hyperactivity disorder (ADHD), Rony Sklar points out that
    the term *attention deficit* wrongly implies that patients experiencing it cannot
    focus. Another term for flow is *hyperfocus*, and legions of psychology researchers
    (for example, Kaufmann et al. 2000) have proven that ADHD patients are quite capable
    of hyperfocus; they only struggle with sustaining attention for tasks that are
    not intrinsically rewarding. You don’t need to get diagnosed with ADHD to know
    that it’s hard to focus on things you don’t enjoy doing.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: But if you’ve ever completely lost yourself playing an exciting game, programming
    a fun application, or watching an interesting movie—you know how easy it is to
    reach flow if you like the activity. In a state of flow, your body releases five
    *feel-good* neurochemical pleasure drugs such as endorphins, dopamine, and serotonin.
    It’s like experiencing the “benefits” of taking recreational drugs but without
    some of the negative consequences—even Csikszentmihalyi warned that flow can be
    addictive. Learning to enter a state of flow makes you smarter and more productive—if
    you manage to direct the flow activity into productive endeavors such as programming.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, you may ask: Show me the meat—how do I get flow? Let’s answer this next!'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: How to Achieve Flow
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Csikszentmihalyi laid out three conditions to achieve flow: (1) your goals
    must be clear, (2) the feedback mechanism in your environment must be immediate,
    and (3) there must be a balance between opportunity and capacity.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: Clear Goals
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you’re writing code, you must have a clear goal toward which the smaller
    actions are oriented. In a state of flow, every action naturally leads to the
    next, which leads to the next, so there must be an end goal. People often reach
    a state of flow when playing computer games because if you succeed in the small
    actions—such as jumping over a moving obstacle—you ultimately succeed in the big
    goal—such as winning the level. To use flow to accelerate your programming productivity,
    you must have a clear project goal. Every line of code leads you closer to the
    successful completion of the larger code project. Keeping track of the lines of
    code you’ve written is one way to gamify your coding work!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Feedback Mechanism
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A feedback mechanism rewards desired behavior and punishes undesired behavior.
    Machine learning engineers know that they need to have a great feedback mechanism
    to train highly effective models. For example, you may teach a robot how to walk
    by rewarding it for each second it doesn’t fall and telling it to optimize for
    a maximum total reward. The robot can then automatically adjust its action to
    obtain maximum rewards over time. We humans behave quite similarly when learning
    new things. We seek appreciation from our parents, teachers, friends, or mentors—even
    from neighbors we don’t like—and adjust our actions to maximize appreciation while
    minimizing (social) punishments. This way, we learn to take specific actions and
    avoid others. Receiving feedback is vital for this way of learning.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈机制奖励期望的行为，并惩罚不期望的行为。机器学习工程师知道，他们需要一个很好的反馈机制来训练高效的模型。例如，你可以通过奖励机器人每一秒不摔倒，来教它如何走路，并要求它优化以获得最大总奖励。这样，机器人就能自动调整它的行动，以在一段时间内获得最大奖励。我们人类在学习新事物时的行为非常相似。我们寻求来自父母、老师、朋友或导师的认可——甚至来自我们不喜欢的邻居——并调整我们的行为以最大化认可，同时最小化（社交）惩罚。通过这种方式，我们学会了采取特定的行动并避免其他行为。接收反馈对于这种学习方式至关重要。
- en: Feedback is a precondition for flow. To implement more flow in your workday,
    seek more feedback. Meet weekly with project partners to discuss your code and
    project goals, then incorporate your partners’ feedback. Publish your code on
    Reddit or StackOverflow and ask for feedback. Publish your MVP early and often
    to receive user feedback. Seeking feedback for your programming efforts works
    like a charm, even if it is delayed gratification, because it’ll increase your
    level of engagement in the activity that led to the feedback. After I published
    Finxter, my software application for learning Python, I started to receive a never-ending
    stream of user feedback, and I was hooked. The feedback kept me going back to
    work on the code and allowed for many states of flow when I worked on the code
    to improve the app.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈是心流的前提条件。为了在工作中实现更多的心流，寻求更多的反馈。每周与项目合作伙伴会面，讨论你的代码和项目目标，然后结合伙伴们的反馈。将你的代码发布到Reddit或StackOverflow，并请求反馈。早期并频繁地发布你的MVP，以便获取用户反馈。寻求编程工作反馈效果显著，即使它带有延迟的满足感，因为它会提高你在完成导致反馈的活动中的参与度。当我发布了Finxter，我的Python学习软件应用程序时，我开始接收到源源不断的用户反馈，我被深深吸引。反馈让我不断回到代码中工作，并在改进应用程序的过程中经历了许多心流状态。
- en: Balance Opportunity and Capacity
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 平衡机会与能力
- en: Flow is an active state of mind. If the task is too easy, you get bored and
    lose the sense of immersion. If it’s too hard, you’ll throw in the towel early.
    The task must be challenging but not overwhelming.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 心流是一种积极的心理状态。如果任务过于简单，你会感到无聊，失去沉浸感。如果任务过于困难，你会很早就放弃。任务必须具有挑战性，但又不能让人感到压倒性。
- en: '[Figure 6-1](#figure6-1) shows the landscape of possible states of mind; this
    image is taken and redrawn from Csikszentmihalyi’s original research.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 6-1](#figure6-1)展示了可能的心理状态图；该图像取自Csikszentmihalyi的原始研究，并进行了重新绘制。'
- en: '![Graph with x-axis representing your level of skill and y-axis representing
    the challenge of a task. Emotional states are labeled on the graph, from top left
    to bottom right: Panic, anxiety, flow, boredom, and apathy. A state of flow is
    a direct balance of challenge and skill. ](image_fi/502185c06/f06001.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图表，横坐标表示你的技能水平，纵坐标表示任务的挑战。图表上标记了不同的情绪状态，从左上角到右下角依次为：恐慌、焦虑、心流、无聊和冷漠。心流状态是挑战和技能的直接平衡。](image_fi/502185c06/f06001.png)'
- en: 'Figure 6-1: In a state of flow, you find the challenge is neither too hard
    nor too easy, given your current skill level.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6-1：在心流状态下，你会发现挑战既不太难也不太容易，正好符合你当前的技能水平。
- en: The x-axis quantifies your skill level from low to high, and the y-axis quantifies
    the difficulty of a given task from low to high. So, for example, if the task
    is much too hard for your skill level, you’ll feel panic, and if it’s much too
    easy, you’ll feel apathy. But if a task’s difficulty matches your current skills,
    you’ll maximize the likelihood of attaining flow.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 横坐标量化你的技能水平，从低到高；纵坐标量化任务的难度，从低到高。所以，举个例子，如果任务对于你的技能水平来说太难，你会感到恐慌；如果任务太简单，你会感到冷漠。但如果任务的难度与你当前的技能相匹配，你就能最大化进入心流的可能性。
- en: The trick is to constantly seek harder challenges without reaching anxiety levels
    and increase your skill level accordingly. This learning loop keeps you in a cycle
    toward higher and higher productivity and skill, and greater enjoyment of work
    at the same time.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 诀窍是不断寻求更难的挑战，但不要让自己陷入焦虑状态，并根据挑战增加相应的技能水平。这种学习循环会让你不断提升生产力和技能，并且在同时享受更多的工作乐趣。
- en: Flow Tips for Coders
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编程人员流畅状态小贴士
- en: 'In his 2015 white paper titled “Crafting Fun User Experiences: A Method to
    Facilitate Flow,” Owen Schaffer identified these seven flow conditions: (1) know
    what to do, (2) know how to do it, (3) know how well you’re doing, (4) know where
    to go, (5) seek challenges, (6) work on your skills to overcome the high challenges,
    and (7) free yourself from distractions (Human Factors International). Based on
    these conditions and my own considerations, I’ve compiled some quick tips and
    tactics for attaining flow that are highly biased toward the coding niche.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在2015年，Owen Schaffer在他题为《打造有趣的用户体验：一种促进流畅状态的方法》的白皮书中，提出了七个流畅状态的条件：（1）知道该做什么，（2）知道如何做，（3）知道自己做得怎么样，（4）知道该去哪里，（5）寻求挑战，（6）提升技能以应对更高的挑战，（7）从干扰中解脱出来（Human
    Factors International）。基于这些条件和我自己的考虑，我整理了一些针对编程领域的快速流畅状态技巧和策略。
- en: '**Always have a practical code project in the works** rather than spending
    your time in a state of unfocused learning. You can absorb new information more
    quickly when it has a real impact on something you care about. I recommend splitting
    your learning time into 70 percent working on a practical fun project of your
    choice and 30 percent reading books and tutorials or watching educational courses.
    I’ve learned from my personal interaction and correspondence with tens of thousands
    of coders in the Finxter community that a significant portion of coding students
    have this backward and get stuck in the learning loop, never feeling quite ready
    to leap into a real project. It’s always the same story: these coders remain stuck
    in programming theory, learning and learning without practical application, making
    them even more aware of their knowledge limitations—a negative spiral toward paralysis.
    The way out is to set your clear project goal and push the project through to
    completion, no matter what. This coincides with one of the three preconditions
    of flow.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**总是有一个实际的编程项目在进行中，** 而不是将时间花费在无目的的学习状态中。当新信息与某个你关心的事物产生实际影响时，你能更快地吸收它。我建议将学习时间分配成70%的时间用于选择并完成一个实际的有趣项目，剩下30%的时间用来读书、看教程或观看教育课程。我从在Finxter社区与成千上万的程序员互动和交流中学到，很多编码学生做反了这个分配，卡在学习的循环中，始终没有准备好投入到真正的项目中。故事总是一样：这些程序员一直困在编程理论中，不断学习却没有实际应用，这让他们更加意识到自己知识的局限性——这是一个负向的螺旋，最终导致停滞不前。解决的办法是设定清晰的项目目标，并无论如何都将项目推进到完成，这也与流畅状态的三个前提条件之一相吻合。'
- en: '**Work on fun projects that fulfill your purpose.** Flow is a state of excitement,
    so you must be excited about your work. If you’re a professional coder, spend
    time thinking about the purpose of your work. Find the value of your project.
    If you’re learning to code, lucky you—you can choose a fun project that excites
    you! Work on projects that are meaningful for you. You’ll have more fun, a higher
    probability of success, and more resilience against temporary setbacks. If you
    wake up and cannot wait to work on your project, you know that flow is just around
    the corner.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**做一些能实现你目标的有趣项目。** 流畅状态是一种兴奋的状态，所以你必须对你的工作充满兴奋。如果你是一个职业程序员，花时间思考你工作的目的。找到你项目的价值。如果你正在学习编程，真幸运——你可以选择一个令你兴奋的有趣项目！做对你有意义的项目。你会更享受其中，成功的概率也会更高，面对暂时的挫折时也能保持更多的韧性。如果你早上醒来就迫不及待地想投入到项目中，说明流畅状态已经触手可及。'
- en: '**Perform from your strengths.** This tip from management consultant Peter
    Drucker is gold. There will always be more areas in which you are weak than strong.
    In most activities, your skills are below average. If you focus on your weaknesses,
    you’re virtually guaranteeing failure. Instead, focus on your strengths, build
    large skill islands around them, and essentially ignore most of your weaknesses.
    What are you uniquely good at? What are your specific interests in the broad area
    of computer science? Make lists to answer those questions. One of the activities
    that will most benefit your progression is figuring out your strengths and then
    brutally structuring your day around those.'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**发挥你的优势。** 这是管理顾问彼得·德鲁克的黄金建议。你在很多领域的弱点总是比强项更多。在大多数活动中，你的技能可能低于平均水平。如果你只关注自己的弱点，实际上是在为失败铺路。相反，应该聚焦于你的优势，在这些优势周围构建大量的技能岛屿，并基本忽略大部分弱点。你独特的擅长是什么？你在计算机科学这个广泛领域里的具体兴趣是什么？列出清单，回答这些问题。最有助于你进步的活动之一就是找出自己的优势，并围绕这些优势强力安排你的日程。'
- en: '**Block out your coding time in large chunks.** This will give you time to
    both comprehend the issues and tasks ahead of you—every coder knows that it takes
    time to load a complicated code project into their head—and get into the rhythm
    of your tasks. Say Alice and Bob work on a given code project. It takes 20 minutes
    to attain a state where each completely understands the demands of their code
    project by glancing over the project, diving into a few code functions, and thinking
    about the big picture. Alice spends three hours every three days on the project,
    while Bob spends one hour every day. Who will make more progress in the project?
    Alice works 53 minutes on the project per day ([3 hours – 20 minutes] / 3). Given
    the high constant loading time, Bob works only 40 minutes on the project every
    day. Thus, all other things being equal, Alice will outwork Bob by 13 minutes
    every day. She has a much higher chance of achieving a state of flow as she can
    dive deeper into the problem and lose herself entirely in it.'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**将你的编码时间安排成大块时间。** 这样你就能有足够的时间来理解面前的问题和任务——每个程序员都知道，加载一个复杂的代码项目到脑海中是需要时间的——并进入任务的节奏。假设艾丽斯和鲍勃共同参与一个代码项目。花费20分钟他们就能理解项目的需求，浏览项目，深入几个代码函数，并思考全局。艾丽斯每三天花三个小时工作在项目上，而鲍勃每天花一个小时。谁在项目中会取得更多进展？艾丽斯每天在项目上工作的时间是53分钟（[3小时
    – 20分钟] / 3）。考虑到加载时间的高消耗，鲍勃每天在项目上工作的时间只有40分钟。因此，在其他条件相同的情况下，艾丽斯每天将比鲍勃多工作13分钟。她有更高的几率进入“心流”状态，因为她能深入问题并完全沉浸其中。'
- en: '**Eliminate distractions during your flow time.** It seems obvious, but how
    seldomly it is implemented! Coders who can reduce distractions—social networks,
    entertainment applications, chitchat about colleagues—attain flow much more often
    than coders who can’t. To reach success, you must do what most others are unwilling
    to do: shut down distractions. Switch off your smartphone and close that social
    media tab.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在“心流”时间内消除干扰。** 这看起来很明显，但有多少人做到了呢！那些能减少干扰的程序员——社交网络、娱乐应用、同事闲聊——比不能的程序员更容易进入心流状态。要取得成功，你必须做大多数人不愿意做的事：关闭干扰。关掉你的智能手机，关闭那个社交媒体标签页。'
- en: '**Do the obvious things you know you need to do**, outside of the task at hand:
    get plenty of sleep, eat healthily, and get regular exercise. As a coder, you
    know the expression *garbage-in, garbage-out*: if you feed a system with bad inputs,
    you’ll obtain bad results. Try to cook a tasty meal with decayed food—almost impossible!
    High-quality input leads to high-quality output.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**做你知道必须做的显而易见的事情，** 这些事情是当下任务之外的：充足的睡眠、健康的饮食和规律的运动。作为程序员，你知道“垃圾进，垃圾出”这个道理：如果你给系统输入糟糕的信息，就会得到糟糕的结果。试着用变质的食材做一顿美味的饭菜——几乎不可能！高质量的输入会带来高质量的输出。'
- en: '**Consume high-quality information** because the better your inputs, the better
    your output. Read programming books instead of shallow blog articles; better yet,
    read research papers published in top-rated journals, the highest-quality information
    there is.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**消耗高质量的信息，** 因为输入越好，输出越好。读编程书籍而不是浅显的博客文章；更好的是，阅读发表在顶级期刊上的研究论文，这是最优质的信息。'
- en: Conclusion
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: 'To summarize, here are some of the easiest ways in which you can begin to attempt
    to attain flow: block large chunks of time, focus on one task, stay healthy and
    sleep properly, set clear goals, find work you enjoy doing, and actively seek
    flow.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，以下是一些你可以尝试获得心流的最简单方法：阻塞较长时间的时间段，专注于一项任务，保持健康和良好的睡眠，设定明确的目标，找到你喜欢做的工作，积极寻求心流。
- en: 'If you seek flow, you’ll eventually find it. If you systematically work in
    a state of flow daily, you’ll boost your work productivity by an order of magnitude.
    This is a simple yet powerful concept for programmers and other knowledge workers
    alike. As Mihaly Csikszentmihalyi says:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你追求心流，你最终会找到它。如果你每天系统地在心流状态下工作，你的工作效率将提高一个数量级。这是一个简单却强大的概念，适用于程序员和其他知识工作者。正如Mihaly
    Csikszentmihalyi所说：
- en: The best moments in our lives are not the passive, receptive, relaxing times
    . . . The best moments usually occur if a person’s body or mind is stretched to
    its limits in a voluntary effort to accomplish something difficult and worthwhile.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们生活中最美好的时刻不是那些被动、接收和放松的时光……最美好的时刻通常发生在人们的身体或大脑在自愿努力下，努力完成某个困难且有价值的事情时。
- en: In the next chapter, you’ll dive into the Unix philosophy about *doing one thing
    well*, a principle that’s proven to be not only an excellent way to create a scalable
    operating system but also a great way to live!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，你将深入探讨关于*专注做好一件事*的Unix哲学，这一原则被证明不仅是创建可扩展操作系统的优秀方法，也是一个很好的生活方式！
- en: Resources
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: Troy Erstling, “The Neurochemistry of Flow States,” *Troy Erstling* (blog),
    [https://troyerstling.com/the-neurochemistry-of-flow-states/](https://troyerstling.com/the-neurochemistry-of-flow-states/).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Troy Erstling, “心流状态的神经化学”，*Troy Erstling*（博客），[https://troyerstling.com/the-neurochemistry-of-flow-states/](https://troyerstling.com/the-neurochemistry-of-flow-states/)。
- en: Steven Kotler, “How to Get into the Flow State,” filmed at A-Fest Jamaica, February
    19, 2019, Mindvalley video, [https://youtu.be/XG_hNZ5T4nY/](https://youtu.be/XG_hNZ5T4nY/).
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Steven Kotler, “如何进入心流状态”，拍摄于A-Fest牙买加，2019年2月19日，Mindvalley视频，[https://youtu.be/XG_hNZ5T4nY/](https://youtu.be/XG_hNZ5T4nY/)。
- en: 'F. Massimini, M. Csikszentmihalyi, and M. Carli, “The Monitoring of Optimal
    Experience: A Tool for Psychiatric Rehabilitation,” *Journal of Nervous and Mental
    Disease* 175, no. 9 (September 1987).'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: F. Massimini, M. Csikszentmihalyi, 和 M. Carli, “最佳体验的监测：精神病康复工具”，*神经与精神疾病杂志*
    175, 第9期（1987年9月）。
- en: 'Kevin Rathunde, “Montessori Education and Optimal Experience: A Framework for
    New Research,” *NAMTA Journal* 26, no. 1 (January 2001): 11–43.'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kevin Rathunde, “蒙特梭利教育与最佳体验：新研究框架”，*NAMTA期刊* 26, 第1期（2001年1月）：11-43。
- en: 'Owen Schaffer, “*[Crafting Fun User Experiences: A Method to Facilitate Flow](http://humanfactors.com/funexperiences.asp)*,”
    Human Factors International white paper (2015), [https://humanfactors.com/hfi_new/whitepapers/crafting_fun_ux.asp](https://humanfactors.com/hfi_new/whitepapers/crafting_fun_ux.asp).'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Owen Schaffer, “*[打造有趣的用户体验：促进心流的方法](http://humanfactors.com/funexperiences.asp)*”，Human
    Factors International白皮书（2015），[https://humanfactors.com/hfi_new/whitepapers/crafting_fun_ux.asp](https://humanfactors.com/hfi_new/whitepapers/crafting_fun_ux.asp)。
- en: 'Rony Sklar, “Hyperfocus in Adult ADHD: An EEG Study of the Differences in Cortical
    Activity in Resting and Arousal States” (MA thesis, University of Johannesburg,
    2013), [https://hdl.handle.net/10210/8640](https://hdl.handle.net/10210/8640).'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Rony Sklar, “成人ADHD中的超专注：休息与唤醒状态下大脑皮层活动差异的EEG研究”（MA论文，约翰内斯堡大学，2013），[https://hdl.handle.net/10210/8640](https://hdl.handle.net/10210/8640)。
