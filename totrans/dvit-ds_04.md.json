["```py\nimport pandas as pd\ndesktop=pd.read_csv('desktop.csv')\nlaptop=pd.read_csv('laptop.csv')\n```", "```py\nimport scipy.stats\nprint(scipy.stats.ttest_ind(desktop['spending'],laptop['spending']))\nprint(scipy.stats.ttest_ind(desktop['age'],laptop['age']))\nprint(scipy.stats.ttest_ind(desktop['visits'],laptop['visits']))\n```", "```py\nimport numpy as np\nmedianage=np.median(desktop['age'])\ngroupa=desktop.loc[desktop['age']<=medianage,:]\ngroupb=desktop.loc[desktop['age']>medianage,:]\n```", "```py\nemailresults1=pd.read_csv('emailresults1.csv')\n```", "```py\ngroupa_withrevenue=groupa.merge(emailresults1,on='userid')\ngroupb_withrevenue=groupb.merge(emailresults1,on='userid')\n```", "```py\nprint(scipy.stats.ttest_ind(groupa_withrevenue['revenue'],groupb_withrevenue['revenue']))\n```", "```py\nTtest_indResult(statistic=-2.186454851070545, pvalue=0.03730073920038287)\n```", "```py\nprint(np.mean(groupb_withrevenue['revenue'])-np.mean(groupa_withrevenue['revenue']))\n```", "```py\nnp.random.seed(18811015)\nlaptop.loc[:,'groupassignment1']=1*(np.random.random(len(laptop.index))>0.5)\ngroupc=laptop.loc[laptop['groupassignment1']==0,:].copy()\ngroupd=laptop.loc[laptop['groupassignment1']==1,:].copy()\n```", "```py\nemailresults2=pd.read_csv('emailresults2.csv')\n```", "```py\ngroupc_withrevenue=groupc.merge(emailresults2,on='userid')\ngroupd_withrevenue=groupd.merge(emailresults2,on='userid')\n```", "```py\nprint(scipy.stats.ttest_ind(groupc_withrevenue['revenue'],groupd_withrevenue['revenue']))\n```", "```py\nprint(np.mean(groupd_withrevenue['revenue'])-np.mean(groupc_withrevenue['revenue']))\n```", "```py\ngdps=[365303000000,65994000000,220000000]\n```", "```py\nprint(np.std(gdps))\n```", "```py\nprint(125/np.std(gdps))\n```", "```py\nburgers=[9.0,12.99,10.50]\n```", "```py\nprint(np.std(burgers))\n```", "```py\nprint(125/np.std(burgers))\n```", "```py\nprint(125/np.std(emailresults1['revenue']))\n```", "```py\nfrom statsmodels.stats.power import TTestIndPower\n```", "```py\nalpha=0.05\n```", "```py\nnobs=45\n```", "```py\neffectsize=0.5\n```", "```py\nanalysis = TTestIndPower()\npower = analysis.solve_power(effect_size=effectsize, nobs1=nobs, alpha=alpha)\n```", "```py\nanalysis = TTestIndPower()\nalpha = 0.05\neffect = 0.5\npower = 0.8\nobservations = analysis.solve_power(effect_size=effect, power=power, alpha=alpha)\n```"]