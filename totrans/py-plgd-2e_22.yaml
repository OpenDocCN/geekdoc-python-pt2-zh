- en: '[B](nsp-venkitachalam503045-0008.xhtml#rappb)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[B](nsp-venkitachalam503045-0008.xhtml#rappb)'
- en: Raspberry Pi Setup
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 树莓派设置
- en: '![](images/nsp-venkitachalam503045-circle-image.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-circle-image.jpg)'
- en: This appendix covers setting up a Raspberry Pi so you can use it for the projects
    in [Chapters 13](nsp-venkitachalam503045-0028.xhtml#ch13), [14](nsp-venkitachalam503045-0029.xhtml#ch14),
    and [15](nsp-venkitachalam503045-0030.xhtml#ch15). The projects work with a Raspberry
    Pi 3 Model B+ or Raspberry Pi 4 Model B. The setup instructions are the same for
    both. In addition to the board, you’ll need a compatible power supply and a micro
    SD card with a 16GB capacity or higher.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录介绍了如何设置树莓派，以便你可以使用它进行 [第 13 章](nsp-venkitachalam503045-0028.xhtml#ch13)、[第
    14 章](nsp-venkitachalam503045-0029.xhtml#ch14) 和 [第 15 章](nsp-venkitachalam503045-0030.xhtml#ch15)
    中的项目。这些项目适用于树莓派 3 型 B+ 或树莓派 4 型 B。两者的设置说明相同。除了开发板，你还需要一个兼容的电源和一个容量为 16GB 或更高的
    micro SD 卡。
- en: '[Setting Up the Software](nsp-venkitachalam503045-0008.xhtml#rah1901)'
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[设置软件](nsp-venkitachalam503045-0008.xhtml#rah1901)'
- en: 'There are several ways to set up your Pi. These steps outline one of the simplest
    methods, using Raspberry Pi Imager:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以设置你的树莓派。这些步骤概述了其中一种最简单的方法，使用树莓派 Imager：
- en: 1\. Download the Raspberry Pi Imager from the Raspberry Pi website at [https://www.raspberrypi.com/software](https://www.raspberrypi.com/software/).
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1. 从树莓派官网 [https://www.raspberrypi.com/software](https://www.raspberrypi.com/software/)
    下载树莓派 Imager。
- en: 2\. Insert your SD card into your computer. (Depending on your system, you may
    need a micro SD card adapter for this.)
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2. 将你的 SD 卡插入电脑。（根据你的系统，你可能需要一个 micro SD 卡适配器。）
- en: 3\. Open Pi Imager and click the **Choose OS** button. [Figure B-1](nsp-venkitachalam503045-0032.xhtml#fb001)
    shows the resulting dialog.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3. 打开 Pi Imager 并点击 **选择操作系统** 按钮。[图 B-1](nsp-venkitachalam503045-0032.xhtml#fb001)
    显示了结果对话框。
- en: '![](images/nsp-venkitachalam503045-fb001.jpg)'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb001.jpg)'
- en: 'Figure B-1: The Choose OS dialog in Raspberry Pi Imager'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-1：树莓派 Imager 中的选择操作系统对话框
- en: 4\. Click the **Raspberry Pi OS** option.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 4. 点击 **树莓派 OS** 选项。
- en: 5\. Click the **Choose Storage** button. You should get a screen like the one
    in [Figure B-2](nsp-venkitachalam503045-0032.xhtml#fb002).
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5. 点击 **选择存储** 按钮。你应该会看到像 [图 B-2](nsp-venkitachalam503045-0032.xhtml#fb002)
    中那样的界面。
- en: '![](images/nsp-venkitachalam503045-fb002.jpg)'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb002.jpg)'
- en: 'Figure B-2: The Choose Storage dialog in Raspberry Pi Imager'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-2：树莓派 Imager 中的选择存储对话框
- en: 6\. The screen should list your SD card. Click it.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 6. 屏幕上应该列出你的 SD 卡。点击它。
- en: 7\. Click the gear icon to open the Advanced Options dialog, as shown in [Figure
    B-3](nsp-venkitachalam503045-0032.xhtml#fb003).
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 7. 点击齿轮图标以打开高级选项对话框，如 [图 B-3](nsp-venkitachalam503045-0032.xhtml#fb003) 所示。
- en: '![](images/nsp-venkitachalam503045-fb003.jpg)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb003.jpg)'
- en: 'Figure B-3: The Advanced Options dialog in Raspberry Pi Imager'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-3：树莓派 Imager 中的高级选项对话框
- en: 8\. Enter a name for your Pi in the Set Hostname box. I’ve set the name to `audioml`
    in [Figure B-3](nsp-venkitachalam503045-0032.xhtml#fb003). Thanks to a service
    called Avahi that’s enabled on the Raspberry Pi OS installation by default, you’ll
    be able to reach your Pi over the local network by appending `.local` to the device
    name you choose—for example, `audioml.local`. This is much more convenient than
    remembering and using an IP address.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 8. 在设置主机名框中输入树莓派的名称。我在 [图 B-3](nsp-venkitachalam503045-0032.xhtml#fb003) 中将名称设置为
    `audioml`。由于树莓派操作系统默认启用了名为 Avahi 的服务，你可以通过在设备名称后加上 `.local` 来在本地网络上访问你的树莓派——例如，`audioml.local`。这比记住和使用
    IP 地址要方便得多。
- en: 9\. In the same dialog, set your username and password, and enable SSH. Then
    scroll down to see the Wi-Fi connection options, as shown in [Figure B-4](nsp-venkitachalam503045-0032.xhtml#fb004).
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 9. 在同一个对话框中，设置你的用户名和密码，并启用 SSH。然后向下滚动，查看 Wi-Fi 连接选项，如 [图 B-4](nsp-venkitachalam503045-0032.xhtml#fb004)
    所示。
- en: '![](images/nsp-venkitachalam503045-fb004.jpg)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb004.jpg)'
- en: 'Figure B-4: The Wi-Fi details in Raspberry Pi Imager'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-4：树莓派 Imager 中的 Wi-Fi 详情
- en: 10\. Enter your Wi-Fi details, similar to what’s shown in [Figure B-4](nsp-venkitachalam503045-0032.xhtml#fb004).
    Once you’re done, click **Save**, and then click the **Write** button to write
    all this information to your SD card.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 10. 输入你的 Wi-Fi 详情，类似于 [图 B-4](nsp-venkitachalam503045-0032.xhtml#fb004) 中所示。完成后，点击
    **保存**，然后点击 **写入** 按钮，将所有这些信息写入你的 SD 卡。
- en: 11\. When the SD card is ready, insert it into your Pi. Then boot up your Pi
    and it will automatically connect to your Wi-Fi network.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 11. 当 SD 卡准备好后，将其插入你的树莓派。然后启动树莓派，它将自动连接到你的 Wi-Fi 网络。
- en: Now you should be able to log in to your Pi remotely using Secure Shell (SSH),
    as we’ll discuss soon.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '[Testing Your Connection](nsp-venkitachalam503045-0008.xhtml#rah1902)'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To check whether your Pi is connected to the local network, enter `ping` at
    the command line on your computer, followed by your Pi’s device name. For example,
    here’s what a `ping` session looks like from a Windows command shell:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: $ `ping audioml.local`
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 'Pinging audioml.local [fe80::e3e0:1223:9b20:2d6f%6] with 32 bytes of data:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'Reply from fe80::e3e0:1223:9b20:2d6f%6: time=66ms'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Reply from fe80::e3e0:1223:9b20:2d6f%6: time=3ms'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'Reply from fe80::e3e0:1223:9b20:2d6f%6: time=2ms'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'Reply from fe80::e3e0:1223:9b20:2d6f%6: time=3ms'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'Ping statistics for fe80::e3e0:1223:9b20:2d6f%6:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'Approximate round trip times in milli-seconds:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Minimum = 2ms, Maximum = 66ms, Average = 18ms
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: This `ping` output shows the number of bytes sent and the time it took to get
    a reply. If you see the message `Request timeout...` instead, then you know your
    Pi isn’t connected to the network. In this case, try searching the internet for
    troubleshooting strategies. On a Windows computer, for example, you might try
    opening a command prompt as an administrator and entering the `arp -d` command.
    This clears the ARP cache. (ARP is a protocol for detecting other computers over
    a network.) Then try the `ping` command again. If that fails, it might be a good
    idea to hook up a monitor and keyboard to your Pi to check if it’s really able
    to connect to the internet.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: '[Logging in to Your Pi with SSH](nsp-venkitachalam503045-0008.xhtml#rah1903)'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can hook up a keyboard, mouse, and monitor to your Pi to work with it directly,
    but for the purposes of this book, the most convenient way to work is to use SSH
    to log in to your Pi remotely from your desktop or laptop computer. If you do
    this not only frequently but also from the same computer, you’ll probably find
    it annoying to enter the password every single time. With the `ssh-keygen` utility
    that comes with SSH, you can set up a public/private key scheme so you can securely
    log in to your Pi without entering the password. For macOS and Linux users, follow
    the next procedure. (For Windows users, PuTTY lets you do something similar. Search
    for “Generating an SSH key with PuTTY” to learn more.)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '1\. From a terminal on your computer, enter the following to generate a key
    file:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: $ `ssh-keygen`
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Generating public/private rsa key pair.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter file in which to save the key (/Users/`xxx`/.ssh/id_rsa):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter passphrase (empty for no passphrase):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter same passphrase again:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Your identification has been saved in /Users/`xxx`/.ssh/id_rsa.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Your public key has been saved in /Users/`xxx`/.ssh/id_rsa.pub.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 'The key fingerprint is:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: --`snip`--
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '2\. Copy the key file to the Pi. You can use the `scp` command for this, which
    is part of SSH. Enter the following, replacing your Pi’s IP address as appropriate:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: $ `scp ~/.ssh/id_rsa.pub pi@``192.168.4.32``:.ssh/`
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: The authenticity of host '192.168.4.32 (192.168.4.32)' can't
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 无法验证主机 '192.168.4.32（192.168.4.32）' 的真实性
- en: be established.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 已建立连接。
- en: RSA key fingerprint is f1:ab:07:e7:dc:2e:f1:37:1b:6f:9b:66:85:2a:33:a7.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: RSA 密钥指纹是 f1:ab:07:e7:dc:2e:f1:37:1b:6f:9b:66:85:2a:33:a7。
- en: Are you sure you want to continue connecting (yes/no)? `yes`
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 你确定要继续连接吗（是/否）？`yes`
- en: 'Warning: Permanently added ''192.168.4.32'' (RSA) to the list of'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 警告：永久将 '192.168.4.32'（RSA）添加到已知主机列表中
- en: known hosts.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 已知主机。
- en: 'pi@192.168.4.32''s password:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: pi@192.168.4.32 的密码：
- en: id_rsa.pub                                   100%  398     0.4KB/s   00:00
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: id_rsa.pub                                   100%  398     0.4KB/s   00:00
- en: '3\. Log in to the Pi and verify the key file was copied over, again substituting
    your Pi’s IP address:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3\. 登录到 Pi 并验证密钥文件是否已复制，记得替换为你 Pi 的 IP 地址：
- en: $ `ssh pi@``192.168.4.32`
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: $ `ssh pi@``192.168.4.32`
- en: 'pi@192.168.4.32''s password:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: pi@192.168.4.32 的密码：
- en: $ `cd .ssh`
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: $ `cd .ssh`
- en: $ `ls`
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: $ `ls`
- en: id_rsa.pub  known_hosts
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: id_rsa.pub  known_hosts
- en: $ `cat id_rsa.pub >> authorized_keys`
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: $ `cat id_rsa.pub >> authorized_keys`
- en: $ `ls`
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: $ `ls`
- en: authorized_keys  id_rsa.pub  known_hosts
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: authorized_keys  id_rsa.pub  known_hosts
- en: $ `logout`
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: $ `logout`
- en: The next time you log in to the Pi, you won’t be asked for a password. Also,
    note that I used an empty passphrase in `ssh-keygen` in this example, which isn’t
    secure. This setup may be fine for Raspberry Pi hardware projects in which you
    aren’t very concerned about security, but you may want to consider using a passphrase.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下次你登录 Pi 时，系统将不再要求输入密码。另外，请注意，在这个示例中我在 `ssh-keygen` 中使用了空的密码短语，这并不安全。这个设置可能适用于你不太关心安全性的树莓派硬件项目，但你可能需要考虑使用密码短语。
- en: '[Installing Python Modules](nsp-venkitachalam503045-0008.xhtml#rah1904)'
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[安装 Python 模块](nsp-venkitachalam503045-0008.xhtml#rah1904)'
- en: 'Most of the Python modules you need for the projects in [Chapters 13](nsp-venkitachalam503045-0028.xhtml#ch13),
    [14](nsp-venkitachalam503045-0029.xhtml#ch14), and [15](nsp-venkitachalam503045-0030.xhtml#ch15)
    are already part of the Raspberry Pi installation. For the rest, install them
    by running the following commands one by one after you SSH into your Pi:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数你在[第 13 章](nsp-venkitachalam503045-0028.xhtml#ch13)、[第 14 章](nsp-venkitachalam503045-0029.xhtml#ch14)和[第
    15 章](nsp-venkitachalam503045-0030.xhtml#ch15)中需要的 Python 模块，已经包含在树莓派的安装中。剩下的，可以通过
    SSH 连接到你的 Pi 后，逐个运行以下命令来安装：
- en: $ `sudo pip3 install bottle`
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo pip3 install bottle`
- en: $ `sudo apt install python3-matplotlib`
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo apt install python3-matplotlib`
- en: $ `sudo apt-get install python3-scipy`
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo apt-get install python3-scipy`
- en: $ `sudo apt-get install python3-pyaudio`
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo apt-get install python3-pyaudio`
- en: $ `sudo pip3 install tflite-runtime`
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: $ `sudo pip3 install tflite-runtime`
- en: This should get you going with all the projects that use the Raspberry Pi in
    the book.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这样你就能开始进行本书中所有使用树莓派的项目了。
- en: '[Working Remotely with Visual Studio Code](nsp-venkitachalam503045-0008.xhtml#rah1905)'
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[使用 Visual Studio Code 远程工作](nsp-venkitachalam503045-0008.xhtml#rah1905)'
- en: Once you have SSH access to your Pi, you could edit your source code on your
    computer and transfer it to the Pi via the `scp` command, but this gets cumbersome
    quickly. There’s a better way. Visual Studio Code (VS Code) is a popular code
    editor from Microsoft. This software supports a huge number of plug-ins or extensions
    to enhance its capabilities. One of them, the Visual Studio Code Remote - SSH
    extension, will let you connect to your Pi and edit your files directly from your
    computer. You can find the installation details for this extension at [https://code.visualstudio.com/docs/remote/ssh](https://code.visualstudio.com/docs/remote/ssh).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你获得了 SSH 访问权限，你可以在电脑上编辑源代码，并通过 `scp` 命令将其传输到 Pi，但这很快会变得繁琐。更好的方法是使用 Visual
    Studio Code（VS Code），这是微软推出的流行代码编辑器。该软件支持大量插件或扩展来增强其功能。其中一个扩展是 Visual Studio Code
    Remote - SSH 扩展，它允许你直接从电脑连接到 Pi 并编辑文件。你可以在 [https://code.visualstudio.com/docs/remote/ssh](https://code.visualstudio.com/docs/remote/ssh)
    找到该扩展的安装详情。
