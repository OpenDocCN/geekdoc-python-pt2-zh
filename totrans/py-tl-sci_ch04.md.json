["```py\nconda activate my_first_env\n```", "```py\nconda install spyder\n```", "```py\nconda install spyder=5.0.3\n```", "```py\nspyder\n```", "```py\nconda create -n spyder_env spyder numpy scipy pandas matplotlib sympy cython\n```", "```py\nconda activate my_second_env\nconda install spyder_kernels\n```", "```py\nconda create -p C:\\Users\\hanna\\spyder_proj_w_env\\conda_env python=3.9 spyder=5.0.3\n```", "```py\nnumpy scipy pandas matplotlib sympy cython\n```", "```py\nconda activate C:\\Users\\hanna\\spyder_proj_w_env\\conda_env\nspyder\n```", "```py\n%reset\n```", "```py\ndir()\n```", "```py\nconda install matplotlib numpy -y\n```", "```py\n″″″Stem plot example from matplotlib gallery″″″\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0.1, 2 * np.pi, 41) y = np.exp(np.sin(x))\n\nplt.stem(x, y)\n\nprint(″\\nThis is a stem plot.″)\n```", "```py\nplt.stem(x, y)\n```", "```py\n″″″Stem plot example from matplotlib gallery″″″\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n%matplotlib qt\n--snip--\n```", "```py\n#%% Convert Temperature: Fahrenheit to Celsius\ndegrees_f = 0\ndegrees_c = (degrees_f - 32) * 5 / 9\nprint(f″{degrees_f} F = {degrees_c} C″)\n\n#%% Convert Temperature: Celsius to Fahrenheit\ndegrees_c = -40\ndegrees_f = (degrees_c * 9 / 5) + 32\nprint(f″{degrees_c} C = {degrees_f} F″)\n\n#%% Convert Temperature Celsius to Kelvin\ndegrees_c = 0\ndegrees_k = degrees_c + 273.15\nprint(f″{degrees_c} C = {degrees_k} K″)\n```", "```py\nsupercalifragilisticexpialidocious = 'wonderful'\n```", "```py\n# pylint: disable=invalid-name\n```", "```py\nIn [1]: import numpy as np\n\nIn [2]: an_array = np.random.randn(10, 5)\n\nIn [3]: a_list = ['talc', 'gypsum', 'calcite']\n\nIn [4]: a_dictionary = {'gold': 'Au', 'silver': 'Ag'}\n\nIn [5]: a_sum = 1 + 2 + 3\n\nIn [6]: a_float = 10 / 3\n\nIn [7]: a_string = ″latchstring″\n```", "```py\nIn [1]: def a_function():\n   ...:      var1 = 42\n   ...:      var2 = ″spam″\n   ...:\n```", "```py\ndef search_list(my_iterable):\n    if 'hoot' in my_iterable:\n        print(″Hooty hoot!″)\n\ndef search_set(my_iterable):\n    if 'hoot' in my_iterable:\n        print(″Hooty hoot!″)\n\nmy_list = [i for i in range(1000)]\nmy_list[998] = 'hoot'\n\nmy_set = set(my_list)\n\nsearch_list(my_list)\nsearch_set(my_set)\n```"]