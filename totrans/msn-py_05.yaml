- en: '**5'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**5'
- en: PREPARING THE SPACE STATION EQUIPMENT**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**准备太空站设备**'
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: Now that the space station walls are in place, we can start installing the equipment.
    We’ll need detailed information about the different pieces of equipment, including
    the furniture, survival systems, and experimental machinery. In this chapter,
    you’ll add information about all the items on the space station, including their
    images and descriptions. You’ll also experiment with designing your own room and
    view it using the *Explorer* program you created in [Chapter 4](ch04.xhtml#ch04).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 现在太空站的墙壁已经安装完毕，我们可以开始安装设备了。我们需要关于不同设备的详细信息，包括家具、生存系统和实验设备。在本章中，你将添加有关太空站上所有物品的信息，包括它们的图片和描述。你还将尝试设计自己的房间，并使用你在[第4章](ch04.xhtml#ch04)中创建的*Explorer*程序查看它。
- en: '**CREATING A SIMPLE PLANETS DICTIONARY**'
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建一个简单的行星字典**'
- en: To store the information about the space station equipment, we’ll use a programming
    concept called dictionaries. A *dictionary* is a bit like a list but with a built-in
    search engine. Let’s take a closer look at how it works.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 为了存储有关太空站设备的信息，我们将使用一种编程概念，叫做字典。*字典*有点像列表，但内置了搜索引擎。让我们仔细看看它是如何工作的。
- en: '**UNDERSTANDING THE DIFFERENCE BETWEEN A LIST AND A DICTIONARY**'
  id: totrans-6
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**理解列表和字典之间的区别**'
- en: As with a paper dictionary, you can use a word or phrase to look up information
    in a Python dictionary. That word or phrase is called the *key*, and the information
    linked to the key is called the *value*. Unlike in a paper dictionary, the entries
    in a Python dictionary can be in any order. They don’t have to be alphabetical.
    Python can go directly to the entry you need, wherever it is.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 与纸质字典类似，你可以使用一个单词或短语在Python字典中查找信息。这个单词或短语称为*键*，与键关联的信息称为*值*。与纸质字典不同，Python字典中的条目可以是任意顺序的，不一定要按字母顺序排列。Python可以直接找到你需要的条目，无论它在哪儿。
- en: 'Imagine you have a list that contains information about previous space missions.
    You could get the first item from that list by using this line:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你有一个包含以往太空任务信息的列表。你可以通过以下代码行获取该列表中的第一个条目：
- en: print(mission_info[0])
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: print(mission_info[0])
- en: 'If mission_info was a dictionary instead of a list, you could use a mission
    name instead of an index number to get the information on that mission, like this:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果mission_info是字典而不是列表，你可以用任务名称代替索引号来获取该任务的信息，像这样：
- en: print(mission_info["Apollo 11"])
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: print(mission_info["Apollo 11"])
- en: The key can be a word or phrase but can also be a number. We’ll start by using
    words because it’s easier to understand the difference between a list and a dictionary
    that way.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 键可以是一个单词或短语，也可以是一个数字。我们将从使用单词开始，因为这样更容易理解列表和字典之间的区别。
- en: '**MAKING AN ASTRONOMY CHEAT SHEET DICTIONARY**'
  id: totrans-13
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**制作天文学备忘字典**'
- en: All astronauts need a good understanding of the solar system, so let’s learn
    about the planets as we build our first dictionary. We’ll use the planet names
    as the keys and connect each name to information about that planet.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所有宇航员都需要对太阳系有很好的理解，所以让我们在构建第一个字典时学习关于行星的知识。我们将使用行星的名称作为键，并将每个名称与有关该行星的信息相连接。
- en: Take a look at [Listing 5-1](ch05.xhtml#ch05list1), which creates a dictionary
    called planets. When you make a dictionary, you use curly brackets {} to mark
    the start and end of it, instead of the square brackets you use for a list.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 看一下[列表5-1](ch05.xhtml#ch05list1)，它创建了一个名为planets的字典。当你创建字典时，使用大括号{}来标记它的开始和结束，而不是你在列表中使用的方括号。
- en: Each entry in the dictionary is made up of the key, followed by a colon and
    then the information for that entry. As with a list, we separate the entries with
    commas and put double quotes around pieces of text.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 字典中的每个条目由键组成，后跟一个冒号，然后是该条目的信息。与列表一样，我们用逗号分隔条目，并在文本部分加上双引号。
- en: Open a new file in IDLE (**File** ▸ **New File**) and enter the following program.
    Save it as *listing5-1.py*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在IDLE中打开一个新文件（**文件** ▸ **新建文件**），并输入以下程序。将其保存为*listing5-1.py*。
- en: '*listing5-1.py*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-1.py*'
- en: 'planets = { "Mercury": "The smallest planet, nearest the Sun",'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 'planets = { "水星": "最小的行星，最接近太阳",'
- en: '"Venus": "Venus takes 243 days to rotate",'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '"金星": "金星自转需要243天",'
- en: '"Earth": "The only planet known to have native life",'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '"地球": "已知唯一有原生生命的行星",'
- en: '"Mars": "The Red Planet is the second smallest planet",'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '"火星": "红色行星是第二小的行星",'
- en: '"Jupiter": "The largest planet, Jupiter is a gas giant",'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '"木星": "最大行星，木星是一个气体巨星",'
- en: '"Saturn": "The second largest planet is a gas giant",'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '"土星": "第二大行星是一个气体巨星",'
- en: '"Uranus": "An ice giant with a ring system",'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '"天王星": "一颗带有环系的冰巨星",'
- en: '"Neptune": "An ice giant and farthest from the Sun"'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '"海王星": "一颗冰巨星，距离太阳最远"'
- en: '}'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '➊ while True:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ while True:'
- en: ➋     query = input("Which planet would you like information on? ")
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     query = input("你想了解哪个行星的信息？")
- en: ➌     print(planets[query])
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ➌     print(planets[query])
- en: '*Listing 5-1: Your first dictionary program*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单5-1：你的第一个字典程序*'
- en: This program doesn’t use Pygame Zero, so you can run it by clicking **Run**
    ▸ **Run Module** at the top of the IDLE window. (It will still work if you run
    it using pgzrun, but it’s easier to use the menu.) When you run the program, it
    asks you which planet you want information on using the input() built-in function
    ➋. Try entering Earth or Jupiter for the planet name.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这个程序不使用Pygame Zero，因此你可以通过点击**运行** ▸ **运行模块**来启动它。 (如果你使用pgzrun运行，它仍然可以正常工作，但使用菜单更方便。)
    当你运行程序时，它会使用内置函数input() ➋ 来询问你想了解哪个行星的信息。试着输入“地球”或“木星”作为行星名称。
- en: Which planet would you like information on? Earth
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你想了解哪个行星的信息？ 地球
- en: The only planet known to have native life
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一已知拥有原生生命的行星
- en: Which planet would you like information on? Jupiter
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你想了解哪个行星的信息？ 木星
- en: The largest planet, Jupiter is a gas giant
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的行星，木星是一颗气体巨星
- en: Whichever planet name you enter is stored in the variable query. That variable
    is then used to look up the information for that planet in the planets dictionary
    ➌. Instead of using an index number inside the square brackets as we did with
    a list, we use the word we entered to get the information, and that word is stored
    in the variable query.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你输入哪个行星名称，它都会被存储在变量`query`中。这个变量随后被用来在行星字典 ➌ 中查找该行星的信息。与我们在列表中使用索引号不同，这里我们使用输入的单词来获取信息，而该单词存储在变量`query`中。
- en: In Python, we can use a while ➊ loop to repeat a set of instructions. Unlike
    a for loop, which we use to repeat a certain number of times, a while loop usually
    repeats until something changes. Often in a game, the while command will check
    a variable to decide whether to keep repeating instructions. For example, the
    instruction while lives > 0 could keep a game going until the player runs out
    of lives. When the lives variable changes to 0, the instructions in the loop would
    stop repeating.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，我们可以使用while ➊循环来重复一组指令。与for循环不同，for循环用于重复指定次数，而while循环通常会重复，直到某些条件发生变化。在游戏中，while命令通常会检查一个变量来决定是否继续重复指令。例如，指令while
    lives > 0可以让游戏继续进行，直到玩家的生命值为0为止。当lives变量变为0时，循环中的指令将停止执行。
- en: The while True command we use in *listing5-1.py* will keep repeating forever,
    because it means “while True is True,” which is always. For this while True command
    to work, make sure you capitalize True and place a colon at the end of the line.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在*listing5-1.py*中，我们使用的while True命令会永远重复，因为它意味着“只要True为True”，即始终为真。为了让这个while
    True命令生效，确保将True的首字母大写，并在行末加上冒号。
- en: Under the while command, we use four spaces to indent the instructions that
    should repeat. Here, we’ve indented the lines that ask you for a planet name and
    then give you the planet information, so they’re the instructions that repeat.
    After you enter a planet name and get the information, the program asks you for
    another planet name, and another, forever. Or until you stop the program by pressing
    CTRL-C, at least.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在while命令下，我们使用四个空格来缩进应该重复的指令。在这里，我们缩进了要求你输入行星名称并返回行星信息的行，因此这些是需要重复的指令。输入一个行星名称并获得信息后，程序会再次要求你输入另一个行星名称，一直重复，直到你通过按CTRL-C停止程序为止。
- en: Although this program works, it isn’t complete yet. You might get an unhelpful
    error if you enter a planet name that isn’t in the dictionary. Let’s fix the code
    so it returns a useful message instead.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这个程序能正常工作，但它还不完整。如果你输入一个字典中没有的行星名称，你可能会遇到一个无用的错误。让我们修改代码，使其返回一个有用的信息。
- en: '**ERROR-PROOFING THE DICTIONARY**'
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**字典的错误防范**'
- en: When you enter a key that isn’t in the dictionary, you’ll see an error message.
    Python looks for an exact match. So, if you try to look up something that isn’t
    in the dictionary or make even a tiny spelling mistake, you won’t get the information
    you want.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入一个字典中不存在的键时，你会看到一个错误信息。Python会查找精确匹配。因此，如果你尝试查找字典中没有的内容，或者拼写出现了微小的错误，你将无法获得想要的信息。
- en: 'Dictionary keys, like variable names, are case sensitive, so if you type earth
    instead of Earth, the program will crash. If you enter a planet that doesn’t exist,
    this is what happens:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 字典键（就像变量名一样）是区分大小写的，因此如果你输入earth而不是Earth，程序将崩溃。如果你输入一个不存在的行星，结果会是这样的：
- en: Which planet would you like information on? Pluto
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要查询哪颗行星的信息？冥王星
- en: 'Traceback (most recent call last):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 'Traceback (most recent call last):'
- en: File "C:\Users\Sean\Documents\Escape\listing5-1.py", line 13, in <module>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 文件 "C:\Users\Sean\Documents\Escape\listing5-1.py"，第 13 行，在 <module> 中
- en: print(planets[query])
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: print(planets[query])
- en: 'KeyError: ''Pluto'''
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 'KeyError: ''Pluto'''
- en: '>>>'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '>>>'
- en: Poor Pluto! After 76 years of service, it was disqualified as a planet in 2006,
    so it’s not in our planets dictionary.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 可怜的冥王星！在服务了 76 年后，它在 2006 年被取消了行星资格，所以它不在我们的行星字典中。
- en: '**TRAINING MISSION #1**'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: Can you add an entry for Pluto in the dictionary? Pay special attention to the
    position of the quotes, colon, and comma. You can add it at any position in the
    dictionary.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你能在字典中添加一个冥王星的条目吗？特别注意引号、冒号和逗号的位置。你可以将其添加到字典中的任何位置。
- en: When the program looks for an item in the dictionary that isn’t there, it stops
    the program and drops you back at the Python shell prompt. To avoid this, we need
    the program to check whether the word entered is one of the keys in the dictionary
    before it tries to use it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当程序在字典中查找不存在的项时，它会停止并将你返回到 Python shell 提示符。为了避免这种情况，我们需要让程序在尝试使用输入的单词之前，先检查它是否是字典中的一个键。
- en: 'You can see which keys are in the dictionary by entering the dictionary name
    followed by a dot and keys(). The technical jargon for this is a *method*. Roughly
    speaking, a method is a set of instructions that you can attach to a piece of
    data using a period. Run the following code in the Python shell:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过输入字典名称后跟点和 keys() 来查看字典中有哪些键。技术术语上，这被称为 *方法*。大致来说，方法是你可以通过一个句点附加到数据上的一组指令。运行以下代码在
    Python shell 中：
- en: '>>> print(planets.keys())'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(planets.keys())'
- en: dict_keys(['Mars', 'Pluto', 'Jupiter', 'Earth', 'Uranus', 'Saturn', 'Mercury',
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: dict_keys(['火星', '冥王星', '木星', '地球', '天王星', '土星', '水星',
- en: '''Neptune'', ''Venus''])'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '''Neptune'', ''Venus''])'
- en: 'You might notice something odd here. When I completed Training Mission #1,
    I added Pluto to the dictionary as the last item. But in this output, it’s in
    second place in my list of keys. When you add items to a list, they’re placed
    at the end, but in a dictionary, that is not always the case. It depends on which
    version of Python you’re using. (The latest version does keep dictionary items
    in the same order you added them.) As mentioned earlier, the order of the keys
    in the dictionary doesn’t matter, though. Python figures out where the keys are
    in the dictionary, so you never need to think about it.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '你可能会注意到这里有些奇怪的地方。当我完成训练任务 #1 时，我将冥王星作为最后一个条目添加到了字典中。但在这个输出中，它排在了我的键列表的第二位。当你将条目添加到列表中时，它们会被放置到末尾，但在字典中并非总是如此。它取决于你使用的是哪个版本的
    Python。（最新版本的 Python 会保持字典项按你添加的顺序排列。）不过，如前所述，字典中键的顺序并不重要。Python 会自动确定键的位置，因此你不需要考虑这一点。'
- en: To stop the program from crashing when a user asks for information on a planet
    that isn’t in the dictionary, modify your program with the new lines shown in
    [Listing 5-2](ch05.xhtml#ch05list2).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止程序在用户请求查询字典中没有的行星信息时崩溃，请按照 [清单 5-2](ch05.xhtml#ch05list2) 中的新增行修改你的程序。
- en: '*listing5-2.py*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-2.py*'
- en: --snip--
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'while True:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 'while True:'
- en: query = input("Which planet would you like information on? ")
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: query = input("你想要查询哪颗行星的信息？")
- en: '➊     if query in planets.keys():'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '➊      if query in planets.keys():'
- en: ➋         print(planets[query])
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: ➋          print(planets[query])
- en: 'else:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 否则：
- en: ➌         print("No data available! Sorry!")
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: ➌          print("没有数据可用！抱歉！")
- en: '*Listing 5-2: Error proofing the dictionary lookup*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 5-2：字典查找的错误防范*'
- en: 'Save the program as *listing5-2.py*, and run it by clicking **Run** ▸ **Run
    Module**. Check that it works by entering a planet correctly, and then enter another
    planet that isn’t in the list of keys. Here’s an example:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为 *listing5-2.py*，并通过点击 **运行** ▸ **运行模块** 来运行它。通过正确输入一个行星并运行，然后输入一个不在键列表中的其他行星，来检查它是否有效。这里是一个示例：
- en: Which planet would you like information on? Venus
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要查询哪颗行星的信息？金星
- en: Venus takes 243 days to rotate
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 金星自转需要 243 天
- en: Which planet would you like information on? Tatooine
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 你想要查询哪颗行星的信息？塔图因
- en: No data available! Sorry!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 没有数据可用！抱歉！
- en: We protect our program from crashing by making it check whether the key in query
    exists in the dictionary before the program tries to use it ➊. If the key does
    exist, we use the query as we did before ➋. Otherwise, we send a message to users
    telling them that we don’t have that information in our dictionary ➌. Now the
    program is much friendlier.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过检查查询中的键是否存在于字典中来保护程序不崩溃，确保程序在尝试使用它之前不会出错 ➊。如果键存在，我们就像以前一样使用查询 ➋。否则，我们会向用户发送一条消息，告诉他们字典中没有该信息
    ➌。现在程序变得更加友好。
- en: '**PUTTING LISTS INSIDE DICTIONARIES**'
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**将列表放入字典中**'
- en: Our planet dictionary is a bit limited at the moment. What if we want to add
    extra information, such as whether the planet has rings and how many moons it
    has? To do so, we can use a list to store multiple pieces of information about
    a planet and then put that list inside the dictionary.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的行星字典现在有些有限。如果我们想添加额外的信息，比如行星是否有环以及有多少颗卫星，怎么办呢？为了实现这一点，我们可以使用一个列表来存储关于行星的多个信息，然后将该列表放入字典中。
- en: 'For example, here is a new entry for Venus:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，这是金星的新条目：
- en: '"Venus": ["Venus takes 243 days to rotate", False, 0]'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '"金星": ["金星自转需要243天", False, 0]'
- en: 'The square brackets mark the start and end of the list, and there are three
    items in the list: a short description, a True or False value that indicates whether
    or not the planet has rings, and the number of moons it has. Because Venus doesn’t
    have rings, the second entry is False. It also doesn’t have any moons, so the
    third entry is 0.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 方括号标记了列表的开始和结束，列表中有三个项目：简短的描述、一个True或False值，表示该行星是否有环，以及它拥有的卫星数量。由于金星没有环，第二项是False。它也没有卫星，所以第三项是0。
- en: '**RED ALERT**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: True *and* False *values need to start with a capital letter and shouldn’t be
    in quotes. The words turn orange when you type them correctly in IDLE.*
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: True *和* False *值需要以大写字母开头，并且不应加引号。当你在IDLE中正确输入这些词时，它们会变成橙色。*
- en: Change your dictionary code so each key has a list, as shown in [Listing 5-3](ch05.xhtml#ch05list3),
    keeping the rest of the code the same. Remember that dictionary entries are separated
    by commas, so there’s a comma after the closing bracket for all the lists except
    the last one. Save your updated program as *listing5-3.py*.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 修改你的字典代码，使每个键都有一个列表，如[示例 5-3](ch05.xhtml#ch05list3)所示，保持其余代码不变。记住字典条目之间用逗号分隔，所以除了最后一个列表之外，所有列表后面都有一个逗号。将你的更新程序保存为*listing5-3.py*。
- en: I’ve slipped in information for Pluto too. Some speculate that Pluto might have
    rings, and exploration continues. By the time you read this book, our understanding
    of Pluto might have changed.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我也加入了冥王星的信息。有些人猜测冥王星可能有环，探索仍在继续。等你读这本书时，我们对冥王星的理解可能已经发生了变化。
- en: '*listing5-3.py*'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-3.py*'
- en: 'planets = { "Mercury": ["The smallest planet, nearest the Sun", False, 0],'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 'planets = { "水星": ["最小的行星，离太阳最近", False, 0],'
- en: '"Venus": ["Venus takes 243 days to rotate", False, 0],'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '"金星": ["金星自转需要243天", False, 0],'
- en: '"Earth": ["The only planet known to have native life", False, 1],'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '"地球": ["唯一已知拥有原生生命的行星", False, 1],'
- en: '"Mars": ["The second smallest planet", False, 2],'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '"火星": ["第二小的行星", False, 2],'
- en: '"Jupiter": ["The largest planet, a gas giant", True, 67],'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '"木星": ["最大行星，气体巨星", True, 67],'
- en: '"Saturn": ["The second largest planet is a gas giant", True, 62],'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '"土星": ["第二大行星，是一颗气体巨星", True, 62],'
- en: '"Uranus": ["An ice giant with a ring system", True, 27],'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '"天王星": ["一颗有环系的冰巨星", True, 27],'
- en: '"Neptune": ["An ice giant and farthest from the Sun", True, 14],'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '"海王星": ["一颗冰巨星，距离太阳最远", True, 14],'
- en: '"Pluto": ["Largest dwarf planet in the Solar System", False, 5]'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '"冥王星": ["太阳系最大的矮行星", False, 5]'
- en: '}'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: --snip--
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 5-3: Putting a list in a dictionary*'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例 5-3：将列表放入字典中*'
- en: 'Run the program by selecting **Run** ▸ **Run Module**. Now when you ask for
    information on a planet, the program should display the entire list for that planet:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择**运行** ▸ **运行模块**来运行程序。现在，当你请求一个行星的信息时，程序应该显示该行星的整个列表：
- en: Which planet would you like information on? Venus
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你想了解哪个行星的信息？金星
- en: '[''Venus takes 243 days to rotate'', False, 0]'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '[''金星自转需要243天'', False, 0]'
- en: Which planet would you like information on? Mars
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你想了解哪个行星的信息？火星
- en: '[''The second smallest planet'', False, 2]'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '[''第二小的行星'', False, 2]'
- en: '**EXTRACTING INFORMATION FROM A LIST INSIDE A DICTIONARY**'
  id: totrans-103
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**从字典中的列表中提取信息**'
- en: We know how to get a list of information from a dictionary, so the next step
    is to get individual pieces of information from that list. For example, the False
    entry doesn’t mean much by itself. If we can separate it from the list, we can
    add an explanation beside it so the results are easier to understand. We previously
    used lists inside *lists* for the room map in [Chapter 4](ch04.xhtml#ch04). Now,
    as then, we’ll use index numbers to get items from a list in a *dictionary*.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道如何从字典中获取信息列表，因此下一步是从该列表中获取单独的信息。例如，False条目本身意义不大。如果我们能把它从列表中分离出来，就可以在旁边加上解释，这样结果更容易理解。我们之前在[第4章](ch04.xhtml#ch04)的房间地图中使用过字典中的*列表*。现在，和之前一样，我们将使用索引号从*字典*中的列表中获取项目。
- en: 'Because planets[query] is the entire list, we can see just the description
    (the first item in the list) by using planets[query][0]. We can see whether it
    has rings or not by using planets[query][1]. Briefly, here is what we’re doing:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 因为planets[query]是整个列表，我们可以通过使用planets[query][0]来查看仅描述（列表中的第一个项目）。我们可以通过使用planets[query][1]来查看它是否有环。简而言之，我们正在做的是：
- en: We’re using the planet name, stored in the variable query, to access a particular
    list from the planets dictionary.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用存储在变量query中的行星名称，从行星字典中访问特定的列表。
- en: We’re using an index number to take an individual item from that list.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用索引号从该列表中提取单个项目。
- en: Modify your program to look like [Listing 5-4](ch05.xhtml#ch05list4). As before,
    change only the lines that are not grayed out. Save your program as *listing5-4.py*,
    and run it by clicking **Run** ▸ **Run Module**.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 修改你的程序，使其像[列表 5-4](ch05.xhtml#ch05list4)一样。和之前一样，只修改没有被灰色标记的行。将你的程序保存为*listing5-4.py*，然后点击**运行**
    ▸ **运行模块**来运行它。
- en: '*listing5-4.py*'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-4.py*'
- en: --snip--
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: 'while True:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 'while True:'
- en: query = input("Which planet would you like information on? ")
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: query = input("你想查看哪颗行星的信息？ ")
- en: 'if query in planets.keys():'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 'if query in planets.keys():'
- en: ➊         print(planets[query][0])
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: ➊         print(planets[query][0])
- en: ➋         print("Does it have rings? ", planets[query][1])
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: ➋         print("它有环吗？ ", planets[query][1])
- en: 'else:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: print("Databanks empty. Sorry!")
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: print("数据库为空。抱歉！")
- en: '*Listing 5-4: Displaying information from the list stored in the dictionary*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 5-4：显示存储在字典中的列表信息*'
- en: 'When you run the *listing5-4.py* program, you should see something like the
    following:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行*listing5-4.py*程序时，你应该会看到如下所示的内容：
- en: Which planet would you like information on? Earth
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 你想查看哪颗行星的信息？ 地球
- en: The only planet known to have native life
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一已知有原生生命的行星
- en: Does it have rings?  False
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 它有环吗？  错误
- en: Which planet would you like information on? Saturn
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你想查看哪颗行星的信息？ 土星
- en: The second largest planet is a gas giant
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 第二大行星是气体巨星
- en: Does it have rings?  True
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 它有环吗？  正确
- en: This should work for every planet in the dictionary!
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该适用于字典中的每颗行星！
- en: When you enter the name of a planet that’s in the dictionary, the program now
    prints the first item from its list of information, which is the description ➊.
    On the next line, the program asks itself whether that planet has rings and then
    shows you the True or False answer, which is the second item in that planet’s
    list of information ➋. You can display some text and some data using the same
    print() instruction, by separating them with a comma. The display is much clearer
    than printing the entire list, and the information is easier to understand.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当你输入字典中存在的行星名称时，程序现在会打印该行星信息列表中的第一个项目，即描述 ➊。在下一行，程序会询问该行星是否有环，然后显示你“True”或“False”的答案，这是该行星信息列表中的第二个项目
    ➋。你可以使用相同的print()指令同时显示一些文本和数据，通过用逗号分隔它们。这样显示比打印整个列表更加清晰，信息也更容易理解。
- en: '**TRAINING MISSION #2**'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #2**'
- en: Can you modify the program to also tell you how many moons the planet has?
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 你能修改程序，让它也告诉你该行星有多少颗卫星吗？
- en: '**MAKING THE SPACE STATION OBJECTS DICTIONARY**'
  id: totrans-130
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建空间站物品字典**'
- en: Let’s put our knowledge of how to use dictionaries, and lists inside dictionaries,
    to use in the space station. With all the furniture, life support equipment, tools,
    and personal effects required on the space station, there’s a lot of information
    to keep track of. We’ll use a dictionary called objects to store information about
    all the different items in the game.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将如何使用字典和字典中的列表的知识应用到空间站中。由于空间站需要管理大量家具、生命支持设备、工具和个人物品，所以需要跟踪大量信息。我们将使用一个名为objects的字典来存储游戏中所有不同物品的信息。
- en: We’ll use numbers as the keys for the objects. It’s simpler than using a word
    for each object. Also, using numbers makes it easier to understand the room map
    if you want to print it as we did in [Chapter 4](ch04.xhtml#ch04). There’s less
    risk of mistyping, too. When we create the code for the puzzles later, it’ll be
    less obvious what the solution is, which means there will be fewer spoilers if
    you’re building the game before playing it.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用数字作为物品的键。这比为每个物品使用一个单词更简单。此外，使用数字使得理解房间地图更加容易，如果你想像我们在[第4章](ch04.xhtml#ch04)中那样打印出来也更方便。这样也减少了打字错误的风险。当我们稍后为谜题创建代码时，解决方案不那么明显，这意味着如果你在构建游戏而不是玩游戏时，也会减少剧透。
- en: You might remember that we used the numbers 0, 1, and 2 to represent floor tiles,
    wall pillars, and soil in [Chapter 4](ch04.xhtml#ch04). We’ll continue using those
    numbers for those items, and the rest of the objects will use numbers 3 to 81.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能还记得我们在[第4章](ch04.xhtml#ch04)中使用了数字0、1和2来代表地砖、墙柱和土壤。我们将继续使用这些数字来表示这些物品，其余的物品将使用数字3到81。
- en: 'Each entry in the dictionary is a list containing information about the item,
    similar to how we made the planets dictionary earlier in this chapter. The lists
    contain the following information for each object:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 字典中的每个条目是一个列表，包含有关物品的信息，类似于我们在本章前面创建行星字典的方式。每个物体的列表包含以下信息：
- en: '**An object image file** Different objects can use the same image file. For
    example, all the access cards use the same image.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**物体图像文件** 不同的物品可以使用相同的图像文件。例如，所有通行卡使用相同的图像。'
- en: '**A shadow image file** We use shadows to enhance the 3D perspective in the
    game. The two standard shadows are *images.full_shadow*, which fills a full tile
    space and is for larger objects, and *images.half_shadow*, which fills half a
    tile space for smaller objects. Objects with a distinctive outline, such as the
    cactus, have their own shadow image file that is used only for that object. Some
    items, like the chair, have the shadow within the image file. Some items have
    no shadow, like the crater and any items the player can carry. When an image has
    no shadow, we write None where its shadow filename belongs in the dictionary.
    The word None is a special data type in Python. Like with True and False, you
    don’t need any quotes around it, and it should start with a capital letter. When
    you enter it correctly, None turns orange in the code.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**阴影图像文件** 我们使用阴影来增强游戏中的3D视角。两个标准阴影是*images.full_shadow*，它填满整个瓦片空间，适用于较大的物体；以及*images.half_shadow*，它填满半个瓦片空间，适用于较小的物体。轮廓独特的物体，如仙人掌，有自己的阴影图像文件，仅用于该物体。有些物品，如椅子，其阴影包含在图像文件中。有些物品没有阴影，例如陨石坑和玩家可以携带的任何物品。当一个图像没有阴影时，我们在字典中写“None”来表示它的阴影文件名。“None”是Python中的一个特殊数据类型。像True和False一样，使用它时不需要引号，并且首字母要大写。正确输入时，None在代码中会显示为橙色。'
- en: '**A long description** A long description is displayed when you examine or
    select an object while playing the game. Some of the long descriptions include
    clues, and others simply describe the environment.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**详细描述** 当你在游戏中检查或选择物品时，详细描述会显示出来。有些详细描述包含线索，其他则仅仅描述环境。'
- en: '**A short description** Typically just a few words, such as “an access card,”
    a short description is shown onscreen when you do something with the object while
    playing the game. For example, “You have dropped an access card.” A short description
    is only required for items that the player can pick up or use, such as an access
    card or the vending machine.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**简短描述** 通常只有几个词，比如“通行卡”，当你在游戏中与物品进行互动时，简短描述会出现在屏幕上。例如，“你已丢弃通行卡”。简短描述仅对玩家可以捡起或使用的物品要求提供，比如通行卡或自动售货机。'
- en: The game can reuse items in the objects dictionary. For example, if a room is
    made of 60 or more identical wall pillars, the game can just reuse the same wall
    pillar object. It only needs to be in the dictionary once.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏可以重用物品字典中的项目。例如，如果一个房间由60个或更多相同的墙柱组成，游戏只需重用相同的墙柱对象。只需要在字典中出现一次。
- en: There are some items that use the same image files but have other differences,
    which means we must store them separately in the dictionary. For example, the
    access cards have different descriptions depending on who they belong to, and
    the doors have different descriptions to tell you which key to use. Each access
    card and door has its own entry in the objects dictionary.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些项目使用相同的图像文件，但有其他差异，这意味着我们必须在字典中将它们单独存储。例如，门禁卡根据其所属人员有不同的描述，而门则有不同的描述告诉你该使用哪个钥匙。每张门禁卡和门在对象字典中都有各自的条目。
- en: '**ADDING THE FIRST OBJECTS IN ESCAPE**'
  id: totrans-141
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**在Escape中添加第一个对象**'
- en: Open *listing4-3.py*, which you created in [Chapter 4](ch04.xhtml#ch04). This
    listing contains the game map and the code to generate the room map. We’ll add
    to this program to continue building the *Escape* game.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你在[第4章](ch04.xhtml#ch04)中创建的*listing4-3.py*文件。这个代码包含了游戏地图和生成房间地图的代码。我们将在此程序中继续构建*Escape*游戏。
- en: First, we need to set up some additional variables. Before the adventure begins,
    a research craft, called the Poodle lander, crash-lands on the planet surface.
    We’ll store coordinates for a random crash site in these new variables. We’ll
    add these variables now because the map object (number 27) will require them for
    its description.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要设置一些额外的变量。在冒险开始之前，一个名为Poodle着陆器的研究飞船将在星球表面迫降。我们将在这些新变量中存储一个随机的坠毁地点坐标。我们现在添加这些变量，因为地图对象（编号27）将需要它们来生成描述。
- en: Add the new lines in [Listing 5-5](ch05.xhtml#ch05list5) to the VARIABLES section,
    marked out with a hashed box, in your existing *listing4-3.py* file. I recommend
    adding them at the end of your other variables, just above where the MAP section
    begins, so your listing and my listing are consistent. Save your program as *listing5-5.py*.
    The program won’t do anything new if you run it now, but if you want to try it,
    enter pgzrun listing5-5.py.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 将[Listing 5-5](ch05.xhtml#ch05list5)中的新行添加到你的现有*listing4-3.py*文件中的VARIABLES部分，该部分用哈希框标出。我建议将它们添加到其他变量的末尾，正好在MAP部分开始之前，这样你的代码和我的代码会保持一致。将程序保存为*listing5-5.py*。如果你现在运行它，程序不会做任何新事情，但如果你想尝试，可以输入pgzrun
    listing5-5.py。
- en: '*listing5-5.py*'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-5.py*'
- en: --snip--
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '###############'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'VARIABLES ##'
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '变量 ##'
- en: '###############'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: DEMO_OBJECTS = [images.floor, images.pillar, images.soil]
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: DEMO_OBJECTS = [images.floor, images.pillar, images.soil]
- en: LANDER_SECTOR = random.randint(1, 24)
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: LANDER_SECTOR = random.randint(1, 24)
- en: LANDER_X = random.randint(2, 11)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: LANDER_X = random.randint(2, 11)
- en: LANDER_Y = random.randint(2, 11)
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: LANDER_Y = random.randint(2, 11)
- en: '###############'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##    MAP    ##'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '##    MAP    ##'
- en: '###############'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 5-5: Adding the crash site location variables*'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 5-5：添加坠毁地点变量*'
- en: These new instructions create variables to remember the sector (or room number)
    the Poodle landed on, and its *x* and *y* position in that sector. The instructions
    use the random.randint() function, which picks a random number between the two
    numbers you give it. These instructions run once at the start of the game, so
    the lander location is different each time you play but doesn’t change during
    the game.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这些新指令创建了变量，用来记住Poodle降落的区域（或房间号）以及该区域内的*x*和*y*位置。指令使用random.randint()函数，它从你提供的两个数字之间随机选择一个数字。这些指令在游戏开始时运行一次，因此每次玩时着陆器的位置都会不同，但在游戏过程中不会改变。
- en: Now let’s add the first chunk of the objects data, shown in [Listing 5-6](ch05.xhtml#ch05list6).
    This section provides the data for objects 0 to 12\. Because the player cannot
    pick up or use these objects, they don’t have a short description.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们添加对象数据的第一部分，如[Listing 5-6](ch05.xhtml#ch05list6)所示。此部分提供了对象0到12的数据。由于玩家无法拾取或使用这些对象，因此它们没有简短描述。
- en: Place this section of the listing just above the MAKE MAP section of your existing
    program (*listing5-5.py*). To help you find your way around the listing, you can
    press CTRL-F in IDLE to search for a particular word or phrase. For example, try
    searching for *make map* to see where to start adding the code in [Listing 5-6](ch05.xhtml#ch05list6).
    After searching, click Close on the search dialog box. Remember that if you get
    lost in the listing, you can always refer to the complete game listing in [Appendix
    A](appa.xhtml#appa).
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 将此部分代码放置在你现有程序(*listing5-5.py*)的MAKE MAP部分上方。为了帮助你在代码中找到位置，你可以在IDLE中按CTRL-F来搜索特定的单词或短语。例如，试着搜索*make
    map*，看看在哪里开始添加[Listing 5-6](ch05.xhtml#ch05list6)中的代码。搜索后，点击搜索对话框中的关闭按钮。如果你在代码中迷路了，记得你可以随时参考[附录A](appa.xhtml#appa)中的完整游戏代码。
- en: If you prefer not to type the data, use the file *data-chapter5.py*, in the
    listings folder. It contains the objects dictionary, so you can copy and paste
    it into your program. You can start by just pasting the first 12 items.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不想手动输入数据，可以使用位于列表文件夹中的 *data-chapter5.py* 文件。它包含物体字典，你可以将其复制并粘贴到你的程序中。你可以从直接粘贴前12项开始。
- en: '*listing5-6.py*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-6.py*'
- en: --snip--
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: assert len(GAME_MAP)-1 == MAP_SIZE, "Map size and GAME_MAP don't match"
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: assert len(GAME_MAP)-1 == MAP_SIZE, "地图大小与 GAME_MAP 不匹配"
- en: '###############'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##  OBJECTS  ##'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '## 物体 ##'
- en: '###############'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: objects = {
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: objects = {
- en: '0: [images.floor, None, "The floor is shiny and clean"],'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '0: [images.floor, None, "地板光亮且干净"],'
- en: '1: [images.pillar, images.full_shadow, "The wall is smooth and cold"],'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '1: [images.pillar, images.full_shadow, "墙面光滑且冰冷"],'
- en: '2: [images.soil, None, "It''s like a desert. Or should that be dessert?"],'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '2: [images.soil, None, "这就像沙漠。还是应该是甜点？"],'
- en: '3: [images.pillar_low, images.half_shadow, "The wall is smooth and cold"],'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '3: [images.pillar_low, images.half_shadow, "墙面光滑且冰冷"],'
- en: '4: [images.bed, images.half_shadow, "A tidy and comfortable bed"],'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '4: [images.bed, images.half_shadow, "一张整洁舒适的床"],'
- en: '5: [images.table, images.half_shadow, "It''s made from strong plastic."],'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '5: [images.table, images.half_shadow, "它由强塑料制成。"],'
- en: '6: [images.chair_left, None, "A chair with a soft cushion"],'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '6: [images.chair_left, None, "一把带有软垫的椅子"],'
- en: '7: [images.chair_right, None, "A chair with a soft cushion"],'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '7: [images.chair_right, None, "一把带有软垫的椅子"],'
- en: '8: [images.bookcase_tall, images.full_shadow,'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '8: [images.bookcase_tall, images.full_shadow,'
- en: '"Bookshelves, stacked with reference books"],'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '"书架，上面堆满了参考书"],'
- en: '9: [images.bookcase_small, images.half_shadow,'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '9: [images.bookcase_small, images.half_shadow,'
- en: '"Bookshelves, stacked with reference books"],'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '"书架，上面堆满了参考书"],'
- en: '10: [images.cabinet, images.half_shadow,'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '10: [images.cabinet, images.half_shadow,'
- en: '"A small locker, for storing personal items"],'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个小储物柜，用于存放个人物品"],'
- en: '11: [images.desk_computer, images.half_shadow,'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '11: [images.desk_computer, images.half_shadow,'
- en: '"A computer. Use it to run life support diagnostics"],'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '"一台计算机。用它来运行生命支持诊断"],'
- en: '12: [images.plant, images.plant_shadow, "A spaceberry plant, grown here"]'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '12: [images.plant, images.plant_shadow, "一种太空莓植物，在这里生长"]'
- en: '}'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '###############'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: MAKE MAP  ##
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '制作地图 ##'
- en: '###############'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 5-6: Adding the first objects*'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 5-6：添加第一个物体*'
- en: Remember that the colors of the code can help you spot errors. If your text
    sections aren’t green, you’ve left out the opening double quotes. If there is
    too much green, you might have forgotten the closing double quotes. Some of the
    lists continue on the next line, and Python knows the list isn’t complete until
    it sees the closing bracket. If you struggle to get any of the listings to work,
    you can use my version of the code (see “[Using My Example Listings](ch01.xhtml#ch01sb1)”
    on [page 21](ch01.xhtml#page_21)) and pick up the project from any point.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，代码的颜色可以帮助你发现错误。如果你的文本部分不是绿色的，说明你漏掉了开头的双引号。如果绿色部分太多，可能是忘记了闭合的双引号。有些列表会继续到下一行，Python知道列表尚未完成，直到它看到闭合的括号。如果你在运行任何列表时遇到问题，你可以使用我的代码版本（参见“[使用我的示例列表](ch01.xhtml#ch01sb1)”在[第21页](ch01.xhtml#page_21)）并从任何地方继续这个项目。
- en: '[Listing 5-6](ch05.xhtml#ch05list6) looks similar to our earlier planets dictionary:
    we use curly brackets to mark the start and end of the dictionary, and each entry
    in the dictionary is a list so it is inside square brackets. The main difference
    is that this time the key is a number instead of a word.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 5-6](ch05.xhtml#ch05list6) 看起来与我们之前的行星字典相似：我们使用大括号标记字典的开始和结束，每个字典条目都是一个列表，因此它位于方括号内。主要的区别是这次键是一个数字，而不是一个单词。'
- en: Save your new program as *listing5-6.py*. This program uses Pygame Zero for
    the graphics, so you need to run your new program by entering pgzrun listing5-6.py.
    It should work the same as it did previously because we’ve added new data but
    haven’t done anything with that data yet. It’s worth running the program anyway,
    because if you see an error message in the command line window, you can fix the
    new code before you go any further.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的新程序保存为 *listing5-6.py*。这个程序使用 Pygame Zero 来绘制图形，所以你需要通过输入 `pgzrun listing5-6.py`
    来运行你的新程序。它应该和之前一样运行，因为我们只是添加了新的数据，但还没有使用这些数据。无论如何，值得运行这个程序，因为如果你在命令行窗口看到错误信息，你可以在继续之前修复新代码。
- en: '**VIEWING OBJECTS WITH THE SPACE STATION EXPLORER**'
  id: totrans-197
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**使用空间站探索器查看物体**'
- en: 'To see the objects, we have to tell the game to use the new dictionary. Change
    the following line in the EXPLORER part of the program from this:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看这些物体，我们必须告诉游戏使用新的字典。将程序中 EXPLORER 部分的以下行从这个修改为：
- en: image_to_draw = DEMO_OBJECTS[room_map[y][x]]
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: image_to_draw = DEMO_OBJECTS[room_map[y][x]]
- en: 'to the following:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为以下内容：
- en: image_to_draw = objects[room_map[y][x]][0]
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: image_to_draw = objects[room_map[y][x]][0]
- en: This small change makes the *Explorer* code use our new objects dictionary instead
    of the DEMO_OBJECTS list we told it to use previously.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小改动使得*Explorer*代码使用我们新的对象字典，而不是之前指示它使用的DEMO_OBJECTS列表。
- en: 'Notice that we’re now using lowercase letters instead of capital letters. In
    this program, I use capital letters for constants whose values won’t change. The
    DEMO_OBJECTS list never changed: it was only used for looking up the image filenames.
    But the objects dictionary will sometimes have its content changed as the game
    is played.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，我们现在使用的是小写字母，而不是大写字母。在这个程序中，我使用大写字母来表示常量，其值不会改变。DEMO_OBJECTS列表从未改变：它仅用于查找图像文件名。但对象字典的内容会随着游戏的进行而发生变化。
- en: The other difference is that [0] is on the end of the line now. This is because
    when we pull an item from the objects dictionary, it gives us an entire list of
    information. But we just want to use the image here, which is the first item in
    that list, so we use the index number [0] to extract it.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不同之处是，现在[0]位于行的末尾。这是因为当我们从对象字典中提取一个项目时，它会返回一个完整的信息列表。但我们这里只想使用该列表中的第一项，即图像，所以我们使用索引[0]来提取它。
- en: Save the program and run it again, and you should see that the rooms look the
    same as before. That’s because we haven’t added any new objects yet, and we kept
    the object numbers for the floor, wall, and soil the same as the index numbers
    we were using for them before.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 保存程序并重新运行，你应该会看到房间的样子与之前相同。因为我们还没有添加任何新物品，并且我们保持了地板、墙壁和土壤的物品编号与之前使用的索引编号相同。
- en: '**DESIGNING A ROOM**'
  id: totrans-206
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**设计房间**'
- en: 'Let’s add some items to the room display. In the EXPLORER section of the code,
    add the new lines shown in [Listing 5-7](ch05.xhtml#ch05list7):'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们往房间展示中添加一些物品。在代码的EXPLORER部分，添加[列表 5-7](ch05.xhtml#ch05list7)中显示的新行：
- en: '*listing5-7.py*'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-7.py*'
- en: --snip--
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '###############'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: EXPLORER  ##
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'EXPLORER  ##'
- en: '###############'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'def draw():'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 'def draw():'
- en: global room_height, room_width, room_map
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: global room_height, room_width, room_map
- en: print(current_room)
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: print(current_room)
- en: generate_map()
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: generate_map()
- en: screen.clear()
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: screen.clear()
- en: room_map[2][4] = 7
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[2][4] = 7
- en: room_map[2][6] = 6
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[2][6] = 6
- en: room_map[1][1] = 8
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[1][1] = 8
- en: room_map[1][2] = 9
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[1][2] = 9
- en: room_map[1][8] = 12
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[1][8] = 12
- en: room_map[1][9] = 9
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[1][9] = 9
- en: --snip--
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 5-7: Adding some objects in the room display*'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 5-7：在房间展示中添加一些物品*'
- en: These new instructions add objects to the room_map list at different positions
    before the room is displayed.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这些新指令在房间显示之前，将物品添加到room_map列表的不同位置。
- en: Remember that room_map uses the y-coordinate before the x-coordinate. The first
    index number says how far from the back of the room the objects are; the smaller
    the number the nearer to the back they are. The smallest useful number is usually
    1 because the wall is in row 0.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，room_map使用的是y坐标在前，x坐标在后。第一个索引数字表示物品距离房间后壁的远近；数字越小，物品离后壁越近。最小的有效数字通常是1，因为墙壁位于第0行。
- en: The second number says how far across the room the objects are, from left to
    right. There’s usually a wall in column 0, so 1 is the smallest useful number
    for this position too.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个数字表示物品在房间中的水平位置，从左到右。通常列0是墙壁，所以1是这个位置的最小有效数字。
- en: The number on the other side of the equal sign is the key for a particular object.
    You can check which object each number represents by looking at the objects dictionary
    in [Listing 5-6](ch05.xhtml#ch05list6).
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 等号另一边的数字是特定物品的键。你可以通过查看[列表 5-6](ch05.xhtml#ch05list6)中的对象字典，来确认每个数字代表哪个物品。
- en: 'So this line:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 所以这一行：
- en: room_map[1][1] = 8
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[1][1] = 8
- en: 'places object 8 (a tall bookcase) into the top-left corner of the room. And
    this line:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 将物品8（一个高大的书架）放入房间的左上角。这一行：
- en: room_map[2][6] = 6
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[2][6] = 6
- en: places a chair (object 6) three rows from the top and seven positions from the
    left. (Remember that index numbers start at 0.)
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 将椅子（物品6）放在离顶部三行、左侧七个位置的地方。（记住，索引从0开始。）
- en: Save your program as *listing5-7.py* and enter pgzrun listing5-7.py to run it.
    [Figure 5-1](ch05.xhtml#ch05fig1) shows what you should see now.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 保存你的程序为*listing5-7.py*并输入pgzrun listing5-7.py来运行它。[图 5-1](ch05.xhtml#ch05fig1)展示了你现在应该看到的内容。
- en: '![image](../images/fig5-1.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig5-1.jpg)'
- en: '*Figure 5-1: Cozy! Some objects displayed in the space station* Explorer *program*'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 5-1：温馨！在空间站Explorer *程序*中展示的一些物品*'
- en: Because the *Explorer* program is just a demo, some things don’t work yet. For
    example, some objects have a black square under them because there’s no floor
    tile there. Also, all the rooms look the same because we’ve coded the objects
    into the EXPLORER section, so they appear in every room we display. This means
    you can’t view all the rooms anymore, because the objects won’t fit in some of
    them. As a result, you can’t use the arrow keys to look at all the rooms. The
    program doesn’t display wide objects such as the bed correctly yet, either. We’ll
    fix all of these problems later, but we can continue building and testing the
    space station in the meantime.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 因为*Explorer*程序只是一个演示版，所以有些功能还没有实现。例如，一些物体下面有一个黑色方块，因为那里没有地板砖。而且，由于我们已经将对象编码到EXPLORER部分，所以所有房间看起来都一样，显示的每个房间中都有相同的物体。这意味着你不能再查看所有房间，因为有些房间无法容纳所有物体。因此，你不能使用箭头键查看所有房间。此外，程序还无法正确显示床等宽大的物体。我们稍后会修复这些问题，但在此期间我们可以继续构建和测试空间站。
- en: '**TRAINING MISSION #3**'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #3**'
- en: 'Experiment with the code you’ve added to the *Explorer* program to reposition
    the furniture to your liking. Playing with this code is a great way to learn how
    to position objects in the rooms. If you want to play with a bigger room, change
    the value of current_room in the VARIABLES section from 31 to 40 (which is the
    biggest room in the game). Save your program as *mission5-3.py* and run it using
    pgzrun mission5-3.py. You’ll need to keep a safe copy of the existing *Explorer*
    code (*listing5-7.py*) to use in Training Mission #4.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试修改你添加到*Explorer*程序中的代码，重新定位家具到你喜欢的位置。通过修改这段代码是学习如何在房间中定位物体的好方法。如果你想玩一个更大的房间，可以将VARIABLES部分中的current_room值从31改为40（这是游戏中最大的房间）。保存程序为*mission5-3.py*并通过`pgzrun
    mission5-3.py`运行。你需要保留现有*Explorer*代码的安全副本（*listing5-7.py*），以便在训练任务#4中使用。
- en: '**ADDING THE REST OF THE OBJECTS**'
  id: totrans-241
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加其余的对象**'
- en: So far we’ve added objects 0 to 12 to the objects dictionary. There are 81 objects
    in total in the game, so let’s add the rest now by adding the new lines in [Listing
    5-8](ch05.xhtml#ch05list8). Remember to add a comma after item 12 before adding
    the rest of the items in the dictionary.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经将对象0到12添加到了对象字典中。游戏中总共有81个对象，接下来我们通过在[Listing 5-8](ch05.xhtml#ch05list8)中添加新行来添加其余的对象。记得在添加字典中剩余项目之前，在第12项后添加一个逗号。
- en: When the same filename or a similar description is used for more than one object,
    you can just copy and paste it. To copy code, click and hold down the mouse button
    at the beginning of the chunk of code, move the mouse to highlight it, and then
    press CTRL-C. Then click the mouse where you want to paste that code and press
    CTRL-V. Remember too that you can copy and paste the whole dictionary from the
    *data-chapter5.py* file if you want to save time typing.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 当多个物体使用相同的文件名或相似描述时，你可以直接复制粘贴代码。要复制代码，点击并按住鼠标按钮，从代码块的开头开始，移动鼠标高亮显示它，然后按CTRL-C。接着在你想粘贴代码的位置点击鼠标并按CTRL-V。也记得你可以直接从*data-chapter5.py*文件中复制整个字典，这样可以节省打字时间。
- en: Save the program as *listing5-8.py*. You can test that the program still works
    by entering pgzrun listing5-8.py, although you won’t see anything new yet.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为*listing5-8.py*。你可以通过输入`pgzrun listing5-8.py`来测试程序是否仍然有效，尽管目前你不会看到任何新内容。
- en: 'This is [Listing 5-8](ch05.xhtml#ch05list8):'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[Listing 5-8](ch05.xhtml#ch05list8)：
- en: '*listing5-8.py*'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing5-8.py*'
- en: '###############'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##  OBJECTS  ##'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '##  对象  ##'
- en: '###############'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: objects = {
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: objects = {
- en: '0: [images.floor, None, "The floor is shiny and clean"],'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '0: [images.floor, None, "地板光滑干净"],'
- en: --snip--
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '12: [images.plant, images.plant_shadow, "A spaceberry plant, grown locally"],'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '12: [images.plant, images.plant_shadow, "本地种植的太空莓植物"],'
- en: '➊     13: [images.electrical1, images.half_shadow,'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '➊  13: [images.electrical1, images.half_shadow,'
- en: '"Electrical systems used for powering the space station"],'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '"为空间站供电的电气系统"],'
- en: '14: [images.electrical2, images.half_shadow,'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '14: [images.electrical2, images.half_shadow,'
- en: '"Electrical systems used for powering the space station"],'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '"为空间站供电的电气系统"],'
- en: '15: [images.cactus, images.cactus_shadow, "Ouch! Careful on the cactus!"],'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '15: [images.cactus, images.cactus_shadow, "哎呀！小心仙人掌！"],'
- en: '16: [images.shrub, images.shrub_shadow,'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '16: [images.shrub, images.shrub_shadow,'
- en: '"A space lettuce. A bit limp, but amazing it''s growing here!"],'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '"太空生菜。虽然有点软，但竟然能在这里生长，真是令人惊叹！"],'
- en: '17: [images.pipes1, images.pipes1_shadow, "Water purification pipes"],'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '17: [images.pipes1, images.pipes1_shadow, "水净化管道"],'
- en: '18: [images.pipes2, images.pipes2_shadow,'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '18: [images.pipes2, images.pipes2_shadow,'
- en: '"Pipes for the life support systems"],'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '"生命支持系统管道"],'
- en: '19: [images.pipes3, images.pipes3_shadow,'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '19: [images.pipes3, images.pipes3_shadow, '
- en: '"Pipes for the life support systems"],'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '"为生命支持系统的管道"],'
- en: '➋     20: [images.door, images.door_shadow, "Safety door. Opens automatically
    \'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '➋     20: [images.door, images.door_shadow, "安全门。自动打开\'
- en: for astronauts in functioning spacesuits."],
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 为穿着功能性宇航服的宇航员准备的。"],
- en: '21: [images.door, images.door_shadow, "The airlock door. \'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '21: [images.door, images.door_shadow, "空气锁门。\'
- en: For safety reasons, it requires two person operation."],
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 出于安全原因，它需要两个人操作。"],
- en: '22: [images.door, images.door_shadow, "A locked door. It needs " \'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '22: [images.door, images.door_shadow, "一扇上锁的门。需要" \'
- en: + PLAYER_NAME + "'s access card"],
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: + PLAYER_NAME + "的通行卡"],
- en: '23: [images.door, images.door_shadow, "A locked door. It needs " \'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '23: [images.door, images.door_shadow, "一扇上锁的门。需要" \'
- en: + FRIEND1_NAME + "'s access card"],
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: + FRIEND1_NAME + "的通行卡"],
- en: '24: [images.door, images.door_shadow, "A locked door. It needs " \'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '24: [images.door, images.door_shadow, "一扇上锁的门。需要" \'
- en: + FRIEND2_NAME + "'s access card"],
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: + FRIEND2_NAME + "的通行卡"],
- en: '25: [images.door, images.door_shadow,'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '25: [images.door, images.door_shadow, '
- en: '"A locked door. It is opened from Main Mission Control"],'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '"一扇上锁的门。从主任务控制开启"],'
- en: '26: [images.door, images.door_shadow,'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '26: [images.door, images.door_shadow, '
- en: '"A locked door in the engineering bay."],'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '"工程舱内的一扇上锁的门。"],'
- en: '➌     27: [images.map, images.full_shadow,'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '➌     27: [images.map, images.full_shadow, '
- en: '"The screen says the crash site was Sector: " \'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '"屏幕显示撞击地点为区域："]\'
- en: '+ str(LANDER_SECTOR) + " // X: " + str(LANDER_X) + \'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '+ str(LANDER_SECTOR) + " // X: " + str(LANDER_X) + \'
- en: '" // Y: " + str(LANDER_Y)],'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '" // Y: " + str(LANDER_Y)],'
- en: '28: [images.rock_large, images.rock_large_shadow,'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '28: [images.rock_large, images.rock_large_shadow, '
- en: '"A rock. Its coarse surface feels like a whetstone", "the rock"],'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '"一块岩石。它的粗糙表面像磨刀石", "那块岩石"],'
- en: '29: [images.rock_small, images.rock_small_shadow,'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '29: [images.rock_small, images.rock_small_shadow, '
- en: '"A small but heavy piece of Martian rock"],'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '"一块小而沉重的火星岩"],'
- en: '30: [images.crater, None, "A crater in the planet surface"],'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '30: [images.crater, None, "行星表面上的一个陨石坑"],'
- en: '31: [images.fence, None,'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '31: [images.fence, None, '
- en: '"A fine gauze fence. It helps protect the station from dust storms"],'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个细密的纱网围栏。它有助于保护站点免受沙尘暴的影响"],'
- en: '32: [images.contraption, images.contraption_shadow,'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '32: [images.contraption, images.contraption_shadow, '
- en: '"One of the scientific experiments. It gently vibrates"],'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '"其中一项科学实验。它轻轻震动"],'
- en: '33: [images.robot_arm, images.robot_arm_shadow,'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '33: [images.robot_arm, images.robot_arm_shadow, '
- en: '"A robot arm, used for heavy lifting"],'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '"一只机器人臂，用于重物搬运"],'
- en: '34: [images.toilet, images.half_shadow, "A sparkling clean toilet"],'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '34: [images.toilet, images.half_shadow, "一间闪亮干净的厕所"],'
- en: '35: [images.sink, None, "A sink with running water", "the taps"],'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '35: [images.sink, None, "一只有流水的洗手池", "水龙头"],'
- en: '36: [images.globe, images.globe_shadow,'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '36: [images.globe, images.globe_shadow, '
- en: '"A giant globe of the planet. It gently glows from inside"],'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个巨大的行星模型。它从内部发出柔和的光"],'
- en: '37: [images.science_lab_table, None,'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '37: [images.science_lab_table, None, '
- en: '"A table of experiments, analyzing the planet soil and dust"],'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个实验桌，分析行星土壤和尘土"],'
- en: '38: [images.vending_machine, images.full_shadow,'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '38: [images.vending_machine, images.full_shadow, '
- en: '"A vending machine. It requires a credit.", "the vending machine"],'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '"一台自动售货机。它需要信用卡。", "自动售货机"],'
- en: '39: [images.floor_pad, None,'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '39: [images.floor_pad, None, '
- en: '"A pressure sensor to make sure nobody goes out alone."],'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个压力传感器，确保没有人单独出去。"],'
- en: '40: [images.rescue_ship, images.rescue_ship_shadow, "A rescue ship!"],'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '40: [images.rescue_ship, images.rescue_ship_shadow, "一艘救援飞船！"],'
- en: '41: [images.mission_control_desk, images.mission_control_desk_shadow, \'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '41: [images.mission_control_desk, images.mission_control_desk_shadow, \'
- en: '"Mission Control stations."],'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '"任务控制站。"],'
- en: '42: [images.button, images.button_shadow,'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '42: [images.button, images.button_shadow, '
- en: '"The button for opening the time-locked door in engineering."],'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '"用于打开工程舱时间锁门的按钮。"],'
- en: '43: [images.whiteboard, images.full_shadow,'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '43: [images.whiteboard, images.full_shadow, '
- en: '"The whiteboard is used in brainstorms and planning meetings."],'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '"白板用于头脑风暴和规划会议。"],'
- en: '44: [images.window, images.full_shadow,'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '44: [images.window, images.full_shadow, '
- en: '"The window provides a view out onto the planet surface."],'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '"窗户提供了望向行星表面的视野。"],'
- en: '45: [images.robot, images.robot_shadow, "A cleaning robot, turned off."],'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '45: [images.robot, images.robot_shadow, "一台关闭的清洁机器人。"],'
- en: '46: [images.robot2, images.robot2_shadow,'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '46: [images.robot2, images.robot2_shadow,'
- en: '"A planet surface exploration robot, awaiting set-up."],'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '"一台行星表面探索机器人，待设置。"],'
- en: '47: [images.rocket, images.rocket_shadow, "A 1-person craft in repair."],'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '47: [images.rocket, images.rocket_shadow, "一台正在修理中的单人航天器。"],'
- en: '48: [images.toxic_floor, None, "Toxic floor - do not walk on!"],'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '48: [images.toxic_floor, None, "有毒地板——禁止踏足！"],'
- en: '49: [images.drone, None, "A delivery drone"],'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '49: [images.drone, None, "一架送货无人机"],'
- en: '50: [images.energy_ball, None, "An energy ball - dangerous!"],'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '50: [images.energy_ball, None, "一个能量球——危险！"],'
- en: '51: [images.energy_ball2, None, "An energy ball - dangerous!"],'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '51: [images.energy_ball2, None, "一个能量球 - 危险！"],'
- en: '52: [images.computer, images.computer_shadow,'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '52: [images.computer, images.computer_shadow,'
- en: '"A computer workstation, for managing space station systems."],'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个计算机工作站，用于管理空间站系统。"],'
- en: '53: [images.clipboard, None,'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '53: [images.clipboard, None,'
- en: '"A clipboard. Someone has doodled on it.", "the clipboard"],'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个剪贴板。上面有人涂鸦。", "剪贴板"],'
- en: '54: [images.bubble_gum, None,'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '54: [images.bubble_gum, None,'
- en: '"A piece of sticky bubble gum. Spaceberry flavour.", "bubble gum"],'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '"一块粘性的口香糖。太空莓口味。", "口香糖"],'
- en: '55: [images.yoyo, None, "A toy made of fine, strong string and plastic. \'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '55: [images.yoyo, None, "一个由细结实的绳子和塑料制成的玩具。\'
- en: Used for antigrav experiments.", PLAYER_NAME + "'s yoyo"],
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 用于反重力实验。", PLAYER_NAME + "的溜溜球"],
- en: '56: [images.thread, None,'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '56: [images.thread, None,'
- en: '"A piece of fine, strong string", "a piece of string"],'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '"一段细且结实的绳子", "一段绳子"],'
- en: '57: [images.needle, None,'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '57: [images.needle, None,'
- en: '"A sharp needle from a cactus plant", "a cactus needle"],'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '"一根来自仙人掌植物的锋利针刺", "仙人掌针"],'
- en: '58: [images.threaded_needle, None,'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '58: [images.threaded_needle, None,'
- en: '"A cactus needle, spearing a length of string", "needle and string"],'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '"一根仙人掌针，刺穿了一段绳子", "针和绳子"],'
- en: '59: [images.canister, None,'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '59: [images.canister, None,'
- en: '"The air canister has a leak.", "a leaky air canister"],'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '"空气罐有泄漏。", "一个漏气的空气罐"],'
- en: '60: [images.canister, None,'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '60: [images.canister, None,'
- en: '"It looks like the seal will hold!", "a sealed air canister"],'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '"看起来封印应该没问题！", "一个封闭的空气罐"],'
- en: '61: [images.mirror, None,'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '61: [images.mirror, None,'
- en: '"The mirror throws a circle of light on the walls.", "a mirror"],'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '"镜子在墙上投射出一圈光。", "一面镜子"],'
- en: '62: [images.bin_empty, None,'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '62: [images.bin_empty, None,'
- en: '"A rarely used bin, made of light plastic", "a bin"],'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个很少使用的垃圾桶，轻塑料制作", "一个垃圾桶"],'
- en: '63: [images.bin_full, None,'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '63: [images.bin_full, None,'
- en: '"A heavy bin full of water", "a bin full of water"],'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个装满水的重垃圾桶", "一个装水的垃圾桶"],'
- en: '64: [images.rags, None,'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '64: [images.rags, None,'
- en: '"An oily rag. Pick it up by a corner if you must!", "an oily rag"],'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '"一块油腻的抹布。如果必须捡起来，请抓住角落！", "一块油腻的抹布"],'
- en: '65: [images.hammer, None,'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '65: [images.hammer, None,'
- en: '"A hammer. Maybe good for cracking things open...", "a hammer"],'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '"一把锤子。也许可以用来打开东西...", "一把锤子"],'
- en: '66: [images.spoon, None, "A large serving spoon", "a spoon"],'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '66: [images.spoon, None, "一个大勺子", "一个勺子"],'
- en: '67: [images.food_pouch, None,'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '67: [images.food_pouch, None,'
- en: '"A dehydrated food pouch. It needs water.", "a dry food pack"],'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个脱水食品袋。需要加水。", "干粮袋"],'
- en: '68: [images.food, None,'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '68: [images.food, None,'
- en: '"A food pouch. Use it to get 100% energy.", "ready-to-eat food"],'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个食品袋。用它可以获得100%的能量。", "即食食品"],'
- en: '69: [images.book, None, "The book has the words ''Don''t Panic'' on the \'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '69: [images.book, None, "书上写着‘别慌’这几个字，\'
- en: cover in large, friendly letters", "a book"],
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 封面上大大的、友好的字母", "一本书"],
- en: '70: [images.mp3_player, None,'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '70: [images.mp3_player, None,'
- en: '"An MP3 player, with all the latest tunes", "an MP3 player"],'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个MP3播放器，装有所有最新的曲目", "一台MP3播放器"],'
- en: '71: [images.lander, None, "The Poodle, a small space exploration craft. \'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '71: [images.lander, None, "贵宾犬号，一个小型太空探索飞船。\'
- en: Its black box has a radio sealed inside.", "the Poodle lander"],
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 它的黑匣子内有一个无线电系统。", "贵宾犬号着陆器"],
- en: '72: [images.radio, None, "A radio communications system, from the \'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '72: [images.radio, None, "一个无线电通信系统，来自\'
- en: Poodle", "a communications radio"],
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 贵宾犬号", "一个通信无线电"],
- en: '73: [images.gps_module, None, "A GPS Module", "a GPS module"],'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: '73: [images.gps_module, None, "一个GPS模块", "一个GPS模块"],'
- en: '74: [images.positioning_system, None, "Part of a positioning system. \'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '74: [images.positioning_system, None, "部分定位系统。\'
- en: Needs a GPS module.", "a positioning interface"],
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 需要一个GPS模块。", "一个定位接口"],
- en: '75: [images.positioning_system, None,'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '75: [images.positioning_system, None,'
- en: '"A working positioning system", "a positioning computer"],'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个正在工作的定位系统", "一个定位计算机"],'
- en: '76: [images.scissors, None, "Scissors. They''re too blunt to cut \'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '76: [images.scissors, None, "剪刀。它们太钝了，无法剪开\'
- en: anything. Can you sharpen them?", "blunt scissors"],
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 任何东西。你能把它们磨利吗?", "钝的剪刀"],
- en: '77: [images.scissors, None,'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '77: [images.scissors, None,'
- en: '"Razor-sharp scissors. Careful!", "sharpened scissors"],'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '"锋利的剪刀。小心！", "已磨尖的剪刀"],'
- en: '78: [images.credit, None,'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '78: [images.credit, None,'
- en: '"A small coin for the station''s vending systems",'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个小硬币，用于车站的自动售货系统",'
- en: '"a station credit"],'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '"一个车站信用卡"],'
- en: '79: [images.access_card, None,'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '79: [images.access_card, None,'
- en: '"This access card belongs to " + PLAYER_NAME, "an access card"],'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '"这张通行证属于" + PLAYER_NAME, "一张通行证"],'
- en: '80: [images.access_card, None,'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '80: [images.access_card, None,'
- en: '"This access card belongs to " + FRIEND1_NAME, "an access card"],'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: '"这张通行证属于" + FRIEND1_NAME, "一张通行证"],'
- en: '81: [images.access_card, None,'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '81: [images.access_card, None,'
- en: '"This access card belongs to " + FRIEND2_NAME, "an access card"]'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: '"这张通行证属于" + FRIEND2_NAME, "一张通行证"],'
- en: '}'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: ➍ items_player_may_carry = list(range(53, 82))
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ items_player_may_carry = list(range(53, 82))
- en: '# Numbers below are for floor, pressure pad, soil, toxic floor.'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
- en: ➎ items_player_may_stand_on = items_player_may_carry + [0, 39, 2, 48]
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: '###############'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: '## MAKE MAP  ##'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: '###############'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: --snip--
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
- en: '*Listing 5-8: Completing the objects data for the* Escape *game*'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the lists for objects extend over more than one line in the program
    ➊. This is fine because Python knows the list isn’t complete until it sees a closing
    bracket. To break a string (or any other piece of code) over more than one line,
    you can use a \ at the end of the line ➋. The line breaks in *listing5-8.py* are
    just there to make the code fit onto the book page neatly: onscreen, the code
    can extend to the right if you want it to.'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: Object 27 is a map showing the Poodle’s crash site. Its long description includes
    the variables that you set in [Listing 5-5](ch05.xhtml#ch05list5) for the Poodle’s
    position. The str() function is used to convert the numbers in those variables
    into strings so they can be combined with other strings to make up the long description
    ➌.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: 'We’ve also set up some additional lists we’ll need in the game: items_player_may_carry
    stores the numbers of the objects the player can pick up ➍. These are objects
    53 to 81\. Because they’re grouped together, we can set up the items_player_may_carry
    list using a range. A *range* is a sequence of numbers that starts from the first
    number given and finishes at the one *before* the last number. (We used ranges
    in [Chapter 3](ch03.xhtml#ch03).) We turn that range into a list using list(range(53
    to 82)), which makes a list of all the numbers from 53 to 81.'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: If you add more objects that a player can carry later, you can add them to the
    end of this list. For example, to add new objects numbered 89 and 93 that the
    player can carry, use items_player_may_carry = list(range(54, 82)) + [89, 93].
    You can also add new objects to the end of the objects list and just extend the
    range used to set up items_player_may_carry.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: The other new list is items_player_may_stand_on, which specifies whether a player
    is allowed to stand on a particular item ➎. Players can only stand on objects
    small enough to be picked up and on the different types of floor. We make this
    list by adding the object numbers for the different floor types to the items_player_may_carry
    list.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: After you’ve entered [Listing 5-8](ch05.xhtml#ch05list8), you’ve completed the
    OBJECTS section of the *Escape* game! But we haven’t put the objects into the
    game map yet. We’ll start to do that in [Chapter 6](ch06.xhtml#ch06).
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: '**TRAINING MISSION #4**'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: Experiment with some of the new objects you just added to the game. By modifying
    the code, can you . . .
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: Swap the tall bookcase for a bin (object 62)?
  id: totrans-398
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Swap the spaceberry plant for a small rock (object 29)?
  id: totrans-399
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Swap the chair on the right for a patch of toxic floor (object 48)?
  id: totrans-400
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To understand which instruction places which object, you can either use the
    coordinates in your existing code or look up the object numbers in the objects
    dictionary (onscreen or in the listings in this chapter). Run your program to
    make sure it works.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解哪条指令放置了哪个对象，你可以使用现有代码中的坐标，或者查找对象字典中的对象编号（可以在屏幕上查看或在本章的列表中查找）。运行程序以确保它能正常工作。
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-402
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你适合飞行吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框选项，以确认你已经掌握了本章的关键知识点。
- en: '![Images](../images/box.jpg)  To get information from a dictionary, you use
    the key for that information. The key can be a word or a number and can also be
    stored in a variable.'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  要从字典中获取信息，你需要使用该信息的键。键可以是一个单词或数字，也可以存储在变量中。'
- en: '![Images](../images/box.jpg)  If you try to use a key that isn’t in the dictionary,
    you’ll cause an error.'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  如果你尝试使用一个不在字典中的键，将会导致错误。'
- en: '![Images](../images/box.jpg)  To avoid an error, check whether the key is in
    the dictionary before the program tries to use it.'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  为了避免错误，请在程序尝试使用键之前，检查该键是否在字典中。'
- en: '![Images](../images/box.jpg)  You can put lists inside dictionaries. Then you
    can use the dictionary key followed by the list index to get a particular item
    from the list. For example: planets["Earth"][1].'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  你可以将列表放入字典中。然后，你可以使用字典的键，后跟列表索引，来获取列表中的特定项。例如：planets["Earth"][1]。'
- en: '![Images](../images/box.jpg)  The *Escape* game uses the objects dictionary
    to store information about all the objects in the game. Each item in the dictionary
    is a list.'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  *Escape* 游戏使用对象字典来存储游戏中所有对象的信息。字典中的每一项都是一个列表。'
- en: '![Images](../images/box.jpg)  You can use the index number of that list to
    access the object’s image file, shadow image file, and long and short description.'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  你可以使用该列表的索引号来访问对象的图像文件、阴影图像文件以及长短描述。'
- en: '![image](../images/f0096-01.jpg)'
  id: totrans-410
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/f0096-01.jpg)'
