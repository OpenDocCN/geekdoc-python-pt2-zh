- en: Index
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 索引
- en: '**NUMBERS AND SYMBOLS**'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**数字与符号**'
- en: 7×7 magic square, testing code for, [33](c02.xhtml#Page_33)
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 7×7 魔方，测试代码，[33](c02.xhtml#Page_33)
- en: '`%` (modulo) operator'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`%`（取模）运算符'
- en: Euclid’s algorithm, [21](c02.xhtml#Page_21)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得算法，[21](c02.xhtml#Page_21)
- en: Kurushima’s algorithm, [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 黑田算法，[27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
- en: RPM (Russian peasant multiplication), [19](c02.xhtml#Page_19)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 俄罗斯农民乘法（RPM），[19](c02.xhtml#Page_19)
- en: rules, [32](c02.xhtml#Page_32)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 规则，[32](c02.xhtml#Page_32)
- en: '`[]` (square brackets)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`[]`（方括号）'
- en: using with list comprehension, [152](c08.xhtml#Page_152)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 使用列表推导，[152](c08.xhtml#Page_152)
- en: using with `loc` functionality, [19](c02.xhtml#Page_19)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `loc` 功能，[19](c02.xhtml#Page_19)
- en: '**A**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**'
- en: acceleration
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 加速度
- en: estimating for thrown ball, [10](c01.xhtml#Page_10)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 估算抛物线球，[10](c01.xhtml#Page_10)
- en: observing for thrown ball, [9](c01.xhtml#Page_9)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 观察抛物线球，[9](c01.xhtml#Page_9)
- en: AI (artificial intelligence). *See* *also* decision trees; game trees; random
    forests
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能（AI）。*参见* *决策树*；*游戏树*；*随机森林*
- en: adding enhancements, [199](c10.xhtml#Page_199)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 添加增强功能，[199](c10.xhtml#Page_199)
- en: drawing the board, [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制棋盘，[187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
- en: game trees and winning games, [190](c10.xhtml#Page_190)–[199](c10.xhtml#Page_199)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏树与赢得游戏，[190](c10.xhtml#Page_190)–[199](c10.xhtml#Page_199)
- en: la pipopipette, [186](c10.xhtml#Page_186)–[187](c10.xhtml#Page_187)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: pipopipette，[186](c10.xhtml#Page_186)–[187](c10.xhtml#Page_187)
- en: representing games, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 表示游戏，[188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)
- en: scoring games, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 评分游戏，[189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
- en: algebra, *[5](c01.xhtml#Page_5)*
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 代数，*[5](c01.xhtml#Page_5)*
- en: algorithmic approach
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 算法方法
- en: Chapman’s algorithm, [9](c01.xhtml#Page_9)–[10](c01.xhtml#Page_10)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 查普曼算法，[9](c01.xhtml#Page_9)–[10](c01.xhtml#Page_10)
- en: thinking with your neck, [6](c01.xhtml#Page_6)–[9](c01.xhtml#Page_9)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 用脖子思考，[6](c01.xhtml#Page_6)–[9](c01.xhtml#Page_9)
- en: algorithms, *[13](c02.xhtml#Page_13)*
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 算法，*[13](c02.xhtml#Page_13)*
- en: adding theoretical precision, [63](c04.xhtml#Page_63)–[64](c04.xhtml#Page_64)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 添加理论精度，[63](c04.xhtml#Page_63)–[64](c04.xhtml#Page_64)
- en: alpha–beta pruning, *[199](c10.xhtml#Page_199)*
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: α–β 剪枝，*[199](c10.xhtml#Page_199)*
- en: avoiding use of, [48](c03.xhtml#Page_48)–[49](c03.xhtml#Page_49)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 避免使用，[48](c03.xhtml#Page_48)–[49](c03.xhtml#Page_49)
- en: Babylonian, [90](c05.xhtml#Page_90)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 巴比伦，[90](c05.xhtml#Page_90)
- en: Bowyer-Watson, [136](c07.xhtml#Page_136)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 博伊尔-沃森，[136](c07.xhtml#Page_136)
- en: comparing to functions, [60](c04.xhtml#Page_60)–[63](c04.xhtml#Page_63)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 与函数比较，[60](c04.xhtml#Page_60)–[63](c04.xhtml#Page_63)
- en: counting steps, [57](c04.xhtml#Page_57)–[60](c04.xhtml#Page_60)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 计数步骤，[57](c04.xhtml#Page_57)–[60](c04.xhtml#Page_60)
- en: divide and conquer, *[69](c04.xhtml#Page_69)*
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 分治法，*[69](c04.xhtml#Page_69)*
- en: doing more with, [202](c11.xhtml#Page_202)–[203](c11.xhtml#Page_203)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 做更多的，[202](c11.xhtml#Page_202)–[203](c11.xhtml#Page_203)
- en: finding maximum, [42](c03.xhtml#Page_42)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找最大值，[42](c03.xhtml#Page_42)
- en: gaining expertise, [209](c11.xhtml#Page_209)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 获得专业知识，[209](c11.xhtml#Page_209)
- en: measuring efficiency, [55](c04.xhtml#Page_55)–[57](c04.xhtml#Page_57)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 测量效率，[55](c04.xhtml#Page_55)–[57](c04.xhtml#Page_57)
- en: measuring time, [57](c04.xhtml#Page_57)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 测量时间，[57](c04.xhtml#Page_57)
- en: merging sorted lists, [67](c04.xhtml#Page_67)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 合并排序后的列表，[67](c04.xhtml#Page_67)
- en: minimax, [195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 极小极大算法，[195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
- en: performing “by hand,” [14](c02.xhtml#Page_14)–[18](c02.xhtml#Page_18), [20](c02.xhtml#Page_20)–[21](c02.xhtml#Page_21)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 手动执行，[14](c02.xhtml#Page_14)–[18](c02.xhtml#Page_18)，[20](c02.xhtml#Page_20)–[21](c02.xhtml#Page_21)
- en: perturb search, *[112](c06.xhtml#Page_112)*
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 扰动搜索，*[112](c06.xhtml#Page_112)*
- en: refraining from using, [48](c03.xhtml#Page_48)–[49](c03.xhtml#Page_49)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 避免使用，[48](c03.xhtml#Page_48)–[49](c03.xhtml#Page_49)
- en: solving problems with, *[10](c01.xhtml#Page_10)*–[11](c01.xhtml#Page_11)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 用*算法*解决问题，*[10](c01.xhtml#Page_10)*–[11](c01.xhtml#Page_11)
- en: tax rates, [39](c03.xhtml#Page_39)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 税率，[39](c03.xhtml#Page_39)
- en: using big O notation, [64](c04.xhtml#Page_64)–[65](c04.xhtml#Page_65)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用大 O 符号，[64](c04.xhtml#Page_64)–[65](c04.xhtml#Page_65)
- en: within algorithms, [17](c02.xhtml#Page_17)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在算法中，[17](c02.xhtml#Page_17)
- en: Al-Khwarizmi, [5](c01.xhtml#Page_5), [10](c01.xhtml#Page_10)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 阿尔·花拉子米，[5](c01.xhtml#Page_5)，[10](c01.xhtml#Page_10)
- en: alpha–beta pruning algorithm, *[199](c10.xhtml#Page_199)*
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: α–β 剪枝算法，*[199](c10.xhtml#Page_199)*
- en: analytic approach
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 分析方法
- en: Galilean model, [2](c01.xhtml#Page_2)–[4](c01.xhtml#Page_4)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 伽利略模型，[2](c01.xhtml#Page_2)–[4](c01.xhtml#Page_4)
- en: inner physicist, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 内在的物理学家，[5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
- en: solve-for-*x* strategy, [4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 解 *x* 策略，[4](c01.xhtml#Page_4)–[5](c01.xhtml#Page_5)
- en: angle, tangent of, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 角度，正切，[8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
- en: annealing, process of, *[117](c06.xhtml#Page_117)*
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 退火，过程, *[117](c06.xhtml#Page_117)*
- en: antidiagonal of square matrix, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 方阵的反对角线, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
- en: '`append()` method, RPM (Russian peasant multiplication), [18](c02.xhtml#Page_18)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`append()` 方法，俄罗斯农民乘法, [18](c02.xhtml#Page_18)'
- en: arguments, magic squares, [31](c02.xhtml#Page_31)–[34](c02.xhtml#Page_34)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 参数，魔方阵, [31](c02.xhtml#Page_31)–[34](c02.xhtml#Page_34)
- en: artificial intelligence (AI), *[185](c10.xhtml#Page_185)*–*[186](c10.xhtml#Page_186)*
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能（AI）, *[185](c10.xhtml#Page_185)*–*[186](c10.xhtml#Page_186)*
- en: adding enhancements, [199](c10.xhtml#Page_199)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 添加增强功能, [199](c10.xhtml#Page_199)
- en: drawing the board, [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制棋盘, [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
- en: game trees and winning games, [190](c10.xhtml#Page_190)–[199](c10.xhtml#Page_199)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏树和赢得游戏, [190](c10.xhtml#Page_190)–[199](c10.xhtml#Page_199)
- en: la pipopipette, [186](c10.xhtml#Page_186)–[187](c10.xhtml#Page_187)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 拉皮波皮管, [186](c10.xhtml#Page_186)–[187](c10.xhtml#Page_187)
- en: representing games, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 表示游戏, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)
- en: scoring games, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 评分游戏, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
- en: asymptote, relationship to maximum, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 渐近线，与最大值的关系, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40)
- en: '**B**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**B**'
- en: Babylonian algorithm, [90](c05.xhtml#Page_90)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 巴比伦算法, [90](c05.xhtml#Page_90)
- en: ball. *See also* the outfielder problem
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 球。*另见* 外场手问题
- en: horizontal position of, [7](c01.xhtml#Page_7)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 水平位置, [7](c01.xhtml#Page_7)
- en: plotting trajectory of, [1](c01.xhtml#Page_1)–[2](c01.xhtml#Page_2), [4](c01.xhtml#Page_4),
    [7](c01.xhtml#Page_7)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制轨迹, [1](c01.xhtml#Page_1)–[2](c01.xhtml#Page_2), [4](c01.xhtml#Page_4), [7](c01.xhtml#Page_7)
- en: tangent calculation, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 切线计算, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
- en: '`ball_trajectory()` function, [3](c01.xhtml#Page_3)–[4](c01.xhtml#Page_4)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`ball_trajectory()` 函数, [3](c01.xhtml#Page_3)–[4](c01.xhtml#Page_4)'
- en: baseball, scientific features of, [6](c01.xhtml#Page_6)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 棒球，科学特征, [6](c01.xhtml#Page_6)
- en: bell curve, *[95](c05.xhtml#Page_95)*–[96](c05.xhtml#Page_96)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 钟形曲线, *[95](c05.xhtml#Page_95)*–[96](c05.xhtml#Page_96)
- en: '`between_spaces` variable, creating, [154](c08.xhtml#Page_154)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`between_spaces` 变量，创建, [154](c08.xhtml#Page_154)'
- en: big O notation
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 大 O 标记法
- en: sleep sort’s runtime, [72](c04.xhtml#Page_72)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 睡眠排序的运行时间, [72](c04.xhtml#Page_72)
- en: using, *[64](c04.xhtml#Page_64)*–[65](c04.xhtml#Page_65)
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用, *[64](c04.xhtml#Page_64)*–[65](c04.xhtml#Page_65)
- en: billiard balls and randomness, [91](c05.xhtml#Page_91)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 台球和随机性, [91](c05.xhtml#Page_91)
- en: binary branching process, using with decision trees, [166](c09.xhtml#Page_166)–[167](c09.xhtml#Page_167)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制分支过程，与决策树结合使用, [166](c09.xhtml#Page_166)–[167](c09.xhtml#Page_167)
- en: binary expansion, *[17](c02.xhtml#Page_17)*
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制扩展, *[17](c02.xhtml#Page_17)*
- en: binary search, [73](c04.xhtml#Page_73)–[75](c04.xhtml#Page_75)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 二分查找, [73](c04.xhtml#Page_73)–[75](c04.xhtml#Page_75)
- en: bisect, geometric terminology, *[130](c07.xhtml#Page_130)*
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 平分，几何术语, *[130](c07.xhtml#Page_130)*
- en: bits, string of, *[97](c05.xhtml#Page_97)*–[98](c05.xhtml#Page_98)
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 比特，字符串, *[97](c05.xhtml#Page_97)*–[98](c05.xhtml#Page_98)
- en: board, drawing for dots and boxes game, [187](c10.xhtml#Page_187)–[189](c10.xhtml#Page_189)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏板，绘制点和方块游戏, [187](c10.xhtml#Page_187)–[189](c10.xhtml#Page_189)
- en: bootstrapping, *[91](c05.xhtml#Page_91)*
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 自举法, *[91](c05.xhtml#Page_91)*
- en: Bowyer-Watson algorithm, [136](c07.xhtml#Page_136). *See also* DT (Delaunay
    triangulation); triangulation
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 博威尔-沃森算法, [136](c07.xhtml#Page_136)。*另见* DT（德劳内三角剖分）；三角剖分
- en: brain, “wetware” of, [5](c01.xhtml#Page_5)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 大脑，“湿件”，[5](c01.xhtml#Page_5)
- en: branching process, using with decision trees, [166](c09.xhtml#Page_166)–[167](c09.xhtml#Page_167)
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 分支过程，与决策树结合使用, [166](c09.xhtml#Page_166)–[167](c09.xhtml#Page_167)
- en: brute force solution, using in TSP (traveling salesman problem), [107](c06.xhtml#Page_107)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 暴力破解法，TSP（旅行商问题）中使用, [107](c06.xhtml#Page_107)
- en: Bush, Vannevar, [6](c01.xhtml#Page_6)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 布什，瓦内瓦尔, [6](c01.xhtml#Page_6)
- en: '**C**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**C**'
- en: calculus, rules of, [38](c03.xhtml#Page_38)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 微积分，规则, [38](c03.xhtml#Page_38)
- en: centroid of triangle, finding, *[131](c07.xhtml#Page_131)*–[133](c07.xhtml#Page_133)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形的质心，求解, *[131](c07.xhtml#Page_131)*–[133](c07.xhtml#Page_133)
- en: Chapman, Seville, [6](c01.xhtml#Page_6)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 查普曼，塞维利亚, [6](c01.xhtml#Page_6)
- en: Chapman’s algorithm, [9](c01.xhtml#Page_9)–[11](c01.xhtml#Page_11). *See also*
    the outfielder problem
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 查普曼算法, [9](c01.xhtml#Page_9)–[11](c01.xhtml#Page_11)。*另见* 外场手问题
- en: chatbot, building, [203](c11.xhtml#Page_203)–[208](c11.xhtml#Page_208)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 聊天机器人，构建, [203](c11.xhtml#Page_203)–[208](c11.xhtml#Page_208)
- en: chess, solving eight queens puzzle, [209](c11.xhtml#Page_209)–[212](c11.xhtml#Page_212)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 国际象棋，解决八皇后问题, [209](c11.xhtml#Page_209)–[212](c11.xhtml#Page_212)
- en: Chesterton, G. K., [151](c08.xhtml#Page_151)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 切斯特顿，G.K., [151](c08.xhtml#Page_151)
- en: circles, drawing, [133](c07.xhtml#Page_133)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制圆形, [133](c07.xhtml#Page_133)
- en: circumcenters
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 外接圆心
- en: finding for triangles, [131](c07.xhtml#Page_131)–[133](c07.xhtml#Page_133)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 查找三角形，[131](c07.xhtml#Page_131)–[133](c07.xhtml#Page_133)
- en: plotting, [145](c07.xhtml#Page_145)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图，[145](c07.xhtml#Page_145)
- en: relationship to triangles, [134](c07.xhtml#Page_134)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 与三角形的关系，[134](c07.xhtml#Page_134)
- en: circumcircles
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 外接圆
- en: plotting, [145](c07.xhtml#Page_145)
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图，[145](c07.xhtml#Page_145)
- en: relationship to triangles, *[132](c07.xhtml#Page_132)*, [134](c07.xhtml#Page_134)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 与三角形的关系，*[132](c07.xhtml#Page_132)*，[134](c07.xhtml#Page_134)
- en: combinatorial explosion, using in TSP (traveling salesman problem), [108](c06.xhtml#Page_108)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 组合爆炸，在TSP（旅行商问题）中的应用，[108](c06.xhtml#Page_108)
- en: compound words, dealing with, [152](c08.xhtml#Page_152)–[153](c08.xhtml#Page_153).
    *See also* words
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 复合词的处理，[152](c08.xhtml#Page_152)–[153](c08.xhtml#Page_153)。*另见* 单词
- en: constructive methods of Euclid, *[20](c02.xhtml#Page_20)*
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得的构造方法，*[20](c02.xhtml#Page_20)*
- en: continued fractions. *See also* fractions to radicals
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 连分数。*另见* 从分数到有理数
- en: algorithm for generating, [82](c05.xhtml#Page_82)–[85](c05.xhtml#Page_85)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 生成算法，[82](c05.xhtml#Page_82)–[85](c05.xhtml#Page_85)
- en: compressing and communicating Phi, [79](c05.xhtml#Page_79)–*[80](c05.xhtml#Page_80)*
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩并传递Phi，[79](c05.xhtml#Page_79)–*[80](c05.xhtml#Page_80)*
- en: versus decimals, [86](c05.xhtml#Page_86)–[88](c05.xhtml#Page_88)
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 与小数的关系，[86](c05.xhtml#Page_86)–[88](c05.xhtml#Page_88)
- en: overview, [78](c05.xhtml#Page_78), *[80](c05.xhtml#Page_80)*–[82](c05.xhtml#Page_82)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 概述，[78](c05.xhtml#Page_78)，*[80](c05.xhtml#Page_80)*–[82](c05.xhtml#Page_82)
- en: to radicals, [88](c05.xhtml#Page_88)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 到有理数，[88](c05.xhtml#Page_88)
- en: continued square roots, *[88](c05.xhtml#Page_88)*
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 连续平方根，*[88](c05.xhtml#Page_88)*
- en: corpus, *[149](c08.xhtml#Page_149)*, [160](c08.xhtml#Page_160). *See also* imported
    corpus
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 语料库，*[149](c08.xhtml#Page_149)*，[160](c08.xhtml#Page_160)。*另见* 导入语料库
- en: cosine similarity, *[206](c11.xhtml#Page_206)*–[208](c11.xhtml#Page_208)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦相似度，*[206](c11.xhtml#Page_206)*–[208](c11.xhtml#Page_208)
- en: '`Counter()` function, using with n + 1-gram, [161](c08.xhtml#Page_161)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`Counter()`函数与n + 1-gram，[161](c08.xhtml#Page_161)
- en: counting steps, [57](c04.xhtml#Page_57)–[60](c04.xhtml#Page_60)
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 计步，[57](c04.xhtml#Page_57)–[60](c04.xhtml#Page_60)
- en: '**D**'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**D**'
- en: decimals to continued fractions, [86](c05.xhtml#Page_86)–[88](c05.xhtml#Page_88)
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 小数到连分数，[86](c05.xhtml#Page_86)–[88](c05.xhtml#Page_88)
- en: decision trees. *See also* AI (artificial intelligence) game trees; machine
    learning; random forests
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树。*另见* 人工智能（AI）游戏树；机器学习；随机森林
- en: adding depth to, [175](c09.xhtml#Page_175)–[177](c09.xhtml#Page_177)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 增加深度，[175](c09.xhtml#Page_175)–[177](c09.xhtml#Page_177)
- en: building, [167](c09.xhtml#Page_167)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 构建，[167](c09.xhtml#Page_167)
- en: calculating happiness levels, [170](c09.xhtml#Page_170)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 计算幸福感水平，[170](c09.xhtml#Page_170)
- en: choosing split points, [182](c09.xhtml#Page_182)
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 选择切分点，[182](c09.xhtml#Page_182)
- en: choosing splitting variables, [173](c09.xhtml#Page_173)–[175](c09.xhtml#Page_175),
    [182](c09.xhtml#Page_182)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 选择切分变量，[173](c09.xhtml#Page_173)–[175](c09.xhtml#Page_175)，[182](c09.xhtml#Page_182)
- en: downloading datasets, [168](c09.xhtml#Page_168)
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 下载数据集，[168](c09.xhtml#Page_168)
- en: evaluating, [178](c09.xhtml#Page_178)–[182](c09.xhtml#Page_182)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 评估，[178](c09.xhtml#Page_178)–[182](c09.xhtml#Page_182)
- en: looking at data, [168](c09.xhtml#Page_168)–[169](c09.xhtml#Page_169)
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 查看数据，[168](c09.xhtml#Page_168)–[169](c09.xhtml#Page_169)
- en: nodes, *[167](c09.xhtml#Page_167)*
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 节点，*[167](c09.xhtml#Page_167)*
- en: out-of-sample observations, *[180](c09.xhtml#Page_180)*
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 样本外观察，*[180](c09.xhtml#Page_180)*
- en: overfitting, [181](c09.xhtml#Page_181)–*[182](c09.xhtml#Page_182)*
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 过拟合，[181](c09.xhtml#Page_181)–*[182](c09.xhtml#Page_182)*
- en: overview, [165](c09.xhtml#Page_165)–[166](c09.xhtml#Page_166)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 概述，[165](c09.xhtml#Page_165)–[166](c09.xhtml#Page_166)
- en: prediction errors, [171](c09.xhtml#Page_171)–[172](c09.xhtml#Page_172)
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 预测误差，[171](c09.xhtml#Page_171)–[172](c09.xhtml#Page_172)
- en: problem of overfitting, [179](c09.xhtml#Page_179)–[181](c09.xhtml#Page_181)
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 过拟合问题，[179](c09.xhtml#Page_179)–[181](c09.xhtml#Page_181)
- en: pruning, [182](c09.xhtml#Page_182), *[199](c10.xhtml#Page_199)*
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 剪枝，[182](c09.xhtml#Page_182)，*[199](c10.xhtml#Page_199)*
- en: in-sample observations, *[180](c09.xhtml#Page_180)*
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 样本内观察，*[180](c09.xhtml#Page_180)*
- en: simplifying, [181](c09.xhtml#Page_181)–[182](c09.xhtml#Page_182)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 简化，[181](c09.xhtml#Page_181)–[182](c09.xhtml#Page_182)
- en: split points, *[171](c09.xhtml#Page_171)*
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 切分点，*[171](c09.xhtml#Page_171)*
- en: splitting data, [169](c09.xhtml#Page_169)–[173](c09.xhtml#Page_173)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 切分数据，[169](c09.xhtml#Page_169)–[173](c09.xhtml#Page_173)
- en: test sets, *[180](c09.xhtml#Page_180)*
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 测试集，*[180](c09.xhtml#Page_180)*
- en: training sets, *[180](c09.xhtml#Page_180)*
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 训练集，*[180](c09.xhtml#Page_180)*
- en: underfitting, *[181](c09.xhtml#Page_181)*–[182](c09.xhtml#Page_182)
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 欠拟合，*[181](c09.xhtml#Page_181)*–[182](c09.xhtml#Page_182)
- en: using nested lists with, [176](c09.xhtml#Page_176)
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 使用嵌套列表，[176](c09.xhtml#Page_176)
- en: Delaunay triangulation (DT). *See also* geometry
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 德劳内三角剖分（DT）。*另见* 几何
- en: generating, [136](c07.xhtml#Page_136)–[139](c07.xhtml#Page_139)
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 生成，[136](c07.xhtml#Page_136)–[139](c07.xhtml#Page_139)
- en: implementing, [139](c07.xhtml#Page_139)–[143](c07.xhtml#Page_143)
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 实现，[139](c07.xhtml#Page_139)–[143](c07.xhtml#Page_143)
- en: overview, [134](c07.xhtml#Page_134)–[136](c07.xhtml#Page_136)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 概览，[134](c07.xhtml#Page_134)–[136](c07.xhtml#Page_136)
- en: purpose of, *[136](c07.xhtml#Page_136)*
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 目的，* [136](c07.xhtml#Page_136)*
- en: returning from points, [142](c07.xhtml#Page_142)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 从点返回，[142](c07.xhtml#Page_142)
- en: to Voronoi, [143](c07.xhtml#Page_143)–[147](c07.xhtml#Page_147)
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 到 Voronoi，[143](c07.xhtml#Page_143)–[147](c07.xhtml#Page_147)
- en: derivative, calculating, *[38](c03.xhtml#Page_38)*
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 导数，计算，* [38](c03.xhtml#Page_38)*
- en: Devlin, Keith, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 德夫林，基思，[5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)
- en: dictionary object, creating for chatbot, [203](c11.xhtml#Page_203)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 字典对象，为聊天机器人创建，[203](c11.xhtml#Page_203)
- en: Diehard tests for randomness, *[95](c05.xhtml#Page_95)*–[97](c05.xhtml#Page_97)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 随机性检验中的 Diehard 测试，* [95](c05.xhtml#Page_95)*–[97](c05.xhtml#Page_97)
- en: divide and conquer algorithm, *[69](c04.xhtml#Page_69)*
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 分治算法，* [69](c04.xhtml#Page_69)*
- en: dogs, catching Frisbees, [6](c01.xhtml#Page_6)
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 狗，抓飞盘，[6](c01.xhtml#Page_6)
- en: dots and boxes game. *See also* games
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 点与框游戏。*另见* 游戏
- en: drawing board for, [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图板，[187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
- en: playing, *[186](c10.xhtml#Page_186)*–[187](c10.xhtml#Page_187)
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 玩耍，* [186](c10.xhtml#Page_186)*–[187](c10.xhtml#Page_187)
- en: scoring, [190](c10.xhtml#Page_190)
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 得分，[190](c10.xhtml#Page_190)
- en: doubling column, RPM (Russian peasant multiplication), [14](c02.xhtml#Page_14)–[20](c02.xhtml#Page_20)
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 倍增列，RPM（俄罗斯农民乘法），[14](c02.xhtml#Page_14)–[20](c02.xhtml#Page_20)
- en: '`down_left`, Kurushima’s algorithm, [28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`down_left`，Kurushima 算法，[28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29)'
- en: '`drawgame()` function, using with games, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`drawgame()` 函数，游戏中使用，[188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)'
- en: drawing circles, [133](c07.xhtml#Page_133)
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制圆形，[133](c07.xhtml#Page_133)
- en: '`drawlattice()` function, using with games, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`drawlattice()` 函数，游戏中使用，[188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)'
- en: DT (Delaunay triangulation). *See also* Bowyer-Watson algorithm; triangulation
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: DT（Delaunay 三角剖分）。*另见* Bowyer-Watson 算法；三角剖分
- en: generating, [136](c07.xhtml#Page_136)–[139](c07.xhtml#Page_139)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 生成，[136](c07.xhtml#Page_136)–[139](c07.xhtml#Page_139)
- en: implementing, [139](c07.xhtml#Page_139)–[143](c07.xhtml#Page_143)
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 实现，[139](c07.xhtml#Page_139)–[143](c07.xhtml#Page_143)
- en: overview, [134](c07.xhtml#Page_134)–[136](c07.xhtml#Page_136)
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 概览，[134](c07.xhtml#Page_134)–[136](c07.xhtml#Page_136)
- en: purpose of, *[136](c07.xhtml#Page_136)*
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 目的，* [136](c07.xhtml#Page_136)*
- en: returning from points, [142](c07.xhtml#Page_142)
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 从点返回，[142](c07.xhtml#Page_142)
- en: to Voronoi, [143](c07.xhtml#Page_143)–[147](c07.xhtml#Page_147)
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 到 Voronoi，[143](c07.xhtml#Page_143)–[147](c07.xhtml#Page_147)
- en: '**E**'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '**E**'
- en: education and lifetime income, [42](c03.xhtml#Page_42)–[45](c03.xhtml#Page_45)
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 教育与终生收入，[42](c03.xhtml#Page_42)–[45](c03.xhtml#Page_45)
- en: '*Elements*, [20](c02.xhtml#Page_20)'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '*元素*，[20](c02.xhtml#Page_20)'
- en: equilateral, geometric terminology, *[130](c07.xhtml#Page_130)*
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 等边，几何术语，* [130](c07.xhtml#Page_130)*
- en: ESS (European Social Survey), using with decision trees, [168](c09.xhtml#Page_168)
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: ESS（欧洲社会调查），与决策树一起使用，[168](c09.xhtml#Page_168)
- en: Euclid’s algorithm, *[20](c02.xhtml#Page_20)*–[22](c02.xhtml#Page_22), [84](c05.xhtml#Page_84)–[85](c05.xhtml#Page_85)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得算法，* [20](c02.xhtml#Page_20)*–[22](c02.xhtml#Page_22)，[84](c05.xhtml#Page_84)–[85](c05.xhtml#Page_85)
- en: exclusive OR operation, *[98](c05.xhtml#Page_98)*
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 异或操作，* [98](c05.xhtml#Page_98)*
- en: exponential function, *[60](c04.xhtml#Page_60)*–[61](c04.xhtml#Page_61)
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 指数函数，* [60](c04.xhtml#Page_60)*–[61](c04.xhtml#Page_61)
- en: '**F**'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**F**'
- en: '`False`, Kurushima’s algorithm, [27](c02.xhtml#Page_27)'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`False`，Kurushima 算法，[27](c02.xhtml#Page_27)'
- en: feedback shift register, [98](c05.xhtml#Page_98)
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈移位寄存器，[98](c05.xhtml#Page_98)
- en: file-sorting method, [52](c04.xhtml#Page_52)–[54](c04.xhtml#Page_54). *See also*
    sorted filing cabinets
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 文件排序方法，[52](c04.xhtml#Page_52)–[54](c04.xhtml#Page_54)。*另见* 排序文件柜
- en: '`fillsquare()` function, Kurushima’s algorithm, [31](c02.xhtml#Page_31)–[32](c02.xhtml#Page_32)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`fillsquare()` 函数，Kurushima 算法，[31](c02.xhtml#Page_31)–[32](c02.xhtml#Page_32)'
- en: finding words, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 查找单词，[151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
- en: '`finditer()` function, using with words, [152](c08.xhtml#Page_152)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '`finditer()` 函数，处理单词时使用，[152](c08.xhtml#Page_152)'
- en: '`findnearest()` function, using in TSP (traveling salesman problem), [109](c06.xhtml#Page_109)'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`findnearest()` 函数，在 TSP（旅行商问题）中使用，[109](c06.xhtml#Page_109)'
- en: '`float(''nan'')` function, using with Kurushima’s algorithm, [24](c02.xhtml#Page_24)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`float(''nan'')` 函数，与 Kurushima 算法一起使用，[24](c02.xhtml#Page_24)'
- en: '`floor()` function, using for binary search, [73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`floor()` 函数，用于二分查找，[73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)'
- en: '`for` loop, using with words and spaces, [157](c08.xhtml#Page_157)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`for` 循环，与单词和空格一起使用，[157](c08.xhtml#Page_157)'
- en: fractions to radicals, [88](c05.xhtml#Page_88). *See* *also* continued fractions
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 分数到根式，[88](c05.xhtml#Page_88)。*参见* *继续分数*
- en: Franklin, Benjamin, [126](c07.xhtml#Page_126)
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 富兰克林，本杰明，[126](c07.xhtml#Page_126)
- en: Frisbee, trajectory vectors, [6](c01.xhtml#Page_6)
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 飞盘，轨迹向量，[6](c01.xhtml#Page_6)
- en: functions
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 函数
- en: inverting, [75](c04.xhtml#Page_75)
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 反转，[75](c04.xhtml#Page_75)
- en: recursion, *[22](c02.xhtml#Page_22)*
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 递归，*[22](c02.xhtml#Page_22)*
- en: '**G**'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**G**'
- en: Galilean model, [2](c01.xhtml#Page_2)–[5](c01.xhtml#Page_5)
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 伽利略模型，[2](c01.xhtml#Page_2)–[5](c01.xhtml#Page_5)
- en: game trees. *See also* AI (artificial intelligence); decision trees; random
    forests
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏树。*参见* AI（人工智能）；决策树；随机森林
- en: building, [192](c10.xhtml#Page_192)–[195](c10.xhtml#Page_195)
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 构建，[192](c10.xhtml#Page_192)–[195](c10.xhtml#Page_195)
- en: and winning games, [190](c10.xhtml#Page_190)–[192](c10.xhtml#Page_192)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以及赢得游戏，[190](c10.xhtml#Page_190)–[192](c10.xhtml#Page_192)
- en: games. *See also* dots and boxes game
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏。*参见* 点和框游戏
- en: choosing moves, [195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 选择移动，[195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
- en: minimax algorithm, *[195](c10.xhtml#Page_195)*–[198](c10.xhtml#Page_198)
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 极小极大算法，*[195](c10.xhtml#Page_195)*–[198](c10.xhtml#Page_198)
- en: representing, [188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 表示，[188](c10.xhtml#Page_188)–[189](c10.xhtml#Page_189)
- en: scoring, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 评分，[189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
- en: winning, [195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 胜利，[195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
- en: Gaussian normal curve, [96](c05.xhtml#Page_96)
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 高斯正态曲线，[96](c05.xhtml#Page_96)
- en: '`gen_delaunay()` function, passing *x* and *y* values to, [143](c07.xhtml#Page_143)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`gen_delaunay()` 函数，传递 *x* 和 *y* 值，[143](c07.xhtml#Page_143)'
- en: '`generate_tree()` function, using with games, [194](c10.xhtml#Page_194)'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_tree()` 函数，使用于游戏，[194](c10.xhtml#Page_194)'
- en: '`genlines` function, using with triangles, [129](c07.xhtml#Page_129)'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`genlines` 函数，使用三角形，[129](c07.xhtml#Page_129)'
- en: '`genlines` function, TSP (traveling salesman problem), [104](c06.xhtml#Page_104)'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`genlines` 函数，TSP（旅行商问题），[104](c06.xhtml#Page_104)'
- en: geometry. *See also* DT (Delaunay triangulation)
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 几何。*参见* DT（德劳内三角剖分）
- en: postmaster problem, [126](c07.xhtml#Page_126)–[128](c07.xhtml#Page_128)
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 邮差问题，[126](c07.xhtml#Page_126)–[128](c07.xhtml#Page_128)
- en: representing points, [128](c07.xhtml#Page_128)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 表示点，[128](c07.xhtml#Page_128)
- en: tangent of angle, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 角度的正切，[8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
- en: terminology, [130](c07.xhtml#Page_130)
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 术语，[130](c07.xhtml#Page_130)
- en: triangles, [128](c07.xhtml#Page_128)–[134](c07.xhtml#Page_134)
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形，[128](c07.xhtml#Page_128)–[134](c07.xhtml#Page_134)
- en: '`get_number()` function, using with continued fractions, [85](c05.xhtml#Page_85)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_number()` 函数，使用继续分数，[85](c05.xhtml#Page_85)'
- en: '`get_prediction()` function, using with decision trees, [178](c09.xhtml#Page_178)–[179](c09.xhtml#Page_179)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_prediction()` 函数，使用决策树，[178](c09.xhtml#Page_178)–[179](c09.xhtml#Page_179)'
- en: '`get_split()` function, using with decision trees, [174](c09.xhtml#Page_174)–[176](c09.xhtml#Page_176)'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_split()` 函数，使用决策树，[174](c09.xhtml#Page_174)–[176](c09.xhtml#Page_176)'
- en: '`get_splitpoint()` function, using with decision trees, [174](c09.xhtml#Page_174)'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_splitpoint()` 函数，使用决策树，[174](c09.xhtml#Page_174)'
- en: '`git bisect` software, using for binary search, [75](c04.xhtml#Page_75)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`git bisect` 软件，二分查找使用，[75](c04.xhtml#Page_75)'
- en: global variables, defining for simulated annealing, [122](c06.xhtml#Page_122)
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 全局变量，用于模拟退火的定义，[122](c06.xhtml#Page_122)
- en: golden ratio, *[78](c05.xhtml#Page_78)*–[79](c05.xhtml#Page_79)
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金比例，*[78](c05.xhtml#Page_78)*–[79](c05.xhtml#Page_79)
- en: gradient ascent, *[35](c03.xhtml#Page_35)*
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 梯度上升，*[35](c03.xhtml#Page_35)*
- en: climbing income hill, [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 攀登收入山，[44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
- en: implementing, [40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41)
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 实现，[40](c03.xhtml#Page_40)–[41](c03.xhtml#Page_41)
- en: local extrema, [42](c03.xhtml#Page_42)–[44](c03.xhtml#Page_44)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 局部极值，[42](c03.xhtml#Page_42)–[44](c03.xhtml#Page_44)
- en: objections, [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 异议，[41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
- en: using, [49](c03.xhtml#Page_49)
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 使用，[49](c03.xhtml#Page_49)
- en: gradient descent, *[35](c03.xhtml#Page_35)*, *[47](c03.xhtml#Page_47)*
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 梯度下降，*[35](c03.xhtml#Page_35)*，*[47](c03.xhtml#Page_47)*
- en: '*Gravity’s Rainbow*, [3](c01.xhtml#Page_3)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '*《重力的彩虹》*，[3](c01.xhtml#Page_3)'
- en: greedy algorithms, TSP (traveling salesman problem), *[112](c06.xhtml#Page_112)*–[113](c06.xhtml#Page_113)
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 贪心算法，TSP（旅行商问题），*[112](c06.xhtml#Page_112)*–[113](c06.xhtml#Page_113)
- en: guided search, using in TSP (traveling salesman problem), *[112](c06.xhtml#Page_112)*
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 引导搜索，在TSP（旅行商问题）中使用，*[112](c06.xhtml#Page_112)*
- en: '**H**'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '**H**'
- en: '`half_double dataframe`, RPM (Russian peasant multiplication), [18](c02.xhtml#Page_18)'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`half_double dataframe`，RPM（俄罗斯农民乘法），[18](c02.xhtml#Page_18)'
- en: halving column, RPM (Russian peasant multiplication), [14](c02.xhtml#Page_14)–[20](c02.xhtml#Page_20)
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 折半列，俄罗斯农民乘法，[14](c02.xhtml#Page_14)–[20](c02.xhtml#Page_20)
- en: happiness levels, calculating with decision trees, [170](c09.xhtml#Page_170)
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 幸福水平，用决策树计算，[170](c09.xhtml#Page_170)
- en: hill climbing, [47](c03.xhtml#Page_47)–[48](c03.xhtml#Page_48)
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 爬山算法，[47](c03.xhtml#Page_47)–[48](c03.xhtml#Page_48)
- en: '`howfull` argument, Kurushima’s algorithm, [31](c02.xhtml#Page_31)–[32](c02.xhtml#Page_32)'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`howfull` 参数，Kurushima 算法，[31](c02.xhtml#Page_31)–[32](c02.xhtml#Page_32)'
- en: '**I**'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '**I**'
- en: '`if` statement'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '`if` 语句'
- en: inserting `pop()` function into, [66](c04.xhtml#Page_66)–[67](c04.xhtml#Page_67)
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 插入 `pop()` 函数，[66](c04.xhtml#Page_66)–[67](c04.xhtml#Page_67)
- en: using with words and spaces, [151](c08.xhtml#Page_151)
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 使用单词和空格，[151](c08.xhtml#Page_151)
- en: imported corpus, using to check for valid words, [154](c08.xhtml#Page_154)–[155](c08.xhtml#Page_155).
    *See also* corpus
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 导入语料库，用于检查有效单词，[154](c08.xhtml#Page_154)–[155](c08.xhtml#Page_155)。*参见* 语料库
- en: inner physicist theory, *[5](c01.xhtml#Page_5)*–[6](c01.xhtml#Page_6)
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 内部物理学理论，* [5](c01.xhtml#Page_5)*–[6](c01.xhtml#Page_6)
- en: in-sample observations, using with decision trees, *[180](c09.xhtml#Page_180)*
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 样本内观测值，使用于决策树，* [180](c09.xhtml#Page_180)*
- en: '`insert()` function, using with bits, [98](c05.xhtml#Page_98)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`insert()` 函数，使用于位，[98](c05.xhtml#Page_98)'
- en: insertion sort, [52](c04.xhtml#Page_52)–[55](c04.xhtml#Page_55)
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 插入排序，[52](c04.xhtml#Page_52)–[55](c04.xhtml#Page_55)
- en: comparing to exponential function, [61](c04.xhtml#Page_61)
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 与指数函数的比较，[61](c04.xhtml#Page_61)
- en: counting steps in, [63](c04.xhtml#Page_63)–[64](c04.xhtml#Page_64)
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 步数计数，[63](c04.xhtml#Page_63)–[64](c04.xhtml#Page_64)
- en: step counter, [58](c04.xhtml#Page_58)
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 步数计数器，[58](c04.xhtml#Page_58)
- en: installing, `matplotlib` module, [3](c01.xhtml#Page_3)
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 安装，`matplotlib` 模块，[3](c01.xhtml#Page_3)
- en: integers, dividing to get quotient, [84](c05.xhtml#Page_84)
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 整数，除法得到商，[84](c05.xhtml#Page_84)
- en: '`inverse_sin(0.9)` function, using for binary search, [75](c04.xhtml#Page_75)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`inverse_sin(0.9)` 函数，用于二分查找，[75](c04.xhtml#Page_75)'
- en: inverting functions, [75](c04.xhtml#Page_75)
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 反转函数，[75](c04.xhtml#Page_75)
- en: irrational number, *[79](c05.xhtml#Page_79)*
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 无理数，* [79](c05.xhtml#Page_79)*
- en: '**J**'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '**J**'
- en: Japanese magic squares. *See also* magic squares; squares
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 日本魔方。*参见* 魔方；正方形
- en: Kurushima’s algorithm in Python, [24](c02.xhtml#Page_24)–[30](c02.xhtml#Page_30)
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中的 Kurushima 算法，[24](c02.xhtml#Page_24)–[30](c02.xhtml#Page_30)
- en: Luo Shu square in Python, [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中的洛书方阵，[22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
- en: '**K**'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '**K**'
- en: Kepler, Johannes, [78](c05.xhtml#Page_78)
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 开普勒，约翰内斯，[78](c05.xhtml#Page_78)
- en: k-means machine-learning method, [56](c04.xhtml#Page_56)
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: k-means 机器学习方法，[56](c04.xhtml#Page_56)
- en: k-NN machine-learning method, [56](c04.xhtml#Page_56)
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: k-NN 机器学习方法，[56](c04.xhtml#Page_56)
- en: Kurushima’s algorithm
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: Kurushima 算法
- en: function, [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 函数，[30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
- en: rules, [25](c02.xhtml#Page_25)–[28](c02.xhtml#Page_28)
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 规则，[25](c02.xhtml#Page_25)–[28](c02.xhtml#Page_28)
- en: '**L**'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '**L**'
- en: la pipopipette, *[186](c10.xhtml#Page_186)*–[187](c10.xhtml#Page_187)
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: la pipopipette，* [186](c10.xhtml#Page_186)*–[187](c10.xhtml#Page_187)
- en: language algorithms
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 语言算法
- en: difficulty, [150](c08.xhtml#Page_150)
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 难度，[150](c08.xhtml#Page_150)
- en: phrase completion, [159](c08.xhtml#Page_159)–[163](c08.xhtml#Page_163)
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 短语完成，[159](c08.xhtml#Page_159)–[163](c08.xhtml#Page_163)
- en: space insertion, [150](c08.xhtml#Page_150)–[158](c08.xhtml#Page_158)
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 空格插入，[150](c08.xhtml#Page_150)–[158](c08.xhtml#Page_158)
- en: lattice, using with la pipopipette, *[186](c10.xhtml#Page_186)*–[187](c10.xhtml#Page_187)
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 格子，使用 la pipopipette，[186](c10.xhtml#Page_186)–[187](c10.xhtml#Page_187)
- en: LCGs (linear congruential generators), [92](c05.xhtml#Page_92)–[93](c05.xhtml#Page_93)
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: LCGs（线性同余生成器），[92](c05.xhtml#Page_92)–[93](c05.xhtml#Page_93)
- en: '`left` and `right` variables, Python, [66](c04.xhtml#Page_66)'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '`left` 和 `right` 变量，Python，[66](c04.xhtml#Page_66)'
- en: Leibniz, Gottfried Wilhelm, [130](c07.xhtml#Page_130)–[131](c07.xhtml#Page_131)
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 莱布尼茨，戈特弗里德·威廉，[130](c07.xhtml#Page_130)–[131](c07.xhtml#Page_131)
- en: LFSRs (linear feedback shift registers), [97](c05.xhtml#Page_97)–[99](c05.xhtml#Page_99)
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: LFSRs（线性反馈移位寄存器），[97](c05.xhtml#Page_97)–[99](c05.xhtml#Page_99)
- en: lifetime income and education, [42](c03.xhtml#Page_42)–[45](c03.xhtml#Page_45)
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 终生收入与教育，[42](c03.xhtml#Page_42)–[45](c03.xhtml#Page_45)
- en: lines of sight, plotting for thrown ball, [7](c01.xhtml#Page_7)–[8](c01.xhtml#Page_8)
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 视线，抛物体的轨迹图，[7](c01.xhtml#Page_7)–[8](c01.xhtml#Page_8)
- en: list comprehensions, *[149](c08.xhtml#Page_149)*, [156](c08.xhtml#Page_156)
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 列表推导式，* [149](c08.xhtml#Page_149)*，[156](c08.xhtml#Page_156)
- en: list indexing syntax, Python, [68](c04.xhtml#Page_68)–[69](c04.xhtml#Page_69)
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 列表索引语法，Python，[68](c04.xhtml#Page_68)–[69](c04.xhtml#Page_69)
- en: lists, sorting, [153](c08.xhtml#Page_153)
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 列表，排序，[153](c08.xhtml#Page_153)
- en: '`loc` functionality, RPM (Russian peasant multiplication), [19](c02.xhtml#Page_19)'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`loc` 功能，RPM（俄罗斯农民乘法），[19](c02.xhtml#Page_19)'
- en: local extrema, problem, [42](c03.xhtml#Page_42)–[45](c03.xhtml#Page_45)
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 局部极值，问题， [42](c03.xhtml#Page_42)–[45](c03.xhtml#Page_45)
- en: loops, RPM (Russian peasant multiplication), [18](c02.xhtml#Page_18)
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 循环，俄罗斯农民乘法， [18](c02.xhtml#Page_18)
- en: lower bound, defining for binary search, [73](c04.xhtml#Page_73)
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 下界，定义二分查找， [73](c04.xhtml#Page_73)
- en: '`lower()` method, using with chatbot, [203](c11.xhtml#Page_203)'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`lower()` 方法，和聊天机器人一起使用， [203](c11.xhtml#Page_203)'
- en: Lucas, Édouard, [186](c10.xhtml#Page_186)
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 吕卡斯，埃杜阿尔， [186](c10.xhtml#Page_186)
- en: Luo Shu square, creating in Python, [22](c02.xhtml#Page_22)–*[23](c02.xhtml#Page_23)*
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 洛书方阵，在 Python 中创建， [22](c02.xhtml#Page_22)–*[23](c02.xhtml#Page_23)*
- en: '**M**'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '**M**'
- en: machine learning. *See also* decision trees
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习。 *另见* 决策树
- en: overview, [165](c09.xhtml#Page_165)
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 概述， [165](c09.xhtml#Page_165)
- en: random forests, [182](c09.xhtml#Page_182)–[183](c09.xhtml#Page_183)
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林， [182](c09.xhtml#Page_182)–[183](c09.xhtml#Page_183)
- en: machine-learning methods, k-means clustering and k-NN, [56](c04.xhtml#Page_56)
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习方法，k-means 聚类和 k-NN， [56](c04.xhtml#Page_56)
- en: magic eye, [147](c07.xhtml#Page_147)
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 魔眼， [147](c07.xhtml#Page_147)
- en: magic squares, *[22](c02.xhtml#Page_22)*–[23](c02.xhtml#Page_23). *See also*
    Japanese magic squares; squares
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 魔方阵， *[22](c02.xhtml#Page_22)*–[23](c02.xhtml#Page_23)。 *另见* 日本魔方阵；方阵
- en: arguments, [31](c02.xhtml#Page_31)–[34](c02.xhtml#Page_34)
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 参数， [31](c02.xhtml#Page_31)–[34](c02.xhtml#Page_34)
- en: Kurushima’s algorithm, [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 黑石算法， [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
- en: of odd dimension, [24](c02.xhtml#Page_24)
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 奇数维度， [24](c02.xhtml#Page_24)
- en: patterns, [34](c02.xhtml#Page_34)
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 模式， [34](c02.xhtml#Page_34)
- en: “walk” through, [28](c02.xhtml#Page_28)
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: “走过”过程， [28](c02.xhtml#Page_28)
- en: '*The Math Instinct: Why You’re a Mathematical Genius (Along with Lobsters,
    Birds, Cats, and Dogs)*, [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '*The Math Instinct: Why You’re a Mathematical Genius (Along with Lobsters,
    Birds, Cats, and Dogs)*， [5](c01.xhtml#Page_5)–[6](c01.xhtml#Page_6)'
- en: '*math* library, Python, [73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '*math* 库，Python， [73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)'
- en: mathematical physics, interpretation of, [92](c05.xhtml#Page_92)
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 数学物理，解释， [92](c05.xhtml#Page_92)
- en: '`math.floor()`, RPM (Russian peasant multiplication), [18](c02.xhtml#Page_18)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`math.floor()`，俄罗斯农民乘法， [18](c02.xhtml#Page_18)'
- en: '`matplotlib` module'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 模块'
- en: setting tax rates, [36](c03.xhtml#Page_36)–[37](c03.xhtml#Page_37)
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 设置税率， [36](c03.xhtml#Page_36)–[37](c03.xhtml#Page_37)
- en: using with dots and boxes game, [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 和点与框游戏一起使用， [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)
- en: '`matplotlib` module, installing, [3](c01.xhtml#Page_3)'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib` 模块，安装， [3](c01.xhtml#Page_3)'
- en: '`max()` function, using with `numpy`, [162](c08.xhtml#Page_162)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`max()` 函数，和 `numpy` 一起使用， [162](c08.xhtml#Page_162)'
- en: maxima and minima, *[35](c03.xhtml#Page_35)*
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 最大值和最小值， *[35](c03.xhtml#Page_35)*
- en: maximization and minimization, [45](c03.xhtml#Page_45)–[48](c03.xhtml#Page_48)
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 最大化与最小化， [45](c03.xhtml#Page_45)–[48](c03.xhtml#Page_48)
- en: maximum
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 最大值
- en: and asymptote approach, [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40)
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 和渐近线方法， [39](c03.xhtml#Page_39)–[40](c03.xhtml#Page_40)
- en: education and lifetime income, [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 教育与终身收入， [44](c03.xhtml#Page_44)–[45](c03.xhtml#Page_45)
- en: and minimum of step values, [60](c04.xhtml#Page_60)–[61](c04.xhtml#Page_61)
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 步长值的最小值， [60](c04.xhtml#Page_60)–[61](c04.xhtml#Page_61)
- en: revenue, [39](c03.xhtml#Page_39)
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 收入， [39](c03.xhtml#Page_39)
- en: solving first-order conditions, [42](c03.xhtml#Page_42)
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 求解一阶条件， [42](c03.xhtml#Page_42)
- en: taxation/revenue curve, [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 税收/收入曲线， [41](c03.xhtml#Page_41)–[42](c03.xhtml#Page_42)
- en: '`maxitin` argument, adding, [122](c06.xhtml#Page_122)'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`maxitin` 参数，添加， [122](c06.xhtml#Page_122)'
- en: merging to sorting, *[65](c04.xhtml#Page_65)*, [68](c04.xhtml#Page_68)–[70](c04.xhtml#Page_70).
    *See also* sorting
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 合并排序， *[65](c04.xhtml#Page_65)*， [68](c04.xhtml#Page_68)–[70](c04.xhtml#Page_70)。
    *另见* 排序
- en: Mersenne Twister PRNG, [99](c05.xhtml#Page_99)
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 梅森旋转 PRNG， [99](c05.xhtml#Page_99)
- en: metaheuristics, metaphor based, [117](c06.xhtml#Page_117)–[118](c06.xhtml#Page_118)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 元启发式，基于隐喻， [117](c06.xhtml#Page_117)–[118](c06.xhtml#Page_118)
- en: Mikami, Yoshio, [22](c02.xhtml#Page_22)
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 三上义男， [22](c02.xhtml#Page_22)
- en: Millennium Prize Problems, [212](c11.xhtml#Page_212)
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 千年奖问题， [212](c11.xhtml#Page_212)
- en: minimax algorithm
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: minimax 算法
- en: using to make decisions, [199](c10.xhtml#Page_199)
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 用于做决策， [199](c10.xhtml#Page_199)
- en: using to win games, *[195](c10.xhtml#Page_195)*–[198](c10.xhtml#Page_198)
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 用于游戏获胜， *[195](c10.xhtml#Page_195)*–[198](c10.xhtml#Page_198)
- en: '`minimax()` function, calling, [198](c10.xhtml#Page_198)'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '`minimax()` 函数，调用， [198](c10.xhtml#Page_198)'
- en: modulo (`%`) operator
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 模运算符（`%`）
- en: Euclid’s algorithm, [21](c02.xhtml#Page_21)
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得算法， [21](c02.xhtml#Page_21)
- en: Kurushima’s algorithm, [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 黑石算法， [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28)
- en: RPM (Russian peasant multiplication), [19](c02.xhtml#Page_19)
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 俄罗斯农民乘法， [19](c02.xhtml#Page_19)
- en: rules, [32](c02.xhtml#Page_32)
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 规则，[32](c02.xhtml#Page_32)
- en: Monte Carlo methods, *[199](c10.xhtml#Page_199)*
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 蒙特卡罗方法，*[199](c10.xhtml#Page_199)*
- en: mystery number and continued fraction, [81](c05.xhtml#Page_81)
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 神秘数和连分数，[81](c05.xhtml#Page_81)
- en: '**N**'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '**N**'
- en: '*n* + 1-grams, finding, [161](c08.xhtml#Page_161)–[163](c08.xhtml#Page_163)'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '*n* + 1-gram，查找，[161](c08.xhtml#Page_161)–[163](c08.xhtml#Page_163)'
- en: '*n* queens completion problem, solving for chess, *[210](c11.xhtml#Page_210)*–[211](c11.xhtml#Page_211)'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '*n* 皇后问题，求解国际象棋，[210](c11.xhtml#Page_210)*–[211](c11.xhtml#Page_211)'
- en: '`nan` entries, filling in, [25](c02.xhtml#Page_25)–[28](c02.xhtml#Page_28),
    [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '`nan` 条目，填充，[25](c02.xhtml#Page_25)–[28](c02.xhtml#Page_28)，[30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)'
- en: Navier-Stokes equations, [5](c01.xhtml#Page_5)
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 纳维尔-斯托克斯方程，[5](c01.xhtml#Page_5)
- en: nearest neighbor algorithm, TSP (traveling salesman problem), *[108](c06.xhtml#Page_108)*–[110](c06.xhtml#Page_110)
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 最近邻算法，TSP（旅行推销员问题），*[108](c06.xhtml#Page_108)*–[110](c06.xhtml#Page_110)
- en: nested lists, using with decision trees, [176](c09.xhtml#Page_176)
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套列表，在决策树中使用，[176](c09.xhtml#Page_176)
- en: nested radicals, *[88](c05.xhtml#Page_88)*
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌套根号，*[88](c05.xhtml#Page_88)*
- en: '`next_random()` function, [93](c05.xhtml#Page_93)'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '`next_random()` 函数，[93](c05.xhtml#Page_93)'
- en: n-gram, tokenizing and getting, *[159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: n-gram，分词和获取，*[159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
- en: Norvig, Peter, [160](c08.xhtml#Page_160)
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 诺维格，彼得，[160](c08.xhtml#Page_160)
- en: NP (nondeterministic polynomial) complexity class, *[212](c11.xhtml#Page_212)*–[213](c11.xhtml#Page_213)
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: NP（非确定性多项式）复杂度类，*[212](c11.xhtml#Page_212)*–[213](c11.xhtml#Page_213)
- en: numbered file, inserting, [54](c04.xhtml#Page_54)
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 编号文件，插入，[54](c04.xhtml#Page_54)
- en: '`numpy` module'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '`numpy` 模块'
- en: importing, [60](c04.xhtml#Page_60)
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 导入，[60](c04.xhtml#Page_60)
- en: using to select phrases, [162](c08.xhtml#Page_162)
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 用于选择短语，[162](c08.xhtml#Page_162)
- en: using with decision trees, [180](c09.xhtml#Page_180)–[181](c09.xhtml#Page_181)
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 在决策树中使用，[180](c09.xhtml#Page_180)–[181](c09.xhtml#Page_181)
- en: '**O**'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '**O**'
- en: optimization, [101](c06.xhtml#Page_101)–[102](c06.xhtml#Page_102). *See also*
    simulated annealing; TSP (traveling salesman problem)
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 优化，[101](c06.xhtml#Page_101)–[102](c06.xhtml#Page_102)。*另见* 模拟退火；TSP（旅行推销员问题）
- en: the outfielder problem, *[1](c01.xhtml#Page_1)*–[2](c01.xhtml#Page_2), [6](c01.xhtml#Page_6)–[9](c01.xhtml#Page_9).
    *See also* ball; Chapman’s algorithm
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 外场问题，*[1](c01.xhtml#Page_1)*–[2](c01.xhtml#Page_2)，[6](c01.xhtml#Page_6)–[9](c01.xhtml#Page_9)。*另见*
    球；查普曼算法
- en: out-of-sample observations, using with decision trees, *[180](c09.xhtml#Page_180)*
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 样本外观测值，在决策树中使用，*[180](c09.xhtml#Page_180)*
- en: overfitting decision trees, [181](c09.xhtml#Page_181)–*[182](c09.xhtml#Page_182)*
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 过拟合决策树，[181](c09.xhtml#Page_181)–*[182](c09.xhtml#Page_182)*
- en: overlapping sums test, *[95](c05.xhtml#Page_95)*–[96](c05.xhtml#Page_96)
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 重叠和的测试，*[95](c05.xhtml#Page_95)*–[96](c05.xhtml#Page_96)
- en: '**P**'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '**P**'
- en: P complexity class of problems, *[212](c11.xhtml#Page_212)*–[213](c11.xhtml#Page_213)
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: P 复杂度类问题，*[212](c11.xhtml#Page_212)*–[213](c11.xhtml#Page_213)
- en: '`pandas` module, using in Python, [19](c02.xhtml#Page_19)'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas` 模块，在 Python 中使用，[19](c02.xhtml#Page_19)'
- en: percentile, using with decision trees, [172](c09.xhtml#Page_172)–[173](c09.xhtml#Page_173)
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 百分位，在决策树中使用，[172](c09.xhtml#Page_172)–[173](c09.xhtml#Page_173)
- en: perpendicular, geometric terminology, *[130](c07.xhtml#Page_130)*
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 垂直，几何术语，*[130](c07.xhtml#Page_130)*
- en: '`perturb()` function'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`perturb()` 函数'
- en: modifying, [116](c06.xhtml#Page_116)
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 修改，[116](c06.xhtml#Page_116)
- en: showing end of, [121](c06.xhtml#Page_121)
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 显示结束，[121](c06.xhtml#Page_121)
- en: updating, [119](c06.xhtml#Page_119)
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 更新，[119](c06.xhtml#Page_119)
- en: using for simulated annealing, [123](c06.xhtml#Page_123)
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 用于模拟退火，[123](c06.xhtml#Page_123)
- en: using in TSP (traveling salesman problem), [111](c06.xhtml#Page_111)–[112](c06.xhtml#Page_112)
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 在 TSP（旅行推销员问题）中使用，[111](c06.xhtml#Page_111)–[112](c06.xhtml#Page_112)
- en: perturb search algorithm, *[112](c06.xhtml#Page_112)*. *See also* simulated
    annealing
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 扰动搜索算法，*[112](c06.xhtml#Page_112)*。*另见* 模拟退火
- en: phi
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: phi
- en: compressing and communicating, [79](c05.xhtml#Page_79)–[80](c05.xhtml#Page_80)
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩和通信，[79](c05.xhtml#Page_79)–[80](c05.xhtml#Page_80)
- en: and golden ratio, *[78](c05.xhtml#Page_78)*
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 黄金比例，*[78](c05.xhtml#Page_78)*
- en: phrase completion, [159](c08.xhtml#Page_159)–[163](c08.xhtml#Page_163)
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 短语完成，[159](c08.xhtml#Page_159)–[163](c08.xhtml#Page_163)
- en: '`plot()` function, using with dots and boxes game, [187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 函数，在点和框游戏中使用，[187](c10.xhtml#Page_187)–[188](c10.xhtml#Page_188)'
- en: '`plot_triangle()` function'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot_triangle()` 函数'
- en: defining, [129](c07.xhtml#Page_129)
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 定义，[129](c07.xhtml#Page_129)
- en: improving, [133](c07.xhtml#Page_133)–[134](c07.xhtml#Page_134)
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 改进，[133](c07.xhtml#Page_133)–[134](c07.xhtml#Page_134)
- en: '`plotitinerary()` function, using in TSP (traveling salesman problem), [105](c06.xhtml#Page_105)'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '`plotitinerary()` 函数，在 TSP（旅行推销员问题）中使用，[105](c06.xhtml#Page_105)'
- en: plotting capabilities, Galilean model, [3](c01.xhtml#Page_3)
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: '*.png* file, saving to, [129](c07.xhtml#Page_129)–[130](c07.xhtml#Page_130)'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: points, representing, [128](c07.xhtml#Page_128)–[130](c07.xhtml#Page_130)
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '`points_to_triangle()` function'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: defining, [128](c07.xhtml#Page_128)
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: using in triangulation, [134](c07.xhtml#Page_134)
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
- en: polynomial, Galilean model, [3](c01.xhtml#Page_3)
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
- en: polynomial time, verifying solutions in, [212](c11.xhtml#Page_212)
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: '`pop()` method'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: inserting into `if` statements, [66](c04.xhtml#Page_66)–[67](c04.xhtml#Page_67)
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
- en: using with bits, [98](c05.xhtml#Page_98)
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: '`pop()` method, sorting via insertion, [55](c04.xhtml#Page_55)'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: postmaster problem, [126](c07.xhtml#Page_126)–[128](c07.xhtml#Page_128)
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
- en: potential words. *See also* words
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: checking for, [153](c08.xhtml#Page_153)–[154](c08.xhtml#Page_154)
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
- en: finding halves of, [156](c08.xhtml#Page_156)–[158](c08.xhtml#Page_158)
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
- en: prediction errors, decision trees, [171](c09.xhtml#Page_171)–[172](c09.xhtml#Page_172)
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
- en: '`print(cities)` function, TSP (traveling salesman problem), [103](c06.xhtml#Page_103)'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
- en: '`print(lines)` function, TSP (traveling salesman problem), [104](c06.xhtml#Page_104)'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
- en: '`print(square)` function, using with Kurushima’s algorithm, [24](c02.xhtml#Page_24)–[25](c02.xhtml#Page_25)'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
- en: PRNGs (pseudorandom number generators), *[92](c05.xhtml#Page_92)*–[99](c05.xhtml#Page_99)
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
- en: problems, solving with algorithms, [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11)
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
- en: Project Gutenberg, [160](c08.xhtml#Page_160)
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
- en: pruning decision trees, [182](c09.xhtml#Page_182), *[199](c10.xhtml#Page_199)*
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
- en: pseudorandomness, *[92](c05.xhtml#Page_92)*–[93](c05.xhtml#Page_93)
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
- en: Pynchon, Thomas, [3](c01.xhtml#Page_3)
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
- en: Pythagorean theorem
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
- en: using, [105](c06.xhtml#Page_105)
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
- en: using with triangles, [130](c07.xhtml#Page_130)
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
- en: using in TSP (traveling salesman problem), [108](c06.xhtml#Page_108)–[109](c06.xhtml#Page_109)
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
- en: Python
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
- en: creating Luo Shu square, [22](c02.xhtml#Page_22)–[23](c02.xhtml#Page_23)
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
- en: Euclid’s algorithm, [20](c02.xhtml#Page_20)–[22](c02.xhtml#Page_22)
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
- en: feedback shift register, [98](c05.xhtml#Page_98)
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
- en: Galilean model, [3](c01.xhtml#Page_3)
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
- en: implementing RPM (Russian peasant multiplication), [18](c02.xhtml#Page_18)–[20](c02.xhtml#Page_20)
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
- en: Kurushima’s algorithm, [24](c02.xhtml#Page_24)
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
- en: '`left` and `right` variables, [66](c04.xhtml#Page_66)'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
- en: list indexing syntax, [68](c04.xhtml#Page_68)
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
- en: '*math* library, [73](c04.xhtml#Page_73)–[74](c04.xhtml#Page_74)'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
- en: ordered pairs in, [152](c08.xhtml#Page_152)
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
- en: overlapping sums test, *[95](c05.xhtml#Page_95)*–[96](c05.xhtml#Page_96)
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
- en: '`pandas` module, [19](c02.xhtml#Page_19)'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
- en: '`random` module, [58](c04.xhtml#Page_58)–[59](c04.xhtml#Page_59)'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
- en: '`random.choice()` function, [28](c02.xhtml#Page_28)'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
- en: rules for Kurushima’s algorithm, [27](c02.xhtml#Page_27)–[28](c02.xhtml#Page_28),
    [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
- en: square roots in, [90](c05.xhtml#Page_90)–[91](c05.xhtml#Page_91)
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
- en: '`timeit` module, [57](c04.xhtml#Page_57)'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
- en: using tuples with words and spaces, [152](c08.xhtml#Page_152)
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
- en: '**Q**'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
- en: quotient, getting by dividing integers, [84](c05.xhtml#Page_84)
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
- en: '**R**'
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
- en: radicals and fractions, [88](c05.xhtml#Page_88)
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
- en: radius, returning for triangle, [132](c07.xhtml#Page_132)–[133](c07.xhtml#Page_133)
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
- en: Ramanujan, Srinivasa, [88](c05.xhtml#Page_88)
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
- en: random forests, [182](c09.xhtml#Page_182)–[183](c09.xhtml#Page_183). *See also*
    decision trees; game trees
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
- en: '`random` model, Python, [58](c04.xhtml#Page_58)–[59](c04.xhtml#Page_59)'
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
- en: random number generators
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
- en: judging PRNGs (pseudorandom number generators), [93](c05.xhtml#Page_93)–[95](c05.xhtml#Page_95)
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
- en: LCDs (linear congruential generators), [92](c05.xhtml#Page_92)–[93](c05.xhtml#Page_93)
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
- en: LFSRs (linear feedback shift registers), [97](c05.xhtml#Page_97)–[99](c05.xhtml#Page_99)
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
- en: overview, [91](c05.xhtml#Page_91)
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
- en: '`random.choice()` function, Python, [28](c02.xhtml#Page_28)'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
- en: randomness
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
- en: Diehard tests for, [95](c05.xhtml#Page_95)–[97](c05.xhtml#Page_97)
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
- en: possibility of, [91](c05.xhtml#Page_91)–[92](c05.xhtml#Page_92)
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
- en: '`random.seed()` function, [59](c04.xhtml#Page_59)'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
- en: recursion
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
- en: of functions, *[22](c02.xhtml#Page_22)*
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
- en: implementing merge sort with, [69](c04.xhtml#Page_69)
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
- en: using with Euclid’s algorithm, [85](c05.xhtml#Page_85)
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
- en: '`re.finditer()` function, using with words, [152](c08.xhtml#Page_152)'
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
- en: '`reindex()` method, using with decision trees, [181](c09.xhtml#Page_181)'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
- en: '`remove()` function, using with words and spaces, [155](c08.xhtml#Page_155)'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
- en: '`replace()` function, using with words and spaces, [155](c08.xhtml#Page_155)'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
- en: '`resetthresh` variable, adding, [122](c06.xhtml#Page_122)'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
- en: revenue
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
- en: maximum, [39](c03.xhtml#Page_39)
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
- en: showing for tax rates, [36](c03.xhtml#Page_36)–[37](c03.xhtml#Page_37)
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
- en: '`right` and `left` variables, Python, [66](c04.xhtml#Page_66)'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
- en: RPM (Russian peasant multiplication), [13](c02.xhtml#Page_13)–[20](c02.xhtml#Page_20)
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
- en: rules, applying with Kurushima’s algorithm, [27](c02.xhtml#Page_27), [30](c02.xhtml#Page_30)–[31](c02.xhtml#Page_31)
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
- en: '**S**'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
- en: science, laws of, [130](c07.xhtml#Page_130)–[131](c07.xhtml#Page_131)
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
- en: scoring games, [189](c10.xhtml#Page_189)–[190](c10.xhtml#Page_190)
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
- en: search suggestions, strategy for generating, [160](c08.xhtml#Page_160), [162](c08.xhtml#Page_162)–[163](c08.xhtml#Page_163)
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
- en: searching versus sorting, [72](c04.xhtml#Page_72)–[75](c04.xhtml#Page_75)
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
- en: Shakespeare’s works, accessing, [160](c08.xhtml#Page_160)–[161](c08.xhtml#Page_161),
    [163](c08.xhtml#Page_163)
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
- en: '`siman()` function, using for simulated annealing, [122](c06.xhtml#Page_122)–[123](c06.xhtml#Page_123)'
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
- en: Simmons, Joseph, [179](c09.xhtml#Page_179)
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
- en: simulated annealing, [115](c06.xhtml#Page_115)–[124](c06.xhtml#Page_124). *See
    also* optimization; perturb search; TSP (traveling salesman problem)
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
- en: sleep sort, [70](c04.xhtml#Page_70)–[72](c04.xhtml#Page_72). *See also* sorting
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
- en: Smith, David Eugene, [22](c02.xhtml#Page_22)
  id: totrans-483
  prefs: []
  type: TYPE_NORMAL
- en: solve-for-*x* strategy, *[4](c01.xhtml#Page_4)*–[5](c01.xhtml#Page_5), [10](c01.xhtml#Page_10)–[11](c01.xhtml#Page_11)
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
- en: sorted filing cabinets, merging, [62](c04.xhtml#Page_62), [64](c04.xhtml#Page_64)–[65](c04.xhtml#Page_65).
    *See also* file-sorting method
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
- en: sorting. *See also* merging to sorting; sleep sort
  id: totrans-486
  prefs: []
  type: TYPE_NORMAL
- en: lists, [153](c08.xhtml#Page_153)
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
- en: via insertion, [54](c04.xhtml#Page_54)–[55](c04.xhtml#Page_55)
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
- en: to searching, [72](c04.xhtml#Page_72)–[75](c04.xhtml#Page_75)
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
- en: space insertion
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
- en: checking for potential words, [153](c08.xhtml#Page_153)–[154](c08.xhtml#Page_154)
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
- en: checking for valid words, [154](c08.xhtml#Page_154)–[156](c08.xhtml#Page_156)
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
- en: dealing with compound words, [152](c08.xhtml#Page_152)–[153](c08.xhtml#Page_153)
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
- en: defining word lists, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
- en: finding halves of potential words, [156](c08.xhtml#Page_156)–[158](c08.xhtml#Page_158)
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
- en: finding words, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
- en: overview, [150](c08.xhtml#Page_150)–[151](c08.xhtml#Page_151)
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
- en: spaces
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
- en: getting substrings between, [153](c08.xhtml#Page_153)–[154](c08.xhtml#Page_154)
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
- en: inserting into texts, [158](c08.xhtml#Page_158)
  id: totrans-500
  prefs: []
  type: TYPE_NORMAL
- en: words ending with, [156](c08.xhtml#Page_156)
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
- en: split points, choosing for decision trees, *[171](c09.xhtml#Page_171)*, [182](c09.xhtml#Page_182)
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
- en: splitting variables, choosing for decision trees, [182](c09.xhtml#Page_182)
  id: totrans-503
  prefs: []
  type: TYPE_NORMAL
- en: square brackets (`[]`)
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
- en: using with list comprehension, [152](c08.xhtml#Page_152)
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
- en: using with `loc` functionality, [19](c02.xhtml#Page_19)
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
- en: square matrix, antidiagonal of, [26](c02.xhtml#Page_26)–[27](c02.xhtml#Page_27)
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
- en: square roots, [89](c05.xhtml#Page_89)–[91](c05.xhtml#Page_91)
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
- en: squares, filling in, [30](c02.xhtml#Page_30)–[34](c02.xhtml#Page_34). *See also*
    Japanese magic squares; magic squares
  id: totrans-509
  prefs: []
  type: TYPE_NORMAL
- en: '`start()` function, using with words, [153](c08.xhtml#Page_153)'
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
- en: statistical methods, bootstrapping as, *[91](c05.xhtml#Page_91)*
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
- en: steps
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
- en: counting in insertion sort, [57](c04.xhtml#Page_57)–[60](c04.xhtml#Page_60),
    [63](c04.xhtml#Page_63)–[64](c04.xhtml#Page_64)
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
- en: exponential growth, [60](c04.xhtml#Page_60)–[61](c04.xhtml#Page_61)
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
- en: stochastic gradient ascent, *[45](c03.xhtml#Page_45)*
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
- en: strings, splitting into words, *[159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
- en: substrings, getting between spaces, [153](c08.xhtml#Page_153)–[154](c08.xhtml#Page_154)
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
- en: sudoku puzzles, solving, [211](c11.xhtml#Page_211)–[212](c11.xhtml#Page_212)
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
- en: '**T**'
  id: totrans-519
  prefs: []
  type: TYPE_NORMAL
- en: tangent of angle, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
- en: tax rates, setting, [36](c03.xhtml#Page_36)–[41](c03.xhtml#Page_41)
  id: totrans-521
  prefs: []
  type: TYPE_NORMAL
- en: taxation/revenue curve, gradient ascent, [41](c03.xhtml#Page_41)
  id: totrans-522
  prefs: []
  type: TYPE_NORMAL
- en: tax/revenue curve, flipping, [46](c03.xhtml#Page_46)–[47](c03.xhtml#Page_47)
  id: totrans-523
  prefs: []
  type: TYPE_NORMAL
- en: temperature function, TSP (traveling salesman problem), [113](c06.xhtml#Page_113)–[115](c06.xhtml#Page_115)
  id: totrans-524
  prefs: []
  type: TYPE_NORMAL
- en: test sets, using with decision trees, *[180](c09.xhtml#Page_180)*
  id: totrans-525
  prefs: []
  type: TYPE_NORMAL
- en: text normalization, using with chatbot, *[203](c11.xhtml#Page_203)*
  id: totrans-526
  prefs: []
  type: TYPE_NORMAL
- en: text vectorization, *[204](c11.xhtml#Page_204)*–[206](c11.xhtml#Page_206)
  id: totrans-527
  prefs: []
  type: TYPE_NORMAL
- en: TFIDF (term frequency-inverse document frequency) method, [204](c11.xhtml#Page_204)–[205](c11.xhtml#Page_205),
    [207](c11.xhtml#Page_207)–[208](c11.xhtml#Page_208)
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: TFIDF（词频-逆文档频率）方法，[204](c11.xhtml#Page_204)–[205](c11.xhtml#Page_205)，[207](c11.xhtml#Page_207)–[208](c11.xhtml#Page_208)
- en: theta, applying to thrown ball, [8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 角度，应用于投掷的球，[8](c01.xhtml#Page_8)–[9](c01.xhtml#Page_9)
- en: thinking with your neck, [6](c01.xhtml#Page_6)–[9](c01.xhtml#Page_9)
  id: totrans-530
  prefs: []
  type: TYPE_NORMAL
  zh: 用脖子思考，[6](c01.xhtml#Page_6)–[9](c01.xhtml#Page_9)
- en: time, measuring precisely, [57](c04.xhtml#Page_57)
  id: totrans-531
  prefs: []
  type: TYPE_NORMAL
  zh: 时间，精确测量，[57](c04.xhtml#Page_57)
- en: '`timeit` module, Python, [57](c04.xhtml#Page_57)'
  id: totrans-532
  prefs: []
  type: TYPE_NORMAL
  zh: '`timeit` 模块，Python，[57](c04.xhtml#Page_57)'
- en: '*Titanic* lifeboat example, using sleep sort with, [71](c04.xhtml#Page_71)–[72](c04.xhtml#Page_72)'
  id: totrans-533
  prefs: []
  type: TYPE_NORMAL
  zh: '*泰坦尼克号* 救生艇示例，使用睡眠排序，[71](c04.xhtml#Page_71)–[72](c04.xhtml#Page_72)'
- en: tokenization, performing with chatbot, [204](c11.xhtml#Page_204)
  id: totrans-534
  prefs: []
  type: TYPE_NORMAL
  zh: 分词，与聊天机器人一起使用，[204](c11.xhtml#Page_204)
- en: tokenizing n-grams, *[159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 分词 n-gram，* [159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
- en: training sets, using with decision trees, *[180](c09.xhtml#Page_180)*
  id: totrans-536
  prefs: []
  type: TYPE_NORMAL
  zh: 训练集，与决策树一起使用，* [180](c09.xhtml#Page_180)*
- en: '`translate()` method, using with chatbot, [203](c11.xhtml#Page_203)–[204](c11.xhtml#Page_204)'
  id: totrans-537
  prefs: []
  type: TYPE_NORMAL
  zh: '`translate()` 方法，与聊天机器人一起使用，[203](c11.xhtml#Page_203)–[204](c11.xhtml#Page_204)'
- en: triage and decision trees, *[166](c09.xhtml#Page_166)*
  id: totrans-538
  prefs: []
  type: TYPE_NORMAL
  zh: 分类和决策树，* [166](c09.xhtml#Page_166)*
- en: triangles
  id: totrans-539
  prefs: []
  type: TYPE_NORMAL
  zh: 三角形
- en: centroid, *[131](c07.xhtml#Page_131)*–[133](c07.xhtml#Page_133)
  id: totrans-540
  prefs: []
  type: TYPE_NORMAL
  zh: 重心，* [131](c07.xhtml#Page_131)*–[133](c07.xhtml#Page_133)
- en: creating for postmaster problem, [128](c07.xhtml#Page_128)–[134](c07.xhtml#Page_134)
  id: totrans-541
  prefs: []
  type: TYPE_NORMAL
  zh: 创建用于邮递员问题，[128](c07.xhtml#Page_128)–[134](c07.xhtml#Page_134)
- en: finding circumcenter of, [131](c07.xhtml#Page_131)–[133](c07.xhtml#Page_133)
  id: totrans-542
  prefs: []
  type: TYPE_NORMAL
  zh: 寻找外接圆心，[131](c07.xhtml#Page_131)–[133](c07.xhtml#Page_133)
- en: plotting, [129](c07.xhtml#Page_129), [145](c07.xhtml#Page_145)–[146](c07.xhtml#Page_146)
  id: totrans-543
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制，[129](c07.xhtml#Page_129)，[145](c07.xhtml#Page_145)–[146](c07.xhtml#Page_146)
- en: replacing, [140](c07.xhtml#Page_140)–[143](c07.xhtml#Page_143)
  id: totrans-544
  prefs: []
  type: TYPE_NORMAL
  zh: 替换，[140](c07.xhtml#Page_140)–[143](c07.xhtml#Page_143)
- en: triangulation. *See also* Bowyer-Watson algorithm; DT (Delaunay triangulation)
  id: totrans-545
  prefs: []
  type: TYPE_NORMAL
  zh: 三角剖分。 *参见* Bowyer-Watson 算法；DT（德劳内三角剖分）
- en: defined, *[134](c07.xhtml#Page_134)*
  id: totrans-546
  prefs: []
  type: TYPE_NORMAL
  zh: 定义，* [134](c07.xhtml#Page_134)*
- en: of seven points, [135](c07.xhtml#Page_135)
  id: totrans-547
  prefs: []
  type: TYPE_NORMAL
  zh: 七个点，[135](c07.xhtml#Page_135)
- en: '`True`, Kurushima’s algorithm, [27](c02.xhtml#Page_27)'
  id: totrans-548
  prefs: []
  type: TYPE_NORMAL
  zh: '`True`，Kurushima 算法，[27](c02.xhtml#Page_27)'
- en: TSP (traveling salesman problem). *See also* optimization; simulated annealing
  id: totrans-549
  prefs: []
  type: TYPE_NORMAL
  zh: TSP（旅行商问题）。 *参见* 优化；模拟退火
- en: greedy algorithms, *[112](c06.xhtml#Page_112)*–[113](c06.xhtml#Page_113)
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: 贪心算法，* [112](c06.xhtml#Page_112)*–[113](c06.xhtml#Page_113)
- en: improving, [110](c06.xhtml#Page_110)–[112](c06.xhtml#Page_112)
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 改进，[110](c06.xhtml#Page_110)–[112](c06.xhtml#Page_112)
- en: nearest neighbor algorithm, *[108](c06.xhtml#Page_108)*–[110](c06.xhtml#Page_110)
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 最近邻算法， *[108](c06.xhtml#Page_108)*–[110](c06.xhtml#Page_110)
- en: overview, [102](c06.xhtml#Page_102)–[103](c06.xhtml#Page_103)
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 概述，[102](c06.xhtml#Page_102)–[103](c06.xhtml#Page_103)
- en: versus postmaster problem, [127](c07.xhtml#Page_127)
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 与邮递员问题对比，[127](c07.xhtml#Page_127)
- en: setting up, [103](c06.xhtml#Page_103)–[108](c06.xhtml#Page_108)
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 设置，[103](c06.xhtml#Page_103)–[108](c06.xhtml#Page_108)
- en: temperature function, [113](c06.xhtml#Page_113)–[115](c06.xhtml#Page_115)
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: 温度函数，[113](c06.xhtml#Page_113)–[115](c06.xhtml#Page_115)
- en: tuples, using with words and spaces, *[152](c08.xhtml#Page_152)*
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 元组，使用于单词和空格，* [152](c08.xhtml#Page_152)*
- en: '**U**'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '**U**'
- en: underfitting decision trees, *[181](c09.xhtml#Page_181)*–[182](c09.xhtml#Page_182)
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 决策树的欠拟合，* [181](c09.xhtml#Page_181)*–[182](c09.xhtml#Page_182)
- en: '`up_right`, Kurushima’s algorithm, [28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29)'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: '`up_right`，Kurushima 算法，[28](c02.xhtml#Page_28)–[29](c02.xhtml#Page_29)'
- en: upper bound, defining for binary search, [73](c04.xhtml#Page_73)
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 上界，定义用于二分查找，[73](c04.xhtml#Page_73)
- en: '**V**'
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: '**V**'
- en: vector similarity, determining, [206](c11.xhtml#Page_206)–[208](c11.xhtml#Page_208)
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 向量相似度，确定，[206](c11.xhtml#Page_206)–[208](c11.xhtml#Page_208)
- en: vertex, geometric terminology, *[130](c07.xhtml#Page_130)*
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点，几何术语，* [130](c07.xhtml#Page_130)*
- en: Voronoi diagram
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: Voronoi 图
- en: generating, [143](c07.xhtml#Page_143)–[147](c07.xhtml#Page_147)
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 生成，[143](c07.xhtml#Page_143)–[147](c07.xhtml#Page_147)
- en: for postmaster problem, [128](c07.xhtml#Page_128)
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 用于邮递员问题，[128](c07.xhtml#Page_128)
- en: '**W**'
  id: totrans-568
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**'
- en: '`while` loop, Kurushima’s algorithm, [31](c02.xhtml#Page_31)'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: '`while` 循环，Kurushima 算法，[31](c02.xhtml#Page_31)'
- en: '`while` loop'
  id: totrans-570
  prefs: []
  type: TYPE_NORMAL
  zh: '`while` 循环'
- en: using for binary search, [74](c04.xhtml#Page_74)
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 用于二分查找，[74](c04.xhtml#Page_74)
- en: using with bits, [99](c05.xhtml#Page_99)
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 与位一起使用，[99](c05.xhtml#Page_99)
- en: using with continued fractions, [85](c05.xhtml#Page_85)
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 与连分数一起使用，[85](c05.xhtml#Page_85)
- en: using with merge sort, [67](c04.xhtml#Page_67)
  id: totrans-574
  prefs: []
  type: TYPE_NORMAL
  zh: 与归并排序一起使用，[67](c04.xhtml#Page_67)
- en: using with square roots, [90](c05.xhtml#Page_90)–[91](c05.xhtml#Page_91)
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: 与平方根一起使用，[90](c05.xhtml#Page_90)–[91](c05.xhtml#Page_91)
- en: '`while` loop, RPM (Russian peasant multiplication), [18](c02.xhtml#Page_18)'
  id: totrans-576
  prefs: []
  type: TYPE_NORMAL
  zh: '`while` 循环，俄罗斯农民乘法， [18](c02.xhtml#Page_18)'
- en: winning games, [195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 赢得比赛，[195](c10.xhtml#Page_195)–[198](c10.xhtml#Page_198)
- en: word list, defining, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
  id: totrans-578
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇表，定义，[151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
- en: words. *See also* compound words; potential words
  id: totrans-579
  prefs: []
  type: TYPE_NORMAL
  zh: 单词。*另见* 复合词；潜在词
- en: checking validity with imported corpus, [154](c08.xhtml#Page_154)–[156](c08.xhtml#Page_156)
  id: totrans-580
  prefs: []
  type: TYPE_NORMAL
  zh: 使用导入语料库检查有效性，[154](c08.xhtml#Page_154)–[156](c08.xhtml#Page_156)
- en: ending with spaces, [156](c08.xhtml#Page_156)
  id: totrans-581
  prefs: []
  type: TYPE_NORMAL
  zh: 以空格结尾，[156](c08.xhtml#Page_156)
- en: finding, [151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 查找，[151](c08.xhtml#Page_151)–[152](c08.xhtml#Page_152)
- en: tokenizing, *[159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: 分词，*[159](c08.xhtml#Page_159)*–[160](c08.xhtml#Page_160)
- en: '**X**'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: '**X**'
- en: XOR operation, *[98](c05.xhtml#Page_98)*
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: XOR 操作，*[98](c05.xhtml#Page_98)*
