- en: INTRODUCTION
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![image](../images/common01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Air is running out. There’s a leak in the space station, so you’ve got to act
    fast. Can you find your way to safety? You’ll need to navigate your way around
    the space station, find access cards to unlock doors, and fix your damaged space
    suit. The adventure has begun!
  prefs: []
  type: TYPE_NORMAL
- en: 'And it starts here: on Earth, at mission command, also known as your computer.
    This book shows you how to use Python to build a space station on Mars, explore
    the station, and escape danger in an adventure game complete with graphics. Can
    you think like an astronaut to make it to safety?'
  prefs: []
  type: TYPE_NORMAL
- en: '**HOW TO USE THIS BOOK**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: By following the instructions in this book, you can build a game called *Escape*
    with a map to explore and puzzles to solve. It’s written in Python, a popular
    programming language that is easy to read. It also uses Pygame Zero, which adds
    some instructions for managing images and sounds, among other things. Bit by bit,
    I’ll show you how to make the game and how the main parts of the code work, so
    you can customize it or build your own games based on my game code. You can also
    download all the code you need. If you get stuck or just want to jump straight
    into playing the game and seeing it work, you can do so. All the software you
    need is free, and I’ve provided instructions for Windows PCs and the Raspberry
    Pi. I recommend you use the Raspberry Pi 3 or Raspberry Pi 2\. The game may run
    too slowly to enjoy on the Pi Zero, original Model B+, and older models.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several different ways you can use the book and the game:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Download the game, play it first, and then use the book to understand how
    it works.** This way, you eliminate the risk of seeing any spoilers in the book
    before you play the game! Although I’ve kept them to a minimum, you might notice
    a few clues in the code as you read the book. If you get really stuck on a problem
    in the game, you can try reading the code to work out the solution. In any case,
    I recommend you run the game at least once to see what you’ll be building and
    learn how to run your programs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Build the game, and then play it.** This book guides you through creating
    the game from start to finish. As you work your way through the chapters, you’ll
    add new sections to the game and see how they work. If you can’t get the code
    working at any point, you can just use my version of the code listing and continue
    building from there. If you choose this route, avoid making any custom changes
    to the game until you’ve built it, played it, and finished it. Otherwise, you
    might accidentally make the game impossible to complete. (It’s okay to make any
    changes I suggest in the exercises.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customize the game.** When you understand how the program works, you can
    change it by using your own maps, graphics, objects, and puzzles. The *Escape*
    game is set on a space station, but yours could be in the jungle, under the sea,
    or almost anywhere. You could use the book to build your own version of *Escape*
    first, or use my version of the final game and customize that. I’d love to see
    what you make using the program as a starting point! You can find me on Twitter
    at @musicandwords or visit my website at *[www.sean.co.uk](http://www.sean.co.uk)*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**WHAT’S IN THIS BOOK?**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here’s a briefing on what’s in store for you as you embark on your mission.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1](ch01.xhtml#ch01)** shows you how to go on a spacewalk. You’ll
    learn how to use graphics in your Python programs using Pygame Zero and discover
    some of the basics of making Python programs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Chapter 2](ch02.xhtml#ch02)** introduces *lists*, which store much of the
    information in the *Escape* game. You’ll see how to use lists to make a map.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Chapter 3](ch03.xhtml#ch03)** shows you how to get parts of a program to
    repeat and how to use that knowledge to display a map. You’ll also design a room
    layout for the space station, using wall pillars and floor tiles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In **[Chapter 4](ch04.xhtml#ch04)**, you’ll start to build the *Escape* game,
    laying down the blueprints for the station. You’ll see how the program understands
    the station layout and uses it to create the fabric for the rooms, putting the
    walls and floor in place.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In **[Chapter 5](ch05.xhtml#ch05)**, you’ll learn how to use *dictionaries*
    in Python, which are another important way of storing information. You’ll add
    information for all the objects the game uses, and you’ll see how to create a
    preview of your own room design. When you extend the program in **[Chapter 6](ch06.xhtml#ch06)**,
    you’ll see all the scenery in place and will be able to look at all the rooms.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: After building the space station, you can move in. In **[Chapter 7](ch07.xhtml#ch07)**,
    you’ll add your astronaut character and discover how to move around the rooms
    and animate movements.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**[Chapter 8](ch08.xhtml#ch08)** shows you how to polish the game’s graphics
    with shadows, fading walls, and a new function to draw the rooms that fixes the
    remaining graphical glitches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the space station is operational, you can unpack your personal effects.
    In **[Chapter 9](ch09.xhtml#ch09)**, you’ll position items the player can examine,
    pick up, and drop. In **[Chapter 10](ch10.xhtml#ch10)**, you’ll see how to use
    and combine items, so you can solve puzzles in the game.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The space station is nearly complete. **[Chapter 11](ch11.xhtml#ch11)** adds
    safety doors that restrict access to certain zones. Just as you’re putting your
    feet up and celebrating a job well done, there’s danger around the corner, as
    you’ll add moving hazards in **[Chapter 12](ch12.xhtml#ch12)**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you work through the book, you’ll complete training missions that give you
    an opportunity to test your programs and your coding skills. The answers, if you
    need them, are at the end of each chapter.
  prefs: []
  type: TYPE_NORMAL
- en: The appendixes at the back of the book will help you, too. **[Appendix A](appa.xhtml#appa)**
    contains the listing for the whole game. If you’re not sure where to add a new
    chunk of code, you can check here. **[Appendix B](appb.xhtml#appb)** contains
    a table of the most important variables, lists, and dictionaries if you can’t
    remember what’s stored where, and **[Appendix C](appc.xhtml#appc)** has some debugging
    tips if a program doesn’t work for you.
  prefs: []
  type: TYPE_NORMAL
- en: For more information and supporting resources for the book, visit the book’s
    website at *[www.sean.co.uk/books/mission-python/](http://www.sean.co.uk/books/mission-python/)*.
    You can also find information and resources at *[https://nostarch.com/missionpython/](https://nostarch.com/missionpython/)*.
  prefs: []
  type: TYPE_NORMAL
- en: '**INSTALLING THE SOFTWARE**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The game uses the Python programming language and Pygame Zero, which is software
    that makes it easier to handle graphics and sound. You need to install both of
    these before you begin.
  prefs: []
  type: TYPE_NORMAL
- en: '**NOTE**'
  prefs: []
  type: TYPE_NORMAL
- en: '*For updated installation instructions, visit the book’s web page at* [https://nostarch.com/missionpython/](https://nostarch.com/missionpython/).'
  prefs: []
  type: TYPE_NORMAL
- en: '**INSTALLING THE SOFTWARE ON RASPBERRY PI**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: If you’re using a Raspberry Pi, Python and Pygame Zero are already installed.
    You can skip ahead to “[Downloading the Game Files](intro.xhtml#lev8)” on [page
    7](intro.xhtml#page_7).
  prefs: []
  type: TYPE_NORMAL
- en: '**INSTALLING PYTHON ON WINDOWS**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To install the software on a Windows PC, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open your web browser and visit *[https://www.python.org/downloads/](https://www.python.org/downloads/)*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: At the time of this writing, 3.7 is the latest version of Python, but Pygame
    isn’t available for easy installation on it yet. I recommend you use the latest
    version of Python 3.6 instead (3.6.6 at the time of writing). You can find old
    versions of Python farther down the screen on the downloads page (see [Figure
    1](intro.xhtml#introfig1)). Save the file on your desktop or somewhere else you
    can easily find it. (Pygame Zero works only with Python 3, so if you usually use
    Python 2, you’ll need to switch to Python 3 for this book.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig1.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 1: The Python downloads page*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: When the file has downloaded, double-click it to run it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the window that opens, select the checkbox to Add Python 3.6 to PATH (see
    [Figure 2](intro.xhtml#introfig2)).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Install Now**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig2.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 2: The Python installer*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you’re asked whether you want to allow this application to make changes to
    your device, click **Yes**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Python will take a few minutes to install. When it finishes, click **Close**
    to complete the installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**INSTALLING PYGAME ZERO ON WINDOWS**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Now that you have Python installed on your computer, you can install Pygame
    Zero. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Hold down the **Windows Start key** and press **R**. The Run window should open
    (see [Figure 3](intro.xhtml#introfig3)).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter cmd (see [Figure 3](intro.xhtml#introfig3)). Press ENTER or click **OK**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig3.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 3: The Windows Run dialog box*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The command line window should open, as shown in [Figure 4](intro.xhtml#introfig4).
    Here you can enter instructions for managing files or starting programs. Enter
    pip install pgzero and press ENTER at the end of the line.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig4.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 4: The command line window*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Pygame Zero should start to install. It will take a few moments, and you’ll
    know it’s finished when your > prompt appears again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you get an error message saying that pip is not recognized, try installing
    Python again. You can uninstall Python first by running the installation program
    again or using the Windows Control panel. Make sure you select the box for the
    PATH when installing Python (see [Figure 2](intro.xhtml#introfig2)). After you
    have reinstalled Python, try installing Pygame Zero again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'When Pygame Zero has finished downloading and you can type again, enter the
    following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: echo print("Hello!") > test.py
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'This line creates a new file called *test.py* that contains the instruction
    print("Hello!"). I’ll explain the print() instruction in [Chapter 1](ch01.xhtml#ch01),
    but for now, this is just a quick way to make a test file. Be careful when you
    enter the parentheses (curved brackets) and quotation marks: if you miss one,
    the file won’t work properly.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the test file by entering the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: pgzrun test.py
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'After a short delay, a blank window should open with the title *Pygame Zero
    Game*. Click the command line window again to bring it to the front: you should
    see the text Hello! Press CTRL-C in the command line window to stop the program.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you want to delete your test program, enter del test.py.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**INSTALLING THE SOFTWARE ON OTHER MACHINES**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Python and Pygame Zero are available for other computer systems. Pygame Zero
    has been designed in part to enable games to work across different computers,
    so the *Escape* code should run wherever Pygame Zero runs. This book only provides
    guidance for users of Windows and Raspberry Pi computers. But if you have a different
    computer, you can download Python at *[https://www.python.org/downloads/](https://www.python.org/downloads/)*
    and can find advice on installing Pygame Zero at *[http://pygame-zero.readthedocs.io/en/latest/installation.html](http://pygame-zero.readthedocs.io/en/latest/installation.html)*.
  prefs: []
  type: TYPE_NORMAL
- en: '**DOWNLOADING THE GAME FILES**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: I’ve provided all the program files, sounds, and images you need for the *Escape*
    game. You can also download all the listings in the book, so if you can’t get
    one to work, you can use mine instead. All the book’s content downloads as a single
    ZIP file called *escape.zip*.
  prefs: []
  type: TYPE_NORMAL
- en: '**DOWNLOADING AND UNZIPPING THE FILES ON A RASPBERRY PI**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To download the game files on a Raspberry Pi, follow these steps, and refer
    to [Figure 5](intro.xhtml#introfig5). The numbers in [Figure 5](intro.xhtml#introfig5)
    show you where to do each step.
  prefs: []
  type: TYPE_NORMAL
- en: ➊ Open your web browser and visit *[https://nostarch.com/missionpython/](https://nostarch.com/missionpython/)*.
    Click the link to download the files.
  prefs: []
  type: TYPE_NORMAL
- en: ➋ From your desktop, click the File Manager icon on the taskbar at the top of
    the screen.
  prefs: []
  type: TYPE_NORMAL
- en: ➌ Double-click your Downloads folder to open it
  prefs: []
  type: TYPE_NORMAL
- en: ➍ Double-click the *escape.zip* file.
  prefs: []
  type: TYPE_NORMAL
- en: ➎ Click the **Extract Files** button to open the Extract Files dialog box.
  prefs: []
  type: TYPE_NORMAL
- en: ➏ Change the folder that you’ll extract to so it reads */home/pi/escape*.
  prefs: []
  type: TYPE_NORMAL
- en: ➐ Ensure that the option is selected to Extract files with full path.
  prefs: []
  type: TYPE_NORMAL
- en: ➑ Click **Extract**.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/fig5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 5: The steps you should take to unzip your files*'
  prefs: []
  type: TYPE_NORMAL
- en: '**UNZIPPING THE FILE ON A WINDOWS PC**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To unzip the files on a Windows PC, follow these steps.
  prefs: []
  type: TYPE_NORMAL
- en: Open your web browser and visit *[https://nostarch.com/missionpython/](https://nostarch.com/missionpython/)*.
    Click the link to download the files. Save the ZIP file on your desktop, in your
    *Documents* folder, or somewhere else you can easily find it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Depending on the browser you’re using, the ZIP file might open automatically,
    or there might be an option to open it at the bottom of the screen. If not, hold
    down the **Windows Start key** and press **E**. The Windows Explorer window should
    open. Go to the folder where you saved the ZIP file. Double-click the ZIP file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Extract All** at the top of the window.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: I recommend that you create a folder called *escape* in your *Documents* folder
    and extract the files there. My documents folder is *C:\Users\Sean\Documents*,
    so I just typed *\escape* at the end of the folder name to create a new folder
    in that folder (see [Figure 6](intro.xhtml#introfig6)). You can use the **Browse**
    button to get to your *Documents* folder first if necessary.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Extract**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig6.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 6: Setting the folder to unzip the game files into*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**WHAT’S IN THE ZIP FILE**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The ZIP file you’ve just downloaded contains three folders and a Python program,
    *escape.py* (see [Figure 7](intro.xhtml#introfig7)). The Python program is the
    final version of the *Escape* game, so you can start playing it right away. The
    *images* folder contains all the images you’ll need for the game and other projects
    in this book. The *sounds* folder contains the sound effects.
  prefs: []
  type: TYPE_NORMAL
- en: In the *listings* folder, you’ll find all the numbered listings in this book.
    If you can’t get a program to work, try my version from this folder. You’ll need
    to copy it from the listings folder first, and then paste it in the *escape* folder
    where the *escape.py* program is now. The reason you do this is because the program
    needs be alongside the *images* and *sounds* folders to work correctly.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/fig7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 7: The contents of the ZIP file as they might appear in Windows*'
  prefs: []
  type: TYPE_NORMAL
- en: '**RUNNING THE GAME**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you downloaded Python, another program called IDLE will have been downloaded
    with it. IDLE is an integrated development environment (IDE), which is software
    you can use to write programs in Python. You can run some of the listings in this
    book from the IDLE Python editor using the instructions provided. Most of the
    programs, though, use Pygame Zero, and you have to run those programs from the
    command line. Follow the instructions here to run the *Escape* game and any other
    Pygame Zero programs.
  prefs: []
  type: TYPE_NORMAL
- en: '**RUNNING PYGAME ZERO PROGRAMS ON THE RASPBERRY PI**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you’re using a Raspberry Pi, follow these steps to run the *Escape* game:'
  prefs: []
  type: TYPE_NORMAL
- en: Using the File Manager, go to your *escape* folder in your *pi* folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Tools** on the menu and select **Open Current Folder in Terminal**,
    or you can press F4\. The command line window (also known as the *shell*) should
    open, as shown in [Figure 8](intro.xhtml#introfig8). You can enter instructions
    here for managing files or starting programs.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig8.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 8: The command line window on the Raspberry Pi*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Type in the following command and press ENTER. The game begins!
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: pgzrun escape.py
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This is how you run a Pygame Zero program on the Pi. To run the same program
    again, repeat the last step. To run a different program that’s saved in the same
    folder, repeat the last step but change the name of the filename after pgzrun.
    To run a Pygame Zero program in a different folder, follow the steps starting
    from step 1, but open the command line from the folder with the program you want
    to run.
  prefs: []
  type: TYPE_NORMAL
- en: '**RUNNING PYGAME ZERO PROGRAMS IN WINDOWS**'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you’re using Windows, follow these steps to run the program:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to your *escape* folder. (Hold down the **Windows Start key** and press **E**
    to open the Windows Explorer again.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the long bar above your files, as shown in [Figure 9](intro.xhtml#introfig9).
    Type cmd into this bar and press ENTER.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig9.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 9: Finding the path to your Pygame files*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The command line window will open. Your folder named *escape* will appear just
    before the > on the last line, as shown in [Figure 10](intro.xhtml#introfig10).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![image](../images/fig10.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '*Figure 10: The command line window in Windows*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Type pgzrun escape.py in the command line window. Press ENTER, and the *Escape*
    game begins.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is how you run a Pygame Zero program on a Windows computer. You can run
    the program again by repeating the last step. To run a different program that’s
    saved in the same folder, repeat the last step but change the name of the filename
    after pgzrun. To run a Pygame Zero program in a different folder, follow the steps
    starting from step 1, but open the command line from the folder with the program
    you want to run.
  prefs: []
  type: TYPE_NORMAL
- en: '**PLAYING THE GAME**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You’re working alone on the space station on Mars, many millions of kilometers
    from home. The rest of the crew is on a long-distance mission, exploring a canyon
    for signs of life, and won’t be back for days. The murmuring hum of the life support
    systems surrounds you.
  prefs: []
  type: TYPE_NORMAL
- en: You’re startled when the alarm sounds! There’s a breach in the space station
    wall, and your air is slowly venting into the Martian atmosphere. You climb quickly
    but carefully into your space suit, but the computer tells you the suit is damaged.
    Your life is at risk.
  prefs: []
  type: TYPE_NORMAL
- en: Your first priority is to repair your suit and ensure a reliable air supply.
    Your second priority is to radio for help, but the space station’s radio systems
    are malfunctioning. Last night the Poodle lander, sent from Earth, crash-landed
    in the Martian dust. If you can find it, perhaps you can use its radio to issue
    a distress signal.
  prefs: []
  type: TYPE_NORMAL
- en: Use the arrow keys to move around the space station. To examine an object, stand
    on it and press the spacebar. Alternatively, if the object is something you can’t
    walk on, press the spacebar while walking into it.
  prefs: []
  type: TYPE_NORMAL
- en: To pick up an object, walk onto it and press the G key (for *get*).
  prefs: []
  type: TYPE_NORMAL
- en: To select an object in your inventory, shown at the top of the screen (see [Figure
    11](intro.xhtml#introfig11)), press the TAB key to move through the items. To
    drop the selected object, press D.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/fig11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '*Figure 11: Your adventure begins!*'
  prefs: []
  type: TYPE_NORMAL
- en: To use an object, either select it in your inventory or walk onto or into it
    and press U. You can combine objects or use them together when you press U while
    you carry one object and stand on the other or while you carry one and walk into
    the other.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll need to work out how to use your limited resources creatively to overcome
    obstacles and get to safety. Good luck!
  prefs: []
  type: TYPE_NORMAL
