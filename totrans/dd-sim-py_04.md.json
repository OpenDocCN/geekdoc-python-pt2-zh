["```py\nprint(\"Hello, world\")\n```", "```py\nname = input( ❶ \"What is your name? \")\nprint(\"Hello, \" + name)\n```", "```py\nmessage = \"Hello, world!\"\nprint(message)\n```", "```py\nmessage = \"Hello, world!\"**;** print(message)\n```", "```py\nname = \"Jason\"\n❶ if name != \"\":\n    message = \"Hello, \" + name + \"!\"\n    print(message)\n❷ print(\"I am a computer.\")\n```", "```py\nraining = True\nhailing = False\nif raining:\n    if hailing:\n       print(\"NOPE\")\n    else:\n        print(\"Umbrella time.\")\n```", "```py\nraining = True\nif raining:\n    `pass`\n```", "```py\n# This is a comment\nprint(\"Hello, world!\")\nprint(\"How are you?\") ❶ # This is an inline comment.\n# Here's another comment\n# And another\n# And...you get the idea\n```", "```py\ndef make_tea():\n    \"\"\"Will produce a concoction almost,\n    but not entirely unlike tea.\n    \"\"\"\n    #  ...function logic...\n```", "```py\nprint(make_tea.__doc__)  # This always works.\nhelp(make_tea)           # Intended for use in the interactive shell.\n```", "```py\nname = \"Jason\"\npoints = 4571\nprint(name)   # displays \"Jason\"\nprint(points) # displays 4571\npoints = 42\nprint(points) # displays 42\n```", "```py\nfrom decimal import Decimal\nfrom fractions import Fraction\n\nthird_fraction = Fraction(1, 3)\nthird_fixed = Decimal(\"0.333\")\nthird_float = 1 / 3\n\nprint(third_fraction)  # 1/3\nprint(third_fixed)     # 0.333\nprint(third_float)     # 0.3333333333333333\n\nthird_float = float(third_fraction)\nprint(third_float)     # 0.3333333333333333\n\nthird_float = float(third_fixed)\nprint(third_float)     # 0.333\n```", "```py\nprint(-42)         # negative (unary), evaluates to -42\nprint(abs(-42))    # absolute value, evaluates to 42\nprint(40 + 2)      # addition, evaluates to 42\nprint(44 - 2)      # subtraction, evaluates to 42\nprint(21 * 2)      # multiplication, evaluates to 42\nprint(680 / 16)    # division, evaluates to 42.5\nprint(680 // 16)   # floor division (discard remainder), evaluates to 42\nprint(1234 % 149)  # modulo, evaluates to 42\nprint(7 ** 2)      # exponent, evaluates to 49\nprint((9 + 5) * 3) # parentheses, evaluates to 42\n```", "```py\nfoo = 10\nfoo += 10   # value is now 20 (10 + 10)\nfoo -= 5    # value is now 15 (20 – 5)\nfoo *= 16   # value is now 240 (15 * 16)\nfoo //= 5   # value is now 48 (240 // 5)\nfoo /= 4    # value is now 12.0 (48 / 4)\nfoo **= 2   # value is now 144.0 (12.0 ** 2)\nfoo %= 51   # value is now 42.0 (144.0 % 15)\n```", "```py\nprint(9 & 8)    # bitwise AND, evaluates to 8\nprint(9 | 8)    # bitwise OR, evaluates to 9\nprint(9 ^ 8)    # bitwise XOR, evaluates to 1\nprint(~8)       # unary bitwise ones complement (flip), evaluates to -9\nprint(1 << 3)   # bitwise left shift, evaluates to 8\nprint(8 >> 3)   # bitwise right shift, evaluates to 1\n```", "```py\nimport math\n\nprint(math.pi)   # PI\nprint(math.tau)  # TAU\nprint(math.e)    # Euler's number\nprint(math.inf)  # Infinity\nprint(math.nan)  # Not-a-Number\n\ninfinity_1 = float('inf')\ninfinity_2 = ❶ math.inf \nprint(infinity_1 == infinity_2)  # prints True\n```", "```py\nimport math\n\ndistance_ft = 65  # the distance to the object\nangle_deg = 74    # the angle to the top of the object\n\n# Convert from degrees to radians\nangle_rad = ❶ math.radians(angle_deg)\n# Calculate the height of the object\nheight_ft = distance_ft * ❷ math.tan(angle_rad)\n# Round to one decimal place\nheight_ft = ❸ round(height_ft, 1)\n\nprint(height_ft)  # outputs 226.7\n```", "```py\ncommand = \"greet\"\n\nif command == \"greet\":\n    print(\"Hello!\")\nelif command == \"exit\":\n    print(\"Goodbye\")\nelse:\n    print(\"I don't understand.\")\n```", "```py\nscore = 98\nhigh_score = 100\n\nprint(score == high_score)  # equals, evaluates to False\nprint(score != high_score)  # not equals, evaluates to True\nprint(score < high_score)   # less than, evaluates to True\nprint(score <= high_score)  # less than or equals, evaluates to True\nprint(score > high_score)   # greater than, evaluates to False\nprint(score >= high_score)  # greater than or equals, evaluates to False\n```", "```py\nspam = True\neggs = False\npotatoes = None\n\nif spam is True:          # Evaluates to True\n    print(\"We have spam.\")\n\nif spam is not False:     # Evaluates to True\n    print(\"I DON'T LIKE SPAM!\")\n\n❶ if spam:                  # Implicitly evaluates to True (preferred)\n    print(\"Spam, spam, spam, spam...\")\n\nif eggs is False:         # Evaluates to True\n    print(\"We're all out of eggs.\")\n\nif eggs is not True:      # Evaluates to True\n    print(\"No eggs, but we have spam, spam, spam, spam...\")\n\n❷ if not eggs:              # Implicitly evaluates to True (preferred)\n    print(\"Would you like spam instead?\")\n\nif potatoes is not None:  # Evaluates to False (preferred)\n    print(\"Yum\")          # We never reach this...potatoes is None!\n\nif potatoes is None:      # Evaluates to True (preferred)\n    print(\"Yes, we have no potatoes.\")\n\n❸ if eggs is spam:          # Evaluates to False (CAUTION!!!)\n    print(\"This won't work.\")\n```", "```py\nanswer = 42\n\nif answer:\n    print(\"Evaluated to True\")  # this runs\n\nprint(bool(answer))             # prints True\n```", "```py\nspam = True\neggs = False\n\nif spam and eggs:        # AND operator, evaluates to False\n    print(\"I do not like green eggs and spam.\")\n\nif spam or eggs:         # OR operator, evaluates to True\n    print(\"Here's your meal.\")\n\nif (not eggs) and spam:  # NOT (and AND) operators, evaluates to True\n    print(\"But I DON'T LIKE SPAM!\")\n```", "```py\nscore = 98\nhigh_score = 100\nprint(score != high_score)      # not equals operator, evaluates to True\nprint(not score == high_score)  # not operator, evaluates to True\n```", "```py\nif (eggs := 7 + 5) == 12:\n    print(\"We have one dozen eggs\")\n\nprint(eggs)  # prints 12\n```", "```py\n...\n```", "```py\ndanger = \"Cuidado, llamas!\"\ndanger = 'Cuidado, llamas!'\ndanger = '''Cuidado, llamas!'''\ndanger = \"\"\"Cuidado, llamas!\"\"\"\n```", "```py\nquote = \"Shout \\\"Cuidado, llamas!\\\"\"\n```", "```py\nquote = **'**Shout, \"Cuidado, llamas!\"**'**\n```", "```py\nquestion = \"What do you mean, \\\"it's fine\\\"?\"\n```", "```py\nquestion = **\"\"\"**What do you mean, \"it's fine\"?**\"\"\"**\n```", "```py\n❶ parrot = \"\"\"\\\nThis parrot is no more!\nHe has ceased to be!\nHe's expired\n    and gone to meet his maker!\nHe's a stiff!\nBereft of life,\n    he rests in peace!\"\"\"\n\nprint(parrot)\n```", "```py\nprint(r\"I love backslashes: \\ Aren't they cool?\")\n```", "```py\nI love backslashes: \\ Aren't they cool?\n```", "```py\nprint(\"A\\nB\")\nprint(r\"A\\nB\")\n```", "```py\nA\nB\n```", "```py\nA\\nB\n```", "```py\nin_stock = 0\nprint(\"This cheese shop has \" + str(in_stock) + \" types of cheese.\")\n```", "```py\nin_stock = 0\nprint(**f**\"This cheese shop has **{in_stock}** types of cheese.\")\n```", "```py\nprint(f\"{5+5=}\")  # prints \"5+5=10\"\n```", "```py\nanswer = 42\nprint(f\"{{answer}}\")          # prints \"{42}\"\nprint(f\"{{{{answer}}}}\")      # prints \"{{42}}\"\nprint(f\"{{{{{{answer}}}}}}\")  # prints \"{{{42}}}\"\n```", "```py\nprint(f\"{ord('\\\"')}\")     # SyntaxError\n```", "```py\nprint(f\"\"\"{ord('\"')}\"\"\")  # prints \"34\"\n```", "```py\nprint(f\"{ord('\\n')}\")     # SyntaxError\n```", "```py\nnewline_ord = ord('\\n')\nprint(f\"{newline_ord}\")   # prints \"10\"\n```", "```py\nprint(f\"{# a comment}\")   # SyntaxError\nprint(f\"{ord('#')}\")      # OK, prints \"35\"\n```", "```py\nspam = 1234.56789\nprint(f\"{spam:=^+15,.2f}\")  # prints \"===+1,234.57===\"\n\nspam = 42\nprint(f\"{spam:#07x}\")       # prints \"0x0002a\"\n\nspam = \"Hi!\"\nprint(f\"{spam:-^20}\")       # prints \"--------Hi!---------\"\n```", "```py\na = 42\nb = 64\n```", "```py\nprint( ❶ \"{:#x} and {:#o}\".format( ❷ a, b))\n```", "```py\n0x2a 0o100\n```", "```py\nprint(f\"{**a**:#x} and {**b**:#o}\")  # prints \"0x2a 0o100\"\n```", "```py\nprint(\"{0:d}={0:#x} | {1:d}={1:#x}\".format(a, b))\n```", "```py\n42=0x2a | 64=0x40\n```", "```py\nf\"{**a**:d}={**a**:#x} | {**b**:d}={**b**:#x}\"\n```", "```py\nfrom string import Template\n```", "```py\ns = Template(\"$greeting, $user!\")\n```", "```py\nprint(s.substitute(greeting=\"Hi\", user=\"Jason\"))\n```", "```py\nHi, Jason!\n```", "```py\ns = Template(\"A ${thing}ify subscription costs $$$price/mo.\")\nprint(s.substitute(thing=\"Code\", price=19.95))\n```", "```py\nA Codeify subscription costs $19.95/mo.\n```", "```py\ngreeting = \"Hello\"\nname = \"Jason\"\n```", "```py\nmessage = greeting + \", \" + name + \"!\"  # value is \"Hello, Jason!\"\nprint(message)\n```", "```py\nmessage = **\"\".join((**greeting, \", \", name, \"!\"**))**  # value is \"Hello, Jason!\"\nprint(message)\n```", "```py\ndef tell_joke(joke_type):\n```", "```py\n if joke_type == \"funny\":\n        print(\"How can you tell an elephant is in your fridge?\")\n        print(\"There are footprints in the butter!\")\n    elif joke_type == \"lethal\":\n        print(\"Wenn ist das Nunstück git und Slotermeyer?\")\n        print(\"Ja! Beiherhund das Oder die Flipperwaldt gersput!\")\n    else:\n        print(\"Why did the chicken cross the road?\")\n        print(\"To get to the other side!\")\n```", "```py\ntell_joke(\"funny\")\n```", "```py\nclass Joke:\n```", "```py\n def __init__(self, joke_type):\n        if joke_type == \"funny\":\n            self.question = \"How can you tell an elephant is in your fridge?\"\n            self.answer = \"There are footprints in the butter!\"\n        elif joke_type == \"lethal\":\n            self.question = \"Wenn ist das Nunstück git und Slotermeyer?\"\n            self.answer = \"Ja! Beiherhund das Oder die Flipperwaldt gersput!\"\n        else:\n            self.question = \"Why did the chicken cross the road?\"\n            self.answer = \"To get to the other side!\"\n```", "```py\n def tell(self):\n        print(self.question)\n        print(self.answer)\n```", "```py\nlethal_joke = Joke(\"lethal\")\nlethal_joke.tell()\n```", "```py\nnum_from_user = input(\"Enter a number: \")\n\ntry:\n    num = int(num_from_user)\nexcept ValueError:\n    print(\"You didn't enter a valid number.\")\n    num = 0\n\nprint(f\"Your number squared is {num**2}\")\n```", "```py\ncheeses = [\"Red Leicester\", \"Tilsit\", \"Caerphilly\", \"Bel Paese\"]\n```", "```py\nprint(cheeses[1])  # prints \"Tilsit\"\ncheeses[1] = \"Cheddar\"\nprint(cheeses[1])  # prints \"Cheddar\"\n```", "```py\nanswers = (\"Sir Lancelot\", \"To seek the holy grail\", 0x0000FF)\n```", "```py\nprint(answers[0])  # prints \"Sir Lancelot\"\n```", "```py\nanswers[0] = \"King Arthur\"  # raises TypeError\n```", "```py\nn = 0\n\nwhile n < 10:\n    n += 1\n    print(n)\n```", "```py\nwhile True:\n    command = input(\"Enter command: \")\n    if command == \"exit\":\n        break\n    elif command == \"sing\":\n        print(\"La la LAAA\")\n        continue\n\n    print(\"Command unknown.\")\n```", "```py\nfor i in range(1, 11):\n    print(i)\n```", "```py\nlunch_order = input(\"What would you like for lunch? \")\n\nmatch lunch_order:\n    case 'pizza':\n        print(\"Pizza time!\")\n    case 'sandwich':\n        print(\"Here's your sandwich\")\n    case 'taco':\n        print('Taco, taco, TACO, tacotacotaco!')\n    case _:\n        print(\"Yummy.\")\n```", "```py\nlunch_order = input(\"What would you like for lunch? \") \n\nmatch lunch_order:\n    # `--snip--`\n    case 'taco':\n        print('Taco, taco, TACO, tacotacotaco!')\n    **case 'salad' | 'soup':**\n **print('Eating healthy, eh?')**\n    case _:\n        print(\"Yummy.\")\n```", "```py\nlunch_order = input(\"What would you like for lunch? \") \n\nmatch lunch_order:\n    # `--snip--`\n    case 'salad' | 'soup':\n        print('Eating healthy, eh?')\n    case **order**:\n        print(**f\"Enjoy your {order}.\"**)\n```", "```py\nlunch_order = input(\"What would you like for lunch? \")\n**if ' ' in lunch_order:**\n **lunch_order = lunch_order.split(maxsplit=1)**\n\nmatch lunch_order:\n    **case (flavor, 'ice cream'):**\n **print(f\"Here's your very grown-up {flavor}...lunch.\")**\n    # `--snip--`\n```", "```py\n**class Special:**\n **TODAY = 'lasagna'**\n\nlunch_order = input(\"What would you like for lunch? \")\n\nmatch lunch_order:\n **case Special.TODAY:**\n **print(\"Today's special is awesome!\")**\n    case 'pizza':\n        print(\"Pizza time!\")\n    # `--snip--`\n```", "```py\nclass Special:\n    TODAY = 'lasagna'\n\nlunch_order = input(\"What would you like for lunch? \")\n\nmatch lunch_order:\n    # `--snip--`\n    case 'salad' | 'soup':\n        print('Eating healthy, eh?')\n **case ice_cream if 'ice cream' in ice_cream:**\n **flavor = ice_cream.replace('ice cream', '').strip()**\n **print(f\"Here's your very grown-up {flavor}...lunch.\")**\n    case order:\n        print(f\"Enjoy your {order}.\")\n```"]