- en: '**B'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: TABLE OF VARIABLES, LISTS, AND DICTIONARIES**
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../images/common01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: To help you to understand the Escape listing, I’ve provided the following table,
    which contains some of the variables, lists, and dictionaries used in the game.
    I’ve included those that I think will be most useful for customizing the game.
    You can also use the book’s index to find references to specific variables, lists,
    and dictionaries.
  prefs: []
  type: TYPE_NORMAL
- en: If the name of a variable, list, or dictionary is capitalized, it means its
    contents are not intended to be changed after they’re set up.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Variable, list, or dictionary** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| ACCESS_DICTIONARY | Dictionary that pairs keys with doors. See “[Adding Access
    Controls](ch11.xhtml#lev140)” on [page 185](ch11.xhtml#page_185) ([Chapter 11](ch11.xhtml#ch11)).
    |'
  prefs: []
  type: TYPE_TB
- en: '| air | Air remaining for player. Set to starting value in VARIABLES section.
    |'
  prefs: []
  type: TYPE_TB
- en: '| air_fixed | Set to True when the player has fitted the air canister to the
    suit. Otherwise, False. |'
  prefs: []
  type: TYPE_TB
- en: '| checksum | Used to check data has been entered correctly when typing in the
    game listing. If you modify the game data, you will need to modify or disable
    checksum code. Put a # before the assert instructions to disable them. |'
  prefs: []
  type: TYPE_TB
- en: '| current_room | Number of the room the player is now in. Set it as the starting
    room in the VARIABLES section. |'
  prefs: []
  type: TYPE_TB
- en: '| energy | Energy remaining for player. Set to starting value in VARIABLES
    section. |'
  prefs: []
  type: TYPE_TB
- en: '| FRIEND1_NAME | A friend’s name, used in descriptions of rooms and objects.
    |'
  prefs: []
  type: TYPE_TB
- en: '| FRIEND2_NAME | A friend’s name, used in descriptions of rooms and objects.
    |'
  prefs: []
  type: TYPE_TB
- en: '| GAME_MAP | Stores the map of how rooms connect to each other. See “[Creating
    the Map Data](ch04.xhtml#lev62)” on [page 60](ch04.xhtml#page_60) ([Chapter 4](ch04.xhtml#ch04)).
    |'
  prefs: []
  type: TYPE_TB
- en: '| game_over | Set to True when the game has finished. Otherwise, it should
    be False. |'
  prefs: []
  type: TYPE_TB
- en: '| hazard_data | Dictionary containing position and movement information for
    the moving hazards. See “[Adding the Moving Hazards](ch12.xhtml#lev153)” on [page
    203](ch12.xhtml#page_203) ([Chapter 12](ch12.xhtml#ch12)). |'
  prefs: []
  type: TYPE_TB
- en: '| hazard_map | Used to keep track of where moving hazards are in the room the
    player is now in. Automatically generated. You don’t need to modify this. |'
  prefs: []
  type: TYPE_TB
- en: '| HEIGHT | Height of the game window in pixels. |'
  prefs: []
  type: TYPE_TB
- en: '| in_my_pockets | List of object numbers for items player is carrying. Set
    up in the PROPS section to contain the items the player begins the game with.
    |'
  prefs: []
  type: TYPE_TB
- en: '| item_carrying | Object number of the item the player has selected in their
    inventory. |'
  prefs: []
  type: TYPE_TB
- en: '| item_player_is_on | Object number of the item the player is standing on.
    |'
  prefs: []
  type: TYPE_TB
- en: '| items_player_may_carry | List containing the object numbers of items the
    player can pick up. |'
  prefs: []
  type: TYPE_TB
- en: '| items_player_may_stand_on | List containing the object numbers of items the
    player can walk on. |'
  prefs: []
  type: TYPE_TB
- en: '| LANDER_SECTOR | Room number where the Poodle lander is hidden. |'
  prefs: []
  type: TYPE_TB
- en: '| LANDER_X | The x-coordinate of where the Poodle lander is hidden. |'
  prefs: []
  type: TYPE_TB
- en: '| LANDER_Y | The y-coordinate of where the Poodle lander is hidden. |'
  prefs: []
  type: TYPE_TB
- en: '| MAP_HEIGHT | How many rooms tall the map is (see [Chapter 4](ch04.xhtml#ch04),
    [Figure 4-1](ch04.xhtml#ch04fig1) on [page 60](ch04.xhtml#page_60)). |'
  prefs: []
  type: TYPE_TB
- en: '| MAP_WIDTH | How many rooms wide the map is (see [Chapter 4](ch04.xhtml#ch04),
    [Figure 4-1](ch04.xhtml#ch04fig1) on [page 60](ch04.xhtml#page_60)). |'
  prefs: []
  type: TYPE_TB
- en: '| objects | Dictionary containing images and descriptions for all objects in
    the game. See “[Making the Space Station Objects Dictionary](ch05.xhtml#lev79)”
    on [page 85](ch05.xhtml#page_85) ([Chapter 5](ch05.xhtml#ch05)). |'
  prefs: []
  type: TYPE_TB
- en: '| outdoor_rooms | A range of the planet surface room numbers (see [Chapter
    4](ch04.xhtml#ch04), [Figure 4-1](ch04.xhtml#ch04fig1) on [page 60](ch04.xhtml#page_60)).
    |'
  prefs: []
  type: TYPE_TB
- en: '| PILLARS | Dictionary containing animation frames for front wall transparency.
    |'
  prefs: []
  type: TYPE_TB
- en: '| PLAYER | Dictionary containing player animation frames. |'
  prefs: []
  type: TYPE_TB
- en: '| player_direction | Direction player is facing. Should be left, right, up,
    or down. |'
  prefs: []
  type: TYPE_TB
- en: '| player_frame | Used for the player’s animation frame. |'
  prefs: []
  type: TYPE_TB
- en: '| PLAYER_NAME | Used in descriptions of objects and messages to the player.
    Set it as your name in the VARIABLES section. |'
  prefs: []
  type: TYPE_TB
- en: '| PLAYER_SHADOW | Dictionary containing shadows for player animation. |'
  prefs: []
  type: TYPE_TB
- en: '| player_x | Player’s *x* position in the room, measured in tiles. Set it as
    the starting position in the VARIABLES section. |'
  prefs: []
  type: TYPE_TB
- en: '| player_y | Player’s *y* position in the room, measured in tiles. Set it as
    the starting position in the VARIABLES section. |'
  prefs: []
  type: TYPE_TB
- en: '| props | Dictionary containing location of all the moveable objects in the
    game. See “[Adding the Props Information](ch09.xhtml#lev117)” on [page 151](ch09.xhtml#page_151)
    ([Chapter 9](ch09.xhtml#ch09)). |'
  prefs: []
  type: TYPE_TB
- en: '| RECIPES | List containing ways that objects can be combined to make new objects.
    See “[Combining Objects](ch10.xhtml#lev134)” on [page 177](ch10.xhtml#page_177)
    ([Chapter 10](ch10.xhtml#ch10)). |'
  prefs: []
  type: TYPE_TB
- en: '| room_map | Used to remember what’s at each position in the room the player
    is now in. Automatically generated. You don’t need to modify this. |'
  prefs: []
  type: TYPE_TB
- en: '| scenery | Dictionary containing data for positioning fixed objects in rooms.
    See “[Understanding the Dictionary for the Scenery Data](ch06.xhtml#lev85)” on
    [page 97](ch06.xhtml#page_97) ([Chapter 6](ch06.xhtml#ch06)). |'
  prefs: []
  type: TYPE_TB
- en: '| standard_responses | Dictionary of messages to display when the player uses
    items that serve no other purpose. |'
  prefs: []
  type: TYPE_TB
- en: '| suit_stitched | Set to True when the player has fixed the suit. Otherwise,
    False. |'
  prefs: []
  type: TYPE_TB
- en: '| use_message | Text shown to player when they use or try to use an object.
    |'
  prefs: []
  type: TYPE_TB
- en: '| WIDTH | Width of the game window in pixels. |'
  prefs: []
  type: TYPE_TB
