["```py\nimport pandas as pd\nhour=pd.read_csv('hour.csv')\nprint(hour.head())\n```", "```py\nFileNotFoundError: [Errno 2] No such file or directory: 'hour.csv'\n```", "```py\nC:\\Users\\DonQuixote\\Documents\\hour.csv\n```", "```py\n/home/DonQuixote/Documents/hour.csv\n```", "```py\nimport pandas as pd\nhour=pd.read_csv('/home/DonQuixote/Documents/hour.csv')\nprint(hour.head())\n```", "```py\n instant      dteday  season  yr  ...  windspeed  casual  registered count\n0        1  2011-01-01       1   0  ...        0.0       3          13    16\n1        2  2011-01-01       1   0  ...        0.0       8          32    40\n2        3  2011-01-01       1   0  ...        0.0       5          27    32\n3        4  2011-01-01       1   0  ...        0.0       3          10    13\n4        5  2011-01-01       1   0  ...        0.0       0           1     1\n\n[5 rows x 17 columns]\n```", "```py\nprint(hour['count'].mean())\n```", "```py\nprint(hour['count'].median())\nprint(hour['count'].std())\nprint(hour['registered'].min())\nprint(hour['registered'].max())\n```", "```py\nprint(hour.describe())\n```", "```py\n instant        season  ...    registered         count\ncount  17379.0000  17379.000000  ...  17379.000000  17379.000000\nmean    8690.0000      2.501640  ...    153.786869    189.463088\nstd     5017.0295      1.106918  ...    151.357286    181.387599\nmin        1.0000      1.000000  ...      0.000000      1.000000\n25%     4345.5000      2.000000  ...     34.000000     40.000000\n50%     8690.0000      3.000000  ...    115.000000    142.000000\n75%    13034.5000      3.000000  ...    220.000000    281.000000\nmax    17379.0000      4.000000  ...    886.000000    977.000000\n\n[8 rows x 16 columns]\n```", "```py\nprint(hour.loc[3,'count'])\n```", "```py\nprint(hour.loc[2:4,'registered'])\n```", "```py\nprint(hour.loc[hour['hr']<5,'registered'].mean())\n```", "```py\nprint(hour.loc[(hour['hr']<5) & (hour['temp']<.50),'count'].mean())\nprint(hour.loc[(hour['hr']<5) & (hour['temp']>.50),'count'].mean())\n```", "```py\nprint(hour.loc[(hour['temp']>0.5) | (hour['hum']>0.5),'count'].mean())\n```", "```py\nprint(hour.groupby(['season'])['count'].mean())\n```", "```py\nseason\n1    111.114569\n2    208.344069\n3    236.016237\n4    198.868856\nName: count, dtype: float64\n```", "```py\nprint(hour.groupby(['season','holiday'])['count'].mean())\n```", "```py\nseason  holiday\n1       0          112.685875\n        1           72.042683\n2       0          208.428472\n        1          204.552083\n3       0          235.976818\n        1          237.822917\n4       0          199.965998\n        1          167.722222\nName: count, dtype: float64\n```", "```py\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(x = hour['instant'], y = hour['count'])\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(x = hour['instant'], y = hour['count'])\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Count\")\nplt.title(\"Ridership Count by Hour\")\nplt.show()\n```", "```py\nhour_first48=hour.loc[0:48,:]\nfig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(x = hour_first48['instant'], y = hour_first48['count'])\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Count\")\nplt.title(\"Count by Hour - First Two Days\")\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(10, 6))\nax.scatter(x = hour_first48['instant'], y = hour_first48['count'],c='red',marker='+')\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Count\")\nplt.title(\"Count by Hour - First Two Days\")\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(10, 6))\nax.plot(hour_first48['instant'], hour_first48['casual'],c='red',label='casual',linestyle='-')\nax.plot(hour_first48['instant'],\\\nhour_first48['registered'],c='blue',label='registered',linestyle='--')\nax.legend()\nplt.show()\n```", "```py\nimport seaborn as sns\nfig, ax = plt.subplots(figsize=(10, 6))\nsns.boxplot(x='hr', y='registered', data=hour)\nplt.xlabel(\"Hour\")\nplt.ylabel(\"Count\")\nplt.title(\"Counts by Hour\")\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(10, 6))\nax.hist(hour['count'],bins=80)\nplt.xlabel(\"Ridership\")\nplt.ylabel(\"Frequency\")\nplt.title(\"Ridership Histogram\")\nplt.show()\n```", "```py\nthevariables=['hr','temp','windspeed']\nhour_first100=hour.loc[0:100,thevariables]\nsns.pairplot(hour_first100, corner=True)\nplt.show()\n```", "```py\nprint(hour['casual'].corr(hour['registered']))\nprint(hour['temp'].corr(hour['hum']))\n```", "```py\nthenames=['hr','temp','windspeed']\ncor_matrix = hour[thenames].corr()\nprint(cor_matrix)\n```", "```py\n hr      temp  windspeed\nhr         1.000000  0.137603   0.137252\ntemp       0.137603  1.000000  -0.023125\nwindspeed  0.137252 -0.023125   1.000000\n```", "```py\nplt.figure(figsize=(14,10))\ncorr = hour[thenames].corr()\nsns.heatmap(corr, annot=True,cmap='binary',\n        fmt=\".3f\",\n        xticklabels=thenames,\n        yticklabels=thenames)\nplt.show()\n```", "```py\n# Create a pivot table\ndf_hm =hour.pivot_table(index = 'hr',columns ='weekday',values ='count')\n# Draw a heatmap\nplt.figure(figsize = (20,10)) # To resize the plot\nsns.heatmap(df_hm,  fmt=\"d\", cmap='binary',linewidths=.5, vmin = 0)\nplt.show()\n```"]