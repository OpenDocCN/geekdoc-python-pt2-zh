["```py\n>>> import numpy as np\n\n>>> n = np.random.randint(0,10,10000)\n\n>>> h = np.bincount(n)\n\n>>> h\n\narray([ 975, 987, 987, 1017, 981, 1043, 1031, 988, 1007, 984])\n```", "```py\n>>> h = h / h.sum()\n\n>>> h\n\narray([0.0975, 0.0987, 0.0987, 0.1017, 0.0981, 0.1043, 0.1031, 0.0988,\n\n       0.1007, 0.0984])\n```", "```py\n>>> t = np.random.binomial(5, 0.3, size=1000)\n\n>>> s = np.bincount(t)\n\n>>> s\n\narray([159, 368, 299, 155,  17,   2])\n\n>>> s / s.sum()\n\narray([0.159, 0.368, 0.299, 0.155, 0.017, 0.002])\n```", "```py\n>>> t = np.random.binomial(1, 0.5, size=1000)\n\n>>> np.bincount(t)\n\narray([496, 504])\n```", "```py\n>>> t = np.random.binomial(1, 0.3, size=1000)\n\n>>> np.bincount(t)\n\narray([665, 335])\n\n>>> 335/1000\n\n0.335\n```", "```py\n>>> t = np.random.poisson(5, size=1000)\n\n>>> s = np.bincount(t)\n\n>>> s\n\narray([  6,  36,  83, 135, 179, 173, 156, 107,  58,  40,  20,   4,   2,\n\n         0,   0,   1])\n\n >>> t.max()\n\n15\n\n>>> s = s / s.sum()\n\n>>> s\n\narray([0.006, 0.036, 0.083, 0.135, 0.179, 0.173, 0.156, 0.107, 0.058,\n\n       0.04 , 0.02 , 0.004, 0.002, 0.   , 0.   , 0.001])\n```", "```py\n\nfrom fldr import fldr_preprocess_int\n\nfrom fldr import fldr_s\n\n```", "```py\n>>> from fldrf import fldr_preprocess_float_c\n\n>>> from fldr import fldr_sample\n\n>>> x = fldr_preprocess_float_c([0.6,0.2,0.1,0.1])\n\n>>> t = [fldr_sample(x) for i in range(1000)]\n\n >>> np.bincount(t)\n\narray([598, 190, 108, 104])\n```", "```py\nfrom scipy.misc import face\n\nim = face(True)\n\nb = np.bincount(im.ravel(), minlength=256)\n\nb = b / b.sum()\n\nx = fldr_preprocess_float_c(list(b))\n\nt = [fldr_sample(x) for i in range(25000)]\n\nq = np.bincount(t, minlength=256)\n\nq = q / q.sum()\n```", "```py\nN = 10000000\n\nB = 100\n\nt = np.random.random(N)\n\nu = np.histogram(t, bins=B)[0]\n\nu = u / u.sum()\n\nt = np.random.normal(0, 1, size=N)\n\nn = np.histogram(t, bins=B)[0]\n\nn = n / n.sum()\n\nt = np.random.gamma(5.0, size=N)\n\ng = np.histogram(t, bins=B)[0]\n\ng = g / g.sum()\n\nt = np.random.beta(5,2, size=N)\n\nb = np.histogram(t, bins=B)[0]\n\nb = b / b.sum()\n```", "```py\n\nM = 10000\n\nm = np.zeros(M)\n\nfor i in range(M):\n\n    t = np.random.beta(5,2,size=M)\n\n    m[i] = t.mean()\n```", "```py\n\nfrom fldrf import fldr_preprocess_float_c\n\nfrom fldr import fldr_sample\n\nz = fldr_preprocess_float_c([0.1,0.6,0.1,0.1,0.1])\n\nm = np.zeros(M)\n\nfor i in range(M):\n\n    t = np.array([fldr_sample(z) for i in range(M)])\n\n    m[i] = t.mean()\n```", "```py\n\nm = []\n\nfor n in np.linspace(1,8,30):\n\n    t = np.random.normal(1,1,size=int(10**n))\n\n    m.append(t.mean())\n```"]