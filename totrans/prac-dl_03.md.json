["```py\n>>> import numpy as np\n\n>>> a = np.array([1,2,3,4])\n\n>>> a\n\n    array([1, 2, 3, 4])\n\n>>> a.size\n\n    4\n\n>>> a.shape\n\n    (4,)\n\n>>> a.dtype\n\n    dtype('int64')\n```", "```py\n>>> b = np.array([1,2,3,4], dtype=\"uint8\")\n\n>>> b.dtype\n\n    dtype('uint8')\n\n>>> c = np.array([1,2,3,4], dtype=\"float64\")\n\n>>> c.dtype\n\n    dtype('float64')\n```", "```py\n>>> d = np.array([[1,2,3],[4,5,6],[7,8,9]])\n\n>>> d.shape\n\n    (3, 3)\n\n>>> d.size\n\n    9\n\n>>> d\n\n    array([[1, 2, 3],\n\n           [4, 5, 6],\n\n           [7, 8, 9]])\n```", "```py\n>>> d = np.array([[[1,11,111],[2,22,222]],\n\n                 [[3,33,333],[4,44,444]]])\n\n>>> d.shape\n\n    (2, 2, 3)\n\n>>> d\n\n    array([[[  1,  11, 111],\n\n            [  2,  22, 222]],\n\n           [[  3,  33, 333],\n\n            [  4,  44, 444]]])\n```", "```py\n>>> x = np.zeros((2,3,4))\n\n>>> x.shape\n\n    (2, 3, 4)\n\n>>> x.dtype\n\n    dtype('float64')\n\n>>> b = np.zeros((10,10),dtype=\"uint32\")\n\n>>> b.shape\n\n    (10, 10)\n\n>>> b.dtype\n\n    dtype('uint32')\n```", "```py\n>>> y = np.ones((3,3))\n\n>>> y\n\n    array([[1., 1., 1.],\n\n           [1., 1., 1.],\n\n           [1., 1., 1.]])\n\n>>> y = 10*np.ones((3,3))\n\n>>> y\n\n    array([[10., 10., 10.],\n\n           [10., 10., 10.],\n\n           [10., 10., 10.]])\n\n>>> y.dtype\n\n    dtype('float64')\n\n>>> y.astype(\"uint8\")\n\n    array([[10, 10, 10],\n\n           [10, 10, 10],\n\n           [10, 10, 10]], dtype=uint8)\n```", "```py\n>>> a = np.arange(10)\n\n>>> b = a\n\n>>> c = a.copy()\n\n>>> d = a[:]\n```", "```py\n  >>> b = np.zeros((3,4),dtype='uint8')\n\n  >>> b\n\n      array([[0, 0, 0, 0],\n\n             [0, 0, 0, 0],\n\n             [0, 0, 0, 0]], dtype=uint8)\n\n❶ >>> b[0,1] = 1\n\n  >>> b[1,0] = 2\n\n  >>> b\n\n      array([[0, 1, 0, 0],\n\n             [2, 0, 0, 0],\n\n             [0, 0, 0, 0]], dtype=uint8)\n```", "```py\n>>> b[1,0]\n\n    2\n\n>>> b[1]\n\n    array([2, 0, 0, 0], dtype=uint8)\n\n>>> b[1][0]\n\n    2\n```", "```py\n>>> a = np.arange(10)\n\n>>> a\n\n    array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n>>> a[1:4]\n\n    array([1, 2, 3])\n\n>>> a[3:7]\n\n    array([3, 4, 5, 6])\n```", "```py\n>>> a[0:8:2]\n\n    array([0, 2, 4, 6])\n\n>>> a[3:7:2]\n\n    array([3, 5])\n```", "```py\n>>> a[:6]\n\n    array([0, 1, 2, 3, 4, 5])\n\n>>> a[6:]\n\n    array([6, 7, 8, 9])\n```", "```py\n>>> a[-1]\n\n    9\n\n>>> a[::-1]\n\n    array([9, 8, 7, 6, 5, 4, 3, 2, 1, 0])\n```", "```py\n>>> b = np.arange(20).reshape((4,5))\n\n>>> b\n\n    array([[ 0,  1,  2,  3,  4],\n\n           [ 5,  6,  7,  8,  9],\n\n           [10, 11, 12, 13, 14],\n\n           [15, 16, 17, 18, 19]])\n\n>>> b[1:3,:]\n\n    array([[ 5,  6,  7,  8,  9],\n\n           [10, 11, 12, 13, 14]])\n\n>>> b[2:,2:]\n\n    array([[12, 13, 14],\n\n           [17, 18, 19]])\n```", "```py\n>>> c = np.arange(27).reshape((3,3,3))\n\n>>> c\n\n    array([[[ 0,  1,  2],\n\n            [ 3,  4,  5],\n\n            [ 6,  7,  8]],\n\n           [[ 9, 10, 11],\n\n            [12, 13, 14],\n\n            [15, 16, 17]],\n\n           [[18, 19, 20],\n\n            [21, 22, 23],\n\n            [24, 25, 26]]])\n\n>>> a = np.ones((3,3))\n\n>>> a\n\n    array([[1., 1., 1.],\n\n           [1., 1., 1.],\n\n           [1., 1., 1.]])\n```", "```py\n>>> c[1,:,:] = a\n\n>>> c\n\narray([[[ 0,  1,  2],\n\n        [ 3,  4,  5],\n\n        [ 6,  7,  8]],\n\n       [[ 1,  1,  1],\n\n        [ 1,  1,  1],\n\n        [ 1,  1,  1]],\n\n       [[18, 19, 20],\n\n        [21, 22, 23],\n\n        [24, 25, 26]]])\n```", "```py\n>>> c[0,...] = a\n\n>>> c\n\n    array([[[ 1,  1,  1],\n\n            [ 1,  1,  1],\n\n            [ 1,  1,  1]],\n\n           [[ 1,  1,  1],\n\n            [ 1,  1,  1],\n\n            [ 1,  1,  1]],\n\n           [[18, 19, 20],\n\n            [21, 22, 23],\n\n            [24, 25, 26]]])\n```", "```py\n>>> a = np.arange(5)\n\n>>> a\n\n    array([ 0, 1, 2, 3, 4])\n\n>>> c = np.arange(5)[::-1]\n\n>>> c\n\n    array([ 4, 3, 2, 1, 0])\n\n>>> a*3.14\n\n    array([ 0., 3.14, 6.28, 9.42, 12.56])\n\n>>> a*a\n\n    array([ 0,  1,  4,  9, 16])\n\n>>> a*c\n\n    array([0, 3, 4, 3, 0])\n\n>>> a//(c+1)\n\n    array([0, 0, 0, 1, 4])\n```", "```py\n>>> a\n\n    array([0, 1, 2, 3, 4])\n\n>>> b=np.arange(25).reshape((5,5))\n\n>>> b\n\n    array([[ 0,  1,  2,  3,  4],\n\n           [ 5,  6,  7,  8,  9],\n\n           [10, 11, 12, 13, 14],\n\n           [15, 16, 17, 18, 19],\n\n           [20, 21, 22, 23, 24]])\n\n>>> a*b\n\n    array([[ 0,  1,  4,  9, 16],\n\n           [ 0,  6, 14, 24, 36],\n\n           [ 0, 11, 24, 39, 56],\n\n           [ 0, 16, 34, 54, 76],\n\n           [ 0, 21, 44, 69, 96]])\n```", "```py\n>>> x = np.arange(5)\n\n>>> x\n\n    array([0, 1, 2, 3, 4])\n\n>>> np.dot(x,x)\n\n    30\n```", "```py\n>>> a = np.arange(9).reshape((3,3))\n\n>>> b = np.arange(9).reshape((3,3))\n\n>>> a\n\n    array([[0, 1, 2],\n\n           [3, 4, 5],\n\n           [6, 7, 8]])\n\n>>> np.dot(a,b)\n\n    array([[ 15,  18,  21],\n\n           [ 42,  54,  66],\n\n           [ 69,  90, 111]])\n\n>>> a*b\n\n    array([[ 0,  1,  4],\n\n           [ 9, 16, 25],\n\n           [36, 49, 64]])\n```", "```py\n1 2 3\n\n4 5 6\n\n7 8 9\n```", "```py\n  >>> a = np.loadtxt(\"abc.txt\")\n\n  >>> a\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n  >>> a = np.loadtxt(\"abc_tab.txt\")\n\n  >>> a\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n❶ >>> a = np.loadtxt(\"abc.csv\", delimiter=\",\")\n\n   >>> a\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n❷ >>> np.save(\"abc.npy\", a)\n\n❸ >>> b = np.load(\"abc.npy\")\n\n   >>> b\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n❹ >>> np.savetxt(\"ABC.txt\", b)\n\n   >>> np.savetxt(\"ABC.csv\", b, delimiter=\",\")\n```", "```py\n  >>> a\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n  >>> b\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n❶ >>> np.savez(\"arrays.npz\", a=a, b=b)\n\n   >>> q = np.load(\"arrays.npz\")\n\n❷ >>> list(q.keys())\n\n      ['a', 'b']\n\n   >>> q['a']\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n\n  >>> q['b']\n\n      array([[1., 2., 3.],\n\n             [4., 5., 6.],\n\n             [7., 8., 9.]])\n```", "```py\n>>> np.savez(\"arrays.npz\", a, b)\n```", "```py\n❶ >>> from PIL import Image\n\n   >>> from sklearn.datasets import load_sample_images\n\n❷ >>> china = load_sample_images().images[0]\n\n   >>> flower = load_sample_images().images[1]\n\n   >>> china.shape, china.dtype\n\n       ((427, 640, 3), dtype('uint8'))\n\n   >>> flower.shape, flower.dtype\n\n       ((427, 640, 3), dtype('uint8'))\n\n❸ >>> imChina = Image.fromarray(china)\n\n   >>> imFlower = Image.fromarray(flower)\n\n   >>> imChina.show()\n\n   >>> imFlower.show()\n\n❹ >>> imChina.save(\"china.png\")\n\n   >>> imFlower.save(\"flower.png\")\n\n❺ >>> im = Image.open(\"china.png\")\n\n   >>> im.show()\n```", "```py\n   >>> im = Image.open(\"china.png\")\n\n❶ >>> img = np.array(im)\n\n   >>> img.shape, img.dtype\n\n       ((427, 640, 3), dtype('uint8'))\n\n❷ >>> gray = im.convert(\"L\")\n\n   >>> gray.show()\n\n   >>> g = np.array(gray)\n\n   >>> g.shape, g.dtype\n\n       ((427, 640), dtype('uint8'))\n```"]