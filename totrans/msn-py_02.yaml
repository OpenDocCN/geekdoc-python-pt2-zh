- en: '**2'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2'
- en: LISTS CAN SAVE YOUR LIFE**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 列表可以拯救你的生命**
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/common01.jpg)'
- en: Astronauts live by lists. The safety checklists they use help make sure all
    systems are working before they entrust their lives to those systems. For example,
    emergency checklists tell the astronauts what to do in dire situations to prevent
    them from panicking. Procedural checklists confirm that they’re using their equipment
    correctly so nothing breaks and prevents them from returning home. These lists
    just might save their lives one day.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 宇航员的生活离不开列表。他们使用的安全检查清单帮助确保所有系统在他们将生命交托给这些系统之前正常运行。例如，紧急检查清单告诉宇航员在危急情况下该如何做，以避免他们惊慌失措。程序性检查清单则确认他们正确使用设备，以确保没有损坏并能顺利返回地球。这些清单有一天可能会救他们的命。
- en: In this chapter, you’ll learn how to manage lists in Python and how to use them
    for checklists, maps, and almost anything in the universe. When you build the
    *Escape* game, you’ll use lists to store information about the space station layout.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何在Python中管理列表，并如何使用它们来制作检查清单、地图以及几乎任何其他东西。当你制作*逃脱*游戏时，你将使用列表来存储有关空间站布局的信息。
- en: '**MAKING YOUR FIRST LIST: THE TAKE-OFF CHECKLIST**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建你的第一个列表：起飞检查清单**'
- en: 'Take-off is one of the most dangerous aspects of space travel. When you’re
    strapped to a rocket, you want to double-check everything before it launches.
    A simple checklist for take-off might contain the following steps:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 起飞是太空旅行中最危险的方面之一。当你被固定在火箭上时，你需要在发射前仔细检查一切。一个简单的起飞检查清单可能包含以下步骤：
- en: '![Images](../images/box.jpg)  Put on suit'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  穿上宇航服'
- en: '![Images](../images/box.jpg)  Seal hatch'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  密封舱口'
- en: '![Images](../images/box.jpg)  Check cabin pressure'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  检查舱内压力'
- en: '![Images](../images/box.jpg)  Fasten seatbelt'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  系好安全带'
- en: 'Python has the perfect way to store this information: the Python *list* is
    like a variable that stores multiple items. As you’ll see, you can use it for
    numbers and text as well as a combination of both.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python有一个完美的方法来存储这些信息：Python中的*列表*就像一个可以存储多个项的变量。正如你将看到的，你可以将它用于数字、文本，甚至是二者的组合。
- en: 'Let’s make a list in Python called take_off_checklist for our astronauts to
    use. Because we’re just practicing with a short example, we’ll enter the code
    in the Python shell rather than creating a program. (If you need a refresher on
    how to use the Python shell, see “[Introducing the Python Shell](ch01.xhtml#lev20)”
    on [page 15](ch01.xhtml#page_15).) Enter the following in the IDLE shell, pressing
    ENTER at the end of each line to start a new line in the list:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在Python中创建一个名为take_off_checklist的列表，供我们的宇航员使用。由于我们只是用一个简短的示例来练习，我们将在Python
    shell中输入代码，而不是创建一个程序。（如果你需要复习如何使用Python shell，可以查看[《介绍Python Shell》](ch01.xhtml#lev20)，见[第15页](ch01.xhtml#page_15)。）在IDLE
    shell中输入以下内容，每行末尾按ENTER键开始新的一行：
- en: '>>> take_off_checklist = ["Put on suit",'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> take_off_checklist = ["穿上宇航服",'
- en: '"Seal hatch",'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '"密封舱口",'
- en: '"Check cabin pressure",'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '"检查舱内压力",'
- en: '"Fasten seatbelt"]'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '"系好安全带"]'
- en: '**RED ALERT**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Make sure the brackets, quote marks, and commas in your code are precise.
    If you get any errors, enter the list code again, and double-check that the brackets,
    quotes, and commas are in the correct places. To avoid having to retype the code,
    use your mouse to highlight the text in the shell, right-click the text, select
    **Copy**, right-click again, and select **Paste**.*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*确保你代码中的括号、引号和逗号准确无误。如果遇到任何错误，请重新输入列表代码，并仔细检查括号、引号和逗号是否放置正确。为了避免重新输入代码，可以用鼠标选中命令行中的文本，右键点击选中文本，选择**复制**，再右键点击并选择**粘贴**。*'
- en: Let’s take a closer look at how the take_off_checklist list is made. You mark
    the start of the list with an opening square bracket. Python knows the list is
    not finished until it detects the final closing square bracket. This means you
    can press ENTER at the end of each line to continue typing the instruction, and
    Python will know you’re not finished until you’ve given it the final bracket.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看如何制作take_off_checklist列表。你可以通过一个左方括号来标记列表的开始。Python会知道，直到它检测到最后一个右方括号，列表才算结束。这意味着你可以在每行的末尾按下ENTER键继续输入指令，而Python知道你没有完成，直到你输入最后一个括号。
- en: Quote marks tell Python that you’re giving it some text and where each piece
    of text starts and ends. Each entry needs its own opening and closing quote marks.
    You also need to separate the different pieces of text with commas. The last entry
    doesn’t need a comma after it, because there isn’t another list item following
    it.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 引号告诉 Python 你正在给它一些文本，并且每一段文本的开始和结束位置在哪里。每一项都需要自己独立的开头和结尾引号。你还需要用逗号分隔不同的文本段落。最后一项后不需要逗号，因为后面没有其他项。
- en: '**SEEING YOUR LIST**'
  id: totrans-21
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**查看你的清单**'
- en: 'To see your checklist, you can use the print() function, as we did in [Chapter
    1](ch01.xhtml#ch01). Add the name of your list to the print() function, like this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看你的清单，你可以使用 print() 函数，就像我们在[第一章](ch01.xhtml#ch01)中做的那样。将清单的名称添加到 print()
    函数中，像这样：
- en: '>>> print(take_off_checklist)'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'']'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上衣服'', ''封舱'', ''检查舱内气压'', ''系好安全带'']'
- en: You don’t need quotes around take_off_checklist, because it’s the name of a
    list, not a piece of text. If you do put quotes around it, Python will just write
    the text take_off_checklist onscreen instead of giving you back your list. Try
    it to see what happens.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要在 take_off_checklist 周围加上引号，因为它是清单的名称，而不是一段文本。如果你加上引号，Python 只会在屏幕上显示文本
    take_off_checklist，而不是给你返回清单。试试看，看看会发生什么。
- en: '**ADDING AND REMOVING ITEMS**'
  id: totrans-26
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加和删除项**'
- en: 'Even after you’ve created a list, you can add an item to it using the append()
    command. The word *append* means to add something at the end (think of an appendix,
    at the end of a book). You use the append() command like this:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你已经创建了一个清单，你也可以使用 append() 命令向其中添加一个项。*append* 这个词意味着在末尾添加某些东西（想想附录，就在书的末尾）。你可以像这样使用
    append() 命令：
- en: '>>> take_off_checklist.append("Tell Mission Control checks are complete")'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> take_off_checklist.append("告诉任务控制中心检查已完成")'
- en: 'You enter the name of the list (without quote marks) followed by a period and
    the append() command, and then put the item to add in parentheses. The item will
    be added to the end of the list, as you’ll see when you print the list again:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你输入清单的名称（没有引号），后跟一个句点和 append() 命令，然后将要添加的项放入括号中。该项将被添加到清单的末尾，就像你再次打印清单时看到的那样：
- en: '>>> print(take_off_checklist)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'',
    ''Tell'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上衣服'', ''封舱'', ''检查舱内气压'', ''系好安全带'', ''告诉'
- en: Mission Control checks are complete']
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 任务控制中心检查已完成']
- en: 'You can also take items out of the list using the remove() command. Let’s remove
    the Seal hatch item:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用 remove() 命令从清单中移除项。我们来移除封舱项：
- en: '>>> take_off_checklist.remove("Seal hatch")'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> take_off_checklist.remove("封舱")'
- en: '>>> print(take_off_checklist)'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Check cabin pressure'', ''Fasten seatbelt'', ''Tell Mission'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上衣服'', ''检查舱内气压'', ''系好安全带'', ''告诉任务'
- en: Control checks are complete']
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 控制检查已完成']
- en: Again, you enter the name of the list followed by a period and the remove()
    command, and then specify the item you want to remove inside the parentheses.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 再次输入清单的名称，后跟一个句点和 remove() 命令，然后在括号内指定你想要删除的项。
- en: '**RED ALERT**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*When you’re removing an item from a list, make sure what you type matches
    the item exactly, including capital letters and any punctuation. Otherwise, Python
    won’t recognize it and will give you an error.*'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你从清单中删除一个项时，确保你输入的内容与项完全匹配，包括大写字母和任何标点符号。否则，Python 将无法识别它，并且会给你一个错误。*'
- en: '**USING INDEX NUMBERS**'
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用索引号**'
- en: Hmm, we should probably put the Seal hatch check back into the list before anyone
    at Mission Control notices. You can insert an item in a specific position in the
    list by using that item’s index number. The *index* is the position of the item
    in the list. Python starts counting at 0, not 1, so the first item in the list
    always has an index of 0, the second item has an index of 1, and so on.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我们应该在任务控制中心的人注意到之前，把封舱检查重新放回清单里。你可以通过使用项的索引号在清单中插入一个特定位置的项。*索引*是项在清单中的位置。Python
    从 0 开始计数，而不是从 1，所以清单中的第一个项总是索引 0，第二个项索引 1，依此类推。
- en: '**INSERTING AN ITEM**'
  id: totrans-43
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**插入项**'
- en: 'Using the position index, we’ll put Seal hatch back where it belongs:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用位置索引，我们将封舱项放回它应该在的位置：
- en: '>>> take_off_checklist.insert(1, "Seal hatch")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> take_off_checklist.insert(1, "封舱")'
- en: '>>> print(take_off_checklist)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'',
    ''Tell'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上衣服'', ''封舱'', ''检查舱内气压'', ''系好安全带'', ''告诉'
- en: Mission Control checks are complete']
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 任务控制中心检查已完成']
- en: Phew! I think we got away with it. Because the index starts at 0, when we inserted
    Seal hatch, we placed it at position 1, the second item in the list. The rest
    of the list items shifted down in the list to make room, increasing their index
    numbers, as shown in [Figure 2-1](ch02.xhtml#ch02fig1).
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 呼，感觉我们挺顺利的。由于索引从 0 开始，当我们插入“密封舱口”时，我们把它放在了位置 1，也就是列表中的第二项。其余的列表项向下移动，增加了它们的索引号，正如[图
    2-1](ch02.xhtml#ch02fig1)所示。
- en: '![image](../images/fig2-1.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/fig2-1.jpg)'
- en: '*Figure 2-1: Inserting an item at index 1\. Top row: before insertion. Bottom
    row: after insertion.*'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-1：在索引 1 处插入项。上排：插入前。下排：插入后。*'
- en: '**ACCESSING AN INDIVIDUAL ITEM**'
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**访问单个项**'
- en: 'You can also access a particular item in a list using the list name with the
    index number of the item you want to access in square brackets. For example, to
    print particular items in the list, you can enter the following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过列表名称加上方括号中的索引号来访问特定项。例如，若要打印列表中的特定项，可以输入如下内容：
- en: '>>> print(take_off_checklist[0])'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist[0])'
- en: Put on suit
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 穿上宇航服
- en: '>>> print(take_off_checklist[1])'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist[1])'
- en: Seal hatch
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 密封舱口
- en: '>>> print(take_off_checklist[2])'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist[2])'
- en: Check cabin pressure
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 检查舱内压力
- en: Now you can see individual items in the list!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到列表中的单个项了！
- en: '**RED ALERT**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Don’t mix up your brackets. Roughly speaking: Use square brackets when you’re
    telling Python which list item to use. Use parentheses when you’re doing something
    to the list or items in it, such as printing the list or appending items to it.
    Every opening bracket needs a closing bracket of the same type.*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要弄混括号。大致来说：当你告诉 Python 使用哪个列表项时，使用方括号；当你对列表或其中的项执行某些操作时，如打印列表或向列表中添加项，使用圆括号。每个左括号都需要有一个匹配的右括号。*'
- en: '**REPLACING AN ITEM**'
  id: totrans-63
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**替换项**'
- en: 'You can also replace an item if you know its index number. Simply enter the
    list name followed by the index of the item you want to replace, and then use
    an equal sign (=) to tell Python what you want at that index, like this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道某个项的索引号，你也可以替换它。只需输入列表名称，后面跟着你要替换的项的索引号，然后使用等号（=）告诉 Python 在该索引位置上放入你想要的内容，像这样：
- en: '>>> take_off_checklist[3] = "Take a selfie"'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> take_off_checklist[3] = "自拍"'
- en: '>>> print(take_off_checklist)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Take a selfie'',
    ''Tell'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上宇航服'', ''密封舱口'', ''检查舱内压力'', ''自拍'', ''告知任务控制检查已完成'']'
- en: Mission Control checks are complete']
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 任务控制检查已完成']
- en: 'The old item at index 3 is removed and replaced with the new item. Be aware
    that when you replace an item, Python forgets the original. Recall your training
    to put it back, like this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 索引 3 处的旧项已被移除并替换为新项。请注意，当你替换一个项时，Python 会忘记原始项。回想一下你的训练，像这样把它放回去：
- en: '>>> take_off_checklist[3] = "Fasten seatbelt"'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> take_off_checklist[3] = "系好安全带"'
- en: '>>> print(take_off_checklist)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'',
    ''Tell'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上宇航服'', ''密封舱口'', ''检查舱内压力'', ''系好安全带'', ''告知任务控制'']'
- en: Mission Control checks are complete']
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 任务控制检查已完成']
- en: '**DELETING AN ITEM**'
  id: totrans-74
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**删除项**'
- en: 'If you know where an item is in a list, you can delete it using its index number
    too, like this:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道某个项在列表中的位置，你也可以通过其索引号删除它，像这样：
- en: '>>> del take_off_checklist[2]'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> del take_off_checklist[2]'
- en: '>>> print(take_off_checklist)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(take_off_checklist)'
- en: '[''Put on suit'', ''Seal hatch'', ''Fasten seatbelt'', ''Tell Mission Control
    checks'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上宇航服'', ''密封舱口'', ''系好安全带'', ''告知任务控制检查已完成'']'
- en: are complete']
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 已完成']
- en: The "Check cabin pressure" item disappears from the list.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '"检查舱内压力" 项从列表中消失。'
- en: '**TRAINING MISSION #1**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: It’s time to practice your skills! We just deleted item 2 in the list. Can you
    insert it back into the list in the correct position? Print the list to check
    that it worked.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候练习你的技能了！我们刚刚删除了列表中的第 2 项。你能把它插回列表中的正确位置吗？打印列表检查是否成功。
- en: '**CREATING THE SPACEWALK CHECKLIST**'
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建太空行走检查清单**'
- en: 'As you know from [Chapter 1](ch01.xhtml#ch01), another dangerous activity for
    an astronaut is venturing out into the black vacuum of space with just a suit
    to protect you and provide oxygen. Here is a checklist to help keep you safe when
    you’re spacewalking:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在[第1章](ch01.xhtml#ch01)中所知道的，宇航员面临的另一个危险活动是仅穿着宇航服、依靠它来提供保护和氧气，冒险进入黑暗的太空真空中。以下是一个帮助你在太空行走时保持安全的检查清单：
- en: '![Images](../images/box.jpg)  Put on suit'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  穿上宇航服'
- en: '![Images](../images/box.jpg)  Check oxygen'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  检查氧气'
- en: '![Images](../images/box.jpg)  Seal helmet'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  密封头盔'
- en: '![Images](../images/box.jpg)  Test radio'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  测试无线电'
- en: '![Images](../images/box.jpg)  Open airlock'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 打开气闸'
- en: 'Let’s make this checklist into a Python list. We’ll call it spacewalk_checklist,
    like this:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把这个检查单变成一个Python列表。我们称它为spacewalk_checklist，像这样：
- en: '>>> spacewalk_checklist = ["Put on suit",'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> spacewalk_checklist = ["穿上宇航服",'
- en: '"Check oxygen",'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '"检查氧气",'
- en: '"Seal helmet",'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '"封闭头盔",'
- en: '"Test radio",'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '"测试无线电",'
- en: '"Open airlock"]'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '"打开气闸"]'
- en: Remember to be careful with the commas and brackets.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 记得小心逗号和括号。
- en: '**TRAINING MISSION #2**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #2**'
- en: It’s always a good idea to test your code so you know it’s working as it should.
    Can you try printing all the list items to check that they’re in the right place?
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 测试代码总是一个好主意，这样你就知道它是否按预期工作。你能试着打印所有列表项，检查它们是否在正确的位置吗？
- en: '**A LIST OF LISTS: THE FLIGHT MANUAL**'
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**列表的列表：飞行手册**'
- en: 'We have two checklists now: one for take-off and one for spacewalking. We can
    organize them by putting them into another list to create our “flight manual.”
    Think of the flight manual as a folder that contains two sheets of paper, and
    each piece of paper has one list on it.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有两个检查单：一个是起飞检查单，一个是太空行走检查单。我们可以通过将它们放入另一个列表中来组织它们，从而创建我们的“飞行手册”。可以把飞行手册想象成一个文件夹，里面有两张纸，每张纸上都有一个列表。
- en: '**MAKING A LIST OF LISTS**'
  id: totrans-101
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**制作一个列表的列表**'
- en: 'Here is how we make the flight manual list of lists:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们如何制作飞行手册的列表列表：
- en: '>>> flight_manual = [take_off_checklist, spacewalk_checklist]'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> flight_manual = [take_off_checklist, spacewalk_checklist]'
- en: 'We give IDLE the flight_manual list name, use the equal sign (=), and then
    add the two lists we want to put in the flight_manual list inside square brackets.
    As we did earlier when making lists, we separate the two items with a comma. The
    new flight_manual list has two items in it: the take_off_checklist and the spacewalk_checklist.
    When you print flight_manual, it looks like this:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们给IDLE飞行手册列表名称，使用等号（=），然后将我们想放入飞行手册列表的两个列表放入方括号中。就像我们之前制作列表时一样，用逗号分隔两个项。新的飞行手册列表有两个项：起飞检查单和太空行走检查单。当你打印飞行手册时，它看起来像这样：
- en: '>>> print(flight_manual)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(flight_manual)'
- en: '[[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'','
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '[[''穿上宇航服'', ''封闭舱口'', ''检查舱内压力'', ''系好安全带'','
- en: '''Tell Mission Control checks are complete''], [''Put on suit'', ''Check oxygen'','
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '''告诉任务控制检查完成''], [''穿上宇航服'', ''检查氧气'','
- en: '''Seal helmet'', ''Test radio'', ''Open airlock'']]'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '''封闭头盔'', ''测试无线电'', ''打开气闸'']]'
- en: '**TIP**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: Remember that you don’t need to use quote marks around list names; you use them
    only when you’re entering text into a list.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，你不需要在列表名称周围加上引号；只有在你将文本输入到列表时，才使用引号。
- en: '**RED ALERT**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*If you don’t see* ''Check cabin pressure'' *in your list, it’s because you
    skipped Training Mission #1\. To make it easier to follow along, I recommend you
    go back and complete that mission. You can check the training mission answers
    at the end of the chapter if you need to.*'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你没有看到* ''检查舱内压力'' *在你的列表中，那是因为你跳过了训练任务 #1。为了让你更容易跟上，我建议你返回并完成那个任务。如果需要，你可以在章节末尾查看训练任务的答案。*'
- en: 'The output looks messy! To work out what’s going on, look closely at the brackets.
    Square brackets mark the start and end of each list. If you strip out the list
    items, the output looks like this:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 输出看起来很混乱！为了弄清楚发生了什么，仔细看看括号。方括号标记了每个列表的开始和结束。如果你去掉列表项，输出会像这样：
- en: '[ [ first list is here ], [ second list is here ] ]'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[ [ 第一个列表在这里 ], [ 第二个列表在这里 ] ]'
- en: In the middle, you can see where the first list ends with a closed bracket followed
    by a comma before the next list begins with an opening bracket. So what happens
    when you try to print the first item in the flight_manual list?
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在中间，你可以看到第一个列表以一个闭合括号结束，后面跟着一个逗号，然后下一个列表以一个开括号开始。那么，当你尝试打印飞行手册中的第一个项目时会发生什么呢？
- en: '>>> print(flight_manual[0])'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(flight_manual[0])'
- en: 'The first item is the take_off_checklist, so the output looks like this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个项目是起飞检查单，因此输出看起来像这样：
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'',
    ''Tell'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上宇航服'', ''封闭舱口'', ''检查舱内压力'', ''系好安全带'', ''告诉'
- en: Mission Control checks are complete']
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 任务控制检查完成']
- en: '**TRAINING MISSION #3**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #3**'
- en: Try adding other checklists to flight_manual and printing them. For example,
    you could add a checklist for landing on a planet or docking with another spaceship.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将其他检查单添加到flight_manual并打印它们。例如，你可以添加一个着陆检查单或与另一艘宇宙飞船对接的检查单。
- en: '**FINDING AN ITEM IN THE FLIGHT MANUAL**'
  id: totrans-122
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**在飞行手册中查找项目**'
- en: 'If you want to look at a particular item in one of the lists in flight_manual,
    you must give Python two pieces of information: the list the item is in, and the
    index of the item in the list, in that order. For each piece of information, you
    can use index numbers, like this:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看flight_manual中的某个列表项，必须向Python提供两个信息：该项所在的列表，以及该项在列表中的索引，顺序很重要。对于每个信息，你可以使用索引数字，如下所示：
- en: '>>> print(flight_manual[0][1])'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(flight_manual[0][1])'
- en: Seal hatch
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 密封舱口
- en: 'Check your result against the printout of your checklist higher up in the shell.
    The Seal hatch item is in the first list (index 0), which is the take_off_checklist,
    and it’s the second item in that list (index 1). Those are the two index numbers
    we used to find it. Let’s choose an item from the second list:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的结果与在shell中更高位置打印出来的检查单进行对比。密封舱口项位于第一个列表（索引0）中，即take_off_checklist，并且它是该列表中的第二项（索引1）。我们用这两个索引数字找到了它。让我们从第二个列表中选择一个项目：
- en: '>>> print(flight_manual[1][3])'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(flight_manual[1][3])'
- en: Test radio
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 测试无线电
- en: This time, we’re printing from the second list (index 1), and from that list,
    we’re printing the fourth item (index 3). Although it might seem confusing that
    Python starts counting at 0, soon it will become second nature to subtract one
    from the position number you want. Be careful that you don’t end up buying one
    fewer of everything when you go shopping!
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们从第二个列表（索引1）中打印，并从该列表中打印第四项（索引3）。虽然Python从0开始计数可能让人感到困惑，但很快你就会习惯从目标位置减去1的方式了。记得去购物时别忘了购买少一件东西！
- en: '**TIP**'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: 'To print a list or variable on the screen, you can leave out the print() command
    when you’re typing into the shell, like so:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要在屏幕上打印列表或变量，你可以在shell中输入时省略print()命令，如下所示：
- en: '>>> flight_manual[0][2]'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> flight_manual[0][2]'
- en: ‘Check cabin pressure’
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: ‘检查舱内压力’
- en: This only works in the shell, though, and not in a program. Often, you’ll have
    many ways to do the same thing in Python. This book focuses on the techniques
    that will most help you make the *Escape* game. As you learn Python, you’ll find
    your own style and preferences.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这仅在shell中有效，不能在程序中使用。通常，在Python中你会有许多方法可以做同一件事。本书专注于对制作*逃脱*游戏最有帮助的技巧。随着你学习Python，你会找到自己的风格和偏好。
- en: '**COMBINING LISTS**'
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**合并列表**'
- en: 'You can join two lists using a plus sign (+) to combine them into a single
    list. Let’s make a list of all the skills needed for take-off and spacewalking
    and call it skills_list:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用加号（+）将两个列表连接起来，合并为一个单一的列表。让我们创建一个包含起飞和太空行走所需技能的列表，命名为skills_list：
- en: '>>> skills_list = take_off_checklist + spacewalk_checklist'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> skills_list = take_off_checklist + spacewalk_checklist'
- en: '>>> print(skills_list)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(skills_list)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'',
    ''Tell'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上宇航服'', ''密封舱口'', ''检查舱内压力'', ''系好安全带'', ''告知'
- en: Mission Control checks are complete', 'Put on suit', 'Check oxygen', 'Seal
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 任务控制检查已完成', '穿上宇航服', '检查氧气', '密封舱口
- en: helmet', 'Test radio', 'Open airlock']
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 头盔', '测试无线电', '打开气闸']
- en: The output you see here is a single list containing the skills astronauts need
    from the two lists we already made. We can also add more skills to the list by
    entering the combined list’s name and using += to add single items or other lists
    to the end of it. (In [Chapter 1](ch01.xhtml#ch01), you learned how to use +=
    to add a number to a variable’s value.)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这里显示的输出是一个包含了我们已经列出的两个清单中宇航员所需技能的单一列表。我们还可以通过输入合并后的列表名称并使用+=将单个项目或其他列表添加到列表的末尾，从而向列表中添加更多技能。（在[第1章](ch01.xhtml#ch01)中，你学习了如何使用+=将数字添加到变量的值中。）
- en: Few people get to go into space, so a big part of an astronaut’s role is to
    share that experience. Let’s add a list called pr_list for public relations (PR)
    skills that an astronaut might need. I think there might be a place for selfie
    skills after all!
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有人能进入太空，所以宇航员的一项重要职责就是分享这种经历。让我们添加一个名为pr_list的列表，记录宇航员可能需要的公关（PR）技能。毕竟，我觉得自拍技能可能还是有用的！
- en: '>>> pr_list = ["Taking a selfie",'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> pr_list = ["自拍",'
- en: '"Delivering lectures",'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '"做讲座",'
- en: '"Doing TV interviews",'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '"做电视采访",'
- en: '"Meeting the public"]'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '"与公众见面"'
- en: '>>> skills_list += pr_list'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> skills_list += pr_list'
- en: '>>> print(skills_list)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(skills_list)'
- en: '[''Put on suit'', ''Seal hatch'', ''Check cabin pressure'', ''Fasten seatbelt'','
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '[''穿上宇航服'', ''密封舱口'', ''检查舱内压力'', ''系好安全带'','
- en: '''Tell Mission Control checks are complete'', ''Put on suit'', ''Check oxygen'','
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '''告知任务控制检查已完成'', ''穿上宇航服'', ''检查氧气'','
- en: '''Seal helmet'', ''Test radio'', ''Open airlock'', ''Taking a selfie'', ''Delivering'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '''密封头盔'', ''测试无线电'', ''打开气闸'', ''自拍'', ''做讲座'''
- en: lectures', 'Doing TV interviews', 'Meeting the public']
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 讲座', '做电视采访', '与公众见面']
- en: The skills_list now has the items from pr_list added. The skills_list is still
    just a single list with individual items in it, unlike flight_manual, which has
    two separate lists inside it.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: skills_list 现在已经将 pr_list 中的项目添加进去了。skills_list 仍然只是一个包含单独项目的列表，不同于 flight_manual，它内部包含两个独立的列表。
- en: '**TIP**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: 'You might have noticed that this code line:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，这行代码：
- en: skills_list += pr_list
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: skills_list += pr_list
- en: 'is just a shorter way of writing this:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 只是写成这样的简化形式：
- en: skills_list = skills_list + pr_list
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: skills_list = skills_list + pr_list
- en: It’s a very useful shortcut!
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常实用的快捷方式！
- en: '**MAKING MAPS FROM LISTS: THE EMERGENCY ROOM**'
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**从列表制作地图：紧急室**'
- en: Navigation is an essential skill for an astronaut. You must always know where
    you are, where your nearest sanctuary is, and even where the air is so you’re
    always ready in an emergency. The *Escape* game will keep a map of the room the
    player is in, so it can draw the room correctly and enable the player to interact
    with objects. Let’s look at how we can use lists to make a map of the emergency
    supplies room.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 导航是宇航员必备的技能。你必须时刻知道你的位置、最近的避难所在哪里，甚至要知道空气在哪里，这样你才能在紧急情况下做好准备。*Escape* 游戏会保持玩家所在房间的地图，以便它能正确绘制房间并让玩家与物体互动。我们来看看如何利用列表制作一个紧急物资室的地图。
- en: '**MAKING THE MAP**'
  id: totrans-163
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**制作地图**'
- en: Now that you know how to manage lists and lists inside lists, you can make maps.
    This time, we’ll create a program rather than working in the shell. At the top
    of the Python window, select **File** ▸ **New File** to open a new window.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何管理列表和列表中的列表了，你可以制作地图了。这次，我们将创建一个程序，而不是在 shell 中操作。在 Python 窗口的顶部，选择
    **文件** ▸ **新建文件** 以打开新窗口。
- en: 'Enter [Listing 2-1](ch02.xhtml#ch02list1) into your new program window:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 将 [Listing 2-1](ch02.xhtml#ch02list1) 输入到你的新程序窗口中：
- en: '*listing2-1.py*'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing2-1.py*'
- en: room_map = [ [1, 0, 0, 0, 0],
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: room_map = [ [1, 0, 0, 0, 0],
- en: '[0, 0, 0, 2, 0],'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[0, 0, 0, 2, 0],'
- en: '[0, 0, 0, 0, 0],'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[0, 0, 0, 0, 0],'
- en: '[0, 3, 0, 0, 0],'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '[0, 3, 0, 0, 0],'
- en: '[0, 0, 0, 0, 4]'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '[0, 0, 0, 0, 4]'
- en: ']'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: print(room_map)
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: print(room_map)
- en: '*Listing 2-1: Setting up the emergency room*'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 2-1：设置紧急室*'
- en: 'Note that you don’t need a comma at the end of the last line in the list. This
    program creates and displays a list called room_map. Our new emergency room is
    five meters by five meters. The room_map list contains five lists. Each of those
    lists contains five numbers, which represent one row of the map. I’ve lined up
    the numbers in the code so it looks like the grid shown in [Figure 2-2](ch02.xhtml#ch02fig2),
    which shows a map of the room. Compare the diagram and the program; you’ll see
    that the first list is for the top row, the second list is for the second row,
    and so on. A 0 represents an empty space in the grid, and the numbers 1 to 4 are
    for various emergency items in the room. The numbers we’ll use in this chapter
    represent the following items:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，列表中的最后一行不需要逗号。这个程序创建并显示一个名为 room_map 的列表。我们的新紧急室是 5 米乘 5 米的。room_map 列表包含五个列表，每个列表包含五个数字，表示地图的一行。我已将代码中的数字排列成类似
    [图 2-2](ch02.xhtml#ch02fig2) 中显示的网格地图，该图展示了房间的地图。对比图示和程序，你会发现第一个列表是顶行，第二个列表是第二行，依此类推。0
    代表网格中的空白位置，数字 1 到 4 用来表示房间中的各种紧急物资。我们在本章使用的数字代表以下物品：
- en: '![image](../images/fig2-2.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig2-2.jpg)'
- en: '*Figure 2-2: Our first simple map*'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-2：我们第一个简单的地图*'
- en: Fertilizer
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 化肥
- en: Spare oxygen tanks
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备用氧气瓶
- en: Scissors
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 剪刀
- en: Toothpaste
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 牙膏
- en: Emergency blankets
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 紧急毯子
- en: Emergency radio
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 紧急无线电
- en: '**RED ALERT**'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Make sure your brackets and commas are in the correct places. One reason for
    putting [Listing 2-1](ch02.xhtml#ch02list1) into a program instead of typing it
    into the shell is so you can easily make corrections if you make a mistake.*'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '*确保你的括号和逗号位置正确。将 [Listing 2-1](ch02.xhtml#ch02list1) 放入程序中，而不是直接在 shell 中输入的一个原因是，如果出错，你可以轻松进行修正。*'
- en: 'Click **File** ▸ **Save** and save your program as *listing2-1.py*. This program
    doesn’t use Pygame Zero, so we can run it from IDLE. Click **Run** in the menu
    bar at the top of the window, and then click **Run Module**. You should see the
    following output in the shell window:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **文件** ▸ **保存** 并将程序保存为 *listing2-1.py*。该程序不使用 Pygame Zero，因此我们可以从 IDLE 运行它。在窗口顶部的菜单栏中点击
    **运行**，然后点击 **运行模块**。你应该会在 shell 窗口中看到以下输出：
- en: '[[1, 0, 0, 0, 0], [0, 0, 0, 2, 0], [0, 0, 0, 0, 0], [0, 3, 0, 0, 0],'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '[[1, 0, 0, 0, 0], [0, 0, 0, 2, 0], [0, 0, 0, 0, 0], [0, 3, 0, 0, 0],'
- en: '[0, 0, 0, 0, 4]]'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '[0, 0, 0, 0, 4]]'
- en: 'It’s hard to work out what you’re looking at when the list is shown like this,
    which is why I lined up the numbers in a grid in the program listing. But this
    shell output is the same map and the same data, so everything is where it should
    be: it’s just being presented in a different way. In [Chapter 3](ch03.xhtml#ch03),
    you’ll learn how to print this map data so it looks more like the listing we created.'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 当列表以这种方式显示时，很难看出你在看什么，这就是为什么我在程序列表中将数字排成网格的原因。但是这个 shell 输出是相同的地图和相同的数据，所以一切都在正确的位置：它只是以不同的方式呈现。在
    [第 3 章](ch03.xhtml#ch03) 中，你将学会如何打印这个地图数据，使它看起来更像我们创建的列表。
- en: '**FINDING AN EMERGENCY ITEM**'
  id: totrans-190
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**寻找紧急物品**'
- en: To find out what item is at a particular point in the map, you need to give
    Python a coordinate to check. The *coordinates* are a combination of the *y* position
    (from top to bottom) and the *x* position (from left to right), in that order.
    The *y* position will be the list in room_map you want to check (the row in the
    grid). The *x* position will be the item in that list you want to look at (the
    column) (see [Figure 2-3](ch02.xhtml#ch02fig3)). As always, remember that index
    numbers start at 0.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找地图中特定位置的物品，你需要给 Python 提供一个坐标来检查。*坐标* 是 *y* 位置（从上到下）和 *x* 位置（从左到右）的组合，顺序是这样的。*y*
    位置将是你要检查的 room_map 中的列表（即网格中的行）。*x* 位置将是你要查看的该列表中的项目（即列）（参见 [图 2-3](ch02.xhtml#ch02fig3)）。像往常一样，记住索引号从
    0 开始。
- en: '![image](../images/fig2-3.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig2-3.jpg)'
- en: '*Figure 2-3: The y-coordinate indicates the list we want to look at. The x-coordinate
    indicates the item in that list.*'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-3：y 坐标表示我们要查看的列表，x 坐标表示该列表中的项目。*'
- en: '**RED ALERT**'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*If you’ve used coordinates before, you know that you usually put the x-coordinate
    before the y-coordinate. We’re doing the opposite here because it makes the code
    simpler. If we put* x *first, we would have to make each list in* room_map *represent
    a column of the map, from top to bottom, instead of a row, from left to right.
    That would make the map look wrong in our code: the map would be on its side and
    a mirror image, which would be very confusing! Just remember that our map coordinates
    use* y *and then* x*.*'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你以前使用过坐标，你知道通常是将 x 坐标放在 y 坐标之前。我们这里做的是相反的，因为这样可以使代码更简单。如果我们先放* x *，就必须让*
    room_map *中的每个列表表示地图的一列，从上到下，而不是一行，从左到右。那样会导致我们的地图在代码中显示错误：地图会倒过来并且是镜像的，这样就会非常混乱！只要记住，我们的地图坐标使用*
    y *然后是* x *。*'
- en: 'Let’s work through an example: we’ll find out what item is at the position
    marked 2 on our simple map diagram. We need to know the following:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子来分析：我们来找出在简单地图图示上标记为 2 的位置对应的物品。我们需要知道以下信息：
- en: 'The 2 is in the second row (from top to bottom), so it’s in the second list
    in room_map. The index starts at 0, so we subtract 1 from 2 to get the index number
    for the *y* position, which is 1. Use [Figure 2-3](ch02.xhtml#ch02fig3) to check
    this index number: the index numbers for the rows are on the left of the grid
    in red.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 位于第二行（从上到下），因此它位于 room_map 中的第二个列表。索引从 0 开始，所以我们从 2 中减去 1，得到 *y* 位置的索引号，即
    1。使用 [图 2-3](ch02.xhtml#ch02fig3) 来检查这个索引号：行的索引号显示在网格的左侧，以红色标示。
- en: The 2 is in the fourth column (from left to right) of the list. Again, we subtract
    1 to get the index number for the *x* position, which is 3. Use [Figure 2-3](ch02.xhtml#ch02fig3)
    to check this index number as well. The index numbers for the columns are shown
    across the top of the grid in red.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2 位于列表的第四列（从左到右）。同样地，我们减去 1 得到 *x* 位置的索引号，即 3。使用 [图 2-3](ch02.xhtml#ch02fig3)
    来检查这个索引号。列的索引号显示在网格的顶部，以红色标示。
- en: 'Go to the shell and enter the following print() command to view the number
    in that position on the map:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 去 shell 中输入以下 print() 命令来查看该位置在地图上的数字：
- en: '>>> print(room_map[1][3])'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(room_map[1][3])'
- en: '2'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '2'
- en: As expected, the result is the number 2, which happens to be spare oxygen tanks.
    You’ve successfully navigated your first map!
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期的那样，结果是数字 2，恰好是备用氧气罐。你已经成功导航了你的第一个地图！
- en: '**TRAINING MISSION #4**'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #4**'
- en: 'Try to predict the output before you enter the following command into the shell:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 在你将以下命令输入到 shell 之前，尝试预测输出结果：
- en: '>>> print(room_map[3][1])'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(room_map[3][1])'
- en: Refer to the map in [Figure 2-2](ch02.xhtml#ch02fig2) and your code listing
    to make your prediction. If you need more help, look at [Figure 2-3](ch02.xhtml#ch02fig3).
    Then check your answer by entering the instruction in the shell.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[图2-2](ch02.xhtml#ch02fig2)中的地图和你的代码清单来做出预测。如果你需要更多帮助，可以查看[图2-3](ch02.xhtml#ch02fig3)。然后通过在shell中输入指令来检查你的答案。
- en: '**SWAPPING ITEMS IN THE ROOM**'
  id: totrans-207
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**交换房间中的物品**'
- en: 'You can also change items in the room. Let’s check which item is at the top-left
    position of the map, using the shell again:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以更改房间中的物品。让我们再次使用shell检查地图左上角的位置上是哪一个物品：
- en: '>>> print(room_map[0][0])'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(room_map[0][0])'
- en: '1'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '1'
- en: 'The 1 is fertilizer. We don’t need fertilizer in the emergency room, so let’s
    change that item to emergency blankets in the map. We’ll use a 5 to represent
    them. Remember how we used an equal sign (=) to change the value of an item in
    a list? We can do the same to change the number in the map, like this:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 1是肥料。我们在急救室中不需要肥料，所以让我们将地图中的这个项目更改为应急毯。我们将用5表示它们。还记得我们如何使用等号（=）来更改列表中项的值吗？我们可以用相同的方法来更改地图中的数字，像这样：
- en: '>>> room_map[0][0] = 5'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> room_map[0][0] = 5'
- en: 'We enter the coordinates and then enter a new number to replace the original
    number. We can check that the code worked by printing the value at that coordinate
    again, which was 1 a moment ago. Let’s also print room_map and confirm that the
    emergency blankets appear in the correct position:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 我们输入坐标，然后输入一个新的数字来替换原来的数字。我们可以通过再次打印该坐标的值来检查代码是否有效，之前的值是1。让我们还打印一下room_map，确认应急毯是否出现在正确的位置：
- en: '>>> print(room_map[0][0])'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(room_map[0][0])'
- en: '5'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '5'
- en: '>>> print(room_map)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> print(room_map)'
- en: '[[5, 0, 0, 0, 0], [0, 0, 0, 2, 0], [0, 0, 0, 0, 0], [0, 3, 0, 0, 0], [0, 0,
    0,'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '[[5, 0, 0, 0, 0], [0, 0, 0, 2, 0], [0, 0, 0, 0, 0], [0, 3, 0, 0, 0], [0, 0,
    0,'
- en: 0, 4]]
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 0, 4]]
- en: Perfect! The emergency blankets are stored in the top-left corner of the room.
    Item 5 is the first item in the first list.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 完美！应急毯被存储在房间的左上角。项目5是第一个列表中的第一个项。
- en: '**TRAINING MISSION #5**'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #5**'
- en: Space is precious in the emergency room! Replace the toothpaste (4) with an
    emergency radio (6). You’ll need to find the coordinates of the 4 first and then
    enter the command to change it. Refer to [Figure 2-2](ch02.xhtml#ch02fig2) and
    [Figure 2-3](ch02.xhtml#ch02fig3) if you need more help with the index numbers.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 急救室里的空间非常宝贵！将牙膏（4）替换为应急收音机（6）。你需要先找到4的坐标，然后输入命令进行更改。如果需要更多关于索引号的帮助，请参考[图2-2](ch02.xhtml#ch02fig2)和[图2-3](ch02.xhtml#ch02fig3)。
- en: In the *Escape* game, the room_map list is used to remember the items in the
    room the player is currently in. The map stores the number of the object that
    appears at each position on the map, or a 0 if the floor space is empty. The rooms
    in the game will be bigger than this 5 × 5 grid, so the size of the room_map will
    vary depending on the width and height of the room the player is in.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在*逃脱*游戏中，room_map列表用于记住玩家当前所在房间的物品。地图存储了每个位置上出现的物体的编号，如果地面上没有物品，则为0。游戏中的房间会比这个5
    × 5的网格更大，所以room_map的大小会根据玩家所在房间的宽度和高度而有所不同。
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你准备好飞行了吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框以确认你已经掌握了本章的关键知识点。
- en: '![Images](../images/box.jpg)  Python lists store words, numbers, or a mixture
    of both.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  Python列表可以存储单词、数字或两者的混合。'
- en: '![Images](../images/box.jpg)  To see an item in a list, use its index number
    in square brackets: for example, print(take_off_checklist[2]).'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  要查看列表中的一个项，请使用它在方括号中的索引号：例如，print(take_off_checklist[2])。'
- en: '![Images](../images/box.jpg)  The append() function adds items to the end of
    a list.'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  append()函数将项目添加到列表的末尾。'
- en: '![Images](../images/box.jpg)  The remove() function removes items from a list:
    for example, spacewalk'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  remove()函数从列表中删除项：例如，太空行走'
- en: _checklist.remove("Seal helmet").
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: _checklist.remove("密封头盔")。
- en: '![Images](../images/box.jpg)  You can use index numbers to delete or insert
    an item at a particular position in a list.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  你可以使用索引号删除或插入一个项目到列表中的特定位置。'
- en: '![Images](../images/box.jpg)  Index numbers start at 0.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  索引号从0开始。'
- en: '![Images](../images/box.jpg)  You can change an item in a list using the equal
    sign (=): for example, take_off_checklist[3] = "Test comms".'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  你可以使用等号（=）修改列表中的项：例如，take_off_checklist[3] =
    "测试通信"。'
- en: '![Images](../images/box.jpg)  You can make a list that contains other lists
    to build a simple map.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  你可以创建一个包含其他列表的列表来构建一个简单的地图。'
- en: '![Images](../images/box.jpg)  You can check which item is in your map using
    coordinates: for example, use room_map[y coordinate][x coordinate].'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg) 你可以使用坐标检查地图中的物品：例如，使用 room_map[y 坐标][x 坐标]。'
- en: '![Images](../images/box.jpg)  Be sure to use *y* first and then *x* for your
    coordinates. In space, everything is upside down.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg) 请确保先使用 *y* 然后使用 *x* 来表示坐标。在空间中，一切都是颠倒的。'
- en: '![Images](../images/box.jpg)  The coordinates are index numbers, so both start
    at 0, not 1.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg) 坐标是索引数字，因此两者都从 0 开始，而不是 1。'
- en: '![Images](../images/box.jpg)  You can use += to add an item to a list, or to
    join two lists.'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg) 你可以使用 += 将一个项目添加到列表中，或者连接两个列表。'
- en: '![image](../images/f0046-01.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0046-01.jpg)'
