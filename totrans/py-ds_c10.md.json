["```py\nDate         Closing Price\n-----------  -------------\n16-FEB-2022  10.26\n17-FEB-2022  10.34\n18-FEB-2022  10.99\n```", "```py\nTime      Coordinates\n-------   ----------------\n20:43:00  37.801618, -122.374308\n20:44:00  37.796599, -122.379432\n20:45:00  37.788443, -122.388526\n```", "```py\nTime      Event\n-------   ----------------\n8:00 AM   Registration\n9:00 AM   Morning Sessions\n12:10 PM  Lunch\n12:30 PM  Afternoon Sessions\n```", "```py\n_mysql_connector.MySQLInterfaceError: Access denied for user\n'root'@'localhost' (using password: YES)\nNameError: name 'cursor' is not defined\n```", "```py\nimport yfinance as yf\nticker = 'TSLA'\ntkr = yf.Ticker(ticker)\ndf = tkr.history(period='5d')\n```", "```py\n Open     High      Low    Close    Volume  Dividends  Stock Splits\nDate\n2022-01-10  1000.00  1059.09   980.00  1058.11  30605000          0             0\n2022-01-11  1053.67  1075.84  1038.81  1064.40  22021100          0             0\n2022-01-12  1078.84  1114.83  1072.58  1106.21  27913000          0             0\n2022-01-13  1109.06  1115.59  1026.54  1031.56  32403300          0             0\n2022-01-14  1019.88  1052.00  1013.38  1049.60  24246600          0             0\n```", "```py\nprint(df['Close'])\n```", "```py\nDate\n2022-01-10    1058.11\n2022-01-11    1064.40\n2022-01-12    1106.21\n2022-01-13    1031.56\n2022-01-14    1049.60\n```", "```py\nprint(pd.concat([df['Close'], df['Close'].shift(2)], axis=1, keys= ['Close', '2DaysShift']))\n```", "```py\n Close  2DaysShift\nDate\n2022-01-10  1058.11        NaN\n2022-01-11  1064.40        NaN\n2022-01-12  1106.21    1058.11\n2022-01-13  1031.56    1064.40\n2022-01-14  1049.60    1106.21\n```", "```py\n(df['Close'] - df['Close'].shift(2))/ df['Close'].shift(2)\n```", "```py\nimport numpy as np\ndf['2daysRise'] = np.log(df['Close'] / df['Close'].shift(2))\n```", "```py\nprint(df[['Close','2daysRise']])\n```", "```py\n Close   2daysRise\nDate\n2022-01-10  1058.11        NaN\n2022-01-11  1064.40        NaN\n2022-01-12  1106.21   0.044455\n2022-01-13  1031.56  -0.031339\n2022-01-14  1049.60  -0.052530\n```", "```py\ndf['2daysAvg'] = df['Close'].shift(1).rolling(2).mean()\nprint(df[['Close', '2daysAvg']])\n```", "```py\n Close  2daysAvg\nDate\n2022-01-10  1058.11      NaN\n2022-01-11  1064.40      NaN\n2022-01-12  1106.21  1061.26\n2022-01-13  1031.56  1085.30\n2022-01-14  1049.60  1068.89\n```", "```py\ndf['2daysAvgRise'] = np.log(df['Close'] / df['2daysAvg'])\nprint(df[['Close','2daysRise','2daysAvgRise']])\n```", "```py\n Close  2daysRise  2daysAvgRise\nDate\n2022-01-10  1058.11        NaN          NaN\n2022-01-11  1064.40        NaN          NaN\n2022-01-12  1106.21   0.044455     0.041492\n2022-01-13  1031.56  -0.031339    -0.050793\n2022-01-14  1049.60  -0.052530    -0.018202\n```", "```py\nimport pandas as pd\nimport yfinance as yf\n❶ stocks = pd.DataFrame()\n❷ tickers = ['MSFT','TSLA','GM','AAPL','ORCL','AMZN']\n❸ for ticker in tickers:\n  tkr = yf.Ticker(ticker)\n  hist = tkr.history(period='5d')\n❹ hist = pd.DataFrame(hist[['Close']].rename(columns={'Close': ticker}))\n❺ if stocks.empty:\n  ❻ stocks = hist\n  else:\n  ❼ stocks = stocks.join(hist)\n```", "```py\n MSFT    TSLA     GM    AAPL   ORCL     AMZN\nDate\n2022-01-10  314.26  1058.11  61.07  172.19  89.27  3229.71\n2022-01-11  314.98  1064.40  61.45  175.08  88.48  3307.23\n2022-01-12  318.26  1106.21  61.02  175.52  88.30  3304.13\n2022-01-13  304.79  1031.56  61.77  172.19  87.79  3224.28\n2022-01-14  310.20  1049.60  61.09  173.07  87.69  3242.76\n```", "```py\n❶ stocks_to_keep = []\n❷ for i in stocks.columns:\n  if stocks[stocks[i]/stocks[i].shift(1)< .97].empty:\n    stocks_to_keep.append(i)\nprint(stocks_to_keep)\n```", "```py\n['GM', 'AAPL', 'ORCL', 'AMZN']\n```", "```py\nprint(stocks[stocks_to_keep])\n```", "```py\n GM    AAPL   ORCL    AMZN\nDate\n2022-01-10  61.07  172.19  89.27  3229.71\n2022-01-11  61.45  175.08  88.48  3307.23\n2022-01-12  61.02  175.52  88.30  3304.13\n2022-01-13  61.77  172.19  87.79  3224.28\n2022-01-14  61.09  173.07  87.69  3242.76\n```", "```py\nimport yfinance as yf\nimport numpy as np\nticker = 'TSLA'\ntkr = yf.Ticker(ticker)\ndf = tkr.history(period='1mo')\n```", "```py\ndf = df[['Close','Volume']].rename(columns={'Close': 'Price'})\n```", "```py\ndf['priceRise'] = np.log(df['Price'] / df['Price'].shift(1))\n```", "```py\ndf['volumeRise'] = np.log(df['Volume'] / df['Volume'].shift(1))\n```", "```py\n Price    Volume  priceRise  volumeRise\nDate\n2021-12-15   975.98  25056400        NaN         NaN\n2021-12-16   926.91  27590500  -0.051585    0.096342\n2021-12-17   932.57  33479100   0.006077    0.193450\n2021-12-20   899.94  18826700  -0.035616   -0.575645\n2021-12-21   938.53  23839300   0.041987    0.236059\n2021-12-22  1008.86  31211400   0.072271    0.269448\n2021-12-23  1067.00  30904400   0.056020   -0.009885\n2021-12-27  1093.93  23715300   0.024935   -0.264778\n2021-12-28  1088.46  20108000  -0.005013   -0.165003\n2021-12-29  1086.18  18718000  -0.002097   -0.071632\n2021-12-30  1070.33  15680300  -0.014700   -0.177080\n2021-12-31  1056.78  13528700  -0.012750   -0.147592\n2022-01-03  1199.78  34643800   0.126912    0.940305\n2022-01-04  1149.58  33416100  -0.042733   -0.036081\n2022-01-05  1088.11  26706600  -0.054954   -0.224127\n2022-01-06  1064.69  30112200  -0.021758    0.120020\n2022-01-07  1026.95  27919000  -0.036090   -0.075623\n2022-01-10  1058.11  30605000   0.029891    0.091856\n2022-01-11  1064.40  22021100   0.005918   -0.329162\n2022-01-12  1106.21  27913000   0.038537    0.237091\n2022-01-13  1031.56  32403300  -0.069876    0.149168\n2022-01-14  1049.60  24246600   0.017346   -0.289984\n```", "```py\nprint(df[abs(df['priceRise']) > .05])\n```", "```py\n Price    Volume  priceRise  volumeRise\nDate\n2021-12-16   926.91  27590500  -0.051585    0.096342\n2021-12-22  1008.86  31211400   0.072271    0.269448\n2021-12-23  1067.00  30904400   0.056020   -0.009885\n2022-01-03  1199.78  34643800   0.126912    0.940305\n2022-01-05  1088.11  26706600  -0.054954   -0.224127\n2022-01-13  1031.56  32403300  -0.069876    0.149168\n```", "```py\nprint(df['volumeRise'].mean().round(4))\n```", "```py\n-0.0016\n```", "```py\nprint(df[abs(df['priceRise']) > .05]['volumeRise'].mean().round(4))\n```", "```py\n0.2035\n```"]