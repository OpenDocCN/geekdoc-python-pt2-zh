["```py\nACBA\n```", "```py\nif swap_type == 'A' and ball_location == 1:\n\n    ball_location = 2\n```", "```py\n>>> secret_word = 'olive'\n\n>>> for char in secret_word:\n\n...     print('Letter: ' + char)\n\n...\n\nLetter: o\n\nLetter: l\n\nLetter: i\n\nLetter: v\n\nLetter: e\n```", "```py\n>>> secret_word = 'olive'\n\n>>> for char in secret_word:\n\n...     print('Letter: ' + char)\n\n...     print('*')\n\n...\n\nLetter: o\n\n*\n\nLetter: l\n\n*\n\nLetter: i\n\n*\n\nLetter: v\n\n*\n\nLetter: e\n\n*\n```", "```py\n>>> len('olive')\n\n5\n```", "```py\n   >>> secret_word = 'olive'\n\n❶ >>> print(len(secret_word), 'iterations, coming right up!')\n\n   >>> for char in secret_word:\n\n ...     print('Letter: ' + char)\n\n   ...\n\n   5 iterations, coming right up!\n\n   Letter: o\n\n   Letter: l\n\n   Letter: i\n\n   Letter: v\n\n   Letter: e\n```", "```py\ns = 'garage'\n\ntotal = 0\n\nfor char in s:\n\n    total = total + s.count(char)\n\nprint(total)\n```", "```py\n>>> 'q'.isupper()\n\nFalse\n\n>>> 'Q'.isupper()\n\nTrue\n```", "```py\n>>> title = 'The Escape'\n\n>>> for char in title:\n\n...     if char.isupper():\n\n...         print(char)\n\n...\n\nT\n\nE\n```", "```py\n>>> letters = 'ABC'\n\n>>> digits = '123'\n\n>>> for letter in letters:\n\n...     for digit in digits:\n\n...         print(letter + digit)\n\n...\n\nA1\n\nA2\n\nA3\n\nB1\n\nB2\n\nB3\n\nC1\n\nC2\n\nC3\n```", "```py\ntitle = 'The Escape'\n\ntotal = 0\n\nfor char1 in title:\n\n    for char2 in title:\n\n        total = total + 1\n\nprint(total)\n```", "```py\nfor swap_type in swaps:\n\n    # Big if statement to keep track of the ball\n```", "```py\n   swaps = input()\n\n   ball_location = 1\n\n❶ for swap_type in swaps:\n\n    ❷ if swap_type == 'A' and ball_location == 1:\n\n        ❸ ball_location = 2\n\n       elif swap_type == 'A' and ball_location == 2:\n\n           ball_location = 1\n\n       elif swap_type == 'B' and ball_location == 2:\n\n           ball_location = 3\n\n       elif swap_type == 'B' and ball_location == 3:\n\n           ball_location = 2\n\n       elif swap_type == 'C' and ball_location == 1:\n\n           ball_location = 3\n\n       elif swap_type == 'C' and ball_location == 3:\n\n           ball_location = 1\n\n   print(ball_location)\n```", "```py\n# This code is incorrect\n\nswaps = input()\n\nball_location = 1\n\nfor swap_type in swaps:\n\n ❶ if swap_type == 'A' and ball_location == 1:\n\n        ball_location = 2\n\n ❷ if swap_type == 'A' and ball_location == 2:\n\n        ball_location = 1\n\n    if swap_type == 'B' and ball_location == 2:\n\n        ball_location = 3\n\n    if swap_type == 'B' and ball_location == 3:\n\n        ball_location = 2\n\n    if swap_type == 'C' and ball_location == 1:\n\n        ball_location = 3\n\n    if swap_type == 'C' and ball_location == 3:\n\n        ball_location = 1\n\nprint(ball_location)\n```", "```py\nA\n```", "```py\n>>> yesterday = 'CC.'\n\n>>> for parking_space in yesterday:\n\n...     print('The space is ' + parking_space)\n\n...\n\nThe space is C\n\nThe space is C\n\nThe space is .\n```", "```py\n3\n\nCC.\n\n.C.\n```", "```py\n>>> word = 'splore'\n\n>>> word[0]\n\n's'\n\n >>> word[3]\n\n'o'\n\n>>> word[5]\n\n'e'\n```", "```py\n>>> where = 2\n\n>>> word[where]\n\n'l'\n\n>>> word[where + 2]\n\n'r'\n```", "```py\n>>> word[len(word)]\n\nTraceback (most recent call last):\n\n  File \"<stdin>\", line 1, in <module>\n\nIndexError: string index out of range\n\n>>> word[len(word) - 1]\n\n'e'\n```", "```py\n>>> word[len(word) - 2]\n\n'r'\n```", "```py\n>>> word[-2]\n\n'r'\n\n>>> word[-1]\n\n'e'\n\n>>> word[-5]\n\n'p'\n\n>>> word[-6]\n\n's'\n\n>>> word[-7]\n\nTraceback (most recent call last):\n\n  File \"<stdin>\", line 1, in <module>\n\nIndexError: string index out of range\n```", "```py\ns = 'abcde'\n\nt = s[0] + s[-5] + s[len(s) - 5]\n\nprint(t)\n```", "```py\n>>> for num in range(5):\n\n...     print(num)\n\n...\n\n0\n\n1\n\n2\n\n3\n\n4\n```", "```py\n>>> for num in range(3, 7):\n\n...     print(num)\n\n ...\n\n3\n\n4\n\n5\n\n6\n```", "```py\n>>> for num in range(0, 10, 2):\n\n...     print(num)\n\n...\n\n0\n\n2\n\n4\n\n6\n\n8\n\n>>> for num in range(0, 10, 3):\n\n...     print(num)\n\n...\n\n0\n\n3\n\n6\n\n9\n```", "```py\n>>> for num in range(6, 2):\n\n...     print(num)\n\n...\n```", "```py\n>>> for num in range(6, 2, -1):\n\n...     print(num)\n\n...\n\n6\n\n5\n\n4\n\n3\n```", "```py\n>>> for num in range(6, -1, -1):\n\n...     print(num)\n\n...\n\n6\n\n 5\n\n4\n\n3\n\n2\n\n1\n\n0\n```", "```py\n>>> range(3, 7)\n\nrange(3, 7)\n```", "```py\n>>> list(range(3, 7))\n\n[3, 4, 5, 6]\n```", "```py\nfor i in range(10, 20):\n\n    # Some code here\n```", "```py\n>>> yesterday = 'CC.'\n\n>>> today = '.C.'\n```", "```py\n>>> yesterday[0]\n\n'C'\n\n>>> today[0]\n\n'.'\n```", "```py\n>>> for index in range(len(yesterday)):\n\n...     print(yesterday[index], today[index])\n\n...\n\nC .\n\nC C\n\n. .\n```", "```py\n   n = int(input())\n\n   yesterday = input()\n\n   today = input()\n\n❶ occupied = 0\n\n❷ for i in range(len(yesterday)):\n\n    ❸ if yesterday[i] == 'C' and today[i] == 'C':\n\n        ❹ occupied = occupied + 1\n\n   print(occupied)\n```", "```py\nmonthly_mb = int(input())\n```", "```py\nn = int(input())\n```", "```py\nfor i in range(n):\n\n    # Process month\n```", "```py\n10\n\n3\n\n4\n\n12\n\n1\n```", "```py\n   monthly_mb = int(input())\n\n   n = int(input())\n\n   excess = 0\n\n❶ for i in range(n):\n\n       used = int(input())\n\n    ❷ excess = excess + monthly_mb - used\n\n❸ print(excess + monthly_mb)\n```", "```py\nmonthly_mb = int(input())\n\nn = int(input())\n\ntotal_mb = monthly_mb * (n + 1)\n\nfor i in range(n):\n\n    used = int(input())\n\n    total_mb = total_mb - used\n\nprint(total_mb)\n```"]