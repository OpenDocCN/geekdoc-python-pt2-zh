["```py\n1 student = ['Sam', 24]2 student = {'name': 'Sam', 'age': 24}\n```", "```py\n. . .print(student['age']) # displays: 24print(student['name']) # displays: Sam\n```", "```py\nprint(student) # {'name': 'Sam', 'age': 24}\n```", "```py\n. . .if 'age' in student: print(student['age'])\n```", "```py\n. . .\nstudent['age'] = 25print(student) # {'name': 'Sam', 'age': 25}\n```", "```py\n. . .\nstudent['id'] = 199505011print(student)# {'name': 'Sam', 'id': 19950501, 'age': 25}\n```", "```py\n. . .del student['age']print(student) # {'name': 'Sam', 'id': 19950501}\n```", "```py\n. . .\nstudents = { 1 'names': ['Sam', 'Lee'], 2 'ids': [19950501, 19991114]\n}print(students['names'][1]3) # Lee\n```", "```py\n. . .\nstudents = [ {'name': 'Sam', 'id': 19950501}, {'name': 'Lee', 'id': 19991114}\n]print(students[1]['name']1) # Lee\n```", "```py\n. . .\ncourses = { 'game development': 'Prof. Smith', 'web design': 'Prof. Ncube', 'code art': 'Prof. Sato'\n}\n```", "```py\n. . .for course in courses: print(course)\n```", "```py\nweb design\ngame development\ncode art\n```", "```py\n. . .for course in **sorted(**courses**)**: print(course)\n```", "```py\ncode art\ngame development\nweb design\n```", "```py\nprint(sorted(courses.keys()))# displays: ['code art', 'game development', 'web design']\n```", "```py\n. . .for prof in courses.values(): print(prof)\n```", "```py\nprint(courses.items())\n```", "```py\n[('web design', 'Prof. Ncube'), ('game development', ...\n```", "```py\n. . .for kv in courses.items(): print(kv)\n```", "```py\n. . .for course1, prof2 in sorted(courses.items()): print('{} coordinates the {} course.'.format(prof, course))\n```", "```py\nProf. Sato coordinates the code art course.\nProf. Smith coordinates the game development course.\nProf. Ncube coordinates the web design course.\n```", "```py\n. . .**#**for course, prof in sorted(courses.items()):for course, prof in reversed(sorted(courses.items())): print('{} coordinates the {} course.'.format(prof, course))\n```", "```py\nlocation,title,creator,album,trackNum\nfile:///music/SpeakToMe.mp3,Speak to Me,Pink Floyd,The Dark Side of the Moon,1\nfile:///music/Breathe.mp3,Breathe,Pink Floyd,The Dark Side of the Moon,2. . .\n```", "```py\n[  { \"location\": \"file:///music/SpeakToMe.mp3\", \"title\": \"Speak to Me\", \"creator\": \"Pink Floyd\", \"album\": \"The Dark Side of the Moon\", \"trackNum\": 1 }, { \"location\": \"file:///music/Breathe.mp3\", \"title\": \"Breathe\", \"creator\": \"Pink Floyd\", \"album\": \"The Dark Side of the Moon\", \"trackNum\": 2 }, . . .\n```", "```py\n{  \"creator\": \"Pink Floyd\",   \"album\": \"The Dark Side of the Moon\", \"tracklist\": [ { \"location\": \"file:///music/SpeakToMe.mp3\", \"title\": \"Speak to Me\", \"trackNum\": 1 }, { \"location\": \"file:///music/Breathe.mp3\", \"title\": \"Breathe\", \"trackNum\": 2 }, . . .\n```", "```py\n[ {  \"name\": \"Espresso\",  \"ingredients\": [ {\"ingredient\":\"espresso\"1, \"quantity\":30 2, \"color\":\"#221100\"3} ] }, . . . {  \"name\": \"Irish Coffee\", \"ingredients\": [ {\"ingredient\":\"espresso\", \"quantity\":60, \"color\":\"#221100\"},  {\"ingredient\":\"whiskey\", \"quantity\":40, \"color\":\"#FFCC77\"},  {\"ingredient\":\"whippedcream\", \"quantity\":20, \"color\":\"#FFFFFF\"} ] },\n]\n```", "```py\nimport json\njsondata = open('coffees.json')\ncoffees = json.load(jsondata)\n```", "```py\nprint(coffees[8]['ingredients'][1]['quantity']) # 40\n```", "```py\n. . .size(800, 800)background('#004477')\nmug = 120\nspacing = 230\ncol = 1translate(100, 100)for coffee in coffees: 1 # ingredients code goes here # mug strokeWeight(5) stroke('#FFFFFF') noFill() square(0, 0, mug) arc(mug, mug/2, 40, 40, -HALF_PI, HALF_PI) arc(mug, mug/2, 65, 65, -HALF_PI, HALF_PI) # label fill('#FFFFFF') textSize(16) label = coffee['name'] text(label, mug/2-textWidth(label)/2, mug+40) 2 if col = 3: translate(spacing*-2, spacing) col = 1 3 else: translate(spacing, 0) col += 1\n```"]