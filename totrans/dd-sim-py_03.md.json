["```py\nsudo port install python38 py38-pip\nsudo port select --set python python38\nsudo port select --set pip py38-pip\n```", "```py\nbrew install python\n```", "```py\nsudo apt install python3 python3-pip python3-venv\n```", "```py\nsudo dnf python3 python3-pip\n```", "```py\nsudo pacman -S python python-pip\n```", "```py\nsudo apt-get update\nsudo apt-get build-dep python3.9\n```", "```py\nsudo dnf install dnf-plugins-core\nsudo dnf builddep python3\n```", "```py\nsudo yum install yum-utils\nsudo yum-builddep python3\n```", "```py\n./configure --enable-optimizations\nmake\nmake altinstall\n```", "```py\npython3\n```", "```py\npy.exe -3\n```", "```py\nPython 3.10.2 (default)\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n> \n```", "```py\n> **spam = True**\n> **if spam:**\n...     **print(\"Spam, spam, spam, spam...\")**\n...\nSpam, spam, spam, spam...\n```", "```py\n> **exit()**\n```", "```py\npython3 myfile.py\n```", "```py\npython3 -m ❶ venv ❷ venv\n```", "```py\npython3 -m venv /opt/myvirtualenv\n```", "```py\nvirtualenv -p python3 venv\n```", "```py\n$ **source venv/bin/activate**\n```", "```py\n> **venv\\Scripts\\activate.bat**\n```", "```py\n> **venv\\Scripts\\activate.ps1**\n```", "```py\npython3 -m venv **--system-site-packages** venv\n```", "```py\n$ **deactivate**\n```", "```py\n> **venv\\Scripts\\deactivate.bat**\n```", "```py\npython3 -m pip `command`\n```", "```py\npip install PySide6\n```", "```py\npip install PySide6==6.1.2\n```", "```py\npip install PySide6>=6.1.2\n```", "```py\nPySide2>=5.11.1\nappdirs\n```", "```py\npip install -r requirements.txt\n```", "```py\npip install --upgrade PySide6\n```", "```py\npip install --upgrade -r requirements.txt\n```", "```py\npip uninstall `package`\n```", "```py\npip search web scraping\n```", "```py\nvenv/\n```", "```py\n❶  #!/usr/bin/env python3\n\nprint(\"Hello, world!\")\n```", "```py\n./hello_world.py\n```", "```py\n#!/usr/bin/python\n```", "```py\n#!/usr/bin/**env python3**\n```", "```py\n#!/usr/bin/env **python**\n```", "```py\n# -*- coding: latin-1 -*-\n```", "```py\n# coding: latin-1\n```", "```py\n# This Python file uses the following encoding: latin-1\n```", "```py\nvenv/bin/pip install pylint\nvenv/bin/python\n\n> import pylint\n```", "```py\npylint filetocheck.py\n```", "```py\npylint `myawesomeproject`\n```", "```py\ndef cooking():\n    ham = True\n    print(eggs)\n    return order\n```", "```py\npylint cooking.py\n```", "```py\n************* Module cooking\ncooking.py:1:0: C0111: Missing module docstring (missing-docstring)\ncooking.py:1:0: C0111: Missing function docstring (missing-docstring)\ncooking.py:3:10: E0602: Undefined variable 'eggs' (undefined-variable)\ncooking.py:4:11: E0602: Undefined variable 'order' (undefined-variable)\ncooking.py:2:4: W0612: Unused variable 'ham' (unused-variable)\n\n-----------------------------------------------------------------------\nYour code has been rated at -22.50/10\n```", "```py\n**# pylint: disable=missing-docstring**\n\ndef cooking():  **# pylint: disable=missing-docstring**\n    ham = True\n    print(eggs)\n    return order\n```", "```py\n************* Module cooking\ncooking.py:5:10: E0602: Undefined variable 'eggs' (undefined-variable)\ncooking.py:6:11: E0602: Undefined variable 'order' (undefined-variable)\ncooking.py:4:4: W0612: Unused variable 'ham' (unused-variable)\n\n----------------------------------------------------------------------\nYour code has been rated at -17.50/10 (previous run: -22.50/10, +5.00)\n```", "```py\npylint --generate-rcfile > pylintrc\n```", "```py\npylint --rcfile=myrcfile `filetocheck.py`\n```", "```py\nflake8 cooking.py\n```", "```py\ncooking.py:2:5: F841 local variable 'ham' is assigned to but never used\ncooking.py:3:11: F821 undefined name 'eggs'\ncooking.py:4:12: F821 undefined name 'order'\n```", "```py\nflake8 --max-complexity 10 cooking.py\n```", "```py\ndef cooking():\n    ham = True    # noqa F841\n    print(eggs)   # noqa F821, F841\n    return order  # noqa\n```", "```py\n[flake8]\nmax-complexity = 10\n```", "```py\nmypy `filetocheck.py`\n```", "```py\nautopep8 --in-place --aggressive --aggressive `filetochange.py`\n```", "```py\nblack `filetochange.py`\n```", "```py\n#!/usr/bin/env python3\n\nprint(\"Hello, world!\")\n```", "```py\npython3 hello_world.py\n```", "```py\nHello, world!\n```"]