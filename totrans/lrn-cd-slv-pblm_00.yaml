- en: INTRODUCTION
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: '![image](Images/common.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](Images/common.jpg)'
- en: We use computers to accomplish tasks and to solve problems. For example, perhaps
    you’ve used a word processor to write an essay or letter. Perhaps you’ve used
    a spreadsheet program to organize your finances. Perhaps you’ve used an image
    editor to touch up a picture. It’s hard to imagine doing these things these days
    without a computer. We get a lot of mileage out of our word processors and spreadsheet
    programs and image editors.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用计算机来完成任务和解决问题。例如，也许你曾使用文字处理器写过文章或信件。也许你曾使用电子表格程序来整理财务。也许你曾使用图像编辑器来修饰图片。如今，很难想象不使用计算机来做这些事情。我们从文字处理器、电子表格程序和图像编辑器中获得了很多帮助。
- en: Those programs are written as general-purpose tools to accomplish a wide variety
    of tasks. Ultimately, though, they’re programs written by others, not by us. What
    do we do when an off-the-shelf program doesn’t quite do what we need?
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这些程序是作为通用工具编写的，用来完成各种各样的任务。然而，最终它们是别人编写的程序，而不是我们编写的。当现成的程序无法完全满足我们的需求时，我们该怎么办？
- en: In this book, our goal is to learn how to take control of our computer by going
    beyond what can be done by an end user using preexisting programs. We’re going
    to write our own programs. We won’t write a word processor or a spreadsheet or
    an image editor. Those are huge tasks that, fortunately, people have already done.
    Rather, we’re going to learn how to write small programs to solve problems that
    we otherwise wouldn’t be able to solve. I want to help you learn to communicate
    instructions to a computer; these instructions will tell the computer how to carry
    out your plan for solving a problem.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我们的目标是学习如何通过编写自己的程序来控制计算机，而不仅仅是使用现有的程序完成用户能做的事情。我们将编写自己的程序。我们不会编写文字处理器、电子表格或图像编辑器。这些是巨大的任务，幸运的是，已经有人完成了这些工作。相反，我们将学习如何编写小型程序来解决我们否则无法解决的问题。我希望帮助你学习如何向计算机传达指令；这些指令将告诉计算机如何执行你为解决问题而制定的计划。
- en: To give instructions to a computer, we write code in a *programming language*.
    A programming language specifies the rules for the code we write and dictates
    what the computer does in response to that code.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要向计算机传达指令，我们用*编程语言*编写代码。编程语言规定了我们编写代码的规则，并决定计算机如何根据这些代码执行任务。
- en: We’re going to learn to program in the Python programming language. That’s a
    concrete skill that you’ll take away from this book, one that you can put on your
    résumé. More than Python, though, you’ll learn the type of thinking required to
    solve problems using a computer. Programming languages come and go. The way that
    we solve problems does not. I hope that this book helps you on your way from end
    user to programmer and that you have fun exploring what’s possible.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习用Python编程语言编程。这是你将从本书中学到的一项具体技能，你可以把它写在你的简历上。不过，除了Python，你还将学习用计算机解决问题所需的思维方式。编程语言时常更替，但我们解决问题的方法不会改变。我希望这本书能帮助你从终端用户转变为程序员，并希望你在探索可能性时享受乐趣。
- en: Online Resources
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在线资源
- en: Supplementary resources for the book, including downloadable code and additional
    exercises, are available at *[https://nostarch.com/learn-code-solving-problems/](https://nostarch.com/learn-code-solving-problems/)*.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的补充资源，包括可下载的代码和额外的练习，已在*[https://nostarch.com/learn-code-solving-problems/](https://nostarch.com/learn-code-solving-problems/)*
    提供。
- en: Who This Book Is For
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书适合谁
- en: This book is for anyone who wants to learn how to write computer programs to
    solve problems. I have three particular types of people in mind.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书适合任何想要学习如何编写计算机程序以解决问题的人。我特别考虑了三类人。
- en: First, you may have heard about the Python programming language and want to
    learn how to write code in Python. I’ll explain in the next section why Python
    is a great choice as a first programming language to learn. You’ll learn a lot
    about Python in this book, and you’ll be in a position to read more advanced books
    on Python if that’s your next step.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你可能听说过Python编程语言，并希望学习如何用Python编写代码。我将在下一节中解释为什么Python是学习编程的一个很好的选择。你将在本书中学到很多关于Python的内容，并且如果你接下来的步骤是深入学习Python，你将有能力阅读更高级的Python书籍。
- en: 'Second, if you haven’t heard of Python or just want to learn what programming
    is all about, don’t worry: this book is for you, too! This book will teach you
    how to think about programming. Programmers have particular ways of breaking down
    problems into manageable pieces and expressing solutions to those pieces in code.
    At this level, it doesn’t matter what programming language is being used, because
    the way that programmers think is not tied to a particular language.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，如果你以前没有听说过 Python，或者只是想了解编程是什么，别担心：这本书也适合你！本书将教你如何思考编程。程序员有特定的方式将问题分解为可管理的小部分，并通过代码表达这些解决方案。在这个层面上，使用什么编程语言并不重要，因为程序员的思维方式并不局限于某种特定语言。
- en: Finally, you may be interested in learning some other programming language such
    as C++, Java, Go, or Rust. Much of what you learn as a byproduct of learning Python
    will be useful when you study those other programming languages. Plus, Python
    is certainly worth learning in its own right. Let’s turn to why next.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可能对学习其他编程语言感兴趣，例如 C++、Java、Go 或 Rust。学习 Python 时的副产品中，有很多知识在你学习其他编程语言时同样适用。而且，Python
    本身就是一门值得学习的语言。接下来，让我们讨论一下原因。
- en: Why Learn Python?
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么要学习 Python？
- en: Years of teaching introductory programming have demonstrated to me that Python
    is a great choice for a first programming language. Compared to other languages,
    Python code is often more structured and readable. Once you get used to it, you
    might agree that parts of it almost read like English! Python also comes with
    many features that are not available in other languages, including powerful tools
    to manipulate and store data. We’ll use many of these features throughout the
    book.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 多年的入门编程教学让我深刻认识到，Python 是作为第一门编程语言的绝佳选择。与其他语言相比，Python 代码通常更加结构化和易读。一旦你习惯了，可能会同意
    Python 的某些部分几乎像英语一样！Python 还具备许多其他语言所没有的功能，包括强大的数据处理和存储工具。本书将会贯穿使用这些功能。
- en: Not only is Python an excellent teaching language, but it’s also one of the
    most in-demand programming languages in the world. Programmers use it to write
    web applications, games, visualizations, machine learning software, and more.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Python 不仅是一种优秀的教学语言，而且是全球需求量最大的编程语言之一。程序员用它来编写 Web 应用、游戏、数据可视化、机器学习软件等等。
- en: 'There we have it: a language well-suited for teaching that also carries a professional
    advantage for you. I can’t ask for any more than that!'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是它了：一种非常适合教学的语言，同时也能为你带来职业上的优势。我不能再要求更多了！
- en: Installing Python
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Python
- en: Before we can program in Python, we need to install it. Let’s do that now.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始用 Python 编程之前，我们需要先安装它。现在就让我们来安装吧。
- en: 'There are two major versions of Python: Python 2 and Python 3\. Python 2 is
    an older version of Python and is no longer supported. In this book, we use Python
    3, so you’ll need to install Python 3 on your computer.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Python 有两个主要版本：Python 2 和 Python 3。Python 2 是较旧的版本，目前已不再支持。在本书中，我们使用的是 Python
    3，所以你需要在你的电脑上安装 Python 3。
- en: Python 3 was a major evolution from Python 2, but Python continues to change
    even within version 3\. The first version of Python 3 was Python 3.0\. Then Python
    3.1 was released, then Python 3.2, and so on. At the time of writing, the latest
    version of Python 3 is Python 3.9\. Versions as old as Python 3.6 will suffice
    for this book, but I encourage you to install and work with the latest version
    of Python.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3 是 Python 2 的一次重大进化，但即便在 3.x 版本内，Python 依然在不断变化。Python 3 的第一个版本是 Python
    3.0，接着发布了 Python 3.1，然后是 Python 3.2，依此类推。截至目前，Python 3 的最新版本是 Python 3.9。虽然 Python
    3.6 版本已经足够本书使用，但我还是鼓励你安装并使用 Python 的最新版本。
- en: Follow these steps for your operating system to install Python.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤安装 Python，具体操作方式取决于你的操作系统。
- en: Windows
  id: totrans-23
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Windows
- en: Windows doesn’t come with Python by default. To install it, go to *[https://www.python.org/](https://www.python.org/)*
    and click **Downloads**. This should offer you the option of downloading the latest
    version of Python for Windows. Click the link to download Python and then run
    the installer. On one of the first screens in the installation process, click
    either **Add Python 3.9 to PATH** or **Add Python to environment variables**;
    this makes running Python much easier. (If upgrading Python, you may need to click
    “Customize installation” to find this option.)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Windows默认不带Python。要安装它，访问 *[https://www.python.org/](https://www.python.org/)*
    并点击**Downloads**。这将为你提供下载最新版本Python的选项，适用于Windows。点击链接下载Python并运行安装程序。在安装过程的第一个界面，点击**Add
    Python 3.9 to PATH**或**Add Python to environment variables**；这样可以让运行Python变得更加简便。（如果是升级Python，可能需要点击“Customize
    installation”来找到这个选项。）
- en: macOS
  id: totrans-25
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: macOS
- en: macOS doesn’t come with Python 3 by default. To install it, go to *[https://www.python.org/](https://www.python.org/)*
    and click **Downloads**. This should offer you the option of downloading the latest
    version of Python for macOS. Click the link to download Python and then run the
    installer.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: macOS默认不带Python 3。要安装它，访问 *[https://www.python.org/](https://www.python.org/)*
    并点击**Downloads**。这将为你提供下载最新版本Python的选项，适用于macOS。点击链接下载Python并运行安装程序。
- en: Linux
  id: totrans-27
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Linux
- en: Linux comes with Python 3, but it may be an older version of Python 3\. Installation
    instructions will vary depending on which Linux distribution you’re using, but
    you should be able to install the newest version of Python using your favorite
    package manager.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Linux自带Python 3，但可能是旧版本的Python 3。安装说明会根据你使用的Linux发行版有所不同，但你应该能够通过你喜欢的包管理器安装最新版本的Python。
- en: How to Read This Book
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如何阅读本书
- en: Reading this book from cover to cover in one sitting is likely to teach you
    very little. It would be like trying to learn piano by inviting someone into your
    house to play piano for a few hours and then kicking them out, lowering the lights,
    and serenading. That’s not how a practice-based skill is learned.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一口气读完这本书可能学到的东西非常有限。它就像试图通过邀请某人到你家里弹钢琴几小时，然后赶他们走，关灯，然后自己唱情歌来学钢琴。这不是通过练习学习一项技能的方式。
- en: 'Here is my advice for making your way through the book:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我给你的一些建议，帮助你顺利读完这本书：
- en: '**Space out your work.** Massing your practice into a small number of sessions
    is far less effective than spacing your practice out. When you feel tired, take
    a break. No one can tell you how much time to work before taking a break. No one
    can tell you how long it should take you to finish the book. It’s up to your own
    mind and body.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**分散你的学习时间。** 将学习集中在少数几次练习中，比分散学习效果差得多。当你感到疲劳时，休息一下。没有人能告诉你在休息前需要学习多久，也没有人能告诉你完成这本书应该花多长时间。那完全取决于你的身体和大脑。'
- en: '**Pause to test your understanding.** Reading about something can give us the
    illusion that we understand it better than we do. Applying the material forces
    what we know and what we think we know into alignment. For that reason, at key
    points in each chapter, I’ve included multiple-choice “concept check” questions
    that ask you to make a prediction. Take these seriously! Read each question and
    commit to a response without checking anything using your computer. Then, read
    my answer and explanation. This is an opportunity to confirm that you’re on the
    right track. If you answer incorrectly or answer correctly but for the wrong reason,
    take time to remedy your understanding before continuing. This could involve playing
    around a little more with the relevant Python feature being discussed, rereading
    material from the book, or searching for additional explanations and examples
    online.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**暂停测试你的理解。** 阅读某个内容可能让我们产生比实际理解更深的错觉。将所学应用到实际中，能使我们已经知道的与我们以为知道的内容达成一致。因此，在每一章的关键点，我都添加了多项选择题“概念检查”问题，要求你做出预测。认真对待这些问题！阅读每个问题，并在没有查看任何计算机资料的情况下做出回答。然后，阅读我的答案和解释。这是确认你是否在正确轨道上的机会。如果你的答案不正确，或者回答正确但原因不对，花些时间纠正你的理解后再继续。这可能涉及更多地玩弄相关的Python功能、重新阅读书中的材料，或在线搜索额外的解释和例子。'
- en: '**Practice programming.** Making predictions while you read will help solidify
    your understanding of key concepts. But you need more than that to become an adept
    problem-solver and programmer. You need to practice using Python to solve new
    problems, whose solutions you haven’t read about in the book. Each chapter concludes
    with a list of practice exercises. Please work through as many of these exercises
    as you can.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**编程实践。** 在阅读时做出预测可以帮助巩固你对关键概念的理解。但光有这些还不够，要成为一名熟练的问题解决者和程序员，你需要通过使用Python解决你在书中还没有看到过的全新问题来进行实践。每一章的结尾都有一系列的练习题，请尽可能完成这些练习。'
- en: Learning how to program takes time. Don’t be discouraged if you progress slowly
    or make a lot of mistakes. Don’t be intimidated by any blustering peacocks that
    you might encounter online. Surround yourself with people and resources that can
    help you learn.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 学习编程需要时间。如果你进展缓慢或犯了很多错误，不要灰心丧气。不要被你在网上遇到的任何吹嘘的“孔雀”吓倒。要把自己置身于能够帮助你学习的人和资源之中。
- en: Using Programming Judges
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用编程评测
- en: I’ve decided to structure this book around problems from *programming judge*
    websites. A programming judge website offers a repository of programming problems
    that can be solved by programmers around the world. You submit your solution—your
    Python code—and the site runs tests on your code. If your code produces the correct
    answer for each test case, then it’s likely that your solution is correct. If
    instead your code produces the wrong answer for one or more test cases, then your
    code is incorrect, and revisions are required.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我决定围绕*编程评测*网站上的问题来构建这本书。编程评测网站提供了一个编程问题库，全球的程序员都可以在这里解决问题。你提交你的解决方案——你的Python代码——网站会对你的代码进行测试。如果你的代码对每个测试用例都能给出正确答案，那么你的解决方案很可能是正确的。如果你的代码对一个或多个测试用例给出了错误答案，那么你的代码是错误的，需要进行修改。
- en: 'There are several reasons why I think programming judges are particularly suitable
    sites for learning programming:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为编程评测特别适合学习编程的原因有几个：
- en: '**Rapid feedback** Rapid, targeted feedback is crucial in the early stages
    of learning to program. Programming judges provide feedback as soon as you submit
    your code.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速反馈** 在学习编程的早期阶段，快速、针对性的反馈至关重要。编程评测网站会在你提交代码后立即提供反馈。'
- en: '**High-quality problems** I find the problems on programming judges to be high
    quality. Many problems are originally from competitive programming contests. Other
    problems are written by individuals who are associated with a programming judge
    or simply want to help others learn. See the Problem Credits appendix for the
    source of each problem that we’ll study.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**高质量问题** 我发现编程评测网站上的问题质量很高。许多问题最初来源于编程竞赛。其他问题则是由与编程评测相关的个人编写的，或者是那些单纯希望帮助他人学习的人编写的。关于我们将要学习的每个问题的来源，请参阅问题来源附录。'
- en: '**Quantity of problems** The programming judges contain hundreds of problems.
    I’ve selected only a small number for this book. If you need more practice, trust
    me: the programming judges can provide it.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**问题数量** 编程评测网站上有数百个问题。我只为本书选取了其中的一小部分。如果你需要更多练习，相信我：编程评测网站能提供更多。'
- en: '**Community features** The programming judges enable users to read and respond
    to comments. If you’re stuck on a problem, browse the comments for hints dropped
    there by others. If you’re still stuck, consider posting a comment of your own
    asking for help. Once you’ve successfully solved a problem, your learning is not
    done! Many programming judges allow you to view the code that others have submitted.
    Dig through a few such submissions to see how they compare to yours. There are
    always multiple ways to solve a problem. Perhaps your way is most intuitive to
    you right now, but opening yourself to other possibilities is an important step
    toward programming mastery.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**社区功能** 编程评测网站允许用户阅读并回复评论。如果你在某个问题上卡住了，可以浏览评论区，看看其他人是否留下了提示。如果你仍然卡住，可以考虑发帖求助。一旦你成功解决了一个问题，你的学习并没有结束！许多编程评测网站允许你查看其他人提交的代码。翻阅一些这样的提交，看看它们与你的代码有什么不同。解决问题的方式总是有多种的，也许你当前的方法对你来说是最直观的，但敞开心扉接受其他可能性是迈向编程精通的重要一步。'
- en: Making Your Programming Judge Accounts
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建你的编程评测账户
- en: We’ll use several programming judge websites throughout the book. That’s because
    each programming judge hosts some problems that are not found on other programming
    judges; we need multiple programming judges to cover all of the problems that
    I’ve chosen.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中会使用多个编程评测系统。这是因为每个评测系统都有一些其他评测系统没有的问题；我们需要多个评测系统来涵盖我所选择的所有问题。
- en: 'Here are the programming judges that we’ll use:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是我们将使用的编程评测系统：
- en: '| **Judge** | **URL** |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| **评测系统** | **网址** |'
- en: '| --- | --- |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| DMOJ | *[https://dmoj.ca/](https://dmoj.ca/)* |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| DMOJ | *[https://dmoj.ca/](https://dmoj.ca/)* |'
- en: '| Timus | *[https://acm.timus.ru/](https://acm.timus.ru/)* |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| Timus | *[https://acm.timus.ru/](https://acm.timus.ru/)* |'
- en: '| USACO | *[http://usaco.org/](http://usaco.org/)* |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| USACO | *[http://usaco.org/](http://usaco.org/)* |'
- en: Each programming judge requires that you create an account before you can submit
    code. Let’s go through the process of creating your accounts now and learn a little
    about the judges while we’re at it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 每个编程评测系统都要求你在提交代码之前创建账户。我们现在就来了解一下如何创建账户，并在过程中稍微了解一下这些评测系统。
- en: The DMOJ Judge
  id: totrans-52
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: DMOJ评测系统
- en: The DMOJ judge is the judge we’ll use most often in the book. More than for
    any other judge, it’s worth your time exploring the DMOJ website and learning
    about what the judge offers.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: DMOJ评测系统是我们在本书中最常使用的评测系统。相比其他评测系统，值得你花时间浏览DMOJ网站，了解它提供的功能。
- en: To create an account on the DMOJ judge, go to *[https://dmoj.ca/](https://dmoj.ca/)*
    and click **Sign up**. On the registration page that comes up, enter your username,
    password, and email address. This page also allows you to set your default programming
    language. We’ll exclusively be using the Python programming language in this book,
    so I suggest clicking **Python 3** here. Click **Register!** to create your account.
    Once registered, you can use your username and password to log in to DMOJ.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要在DMOJ评测系统上创建一个账户，访问 *[https://dmoj.ca/](https://dmoj.ca/)* 并点击 **注册**。在弹出的注册页面上，输入你的用户名、密码和电子邮件地址。该页面还允许你设置默认的编程语言。我们在本书中将只使用Python编程语言，因此建议在这里点击
    **Python 3**。点击 **注册!** 来创建你的账户。注册后，你可以使用用户名和密码登录DMOJ。
- en: Each problem in the book begins by indicating the judge website where the problem
    can be found and the problem code that you should use to access it. For example,
    the first problem that we’ll work on in [Chapter 1](ch01.xhtml#ch01) is found
    on DMOJ and is problem dmopc15c7p2. To find this problem on DMOJ, click **Problems**,
    type **dmopc15c7p2** in the search box, and click **Go**. You should see the problem
    as the only result. If you click the problem title, you should see the problem
    itself.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的每个问题开始时都会标明该问题所在的评测网站以及你应该使用的题目代码。例如，我们将在[第1章](ch01.xhtml#ch01)中处理的第一个问题位于DMOJ，题目代码为dmopc15c7p2。要在DMOJ上找到这个问题，点击
    **问题**，在搜索框中输入 **dmopc15c7p2** 并点击 **搜索**。你应该会看到该问题是唯一的搜索结果。点击问题标题，你就能看到题目内容。
- en: When you’re ready to submit Python code for a problem, find the problem and
    click **Submit solution**. On the resulting page, paste your Python code into
    the text box and click **Submit!**. Your code will then be judged and the results
    shown.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备提交Python代码时，找到该问题并点击 **提交解答**。在弹出的页面中，将你的Python代码粘贴到文本框中，然后点击 **提交!**。你的代码将被评测，结果会显示出来。
- en: The Timus Judge
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: Timus评测系统
- en: To create an account on the Timus judge, go to *[https://acm.timus.ru/](https://acm.timus.ru/)*
    and click **Register**. On the registration page that comes up, enter your name,
    password, email address, and other requested information. Click **Register** to
    create your account. Then, check your email for a message from Timus containing
    your judge ID. You’ll need your judge ID whenever you submit Python code.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Timus评测系统上创建账户，访问 *[https://acm.timus.ru/](https://acm.timus.ru/)* 并点击 **注册**。在弹出的注册页面上，输入你的姓名、密码、电子邮件地址以及其他所需信息。点击
    **注册** 来创建账户。然后，检查你的电子邮件，Timus会发一封邮件给你，里面包含你的评测系统ID。每次提交Python代码时，你都需要使用该ID。
- en: There’s currently no way to set your default programming language, so be sure
    to choose the available version of Python 3 whenever you submit Python code.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 目前没有办法设置默认的编程语言，因此在提交Python代码时，务必选择可用的Python 3版本。
- en: We use the Timus judge only once, in [Chapter 6](ch06.xhtml#ch06), so I won’t
    say any more about it here.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本书中只使用一次Timus评测系统，出现在[第6章](ch06.xhtml#ch06)，所以这里不再详细讲解。
- en: The USACO Judge
  id: totrans-61
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: USACO评测系统
- en: To create an account on the USACO judge, go to *[http://usaco.org/](http://usaco.org/)*
    and click **Register for New Account**. On the registration page that comes up,
    enter your username, email address, and other requested information. Click **Submit**
    to create your account. Then, check your email for a message from USACO containing
    your password. Once you have your password, you can use your username and password
    to log in to USACO.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 USACO 评测平台创建账户，访问 *[http://usaco.org/](http://usaco.org/)* 并点击 **Register
    for New Account**。在出现的注册页面中，输入你的用户名、电子邮件地址以及其他要求的信息。点击 **Submit** 来创建账户。然后，查看你的邮箱，USACO
    会发一封包含密码的邮件给你。一旦你获得密码，就可以使用用户名和密码登录 USACO。
- en: There’s currently no way to set your default programming language, so be sure
    to choose the available version of Python 3 whenever you submit Python code. You’ll
    also need to choose the file containing your Python code rather than paste your
    code into a text box.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 目前没有办法设置默认的编程语言，因此每次提交 Python 代码时，务必选择可用的 Python 3 版本。你还需要选择包含 Python 代码的文件，而不是将代码粘贴到文本框中。
- en: We won’t be using the USACO judge until [Chapter 7](ch07.xhtml#ch07), so I won’t
    say any more about it here.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 [第 7 章](ch07.xhtml#ch07) 才会使用 USACO 评测平台，所以这里就不再多说了。
- en: About This Book
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书简介
- en: Each chapter in the book is driven by two or three problems from a programming
    judge website. In fact, I start each chapter by posing our first problem, before
    teaching any new Python at all! My goal in doing this is to motivate you to want
    to learn the Python features that we need to solve the problem. Don’t worry if
    you’re not sure how to solve a problem after reading its description. (If you
    can’t solve the problem yet, then you’re reading the right book!) If you understand
    what the problem is asking you to do, then you’re all set. We’re going to learn
    Python and solve the problem together. Subsequent problems in the chapter may
    introduce further Python features or ask us to extend what we learned in the first
    problem. Each chapter concludes with exercises that you should solve on your own
    to practice what you just learned.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的每一章都由编程评测网站上的两个或三个问题驱动。事实上，我在每一章开始时都会提出第一个问题，然后才开始讲解新的 Python 知识！这样做的目的是激发你学习解决问题所需的
    Python 特性。如果在读完问题描述后，你还不确定如何解决它，也不用担心。（如果你现在还不能解决问题，那说明你正在读对书！）只要你理解问题要求你做什么，那就没问题了。我们将一起学习
    Python 并解决问题。章节中的后续问题可能会介绍更多的 Python 特性，或者要求我们在第一个问题的基础上进行扩展。每一章的结尾都会有一些练习题，你应该独立完成，来巩固所学内容。
- en: 'Here’s a rundown of what we’ll learn in each chapter:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是每章我们将学习的内容概览：
- en: '**[Chapter 1: Getting Started](ch01.xhtml#ch01)** There are quite a few introductory
    concepts that we’ll need to learn before we can solve any problems with Python.
    In this chapter, we’ll learn these concepts, including entering Python code, working
    with strings and numbers, using variables, reading input, and writing output.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 1 章：入门](ch01.xhtml#ch01)** 在我们能用 Python 解决问题之前，有一些入门概念是我们需要学习的。在这一章，我们将学习这些概念，包括输入
    Python 代码、处理字符串和数字、使用变量、读取输入和输出结果。'
- en: '**[Chapter 2: Making Decisions](ch02.xhtml#ch02)** In this chapter, we’ll learn
    about `if` statements, which allow our programs to decide what to do based on
    whether specific conditions are true or false.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 2 章：做出决策](ch02.xhtml#ch02)** 在这一章，我们将学习 `if` 语句，它让我们的程序根据特定条件是否为真来决定执行什么操作。'
- en: '**[Chapter 3: Repeating Code: Definite Loops](ch03.xhtml#ch03)** Many programs
    continue running as long as there is work to do. In this chapter, we’ll learn
    about the `for` loop, which lets our programs process each piece of input until
    the job is done.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 3 章：重复代码：确定循环](ch03.xhtml#ch03)** 许多程序会在有工作要做时继续运行。在这一章，我们将学习 `for` 循环，它让我们的程序处理每一份输入，直到任务完成。'
- en: '**[Chapter 4: Repeating Code: Indefinite Loops](ch04.xhtml#ch04)** Sometimes
    we don’t know in advance how many times our program should repeat some specified
    behavior. `for` loops are not appropriate for these kinds of problems. In this
    chapter, we’ll learn about the `while` loop, which repeats code as long as a specific
    condition is true.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第 4 章：重复代码：不确定循环](ch04.xhtml#ch04)** 有时候，我们不知道程序应该重复多少次某个特定的行为。`for` 循环不适用于这类问题。在这一章，我们将学习
    `while` 循环，它会在特定条件为真时重复执行代码。'
- en: '**[Chapter 5: Organizing Values Using Lists](ch05.xhtml#ch05)** A Python list
    allows us to use a single name to refer to a whole sequence of data. Using a list
    helps us organize our data and leverage the powerful list operations (such as
    sorting and searching) that Python provides. In this chapter, we’ll learn all
    about lists.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第5章：使用列表组织值](ch05.xhtml#ch05)** Python列表允许我们使用一个名称来引用整个数据序列。使用列表帮助我们组织数据，并利用Python提供的强大列表操作（如排序和搜索）。在本章中，我们将全面了解列表。'
- en: '**[Chapter 6: Designing Programs with Functions](ch06.xhtml#ch06)** A large
    program, with lots of code, can become unwieldy if we don’t organize it well.
    In this chapter, we’ll learn about functions, which help us design programs composed
    of small, self-contained chunks of code. Using functions leads to programs that
    are much easier to understand and modify. We’ll also learn about top-down design,
    an approach to designing programs with functions.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第6章：使用函数设计程序](ch06.xhtml#ch06)** 一个庞大的程序，如果代码不加以组织，可能会变得难以处理。在本章中，我们将学习函数，它帮助我们设计由小的、自包含的代码块组成的程序。使用函数使程序更易于理解和修改。我们还将学习自顶向下设计，这是一种使用函数设计程序的方法。'
- en: '**[Chapter 7: Reading and Writing Files](ch07.xhtml#ch07)** Files are convenient
    for providing data to our programs or obtaining data from our programs. In this
    chapter, we’ll learn how to read data from and write data to files.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第7章：读取和写入文件](ch07.xhtml#ch07)** 文件对于向程序提供数据或从程序获取数据非常方便。在本章中，我们将学习如何从文件中读取数据以及如何将数据写入文件。'
- en: '**[Chapter 8: Organizing Values Using Sets and Dictionaries](ch08.xhtml#ch08)**
    As we begin to solve increasingly challenging problems, it’s important that we
    think about how our data is stored. In this chapter, we’ll learn about two new
    ways to store data using Python: using a set and using a dictionary.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第8章：使用集合和字典组织值](ch08.xhtml#ch08)** 随着我们开始解决越来越复杂的问题，思考数据存储方式变得尤为重要。在本章中，我们将学习使用Python存储数据的两种新方法：使用集合和使用字典。'
- en: '**[Chapter 9: Designing Algorithms with Complete Search](ch09.xhtml#ch09)**
    Programmers don’t start from scratch for each problem they solve. Instead, they
    think about whether a general solution pattern—a type of *algorithm*—can be used
    to solve it. In this chapter, we’ll learn about complete-search algorithms, which
    can be used to solve a wide range of problems.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第9章：使用完整搜索设计算法](ch09.xhtml#ch09)** 程序员在解决每个问题时并不是从零开始的。相反，他们会考虑是否可以使用一种通用的解决方案模式——一种*算法*——来解决该问题。在本章中，我们将学习完整搜索算法，它可以用来解决各种各样的问题。'
- en: '**[Chapter 10: Big O and Program Efficiency](ch10.xhtml#ch10)** Sometimes we’ll
    manage to write a program that does the right thing but does so too slowly to
    be useful in practice. In this chapter, we’ll learn how to communicate about the
    efficiency of programs, and we’ll learn about tools we can use to write more efficient
    code.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第10章：大O与程序效率](ch10.xhtml#ch10)** 有时我们写出的程序虽然能够完成正确的任务，但执行速度过慢，无法在实际应用中发挥作用。在本章中，我们将学习如何讨论程序的效率，并了解我们可以使用的工具来编写更高效的代码。'
