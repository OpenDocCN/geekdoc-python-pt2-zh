["```py\n>>> print(abs(10))\n10\n>>> print(abs(-10))\n10\n\n```", "```py\n>>> steps = -3\n>>> if abs(steps) > 5:\n        print('Character is moving far')\n    elif abs(steps) != 0:\n        print('Character is moving')\n\n```", "```py\n>>> steps = 10\n>>> if steps < -5 or steps > 5:\n        print('Character is moving far')\n    elif steps != 0:\n        print('Character is moving')\n\n```", "```py\n>>> mylist = [1,2,5,6]\n>>> all(mylist)\nTrue\n\n```", "```py\n>>> mylist = [1, 2, 3, 0]\n>>> all(mylist)\nFalse\n\n```", "```py\n>>> mylist = [100, 'a', None, 'b', True, 'zzz', ' ']\n>>> all(mylist)\nFalse\n\n```", "```py\n>>> mylist = [100, 'a', 'b', True, 'zzz', ' ']\n>>> all(mylist)\nTrue\n\n```", "```py\n>>> mylist = [1, 2, 5, 6]\n>>> any(mylist)\nTrue\n\n```", "```py\n>>> mylist = [0, False, None, \"\", 0, False, '']\n>>> any(mylist)\nFalse\n\n```", "```py\n>>> mylist = [0, False, None, \"\", 0, False, '', 100]\n>>> any(mylist)\nTrue\n\n```", "```py\n>>> bin(100)\n'0b1100100'\n>>> bin(5)\n'0b101'\n\n```", "```py\n>>> print(bool(0))\nFalse\n>>> print(bool(1))\nTrue\n>>> print(bool(1123.23))\nTrue\n>>> print(bool(-500))\nTrue\n\n```", "```py\n>>> print(bool(None))\nFalse\n>>> print(bool('a'))\nTrue\n>>> print(bool(' '))\nTrue\n>>> print(bool('What do you call a pig doing karate? Pork Chop!'))\nTrue\n\n```", "```py\n>>> my_silly_list = []\n>>> print(bool(my_silly_list))\nFalse\n>>> my_silly_list = ['s', 'i', 'l', 'l', 'y']\n>>> print(bool(my_silly_list))\nTrue\n\n```", "```py\n>>> year = input('Year of birth: ')\nYear of birth:\n>>> if not bool(year):\n        print('You need to enter a value for your year of birth')\n\nYou need to enter a value for your year of birth\n\n```", "```py\n>>> callable('peas')\nFalse\n\n```", "```py\n>>> callable(bin)\nTrue\n\n```", "```py\n>>> class People:\n        def run(self):\n            print('running')\n\n>>> callable(People.run)\nTrue\n\n```", "```py\n>>> p = People()\n>>> callable(p.run)\nTrue\n\n```", "```py\n>>> chr(97)\n'a'\n>>> chr(65)\n'A'\n\n```", "```py\n>>> chr(22283)\n\n```", "```py\n>>> chr(949)\n'ε'\n\n```", "```py\n>>> chr(8595)\n'↓'\n\n```", "```py\n>>> dir(['a', 'short', 'list'])\n['__add__', '__class__', '__contains__', '__delattr__',\n'__delitem__', '__doc__', '__eq__', '__format__', '__ge__',\n'__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__',\n'__imul__', '__init__', '__iter__', '__le__', '__len__', '__lt__',\n'__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__',\n'__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__',\n'__sizeof__', '__str__', '__subclasshook__', 'append', 'count',\n'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']\n\n```", "```py\n>>> dir(1)\n['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__',\n'__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', \n'__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', \n'__getnewargs__', '__gt__', '__hash__', '__index__', '__init__',\n'__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__',\n'__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', \n'__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', \n'__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', \n'__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', \n'__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', \n'__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', \n'as_integer_ratio', 'bit_count', 'bit_length',\n'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator',\n'real', 'to_bytes']\n\n```", "```py\n>>> popcorn = 'I love popcorn!'\n>>> dir(popcorn)\n['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', \n'__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__',\n'__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', \n'__iter__', '__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__',\n'__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmod__', \n'__rmul__', '__setattr__', '__sizeof__', '__str__',\n'__subclasshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', \n'endswith', 'expandtabs', 'find', 'format', 'format_map', 'index',\n'isalnum', 'isalpha', 'isascii', 'isdecimal', 'isdigit', 'isidentifier', \n'islower', 'isnumeric', 'isprintable', 'isspace', 'istitle', 'isupper', \n'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'partition',\n'removeprefix', 'removesuffix', 'replace', 'rfind', 'rindex', 'rjust', \n'rpartition', 'rsplit', 'rstrip', 'split', 'splitlines', 'startswith',\n'strip', 'swapcase', 'title', 'translate', 'upper', 'zfill']\n\n```", "```py\n>>> help(popcorn.upper)\nHelp on built-in function upper:\n\nupper() method of builtins.str instance\n    Return a copy of the string converted to uppercase.\n\n```", "```py\n>>> divmod(6, 2)\n(3, 0)\n\n```", "```py\n>>> divmod(7, 2)\n(3, 1)\n\n```", "```py\n>>> eval('10*5')\n50\n\n```", "```py\n>>> eval('''if True:\n        print(\"this won't work at all\")''')\n\nTraceback (most recent call last):\n  File \"<pyshell#2>\", line 1, in <module>\n    eval('''if True:\n  File \"<string>\", line 1\n    if True:\n    ^^\nSyntaxError: invalid syntax\n\n```", "```py\n>>> your_calculation = input('Enter a calculation: ')\n\nEnter a calculation: 12*52\n>>> eval(your_calculation)\n624\n\n```", "```py\n>>> my_small_program = '''print('ham')\nprint('sandwich')'''\n>>> exec(my_small_program)\nham\nsandwich\n\n```", "```py\n>>> float('12')\n12.0\n\n```", "```py\n>>> float('123.456789')\n123.456789\n\n```", "```py\n>>> your_age = input('Enter your age: ')\n\nEnter your age: 20\n>>> age = float(your_age)\n>>> if age > 13:\n        print(f'You are {age - 13} years too old')\n\nYou are 7.0 years too old\n\n```", "```py\n>>> s = input('Tell me a play on words:\\n')\nTell me a play on words:\nA hedgehog went to see a play about a plucky young girl, but left\ndis-a-pointed\n>>> print(s)\nA hedgehog went to see a play about a plucky young girl, but left\ndis-a-pointed\n\n```", "```py\n>>> s = input()\nA hedgehog went to see a play about a plucky young girl, but left\ndis-a-pointed\n\n```", "```py\n>>> int(123.456)\n123\n\n```", "```py\n>>> int('123')\n123\n\n```", "```py\n>>> int('123.456')\nTraceback (most recent call last):\n  File \"<pyshell>\", line 1, in <module>\n    int('123.456')\nValueError: invalid literal for int() with base 10: '123.456'\n\n```", "```py\n>>> len('this is a test string')\n21\n\n```", "```py\n>>> creature_list = ['unicorn', 'cyclops', 'fairy', 'elf', 'dragon', \n                     'troll']\n>>> print(len(creature_list))\n6\n\n```", "```py\n>>> enemies = {'Batman' : 'Joker',\n               'Superman' : 'Lex Luthor', \n               'Spiderman' : 'Green Goblin'}\n>>> print(len(enemies))\n3\n\n```", "```py\n>>> fruit = ['apple', 'banana', 'clementine', 'dragon fruit']\n>>> length = len(fruit)\n>>> for x in range(0, length):\n        print(f'the fruit at index {x} is {fruit[x]}')\n\nthe fruit at index 0 is apple\nthe fruit at index 1 is banana\nthe fruit at index 2 is clementine\nthe fruit at index 3 is dragon fruit\n\n```", "```py\n>>> l1 = list()\n>>> l2 = []\n>>> l1 == l2\nTrue\n\n```", "```py\n>>> list(range(0, 10))\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n```", "```py\n>>> numbers = [5, 4, 10, 30, 22]\n>>> print(max(numbers))\n30\n\n```", "```py\n>>> strings = 'stringSTRING'\n>>> print(max(strings))\nt\n>>> strings = ['s', 't', 'r', 'i', 'n', 'g', 'S', 'T', 'R', 'I', 'N', 'G']\n>>> print(max(strings))\nt\n\n```", "```py\n>>> print(max(10, 300, 450, 50, 90))\n450\n\n```", "```py\n>>> numbers = [5, 4, 10, 30, 22]\n>>> print(min(numbers))\n4\n\n```", "```py\n>>> guess_this_number = 61\n>>> player_guesses = [12, 15, 70, 45]\n>>> if max(player_guesses) > guess_this_number:\n        print('Boom! You all lose')\n    else:\n        print('You win')\n\nBoom! You all lose\n\n```", "```py\n>>> ord('a')\n97\n>>> ord('A')\n65\n>>> ord('![Image](Images/316fig01.jpg)')\n22283\n\n```", "```py\n>>> pow(2, 3)\n8\n>>> pow(3, 3)\n27\n\n```", "```py\n>>> for x in range(0, 5):\n        print(x)\n\n0\n1\n2\n3\n4\n\n```", "```py\n>>> print(list(range(0, 5)))\n[0, 1, 2, 3, 4]\n\n```", "```py\n>>> count_by_twos = list(range(0, 30, 2))\n>>> print(count_by_twos)\n[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\n\n```", "```py\n>>> count_down_by_twos = list(range(40, 10, -2))\n>>> print(count_down_by_twos)\n[40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12]\n\n```", "```py\n>>> my_list_of_numbers = list(range(0, 500, 50))\n>>> print(my_list_of_numbers)\n[0, 50, 100, 150, 200, 250, 300, 350, 400, 450]\n>>> print(sum(my_list_of_numbers))\n2250\n\n```", "```py\n>>> test_file = open('c:\\\\Users\\\\<your username>\\\\test.txt')\n>>> text = test_file.read()\n>>> print(text)\nThere once was a boy named Marcelo\nWho dreamed he ate a marshmallow\nHe awoke with a start\nAs his bed fell apart\nAnd he found he was a much rounder fellow\n\n```", "```py\n>>> test_file = open('/Users/sarahwinters/test.txt')\n\n```", "```py\n>>> test_file = open('/home/jacob/test.txt')\n\n```", "```py\n>>> test_file = open('c:\\\\Users\\\\rachel\\\\myfile.txt', 'w')\n\n```", "```py\n>>> test_file = open('c:\\\\Users\\\\rachel\\\\myfile.txt', 'w')\n>>> test_file.write('What is green and loud? A froghorn!')\n20\n\n```", "```py\n>>> test_file = open('c:\\\\Users\\\\rachel\\\\myfile.txt', 'w')\n>>> test_file.write('What is green and loud? A froghorn!')\n>>> test_file.close()\n\n```", "```py\n>>> test_file = open('c:\\\\Users\\\\rachel\\\\myfile.txt')\n>>> print(test_file.read())\nWhat is green and loud? A froghorn!\n```"]