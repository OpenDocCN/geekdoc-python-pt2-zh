["```py\nroom number: [[object number, y, x], [object number, y, x]]\n```", "```py\nscenery = {\n--snip--\n30: [[34,1,1], [35,1,3]],\n--snip--\n}\n```", "```py\n   --snip--\n\n   items_player_may_stand_on = items_player_may_carry + [0, 39, 2, 48]\n\n   ###############\n   ##  SCENERY  ##\n   ###############\n\n   # Scenery describes objects that cannot move between rooms.\n   # room number: [[object number, y position, x position]...]\n   scenery = {\n       26: [[39,8,2]],\n       27: [[33,5,5], [33,1,1], [33,1,8], [47,5,2],\n            [47,3,10], [47,9,8], [42,1,6]],\n       28: [[27,0,3], [41,4,3], [41,4,7]],\n       29: [[7,2,6], [6,2,8], [12,1,13], [44,0,1],\n            [36,4,10], [10,1,1], [19,4,2], [17,4,4]],\n       30: [[34,1,1], [35,1,3]],\n       31: [[11,1,1], [19,1,8], [46,1,3]],\n       32: [[48,2,2], [48,2,3], [48,2,4], [48,3,2], [48,3,3],\n            [48,3,4], [48,4,2], [48,4,3], [48,4,4]],\n       33: [[13,1,1], [13,1,3], [13,1,8], [13,1,10], [48,2,1],\n            [48,2,7], [48,3,6], [48,3,3]],\n       34: [[37,2,2], [32,6,7], [37,10,4], [28,5,3]],\n       35: [[16,2,9], [16,2,2], [16,3,3], [16,3,8], [16,8,9], [16,8,2], [16,1,8],\n            [16,1,3], [12,8,6], [12,9,4], [12,9,8],\n            [15,4,6], [12,7,1], [12,7,11]],\n       36: [[4,3,1], [9,1,7], [8,1,8], [8,1,9],\n            [5,5,4], [6,5,7], [10,1,1], [12,1,2]],\n       37: [[48,3,1], [48,3,2], [48,7,1], [48,5,2], [48,5,3],\n            [48,7,2], [48,9,2], [48,9,3], [48,11,1], [48,11,2]],\n       38: [[43,0,2], [6,2,2], [6,3,5], [6,4,7], [6,2,9], [45,1,10]],\n       39: [[38,1,1], [7,3,4], [7,6,4], [5,3,6], [5,6,6],\n            [6,3,9], [6,6,9], [45,1,11], [12,1,8], [12,1,4]],\n       40: [[41,5,3], [41,5,7], [41,9,3], [41,9,7],\n            [13,1,1], [13,1,3], [42,1,12]],\n       41: [[4,3,1], [10,3,5], [4,5,1], [10,5,5], [4,7,1],\n            [10,7,5], [12,1,1], [12,1,5]],\n       44: [[46,4,3], [46,4,5], [18,1,1], [19,1,3],\n            [19,1,5], [52,4,7], [14,1,8]],\n       45: [[48,2,1], [48,2,2], [48,3,3], [48,3,4], [48,1,4], [48,1,1]],\n       46: [[10,1,1], [4,1,2], [8,1,7], [9,1,8], [8,1,9], [5,4,3], [7,3,2]],\n       47: [[9,1,1], [9,1,2], [10,1,3], [12,1,7], [5,4,4], [6,4,7], [4,1,8]],\n       48: [[17,4,1], [17,4,2], [17,4,3], [17,4,4], [17,4,5], [17,4,6], [17,4,7],\n            [17,8,1], [17,8,2], [17,8,3], [17,8,4],\n            [17,8,5], [17,8,6], [17,8,7], [14,1,1]],\n       49: [[14,2,2], [14,2,4], [7,5,1], [5,5,3], [48,3,3], [48,3,4]],\n       50: [[45,4,8], [11,1,1], [13,1,8], [33,2,1], [46,4,6]]\n       }\n   checksum = 0\n   check_counter = 0\n   for key, room_scenery_list in scenery.items():\n       for scenery_item_list in room_scenery_list:\n➊         checksum += (scenery_item_list[0] * key\n                        + scenery_item_list[1] * (key + 1)\n                        + scenery_item_list[2] * (key + 2))\n           check_counter += 1\n   print(check_counter, \"scenery items\")\n➋ assert check_counter == 161, \"Expected 161 scenery items\"\n➌ assert checksum == 200095, \"Error in scenery data\"\n   print(\"Scenery checksum: \" + str(checksum))\n\n   ###############\n   ## MAKE MAP  ##\n   ###############\n   --snip--\n```", "```py\n   --snip--\n   print(\"Scenery checksum: \" + str(checksum))\n\n   for room in range(1, 26): # Add random scenery in planet locations.\n➊     if room != 13: # Skip room 13.\n➋         scenery_item = random.choice([16, 28, 29, 30])\n➌         scenery[room] = [[scenery_item, random.randint(2, 10),\n                             random.randint(2, 10)]]\n\n   # Use loops to add fences to the planet surface rooms.\n➍ for room_coordinate in range(0, 13):\n➎     for room_number in [1, 2, 3, 4, 5]: # Add top fence\n➏         scenery[room_number] += [[31, 0, room_coordinate]]\n➐     for room_number in [1, 6, 11, 16, 21]: # Add left fence\n➑         scenery[room_number] += [[31, room_coordinate, 0]]\n       for room_number in [5, 10, 15, 20, 25]: # Add right fence\n➒         scenery[room_number] += [[31, room_coordinate, 12]]\n\n➓ del scenery[21][-1] # Delete last fence panel in Room 21\n   del scenery[25][-1] # Delete last fence panel in Room 25\n\n   ###############\n   ## MAKE MAP  ##\n   ###############\n\n   --snip--\n```", "```py\n--snip--\n\n###############\n## VARIABLES ##\n###############\n\n--snip--\n\nLANDER_SECTOR = random.randint(1, 24)\nLANDER_X = random.randint(2, 11)\nLANDER_Y = random.randint(2, 11)\n\nTILE_SIZE = 30\n\n###############\n##    MAP    ##\n###############\n\n--snip--\n```", "```py\n   --snip--\n\n   def generate_map():\n   --snip--\n\n➊     if current_room in scenery:\n➋         for this_scenery in scenery[current_room]:\n➌             scenery_number = this_scenery[0]\n➍             scenery_y = this_scenery[1]\n➎             scenery_x = this_scenery[2]\n➏             room_map[scenery_y][scenery_x] = scenery_number\n\n➐             image_here = objects[scenery_number][0]\n➑             image_width = image_here.get_width()\n➒             image_width_in_tiles = int(image_width / TILE_SIZE)\n➓             for tile_number in range(1, image_width_in_tiles):\n                   room_map[scenery_y][scenery_x + tile_number] = 255\n\n   ###############\n   ## EXPLORER  ##\n   ###############\n\n   --snip--\n```", "```py\n--snip--\n\n###############\n## EXPLORER  ##\n###############\n\ndef draw():\n    global room_height, room_width, room_map\n    print(current_room)\n    generate_map()\n    screen.clear()\n##    room_map[2][4] = 7\n##    room_map[2][6] = 6\n##    room_map[1][1] = 8\n##    room_map[1][2] = 9\n##    room_map[1][8] = 12\n##    room_map[1][9] = 10\n--snip--\n```", "```py\n--snip--\n\n###############\n## EXPLORER  ##\n###############\n\n--snip--\n\n    for y in range(room_height):\n        for x in range(room_width):\n            if room_map[y][x] != 255:\n                image_to_draw = objects[room_map[y][x]][0]\n                screen.blit(image_to_draw,\n                    (top_left_x + (x*30),\n                    top_left_y + (y*30) - image_to_draw.get_height()))\n\n--snip--\n```"]