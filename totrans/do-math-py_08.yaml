- en: '**Afterword**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![image](images/common-01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You’ve reached the end of the book— nice work! Now that you’ve learned how to
    handle numbers, generate graphs, apply mathematical operations, manipulate sets
    and algebraic expressions, create animated visualizations, and solve calculus
    problems—whew!—what should you do next? Here are a few things to try.[¹](footnote.html#fn06)
  prefs: []
  type: TYPE_NORMAL
- en: '**Things to Explore Next**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It’s my hope that this book inspires you to go solve your own mathematical questions.
    But it’s often difficult to think up such challenges on your own.
  prefs: []
  type: TYPE_NORMAL
- en: '***Project Euler***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: One definitive place to look for math problems that require you to implement
    programming solutions is Project Euler (*[https://projecteuler.net/](https://projecteuler.net/)*),
    which offers more than 500 math problems of varying difficulty. Once you create
    a free account, you can submit your solutions to check whether they are correct.
  prefs: []
  type: TYPE_NORMAL
- en: '***Python Documentation***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: You may also wish to start exploring Python’s documentation of various features.
  prefs: []
  type: TYPE_NORMAL
- en: '• The Math Module: *[https://docs.python.org/3/library/math.html](https://docs.python.org/3/library/math.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '• Other Numeric and Mathematical Modules: *[https://docs.python.org/3/library/numeric.html](https://docs.python.org/3/library/numeric.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '• The Statistics Module: *[https://docs.python.org/3/library/statistics.html](https://docs.python.org/3/library/statistics.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: 'We didn’t discuss how floating point numbers are stored in a computer’s memory
    or the problems and errors that may arise as a result. You may want to look at
    the decimal module’s documentation and the discussion on “Floating Point Arithmetic”
    in the Python tutorial to learn about this topic:'
  prefs: []
  type: TYPE_NORMAL
- en: '• The Decimal Module: *[https://docs.python.org/3/library/decimal.html](https://docs.python.org/3/library/decimal.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '• Floating Point Arithmetic: *[https://docs.python.org/3.4/tutorial/floatingpoint.html](https://docs.python.org/3.4/tutorial/floatingpoint.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '***Books***'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'If you’re interested in exploring more math and programming topics, check out
    the following books:'
  prefs: []
  type: TYPE_NORMAL
- en: • *Invent Your Own Computer Games with Python* and *Making Games with Python
    and Pygame* by Al Sweigart (both freely available at *[https://inventwithpython.com/](https://inventwithpython.com/)*)
    don’t specifically address solving math problems but apply math for the purpose
    of writing computer games using Python.
  prefs: []
  type: TYPE_NORMAL
- en: '• *Think Stats: Probability and Statistics for Programmers* by Allen B. Downey
    is a freely available book (*[http://greenteapress.com/thinkstats/](http://greenteapress.com/thinkstats/)*).
    As the title suggests, it delves deeply into statistics and probability topics
    beyond the ones discussed in this book.'
  prefs: []
  type: TYPE_NORMAL
- en: • *Teach Your Kids to Code* by Bryson Payne (No Starch Press, 2015) is meant
    for beginners and covers various Python topics. You’ll learn turtle graphics,
    various interesting ways of using the random Python module, and how to create
    games and animations using Pygame.
  prefs: []
  type: TYPE_NORMAL
- en: • *Computational Physics with Python* by Mark Newman (2013) focuses on a number
    of advanced math topics geared toward solving problems in physics. However, there
    are a number of chapters that are relevant to anyone interested in learning more
    about writing programs for solving numerical and mathematical problems.
  prefs: []
  type: TYPE_NORMAL
- en: '**Getting Help**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you are stuck on a specific issue discussed in this book, please contact
    me via email at *[doingmathwithpython@gmail.com](mailto:doingmathwithpython@gmail.com)*.
    If you want to learn more about any of the functions or classes we have used in
    our programs, the first place to look would be the official documentation of the
    relevant projects:'
  prefs: []
  type: TYPE_NORMAL
- en: '• Python 3 standard library: *[https://docs.python.org/3/library/index.html](https://docs.python.org/3/library/index.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: '• SymPy: *[http://docs.sympy.org/](http://docs.sympy.org/)*'
  prefs: []
  type: TYPE_NORMAL
- en: '• matplotlib: *[http://matplotlib.org/contents.html](http://matplotlib.org/contents.html)*'
  prefs: []
  type: TYPE_NORMAL
- en: If you are stuck with a problem and want help, you can also email the project-specific
    mailing lists. You can find links to these on the book’s website.
  prefs: []
  type: TYPE_NORMAL
- en: '**Conclusion**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: And finally, we’ve reached the end of the book. I hope you’ve learned a lot
    as you followed along. Go out there and solve some more problems using Python!
  prefs: []
  type: TYPE_NORMAL
