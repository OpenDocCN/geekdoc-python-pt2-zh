["```py\n(ll_env)learning_log$ **pip install django-bootstrap5**\n`--snip--`\nSuccessfully installed beautifulsoup4-4.11.1 django-bootstrap5-21.3\n    soupsieve-2.3.2.post1\n```", "```py\n*--snip--*\nINSTALLED_APPS = [\n # My apps.\n 'learning_logs',\n 'accounts',\n\n    # Third party apps.\n    'django_bootstrap5',\n\n # Default django apps.\n 'django.contrib.admin',\n  *--snip--*\n```", "```py\n❶ <!doctype html>\n❷ <html lang=\"en\">\n❸ <head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n❹   <title>Learning Log</title>\n\n❺   {% load django_bootstrap5 %}\n  {% bootstrap_css %}\n  {% bootstrap_javascript %}\n\n</head>\n```", "```py\n*--snip--*\n</head>\n<body>\n\n❶   <nav class=\"navbar navbar-expand-md navbar-light bg-light mb-4 border\">\n    <div class=\"container-fluid\">\n❷       <a class=\"navbar-brand\" href=\"{% url 'learning_logs:index' %}\">\n          Learning Log</a>\n\n❸       <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n        data-bs-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\"\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n❹       <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n❺         <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n❻           <li class=\"nav-item\">\n❼             <a class=\"nav-link\" href=\"{% url 'learning_logs:topics' %}\">\n              Topics</a></li>\n        </ul> <!-- End of links on left side of navbar -->\n      </div> <!-- Closes collapsible parts of navbar -->\n\n    </div> <!-- Closes navbar's container -->\n  </nav> <!-- End of navbar -->\n\n❽ {% block content %}{% endblock content %}\n\n</body>\n</html>\n```", "```py\n<!-- This is an HTML comment. -->\n```", "```py\n *--snip--*\n </ul> <!-- End of links on left side of navbar -->\n\n        <!-- Account-related links -->\n❶         <ul class=\"navbar-nav ms-auto mb-2 mb-md-0\">\n\n❷           {% if user.is_authenticated %}\n            <li class=\"nav-item\">\n❸               <span class=\"navbar-text me-2\">Hello, {{ user.username }}.\n                </span></li>\n❹           {% else %}\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"{% url 'accounts:register' %}\">\n                  Register</a></li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"{% url 'accounts:login' %}\">\n                  Log in</a></li>\n          {% endif %}\n\n        </ul> <!-- End of account-related links -->\n\n </div> <!-- Closes collapsible parts of navbar -->\n  *--snip--*\n```", "```py\n *--snip--*\n </ul> <!-- End of account-related links -->\n\n        {% if user.is_authenticated %}\n          <form action=\"{% url 'accounts:logout' %}\" method='post'>\n            {% csrf_token %}\n❶             <button name='submit' class='btn btn-outline-secondary btn-sm'>\n                Log out</button>\n          </form>\n        {% endif %}\n\n </div> <!-- Closes collapsible parts of navbar -->\n  *--snip--*\n```", "```py\n *--snip--*\n </nav> <!-- End of navbar -->\n\n❶   <main class=\"container\">\n❷     <div class=\"pb-2 mb-2 border-bottom\">\n      {% block page_header %}{% endblock page_header %}\n    </div>\n❸     <div>\n      {% block content %}{% endblock content %}\n    </div>\n  </main>\n\n</body>\n</html>\n```", "```py\n{% extends \"learning_logs/base.xhtml\" %}\n\n❶ {% block page_header %}\n❷   <div class=\"p-3 mb-4 bg-light border rounded-3\">\n    <div class=\"container-fluid py-4\">\n❸       <h1 class=\"display-3\">Track your learning.</h1>\n\n❹       <p class=\"lead\">Make your own Learning Log, and keep a list of the\n      topics you're learning about. Whenever you learn something new\n      about a topic, make an entry summarizing what you've learned.</p>\n\n❺       <a class=\"btn btn-primary btn-lg mt-1\"\n        href=\"{% url 'accounts:register' %}\">Register &raquo;</a>\n    </div>\n  </div>\n{% endblock page_header %}\n```", "```py\n{% extends 'learning_logs/base.xhtml' %}\n❶ {% load django_bootstrap5 %}\n\n❷ {% block page_header %}\n  <h2>Log in to your account.</h2>\n{% endblock page_header %}\n\n{% block content %}\n\n <form action=\"{% url 'accounts:login' %}\" method='post'>\n {% csrf_token %}\n❸     {% bootstrap_form form %}\n❹     {% bootstrap_button button_type=\"submit\" content=\"Log in\" %}\n </form>\n\n{% endblock content %}\n```", "```py\n{% extends 'learning_logs/base.xhtml' %}\n\n{% block page_header %}\n❶   <h1>Topics</h1>\n{% endblock page_header %}\n\n{% block content %}\n\n❷   <ul class=\"list-group border-bottom pb-2 mb-4\">\n {% for topic in topics %}\n❸       <li class=\"list-group-item border-0\">\n        <a href=\"{% url 'learning_logs:topic' topic.id %}\">\n          {{ topic.text }}</a>\n      </li>\n {% empty %}\n❹       <li class=\"list-group-item border-0\">No topics have been added yet.</li>\n {% endfor %}\n </ul>\n\n <a href=\"{% url 'learning_logs:new_topic' %}\">Add a new topic</a>\n\n{% endblock content %}\n```", "```py\n{% extends 'learning_logs/base.xhtml' %}\n\n❶ {% block page_header %}\n  <h1>{{ topic.text }}</h1>\n{% endblock page_header %}\n\n{% block content %}\n <p>\n <a href=\"{% url 'learning_logs:new_entry' topic.id %}\">Add new entry</a>\n </p>\n\n {% for entry in entries %}\n❷     <div class=\"card mb-3\">\n      <!-- Card header with timestamp and edit link -->\n❸       <h4 class=\"card-header\">\n        {{ entry.date_added|date:'M d, Y H:i' }}\n❹         <small><a href=\"{% url 'learning_logs:edit_entry' entry.id %}\">\n          edit entry</a></small>\n      </h4>\n      <!-- Card body with entry text -->\n❺       <div class=\"card-body\">{{ entry.text|linebreaks }}</div>\n    </div>\n {% empty %}\n❻     <p>There are no entries for this topic yet.</p>\n {% endfor %}\n\n{% endblock content %}\n```", "```py\n$ curl -fsS https://platform.sh/cli/installer | php\n```", "```py\n(ll_env)learning_log$ **pip install platformshconfig**\n```", "```py\n(ll_env)learning_log$ **pip freeze > requirements.txt**\n```", "```py\nasgiref==3.5.2\nbeautifulsoup4==4.11.1\nDjango==4.1\ndjango-bootstrap5==21.3\nplatformshconfig==2.4.0\nsoupsieve==2.3.2.post1\nsqlparse==0.4.2\n```", "```py\n# Requirements for live project.\ngunicorn\npsycopg2\n```", "```py\n❶ name: \"ll_project\"\ntype: \"python:3.10\"\n\n❷ relationships:\n    database: \"db:postgresql\"\n\n# The configuration of the app when it's exposed to the web.\n❸ web:\n    upstream:\n        socket_family: unix\n    commands:\n❹         start: \"gunicorn -w 4 -b unix:$SOCKET ll_project.wsgi:application\"\n❺     locations:\n        \"/\":\n            passthru: true\n        \"/static\":\n root: \"static\"\n            expires: 1h\n            allow: true\n\n# The size of the persistent disk of the application (in MB).\n❻ disk: 512\n```", "```py\n*--snip--*\ndisk: 512\n\n# Set a local read/write mount for logs.\n❶ mounts:\n    \"logs\":\n        source: local\n        source_path: logs\n\n# The hooks executed at various points in the lifecycle of the application.\n❷ hooks:\n    build: |\n❸         pip install --upgrade pip\n        pip install -r requirements.txt\n        pip install -r requirements_remote.txt\n\n        mkdir logs\n❹         python manage.py collectstatic\n        rm -rf logs\n❺     deploy: |\n        python manage.py migrate\n```", "```py\n# Each route describes how an incoming URL will be processed by Platform.sh.\n\n\"https://{default}/\":\n    type: upstream\n    upstream: \"ll_project:http\"\n\n\"https://www.{default}/\":\n    type: redirect\n    to: \"https://{default}/\"\n```", "```py\n# Each service listed will be deployed in its own container as part of your\n#   Platform.sh project.\n\ndb:\n    type: postgresql:12\n    disk: 1024\n```", "```py\n*--snip--*\n# Platform.sh settings.\n❶ from platformshconfig import Config\n\nconfig = Config()\n❷ if config.is_valid_platform():\n❸     ALLOWED_HOSTS.append('.platformsh.site')\n\n❹     if config.appDir:\n        STATIC_ROOT = Path(config.appDir) / 'static'\n❺     if config.projectEntropy:\n        SECRET_KEY = config.projectEntropy\n\n    if not config.in_build():\n❻         db_settings = config.credentials('database')\n        DATABASES = {\n            'default': {\n                'ENGINE': 'django.db.backends.postgresql',\n                'NAME': db_settings['path'],\n                'USER': db_settings['username'],\n                'PASSWORD': db_settings['password'],\n                'HOST': db_settings['host'],\n                'PORT': db_settings['port'],\n            },\n        }\n```", "```py\n(ll_env)learning_log$ **git --version**\ngit version 2.30.1 (Apple Git-130)\n```", "```py\n(ll_env)learning_log$ **git config --global user.name \"eric\"**\n(ll_env)learning_log$ **git config --global user.email \"eric@example.com\"**\n```", "```py\nll_env/\n__pycache__/\n*.sqlite3\n```", "```py\n❶ (ll_env)learning_log$ **git init**\nInitialized empty Git repository in /Users/eric/.../learning_log/.git/\n❷ (ll_env)learning_log$ **git add .**\n❸ (ll_env)learning_log$ **git commit -am \"Ready for deployment to Platform.sh.\"**\n[main (root-commit) c7ffaad] Ready for deployment to Platform.sh.\n 42 files changed, 879 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 .platform.app.yaml\n `--snip--`\n create mode 100644 requirements_remote.txt\n❹ (ll_env)learning_log$ **git status**\nOn branch main\nnothing to commit, working tree clean\n(ll_env)learning_log$\n```", "```py\n(ll_env)learning_log$ **platform login**\nOpened URL: http://127.0.0.1:5000\nPlease use the browser to log in.\n`--snip--`\n❶ Do you want to create an SSH configuration file automatically? [Y/n] **Y**\n```", "```py\n(ll_env)learning_log$ **platform create**\n* Project title (--title)\nDefault: Untitled Project\n❶ > **ll_project**\n\n* Region (--region)\nThe region where the project will be hosted\n  `--snip--`\n  [us-3.platform.sh] Moses Lake, United States (AZURE) [514 gC02eq/kWh]\n❷ > **us-3.platform.sh**\n* Plan (--plan)\nDefault: development\nEnter a number to choose:\n  [0] development\n  `--snip--`\n❸ > **0**\n\n* Environments (--environments)\nThe number of environments\nDefault: 3\n❹ > **3**\n\n* Storage (--storage)\nThe amount of storage per environment, in GiB\nDefault: 5\n❺ > **5**\n```", "```py\nDefault branch (--default-branch)\nThe default Git branch name for the project (the production environment)\nDefault: main\n❶ > **main**\n\nGit repository detected: /Users/eric/.../learning_log\n❷ Set the new project ll_project as the remote for this repository? [Y/n] **Y**\n\nThe estimated monthly cost of this project is: $10 USD\n❸ Are you sure you want to continue? [Y/n] **Y**\n\nThe Platform.sh Bot is activating your project\n\n      ▀▄   ▄▀\n    █▄█▀███▀█▄█\n    ▀█████████▀\n     ▄▀     ▀▄\n\nThe project is now ready!\n```", "```py\n(ll_env)learning_log$ **platform push**\n❶ Are you sure you want to push to the main (production) branch? [Y/n] **Y**\n`--snip--`\nThe authenticity of host 'git.us-3.platform.sh (...)' can't be established.\nRSA key fingerprint is SHA256:Tvn...7PM\n❷ Are you sure you want to continue connecting (yes/no/[fingerprint])? **Y**\nPushing HEAD to the existing environment main\n  `--snip--`\n  To git.us-3.platform.sh:3pp3mqcexhlvy.git\n   * [new branch]      HEAD -> main\n```", "```py\n(ll_env)learning_log$ **platform url**\nEnter a number to open a URL\n  [0] https://main-bvxea6i-wmye2fx7wwqgu.us-3.platformsh.site/\n  `--snip--`\n > **0**\n```", "```py\n(ll_env)learning_log$ **platform environment:ssh**\n\n ___ _      _    __                    _\n| _ \\ |__ _| |_ / _|___ _ _ _ __    __| |_\n|  _/ / _` |  _|  _/ _ \\ '_| '  \\ _(_-< ' \\\n|_| |_\\__,_|\\__|_| \\___/_| |_|_|_(_)__/_||_|\n\n Welcome to Platform.sh.\n\n❶ web@ll_project.0:~$ **ls**\naccounts  learning_logs  ll_project  logs  manage.py  requirements.txt\n    requirements_remote.txt  static\n❷ web@ll_project.0:~$ **python manage.py createsuperuser**\n❸ Username (leave blank to use 'web'): **ll_admin_live**\nEmail address:\nPassword:\nPassword (again):\nSuperuser created successfully.\n❹ web@ll_project.0:~$ **exit**\nlogout\nConnection to ssh.us-3.platform.sh closed.\n❺ (ll_env)learning_log$\n```", "```py\n*--snip--*\nif config.is_valid_platform():\n ALLOWED_HOSTS.append('.platformsh.site')\n    DEBUG = False\n    *--snip--*\n```", "```py\n❶ (ll_env)learning_log$ **git commit -am \"Set DEBUG False on live site.\"**\n[main d2ad0f7] Set DEBUG False on live site.\n  1 file changed, 1 insertion(+)\n❷ (ll_env)learning_log$ **git status**\nOn branch main\nnothing to commit, working tree clean\n(ll_env)learning_log$\n```", "```py\n(ll_env)learning_log$ **platform push**\nAre you sure you want to push to the main (production) branch? [Y/n] **Y**\nPushing HEAD to the existing environment main\n`--snip--`\n  To git.us-3.platform.sh:wmye2fx7wwqgu.git\n     fce0206..d2ad0f7  HEAD -> main\n(ll_env)learning_log$\n```", "```py\n{% extends \"learning_logs/base.xhtml\" %}\n\n{% block page_header %}\n  <h2>The item you requested is not available. (404)</h2>\n{% endblock page_header %}\n```", "```py\n{% extends \"learning_logs/base.xhtml\" %}\n\n{% block page_header %}\n  <h2>There has been an internal error. (500)</h2>\n{% endblock page_header %}\n```", "```py\n*--snip--*\nTEMPLATES = [\n {\n 'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'templates'],\n 'APP_DIRS': True,\n  *--snip--*\n },\n]\n*--snip--*\n```", "```py\n❶ (ll_env)learning_log$ **git add .**\n❷ (ll_env)learning_log$ **git commit -am \"Added custom 404 and 500 error pages.\"**\n 3 files changed, 11 insertions(+), 1 deletion(-)\n create mode 100644 templates/404.xhtml\n create mode 100644 templates/500.xhtml\n❸ (ll_env)learning_log$ **platform push**\n`--snip--`\n  To git.us-3.platform.sh:wmye2fx7wwqgu.git\n     d2ad0f7..9f042ef  HEAD -> main\n(ll_env)learning_log$\n```", "```py\n(ll_env)learning_log$ **platform project:delete**\n```", "```py\n(ll_env)learning_log$ **git remote**\nplatform\n(ll_env)learning_log$ **git remote remove platform**\n```"]