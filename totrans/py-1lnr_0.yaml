- en: '**INTRODUCTION**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![Image](Images/comm-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'With this book, I want to help you become a Python expert. To do this, we’re
    going to focus on *Python one-liners*: concise, useful programs packed into a
    single line of Python. Focusing on one-liners will help you read and write code
    faster and more concisely, and will improve your understanding of the language.'
  prefs: []
  type: TYPE_NORMAL
- en: There are five more reasons I think learning Python one-liners will help you
    improve and are worth studying.
  prefs: []
  type: TYPE_NORMAL
- en: First, by improving your core Python skills, you’ll be able to overcome many
    of the small programming weaknesses that hold you back. It’s hard to make progress
    without a profound understanding of the basics. Single lines of code are the basic
    building block of any program. Understanding these basic building blocks will
    help you master high-level complexity without feeling overwhelmed.
  prefs: []
  type: TYPE_NORMAL
- en: Second, you’ll learn how to leverage wildly popular Python libraries, such as
    those for data science and machine learning. The book consists of five one-liner
    chapters, each addressing a different area of Python, from regular expressions
    to machine learning. This approach will give you an overview of possible Python
    applications you can build, as well as teach you how to use these powerful libraries.
  prefs: []
  type: TYPE_NORMAL
- en: Third, you’ll learn to write more Pythonic code. Python beginners, especially
    those coming from other programming languages, often write code in un-Pythonic
    ways. We’ll cover Python-specific concepts like list comprehension, multiple assignment,
    and slicing, all of which will help you write code that’s easily readable and
    sharable with other programmers in the field.
  prefs: []
  type: TYPE_NORMAL
- en: Fourth, studying Python one-liners forces you to think clearly and concisely.
    When you’re making every single code symbol count, there’s no room for sparse
    and unfocused coding.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fifth, your new one-liner skill set will allow you to see through overly complicated
    Python codebases, and impress friends and interviewers alike. You may also find
    it fun and satisfying to solve challenging programming problems with a single
    line of code. And you wouldn’t be alone: a vibrant online community of Python
    geeks compete for the most compressed, most Pythonic solutions to various practical
    (and not-so-practical) problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Python One-Liner Example**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The central thesis of this book is that learning Python one-liners is both fundamental
    to understanding more-advanced codebases and an excellent tool for improving your
    skills. Before understanding what’s going on in a codebase with thousands of lines,
    you must understand the meaning of a single line of code.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s have a quick look at a Python one-liner. Don’t worry if you don’t fully
    understand it. You will master this one-liner in [Chapter 6](ch06.xhtml#ch06).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This one-liner is a beautiful and concise way of compressing the famous Quicksort
    algorithm, though the meaning may be difficult to grasp for many Python beginners
    and intermediates.
  prefs: []
  type: TYPE_NORMAL
- en: 'Python one-liners often build on each other, so one-liners will increase in
    complexity throughout the book. In this book, we’ll start with simple one-liners
    that will become the basis for more-complex one-liners later. For example, the
    preceding Quicksort one-liner is difficult and long, based on the easier concept
    of list comprehension ➊. Here’s a simpler list comprehension that creates a list
    of squared numbers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We can break this one-liner into even simpler one-liners that teach important
    Python basics, such as variable assignments, math operators, data structures,
    `for` loops, membership operators, and the `range()` function—all of which happens
    in a single line of Python!
  prefs: []
  type: TYPE_NORMAL
- en: Know that *basic* doesn’t mean *trivial*. All the one-liners we’ll look at are
    useful, and each chapter addresses a separate area or discipline in computer science,
    giving you a broad perspective on the power of Python.
  prefs: []
  type: TYPE_NORMAL
- en: '**A Note on Readability**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*The Zen of Python* comprises 19 guiding principles for the Python programming
    languages. You can read it in your Python shell by entering `import this`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'According to *The Zen of Python*, “Readability counts.” One-liners are minimalistic
    programs to solve problems. In many cases, rewriting a piece of code as a Python
    one-liner will improve readability and make the code more Pythonic. An example
    is using *list comprehension* to reduce the creation of lists into a single line
    of code. Have a look at the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'In this code snippet, we need five lines of code to create a list of the first
    10 square numbers and print it to the shell. However, it’s much better to use
    a one-liner solution that accomplishes the same thing in a more readable and concise
    way:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: The output is the same, but the one-liner builds on the more Pythonic concept
    of list comprehension. It’s easier to read and more concise.
  prefs: []
  type: TYPE_NORMAL
- en: However, Python one-liners can also be hard to understand. In some cases, writing
    a solution as a Python one-liner isn’t more readable. But just as the chess master
    must know all possible moves before deciding which one is best, you must know
    all ways of expressing your thoughts in code so that you can decide on the best
    one. Going for *the most beautiful* solution is not a low-priority matter; it’s
    at the core of the Python ecosystem. As *The Zen of Python* teaches, “Beautiful
    is better than ugly.”
  prefs: []
  type: TYPE_NORMAL
- en: '**Who Is This Book For?**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Are you a beginner- to intermediate-level Python coder? Like many of your peers,
    you may be stuck in your coding progress. This book can help you out. You’ve read
    a lot of programming tutorials online. You’ve written your own source code and
    successfully shipped small projects. You’ve finished a basic programming course
    and read a programming textbook or two. Maybe you’ve even finished a technical
    program in college, where you’ve learned about the basics of computer science
    and programming.
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps you’re limited by certain beliefs, like that most coders understand
    source code much faster than you, or that you’re nowhere near the top 10 percent
    of programmers. If you want to reach an advanced coding level and join the top
    coding experts, you need to learn new applicable skills.
  prefs: []
  type: TYPE_NORMAL
- en: I can relate because when I started out studying computer science 10 years ago,
    I struggled with the belief that I knew nothing about coding. At the same time,
    it seemed that all my peers were already very experienced and proficient.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, I want to help you overcome these limiting beliefs and push you
    one step further toward Python mastery.
  prefs: []
  type: TYPE_NORMAL
- en: '**What Will You Learn?**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here is an overview of what you will learn.
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 1: Python Refresher](ch01.xhtml#ch01)** Introduces the very basics
    of Python to refresh your knowledge.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 2: Python Tricks](ch02.xhtml#ch02)** Contains 10 one-liner tricks
    to help you master the basics, such as list comprehension, file input, the functions
    `lambda`, `map()`, and `zip()`, the `all()` quantifier, slicing, and basic list
    arithmetic. You’ll also learn how to use, manipulate, and leverage data structures
    to solve various day-to-day problems.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 3: Data Science](ch03.xhtml#ch03)** Contains 10 one-liners for data
    science, building on the NumPy library. NumPy is at the heart of Python’s powerful
    machine learning and data science capabilities. You’ll learn elementary NumPy
    basics such as array, shape, axis, type, broadcasting, advanced indexing, slicing,
    sorting, searching, aggregating, and statistics.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 4: Machine Learning](ch04.xhtml#ch04)** Covers 10 one-liners for
    machine learning with Python’s scikit-learn library. You’ll learn about regression
    algorithms that predict values. Examples of these include linear regression, K-Nearest
    Neighbors, and neural networks. You’ll also learn classification algorithms such
    as logistic regression, decision-tree learning, support-vector machines, and random
    forests. Furthermore, you’ll learn about how to calculate basic statistics of
    multidimensional data arrays, and the K-Means algorithm for unsupervised learning.
    These algorithms and methods are among the most important algorithms in the field
    of machine learning.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 5: Regular Expressions](ch05.xhtml#ch05)** Contains 10 one-liners
    to help you achieve more with regular expressions. You’ll learn about various
    basic regular expressions that you can combine (and recombine) in order to create
    more-advanced regular expressions, using grouping and named groups, negative lookaheads,
    escaped characters, whitespaces, character sets (and negative characters sets),
    and greedy/nongreedy operators.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Chapter 6: Algorithms](ch06.xhtml#ch06)** Contains 10 one-liner algorithms
    addressing a wide range of computer science topics, including anagrams, palindromes,
    supersets, permutations, factorials, prime numbers, Fibonacci numbers, obfuscation,
    searching, and algorithmic sorting. Many of these form the basis of more-advanced
    algorithms and contain the seeds of a thorough algorithmic education.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[Afterword](ch07_afterword.xhtml#afterword)** Concludes this book and releases
    you into the real world, packed with your new and improved Python coding skills.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Online Resources**'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To enhance the training material in this book, I’ve added supplementary resources
    that you can find online at [*https://pythononeliners.com/*](https://pythononeliners.com/)
    or [*http://www.nostarch.com/pythononeliners/*](http://www.nostarch.com/pythononeliners/).
    The interactive resources include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Python cheat sheets** You can download those Python cheat sheets as printable
    PDFs and pin them to your wall. The cheat sheets contain essential Python language
    features, and if you study them thoroughly, you can refresh your Python skills
    and ensure that you’ve closed any knowledge gap you may have.'
  prefs: []
  type: TYPE_NORMAL
- en: '**One-liner video lessons** As part of my Python email course, I’ve recorded
    many Python one-liner lessons from this book, which you can access for free. Those
    lessons can assist you in your learning and provide a multimedia learning experience.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Python puzzles** You can visit the online resources to solve Python puzzles
    and use the *Finxter.com* app for free to test and train your Python skills and
    measure your learning progress as you go through the book.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Code files and Jupyter notebooks** You must roll up your sleeves and start
    working with code to make progress toward Python mastery. Take your time to play
    around with various parameter values and input data. For your convenience, I’ve
    added all Python one-liners as executable code files.'
  prefs: []
  type: TYPE_NORMAL
