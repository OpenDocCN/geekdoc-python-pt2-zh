- en: Index
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '索引  '
- en: Please note that index links to approximate location of each term.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '请注意，索引链接指向每个术语的大致位置。  '
- en: '**Symbols**'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号**  '
- en: '`+` operator, [110](c07.xhtml#Page_110)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`+` 运算符, [110](c07.xhtml#Page_110)  '
- en: '`[]` operator, [99](c06.xhtml#Page_99), [103](c06.xhtml#Page_103)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`[]` 运算符, [99](c06.xhtml#Page_99), [103](c06.xhtml#Page_103)  '
- en: '`**` operator, [111](c07.xhtml#Page_111)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`**` 运算符, [111](c07.xhtml#Page_111)  '
- en: '**A**'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**A**  '
- en: '`abs()` function, [171](c10.xhtml#Page_171)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '`abs()` 函数, [171](c10.xhtml#Page_171)  '
- en: acquisition, [10](c01.xhtml#Page_10)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '获取, [10](c01.xhtml#Page_10)  '
- en: aggregation, [95](c06.xhtml#Page_95)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '聚合, [95](c06.xhtml#Page_95)  '
- en: aggregation levels, [103](c06.xhtml#Page_103)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '聚合级别, [103](c06.xhtml#Page_103)  '
- en: '`ALTER TABLE` operation, [78](c05.xhtml#Page_78)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '`ALTER TABLE` 操作, [78](c05.xhtml#Page_78)  '
- en: Amazon Reviews Exporter, [198](c12.xhtml#Page_198)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '亚马逊评论导出工具, [198](c12.xhtml#Page_198)  '
- en: analysis, [11](c01.xhtml#Page_11)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '分析, [11](c01.xhtml#Page_11)  '
- en: analytical SQL, [82](c05.xhtml#Page_82)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '分析性 SQL, [82](c05.xhtml#Page_82)  '
- en: analyzing location data, [145](c09.xhtml#Page_145)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '分析位置数据, [145](c09.xhtml#Page_145)  '
- en: antecedent, [176](c11.xhtml#Page_176), [183](c11.xhtml#Page_183)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '先行项, [176](c11.xhtml#Page_176), [183](c11.xhtml#Page_183)  '
- en: API (application programming interface), [6](c01.xhtml#Page_6)–[7](c01.xhtml#Page_7)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 'API（应用程序编程接口）, [6](c01.xhtml#Page_6)–[7](c01.xhtml#Page_7)  '
- en: '`append()` method, [16](c02.xhtml#Page_16), [48](c03.xhtml#Page_48), [123](c07.xhtml#Page_123)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`append()` 方法, [16](c02.xhtml#Page_16), [48](c03.xhtml#Page_48), [123](c07.xhtml#Page_123)  '
- en: application programming interface, [6](c01.xhtml#Page_6)–[7](c01.xhtml#Page_7)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '应用程序编程接口, [6](c01.xhtml#Page_6)–[7](c01.xhtml#Page_7)  '
- en: Apriori algorithm, [178](c11.xhtml#Page_178), [197](c12.xhtml#Page_197)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 'Apriori 算法, [178](c11.xhtml#Page_178), [197](c12.xhtml#Page_197)  '
- en: '`apriori()` function, [180](c11.xhtml#Page_180), [191](c11.xhtml#Page_191)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`apriori()` 函数, [180](c11.xhtml#Page_180), [191](c11.xhtml#Page_191)  '
- en: '`arange()` function, [135](c08.xhtml#Page_135)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`arange()` 函数, [135](c08.xhtml#Page_135)  '
- en: arrays, [37](c03.xhtml#Page_37)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 数组, [37](c03.xhtml#Page_37)
- en: association analysis, [195](c12.xhtml#Page_195)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '关联分析, [195](c12.xhtml#Page_195)  '
- en: association rules, [176](c11.xhtml#Page_176)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '关联规则, [176](c11.xhtml#Page_176)  '
- en: '`association_rules()` function, [181](c11.xhtml#Page_181), [187](c11.xhtml#Page_187),
    [192](c11.xhtml#Page_192)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`association_rules()` 函数, [181](c11.xhtml#Page_181), [187](c11.xhtml#Page_187),
    [192](c11.xhtml#Page_192)  '
- en: associative table, [125](c07.xhtml#Page_125)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '关联表, [125](c07.xhtml#Page_125)  '
- en: '`astype()` method, [125](c07.xhtml#Page_125)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`astype()` 方法, [125](c07.xhtml#Page_125)  '
- en: '`Axes` object, [133](c08.xhtml#Page_133)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`Axes` 对象, [133](c08.xhtml#Page_133)  '
- en: '`axis` parameter, [40](c03.xhtml#Page_40), [116](c07.xhtml#Page_116), [119](c07.xhtml#Page_119)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`axis` 参数, [40](c03.xhtml#Page_40), [116](c07.xhtml#Page_116), [119](c07.xhtml#Page_119)  '
- en: '**B**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**B**  '
- en: bag of words (BoW), [54](c03.xhtml#Page_54)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '词袋模型 (BoW), [54](c03.xhtml#Page_54)  '
- en: bar charts, [129](c08.xhtml#Page_129)
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '条形图, [129](c08.xhtml#Page_129)  '
- en: bar graphs, [129](c08.xhtml#Page_129)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '条形图, [129](c08.xhtml#Page_129)  '
- en: binary files, [62](c04.xhtml#Page_62)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '二进制文件, [62](c04.xhtml#Page_62)  '
- en: '`bytes` object, [62](c04.xhtml#Page_62), [66](c04.xhtml#Page_66)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`bytes` 对象, [62](c04.xhtml#Page_62), [66](c04.xhtml#Page_66)  '
- en: '**C**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**C**  '
- en: Cartopy, [139](c08.xhtml#Page_139)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 'Cartopy, [139](c08.xhtml#Page_139)  '
- en: categorical data, [2](c01.xhtml#Page_2)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '分类数据, [2](c01.xhtml#Page_2)  '
- en: categories of data, [2](c01.xhtml#Page_2)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '数据类别, [2](c01.xhtml#Page_2)  '
- en: children, syntactic, [21](c02.xhtml#Page_21)
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '子元素，句法, [21](c02.xhtml#Page_21)  '
- en: classification, [53](c03.xhtml#Page_53), [195](c12.xhtml#Page_195)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '分类, [53](c03.xhtml#Page_53), [195](c12.xhtml#Page_195)  '
- en: '`classification_report()` function, [205](c12.xhtml#Page_205)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`classification_report()` 函数, [205](c12.xhtml#Page_205)  '
- en: '`classifier` object, [203](c12.xhtml#Page_203)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`classifier` 对象, [203](c12.xhtml#Page_203)  '
- en: cleansing data, [10](c01.xhtml#Page_10), [199](c12.xhtml#Page_199)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '数据清洗, [10](c01.xhtml#Page_10), [199](c12.xhtml#Page_199)  '
- en: Colab notebook, [139](c08.xhtml#Page_139)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 'Colab 笔记本, [139](c08.xhtml#Page_139)  '
- en: '`collections` module, [20](c02.xhtml#Page_20)'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`collections` 模块, [20](c02.xhtml#Page_20)  '
- en: combining DataFrames, [98](c06.xhtml#Page_98)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '合并 DataFrame, [98](c06.xhtml#Page_98)  '
- en: combining datasets, [109](c07.xhtml#Page_109)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '合并数据集, [109](c07.xhtml#Page_109)  '
- en: combining dictionaries, [111](c07.xhtml#Page_111)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '合并字典, [111](c07.xhtml#Page_111)  '
- en: combining lists, [110](c07.xhtml#Page_110)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '合并列表, [110](c07.xhtml#Page_110)  '
- en: combining tuples, [110](c07.xhtml#Page_110)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '合并元组, [110](c07.xhtml#Page_110)  '
- en: common visualizations, [128](c08.xhtml#Page_128)
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '常见可视化, [128](c08.xhtml#Page_128)  '
- en: concatenating DataFrames, [118](c07.xhtml#Page_118)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '拼接 DataFrame, [118](c07.xhtml#Page_118)  '
- en: concatenation, [110](c07.xhtml#Page_110)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '拼接, [110](c07.xhtml#Page_110)  '
- en: along axis, [119](c07.xhtml#Page_119)
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '沿轴, [119](c07.xhtml#Page_119)  '
- en: '`concat()` function, [118](c07.xhtml#Page_118), [120](c07.xhtml#Page_120)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`concat()` 函数, [118](c07.xhtml#Page_118), [120](c07.xhtml#Page_120)  '
- en: confidence, [177](c11.xhtml#Page_177)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '信心度, [177](c11.xhtml#Page_177)  '
- en: confusion matrix, [204](c12.xhtml#Page_204)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '混淆矩阵, [204](c12.xhtml#Page_204)  '
- en: '`confusion_matrix()` method, [204](c12.xhtml#Page_204)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`confusion_matrix()` 方法, [204](c12.xhtml#Page_204)  '
- en: consequent, [176](c11.xhtml#Page_176), [183](c11.xhtml#Page_183)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 随后，[176](c11.xhtml#Page_176), [183](c11.xhtml#Page_183)
- en: '`count()` method, [17](c02.xhtml#Page_17)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`count()` 方法，[17](c02.xhtml#Page_17)'
- en: '`CREATE TABLE` command, [79](c05.xhtml#Page_79)'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`CREATE TABLE` 命令，[79](c05.xhtml#Page_79)'
- en: creating a list, [16](c02.xhtml#Page_16)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 创建列表，[16](c02.xhtml#Page_16)
- en: '*.csv*, [2](c01.xhtml#Page_2), [59](c04.xhtml#Page_59)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*.csv*，[2](c01.xhtml#Page_2), [59](c04.xhtml#Page_59)'
- en: '`csv.DictReader()` method, [61](c04.xhtml#Page_61)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`csv.DictReader()` 方法，[61](c04.xhtml#Page_61)'
- en: '`csv` module, [148](c09.xhtml#Page_148)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`csv` 模块，[148](c09.xhtml#Page_148)'
- en: '`csv.reader()` method, [61](c04.xhtml#Page_61)'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`csv.reader()` 方法，[61](c04.xhtml#Page_61)'
- en: '`cursor.executemany()` method, [84](c05.xhtml#Page_84)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor.executemany()` 方法，[84](c05.xhtml#Page_84)'
- en: '`cursor.execute()` method, [80](c05.xhtml#Page_80), [83](c05.xhtml#Page_83)'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor.execute()` 方法，[80](c05.xhtml#Page_80), [83](c05.xhtml#Page_83)'
- en: '`cursor` object, [80](c05.xhtml#Page_80)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor` 对象，[80](c05.xhtml#Page_80)'
- en: '**D**'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**D**'
- en: data, [1](c01.xhtml#Page_1)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 数据，[1](c01.xhtml#Page_1)
- en: database, [8](c01.xhtml#Page_8), [73](c05.xhtml#Page_73)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库，[8](c01.xhtml#Page_8), [73](c05.xhtml#Page_73)
- en: Data Definition Language (DDL), [75](c05.xhtml#Page_75)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 数据定义语言（DDL），[75](c05.xhtml#Page_75)
- en: DataFrame, [40](c03.xhtml#Page_40), [96](c06.xhtml#Page_96)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: DataFrame，[40](c03.xhtml#Page_40), [96](c06.xhtml#Page_96)
- en: Data Manipulation Language (DML), [75](c05.xhtml#Page_75)
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 数据操作语言（DML），[75](c05.xhtml#Page_75)
- en: data processing pipeline, [9](c01.xhtml#Page_9)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 数据处理管道，[9](c01.xhtml#Page_9)
- en: data structures, [15](c02.xhtml#Page_15)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 数据结构，[15](c02.xhtml#Page_15)
- en: '`Date` column, [71](c04.xhtml#Page_71)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`Date` 列，[71](c04.xhtml#Page_71)'
- en: '`date` type, [44](c03.xhtml#Page_44)'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`date` 类型，[44](c03.xhtml#Page_44)'
- en: '`del` command, [19](c02.xhtml#Page_19)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`del` 命令，[19](c02.xhtml#Page_19)'
- en: '`deque` object, [19](c02.xhtml#Page_19)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`deque` 对象，[19](c02.xhtml#Page_19)'
- en: dictionary, [28](c02.xhtml#Page_28), [111](c07.xhtml#Page_111)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 字典，[28](c02.xhtml#Page_28), [111](c07.xhtml#Page_111)
- en: '`DictReader()`, [60](c04.xhtml#Page_60)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`DictReader()`，[60](c04.xhtml#Page_60)'
- en: '`distance()` function, [152](c09.xhtml#Page_152), [156](c09.xhtml#Page_156)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`distance()` 函数，[152](c09.xhtml#Page_152), [156](c09.xhtml#Page_156)'
- en: '`DISTINCT()` function, [86](c05.xhtml#Page_86)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`DISTINCT()` 函数，[86](c05.xhtml#Page_86)'
- en: '`doc` object, [25](c02.xhtml#Page_25)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`doc` 对象，[25](c02.xhtml#Page_25)'
- en: document-oriented database, [90](c05.xhtml#Page_90)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 面向文档的数据库，[90](c05.xhtml#Page_90)
- en: double-ended queue, [19](c02.xhtml#Page_19)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 双端队列，[19](c02.xhtml#Page_19)
- en: '`drop_duplicates()` method, [151](c09.xhtml#Page_151), [188](c11.xhtml#Page_188)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`drop_duplicates()` 方法，[151](c09.xhtml#Page_151), [188](c11.xhtml#Page_188)'
- en: '`drop()` method, [120](c07.xhtml#Page_120)'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`drop()` 方法，[120](c07.xhtml#Page_120)'
- en: '`dtype` attribute, [41](c03.xhtml#Page_41)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`dtype` 属性，[41](c03.xhtml#Page_41)'
- en: '`dtypes` property, [124](c07.xhtml#Page_124)'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`dtypes` 属性，[124](c07.xhtml#Page_124)'
- en: '**E**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**E**'
- en: element-wise operations, [38](c03.xhtml#Page_38)–[39](c03.xhtml#Page_39)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 元素级操作，[38](c03.xhtml#Page_38)–[39](c03.xhtml#Page_39)
- en: '`else` clause, list comprehension, [115](c07.xhtml#Page_115)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`else` 子句，列表推导式，[115](c07.xhtml#Page_115)'
- en: '`enumerate()` function, [59](c04.xhtml#Page_59)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`enumerate()` 函数，[59](c04.xhtml#Page_59)'
- en: evaluating the model, [203](c12.xhtml#Page_203)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 评估模型，[203](c12.xhtml#Page_203)
- en: '`except` clause, [80](c05.xhtml#Page_80)'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`except` 子句，[80](c05.xhtml#Page_80)'
- en: '**F**'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**F**'
- en: features, [195](c12.xhtml#Page_195)
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 特征，[195](c12.xhtml#Page_195)
- en: '`features` array, [210](c12.xhtml#Page_210)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`features` 数组，[210](c12.xhtml#Page_210)'
- en: fields, [2](c01.xhtml#Page_2)
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 字段，[2](c01.xhtml#Page_2)
- en: '`Figure` object, [133](c08.xhtml#Page_133)'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`Figure` 对象，[133](c08.xhtml#Page_133)'
- en: '`file` object, [57](c04.xhtml#Page_57)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`file` 对象，[57](c04.xhtml#Page_57)'
- en: files, [9](c01.xhtml#Page_9)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 文件，[9](c01.xhtml#Page_9)
- en: '`fillna()` method, [124](c07.xhtml#Page_124), [172](c10.xhtml#Page_172)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`fillna()` 方法，[124](c07.xhtml#Page_124), [172](c10.xhtml#Page_172)'
- en: '`finally` clause, [80](c05.xhtml#Page_80)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`finally` 子句，[80](c05.xhtml#Page_80)'
- en: financial datasets, [5](c01.xhtml#Page_5)
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 金融数据集，[5](c01.xhtml#Page_5)
- en: first-in, first-out (FIFO), [19](c02.xhtml#Page_19)
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 先进先出（FIFO），[19](c02.xhtml#Page_19)
- en: flat file, [59](c04.xhtml#Page_59)
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 扁平文件，[59](c04.xhtml#Page_59)
- en: foreign keys, [76](c05.xhtml#Page_76)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 外键，[76](c05.xhtml#Page_76)
- en: '`for` loop, [20](c02.xhtml#Page_20), [25](c02.xhtml#Page_25), [34](c02.xhtml#Page_34),
    [115](c07.xhtml#Page_115)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`for` 循环，[20](c02.xhtml#Page_20), [25](c02.xhtml#Page_25), [34](c02.xhtml#Page_34),
    [115](c07.xhtml#Page_115)'
- en: '`FormatStrFormatter()` function, [135](c08.xhtml#Page_135)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`FormatStrFormatter()` 函数，[135](c08.xhtml#Page_135)'
- en: '`frozenset.union()` method, [187](c11.xhtml#Page_187)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`frozenset.union()` 方法，[187](c11.xhtml#Page_187)'
- en: '**G**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**G**'
- en: generating association rules, [181](c11.xhtml#Page_181)
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 生成关联规则，[181](c11.xhtml#Page_181)
- en: Geocoding API, [146](c09.xhtml#Page_146)
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 地理编码 API，[146](c09.xhtml#Page_146)
- en: geographical coordinates, [146](c09.xhtml#Page_146)
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 地理坐标，[146](c09.xhtml#Page_146)
- en: geopy, [150](c09.xhtml#Page_150)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: geopy，[150](c09.xhtml#Page_150)
- en: geopy library, [151](c09.xhtml#Page_151)
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: geopy 库，[151](c09.xhtml#Page_151)
- en: geospatial data, [137](c08.xhtml#Page_137), [139](c08.xhtml#Page_139)
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 地理空间数据，[137](c08.xhtml#Page_137), [139](c08.xhtml#Page_139)
- en: '`get_data_stooq()` method, [71](c04.xhtml#Page_71), [207](c12.xhtml#Page_207)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_data_stooq()` 方法, [71](c04.xhtml#Page_71), [207](c12.xhtml#Page_207)'
- en: '`get_group()` method, [107](c06.xhtml#Page_107)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_group()` 方法, [107](c06.xhtml#Page_107)'
- en: '`get_location()` handler, [148](c09.xhtml#Page_148)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_location()` 处理器, [148](c09.xhtml#Page_148)'
- en: getting data, [207](c12.xhtml#Page_207)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 获取数据, [207](c12.xhtml#Page_207)
- en: Google Colab, [139](c08.xhtml#Page_139)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Google Colab, [139](c08.xhtml#Page_139)
- en: googlemaps library, [146](c09.xhtml#Page_146)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: googlemaps 库, [146](c09.xhtml#Page_146)
- en: '`google_translator` module, [200](c12.xhtml#Page_200)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`google_translator` 模块, [200](c12.xhtml#Page_200)'
- en: google_trans_new library, [199](c12.xhtml#Page_199)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: google_trans_new 库, [199](c12.xhtml#Page_199)
- en: '`groupby()` function, [52](c03.xhtml#Page_52), [69](c04.xhtml#Page_69), [100](c06.xhtml#Page_100),
    [106](c06.xhtml#Page_106)'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupby()` 函数, [52](c03.xhtml#Page_52), [69](c04.xhtml#Page_69), [100](c06.xhtml#Page_100),
    [106](c06.xhtml#Page_106)'
- en: GroupBy object, [52](c03.xhtml#Page_52)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: GroupBy 对象, [52](c03.xhtml#Page_52)
- en: '`groupby` operation, [69](c04.xhtml#Page_69)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '`groupby` 操作, [69](c04.xhtml#Page_69)'
- en: '**H**'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**H**'
- en: head, syntactic, [21](c02.xhtml#Page_21)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: head, 语法, [21](c02.xhtml#Page_21)
- en: heatmap, [183](c11.xhtml#Page_183)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 热力图, [183](c11.xhtml#Page_183)
- en: hierarchical index, [100](c06.xhtml#Page_100)
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 层次索引, [100](c06.xhtml#Page_100)
- en: '`histogram()` function, [135](c08.xhtml#Page_135)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`histogram()` 函数, [135](c08.xhtml#Page_135)'
- en: histograms, [130](c08.xhtml#Page_130)
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 直方图, [130](c08.xhtml#Page_130)
- en: '`history()` method, [83](c05.xhtml#Page_83)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`history()` 方法, [83](c05.xhtml#Page_83)'
- en: '`how` parameter, [48](c03.xhtml#Page_48)'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`how` 参数, [48](c03.xhtml#Page_48)'
- en: HTTP (HyperText Transfer Protocol), [63](c04.xhtml#Page_63)
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP (超文本传输协议), [63](c04.xhtml#Page_63)
- en: HTTP headers, [64](c04.xhtml#Page_64)
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP 头部, [64](c04.xhtml#Page_64)
- en: HTTP request methods, [64](c04.xhtml#Page_64)
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP 请求方法, [64](c04.xhtml#Page_64)
- en: '`HTTPResponse` object, [65](c04.xhtml#Page_65)–[66](c04.xhtml#Page_66)'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`HTTPResponse` 对象, [65](c04.xhtml#Page_65)–[66](c04.xhtml#Page_66)'
- en: '**I**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**I**'
- en: '`if` clause, list comprehension, [114](c07.xhtml#Page_114)'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`if` 条件语句, 列表推导, [114](c07.xhtml#Page_114)'
- en: '`iloc` property, [42](c03.xhtml#Page_42)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`iloc` 属性, [42](c03.xhtml#Page_42)'
- en: '`imshow()` method, [184](c11.xhtml#Page_184)'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`imshow()` 方法, [184](c11.xhtml#Page_184)'
- en: independent variables, [195](c12.xhtml#Page_195)
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 自变量, [195](c12.xhtml#Page_195)
- en: '`index.isin()` method, [102](c06.xhtml#Page_102), [105](c06.xhtml#Page_105)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`index.isin()` 方法, [102](c06.xhtml#Page_102), [105](c06.xhtml#Page_105)'
- en: inner list comprehension, [113](c07.xhtml#Page_113)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 内部列表推导, [113](c07.xhtml#Page_113)
- en: inner parameter, [49](c03.xhtml#Page_49)
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 内部参数, [49](c03.xhtml#Page_49)
- en: input and output in machine learning, [195](c12.xhtml#Page_195)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习中的输入和输出, [195](c12.xhtml#Page_195)
- en: '`insert_many()` method, [92](c05.xhtml#Page_92)'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`insert_many()` 方法, [92](c05.xhtml#Page_92)'
- en: '`insert_one()` method, [92](c05.xhtml#Page_92)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '`insert_one()` 方法, [92](c05.xhtml#Page_92)'
- en: '`INSERT` statement, [83](c05.xhtml#Page_83)–[84](c05.xhtml#Page_84)'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`INSERT` 语句, [83](c05.xhtml#Page_83)–[84](c05.xhtml#Page_84)'
- en: '`intersection()` method, [33](c02.xhtml#Page_33)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`intersection()` 方法, [33](c02.xhtml#Page_33)'
- en: irregular time series, [162](c10.xhtml#Page_162)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 非规则时间序列, [162](c10.xhtml#Page_162)
- en: itemsets, [176](c11.xhtml#Page_176)
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 项集, [176](c11.xhtml#Page_176)
- en: '`itertuples()` method, [159](c09.xhtml#Page_159)'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`itertuples()` 方法, [159](c09.xhtml#Page_159)'
- en: '**J**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '**J**'
- en: joining two DataFrames, [122](c07.xhtml#Page_122)
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 合并两个 DataFrame, [122](c07.xhtml#Page_122)
- en: '`join()` method, [47](c03.xhtml#Page_47)–[48](c03.xhtml#Page_48), [112](c07.xhtml#Page_112),
    [118](c07.xhtml#Page_118), [208](c12.xhtml#Page_208)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`join()` 方法, [47](c03.xhtml#Page_47)–[48](c03.xhtml#Page_48), [112](c07.xhtml#Page_112),
    [118](c07.xhtml#Page_118), [208](c12.xhtml#Page_208)'
- en: JSON, [4](c01.xhtml#Page_4), [31](c02.xhtml#Page_31), [61](c04.xhtml#Page_61),
    [70](c04.xhtml#Page_70)
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: JSON, [4](c01.xhtml#Page_4), [31](c02.xhtml#Page_31), [61](c04.xhtml#Page_61),
    [70](c04.xhtml#Page_70)
- en: '`json.dump()` method, [32](c02.xhtml#Page_32)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`json.dump()` 方法, [32](c02.xhtml#Page_32)'
- en: '`json.dumps()` method, [46](c03.xhtml#Page_46)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`json.dumps()` 方法, [46](c03.xhtml#Page_46)'
- en: '`json.load()` method, [32](c02.xhtml#Page_32), [61](c04.xhtml#Page_61)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`json.load()` 方法, [32](c02.xhtml#Page_32), [61](c04.xhtml#Page_61)'
- en: '`json.loads()` method, [66](c04.xhtml#Page_66)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`json.loads()` 方法, [66](c04.xhtml#Page_66)'
- en: '`json` module, [61](c04.xhtml#Page_61)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`json` 模块, [61](c04.xhtml#Page_61)'
- en: '`json_normalize()` method, [68](c04.xhtml#Page_68), [70](c04.xhtml#Page_70)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '`json_normalize()` 方法, [68](c04.xhtml#Page_68), [70](c04.xhtml#Page_70)'
- en: '**K**'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**K**'
- en: key-value method, [8](c01.xhtml#Page_8)
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 键值方法, [8](c01.xhtml#Page_8)
- en: key-value pairs, [28](c02.xhtml#Page_28), [88](c05.xhtml#Page_88), [112](c07.xhtml#Page_112)
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 键值对, [28](c02.xhtml#Page_28), [88](c05.xhtml#Page_88), [112](c07.xhtml#Page_112)
- en: key-value store, [89](c05.xhtml#Page_89)
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 键值存储, [89](c05.xhtml#Page_89)
- en: '**L**'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '**L**'
- en: '`LAG()` function, [85](c05.xhtml#Page_85)'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`LAG()` 函数, [85](c05.xhtml#Page_85)'
- en: lambda function, [31](c02.xhtml#Page_31), [152](c09.xhtml#Page_152)
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: lambda 函数, [31](c02.xhtml#Page_31), [152](c09.xhtml#Page_152)
- en: last-in, first-out (LIFO), [20](c02.xhtml#Page_20)
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 后进先出 (LIFO), [20](c02.xhtml#Page_20)
- en: left join, [48](c03.xhtml#Page_48)
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 左连接, [48](c03.xhtml#Page_48)
- en: '`len()` function, [19](c02.xhtml#Page_19)'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`len()` 函数, [19](c02.xhtml#Page_19)'
- en: lift, [178](c11.xhtml#Page_178)
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 提升, [178](c11.xhtml#Page_178)
- en: line charts, [128](c08.xhtml#Page_128)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 折线图, [128](c08.xhtml#Page_128)
- en: line graphs, [128](c08.xhtml#Page_128)
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 折线图, [128](c08.xhtml#Page_128)
- en: '`linewidth` parameter, [135](c08.xhtml#Page_135)'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`linewidth` 参数, [135](c08.xhtml#Page_135)'
- en: list, [16](c02.xhtml#Page_16), [96](c06.xhtml#Page_96), [110](c07.xhtml#Page_110)
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 列表, [16](c02.xhtml#Page_16), [96](c06.xhtml#Page_96), [110](c07.xhtml#Page_110)
- en: list comprehension, [13](c01.xhtml#Page_13), [23](c02.xhtml#Page_23), [158](c09.xhtml#Page_158),
    [186](c11.xhtml#Page_186)
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 列表推导式, [13](c01.xhtml#Page_13), [23](c02.xhtml#Page_23), [158](c09.xhtml#Page_158),
    [186](c11.xhtml#Page_186)
- en: '`list()` function, [159](c09.xhtml#Page_159)'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`list()` 函数, [159](c09.xhtml#Page_159)'
- en: '`list.index()` method, [17](c02.xhtml#Page_17)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`list.index()` 方法, [17](c02.xhtml#Page_17)'
- en: '`list.insert()` method, [17](c02.xhtml#Page_17)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`list.insert()` 方法, [17](c02.xhtml#Page_17)'
- en: list object methods, [16](c02.xhtml#Page_16)
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 列表对象方法, [16](c02.xhtml#Page_16)
- en: list of dictionaries, [29](c02.xhtml#Page_29)
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 字典列表, [29](c02.xhtml#Page_29)
- en: list of tuples, [27](c02.xhtml#Page_27), [96](c06.xhtml#Page_96)–[97](c06.xhtml#Page_97),
    [150](c09.xhtml#Page_150)
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 元组列表, [27](c02.xhtml#Page_27), [96](c06.xhtml#Page_96)–[97](c06.xhtml#Page_97),
    [150](c09.xhtml#Page_150)
- en: location coordinates, [5](c01.xhtml#Page_5)
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 位置坐标, [5](c01.xhtml#Page_5)
- en: location data, [5](c01.xhtml#Page_5)
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 位置数据, [5](c01.xhtml#Page_5)
- en: '`loc` property, [42](c03.xhtml#Page_42)'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`loc` 属性, [42](c03.xhtml#Page_42)'
- en: logistic regression, [55](c03.xhtml#Page_55)
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑回归, [55](c03.xhtml#Page_55)
- en: '`LogisticRegression` classifier, [203](c12.xhtml#Page_203), [210](c12.xhtml#Page_210)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`LogisticRegression` 分类器, [203](c12.xhtml#Page_203), [210](c12.xhtml#Page_210)'
- en: '**M**'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**M**'
- en: machine learning, [53](c03.xhtml#Page_53), [193](c12.xhtml#Page_193)
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习, [53](c03.xhtml#Page_53), [193](c12.xhtml#Page_193)
- en: extensions (mlxtend), [178](c11.xhtml#Page_178)
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展 (mlxtend), [178](c11.xhtml#Page_178)
- en: many-to-many join, [52](c03.xhtml#Page_52), [125](c07.xhtml#Page_125)
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 多对多连接, [52](c03.xhtml#Page_52), [125](c07.xhtml#Page_125)
- en: market basket analysis, [175](c11.xhtml#Page_175)
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 市场篮子分析, [175](c11.xhtml#Page_175)
- en: matching table, [125](c07.xhtml#Page_125)
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 匹配表, [125](c07.xhtml#Page_125)
- en: Matplotlib, [127](c08.xhtml#Page_127), [131](c08.xhtml#Page_131)
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib, [127](c08.xhtml#Page_127), [131](c08.xhtml#Page_131)
- en: '`matplotlib.pyplot` module, [131](c08.xhtml#Page_131)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`matplotlib.pyplot` 模块, [131](c08.xhtml#Page_131)'
- en: '`mean()` function, [52](c03.xhtml#Page_52)'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`mean()` 函数, [52](c03.xhtml#Page_52)'
- en: '`mean()` method, [52](c03.xhtml#Page_52)'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`mean()` 方法, [52](c03.xhtml#Page_52)'
- en: '`merge()` method, [47](c03.xhtml#Page_47), [51](c03.xhtml#Page_51), [98](c06.xhtml#Page_98)–[99](c06.xhtml#Page_99),
    [112](c07.xhtml#Page_112), [118](c07.xhtml#Page_118), [126](c07.xhtml#Page_126)'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '`merge()` 方法, [47](c03.xhtml#Page_47), [51](c03.xhtml#Page_51), [98](c06.xhtml#Page_98)–[99](c06.xhtml#Page_99),
    [112](c07.xhtml#Page_112), [118](c07.xhtml#Page_118), [126](c07.xhtml#Page_126)'
- en: '`min()` function, [152](c09.xhtml#Page_152)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '`min()` 函数, [152](c09.xhtml#Page_152)'
- en: mlxtend library, [178](c11.xhtml#Page_178)
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: mlxtend 库, [178](c11.xhtml#Page_178)
- en: '`MongoClient()` constructor, [91](c05.xhtml#Page_91)'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '`MongoClient()` 构造函数, [91](c05.xhtml#Page_91)'
- en: MongoDB, [90](c05.xhtml#Page_90)
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB, [90](c05.xhtml#Page_90)
- en: '`mset()` method, [89](c05.xhtml#Page_89)'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`mset()` 方法, [89](c05.xhtml#Page_89)'
- en: MultiIndex, [101](c06.xhtml#Page_101)
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: MultiIndex, [101](c06.xhtml#Page_101)
- en: keys, [103](c06.xhtml#Page_103)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 键, [103](c06.xhtml#Page_103)
- en: multilevel index, [100](c06.xhtml#Page_100)
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 多级索引, [100](c06.xhtml#Page_100)
- en: multivariate time series, [167](c10.xhtml#Page_167)
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 多元时间序列, [167](c10.xhtml#Page_167)
- en: MySQL, [74](c05.xhtml#Page_74)–[75](c05.xhtml#Page_75)
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL, [74](c05.xhtml#Page_74)–[75](c05.xhtml#Page_75)
- en: MySQL Connector/Python driver, [79](c05.xhtml#Page_79)
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL Connector/Python 驱动, [79](c05.xhtml#Page_79)
- en: MySQL database, [163](c10.xhtml#Page_163)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL 数据库, [163](c10.xhtml#Page_163)
- en: '`mysql>` prompt, [79](c05.xhtml#Page_79), [85](c05.xhtml#Page_85)'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`mysql>` 提示符, [79](c05.xhtml#Page_79), [85](c05.xhtml#Page_85)'
- en: '**N**'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '**N**'
- en: named entity recognition (NER), [11](c01.xhtml#Page_11)
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 命名实体识别 (NER), [11](c01.xhtml#Page_11)
- en: '`NaN`, [48](c03.xhtml#Page_48), [124](c07.xhtml#Page_124)–[125](c07.xhtml#Page_125),
    [165](c10.xhtml#Page_165), [184](c11.xhtml#Page_184), [190](c11.xhtml#Page_190)'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`NaN`, [48](c03.xhtml#Page_48), [124](c07.xhtml#Page_124)–[125](c07.xhtml#Page_125),
    [165](c10.xhtml#Page_165), [184](c11.xhtml#Page_184), [190](c11.xhtml#Page_190)'
- en: natural language processing (NLP), [3](c01.xhtml#Page_3), [21](c02.xhtml#Page_21)
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 自然语言处理 (NLP), [3](c01.xhtml#Page_3), [21](c02.xhtml#Page_21)
- en: with Python and spaCy, [27](c02.xhtml#Page_27)
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Python 和 spaCy, [27](c02.xhtml#Page_27)
- en: News API, [10](c01.xhtml#Page_10), [66](c04.xhtml#Page_66)
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 新闻 API, [10](c01.xhtml#Page_10), [66](c04.xhtml#Page_66)
- en: '`nlp` pipeline, [22](c02.xhtml#Page_22)'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '`nlp` 流水线, [22](c02.xhtml#Page_22)'
- en: '`nltk.sentiment` package, [11](c01.xhtml#Page_11)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`nltk.sentiment` 包, [11](c01.xhtml#Page_11)'
- en: '`None` entry, [115](c07.xhtml#Page_115)'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`None` 条目, [115](c07.xhtml#Page_115)'
- en: nonrelational databases, [74](c05.xhtml#Page_74), [88](c05.xhtml#Page_88)
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 非关系型数据库, [74](c05.xhtml#Page_74), [88](c05.xhtml#Page_88)
- en: nonspatial attributes, [156](c09.xhtml#Page_156)
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 非空间属性, [156](c09.xhtml#Page_156)
- en: NoSQL, [8](c01.xhtml#Page_8)
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: NoSQL, [8](c01.xhtml#Page_8)
- en: database, [88](c05.xhtml#Page_88)
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库, [88](c05.xhtml#Page_88)
- en: '`NOT NULL`, [78](c05.xhtml#Page_78)'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`NOT NULL`, [78](c05.xhtml#Page_78)'
- en: '`np.amax()`, [40](c03.xhtml#Page_40)'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.amax()`, [40](c03.xhtml#Page_40)'
- en: '`np.average()`, [40](c03.xhtml#Page_40)'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.average()`, [40](c03.xhtml#Page_40)'
- en: '`np.median()`, [40](c03.xhtml#Page_40)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`np.median()`, [40](c03.xhtml#Page_40)'
- en: numerical data, [3](c01.xhtml#Page_3)
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 数值数据, [3](c01.xhtml#Page_3)
- en: NumPy, [37](c03.xhtml#Page_37)
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy, [37](c03.xhtml#Page_37)
- en: '`numpy.append()` function, [117](c07.xhtml#Page_117)'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`numpy.append()` 函数, [117](c07.xhtml#Page_117)'
- en: NumPy array, [38](c03.xhtml#Page_38), [210](c12.xhtml#Page_210)
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 数组, [38](c03.xhtml#Page_38), [210](c12.xhtml#Page_210)
- en: '`numpy.concatenate()` function, [116](c07.xhtml#Page_116)'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`numpy.concatenate()` 函数, [116](c07.xhtml#Page_116)'
- en: NumPy’s `amax()` function, [40](c03.xhtml#Page_40)
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 的 `amax()` 函数, [40](c03.xhtml#Page_40)
- en: NumPy statistical functions, [39](c03.xhtml#Page_39)
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy 统计函数, [39](c03.xhtml#Page_39)
- en: '**O**'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '**O**'
- en: one-hot encoded Boolean array, [179](c11.xhtml#Page_179)
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: one-hot 编码的布尔数组, [179](c11.xhtml#Page_179)
- en: one-liner, [13](c01.xhtml#Page_13)
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 单行代码, [13](c01.xhtml#Page_13)
- en: one-to-many join, [50](c03.xhtml#Page_50)
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 一对多连接, [50](c03.xhtml#Page_50)
- en: one-to-one join, [47](c03.xhtml#Page_47)
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 一对一连接, [47](c03.xhtml#Page_47)
- en: online transaction processing (OLTP), [74](c05.xhtml#Page_74)
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在线事务处理 (OLTP), [74](c05.xhtml#Page_74)
- en: '`open()` function, [9](c01.xhtml#Page_9), [57](c04.xhtml#Page_57), [60](c04.xhtml#Page_60),
    [63](c04.xhtml#Page_63)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '`open()` 函数, [9](c01.xhtml#Page_9), [57](c04.xhtml#Page_57), [60](c04.xhtml#Page_60),
    [63](c04.xhtml#Page_63)'
- en: openpyxl library, [189](c11.xhtml#Page_189)
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: openpyxl 库, [189](c11.xhtml#Page_189)
- en: '`OVER` clause, [85](c05.xhtml#Page_85)'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`OVER` 子句, [85](c05.xhtml#Page_85)'
- en: '**P**'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: '**P**'
- en: pandas, [40](c03.xhtml#Page_40)
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: pandas, [40](c03.xhtml#Page_40)
- en: pandas-datareader, [71](c04.xhtml#Page_71)
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: pandas-datareader, [71](c04.xhtml#Page_71)
- en: parse tree, [8](c01.xhtml#Page_8)
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 解析树, [8](c01.xhtml#Page_8)
- en: '`PARTITION BY` clause, [85](c05.xhtml#Page_85)'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '`PARTITION BY` 子句, [85](c05.xhtml#Page_85)'
- en: pie charts, [130](c08.xhtml#Page_130)
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 饼图, [130](c08.xhtml#Page_130)
- en: '`pip` command, [7](c01.xhtml#Page_7)'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip` 命令, [7](c01.xhtml#Page_7)'
- en: '`pivot()` method, [183](c11.xhtml#Page_183)'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`pivot()` 方法, [183](c11.xhtml#Page_183)'
- en: plaintext files, [9](c01.xhtml#Page_9)
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 明文文件, [9](c01.xhtml#Page_9)
- en: '`plot()` method, [137](c08.xhtml#Page_137)'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`plot()` 方法, [137](c08.xhtml#Page_137)'
- en: '`plt.bar()` function, [133](c08.xhtml#Page_133)'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.bar()` 函数, [133](c08.xhtml#Page_133)'
- en: '`plt.pie()` function, [133](c08.xhtml#Page_133)'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.pie()` 函数, [133](c08.xhtml#Page_133)'
- en: '`plt.plot()` function, [132](c08.xhtml#Page_132)'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.plot()` 函数, [132](c08.xhtml#Page_132)'
- en: '`plt.show()` function, [132](c08.xhtml#Page_132)'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.show()` 函数, [132](c08.xhtml#Page_132)'
- en: '`plt.subplots()` function, [140](c08.xhtml#Page_140)'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.subplots()` 函数, [140](c08.xhtml#Page_140)'
- en: '`plt.text()` method, [142](c08.xhtml#Page_142)'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.text()` 方法, [142](c08.xhtml#Page_142)'
- en: '`plt.xlabel()` function, [132](c08.xhtml#Page_132)'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.xlabel()` 函数, [132](c08.xhtml#Page_132)'
- en: '`plt.ylabel()` function, [132](c08.xhtml#Page_132)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.ylabel()` 函数, [132](c08.xhtml#Page_132)'
- en: '`plt.yticks()` method, [138](c08.xhtml#Page_138)'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '`plt.yticks()` 方法, [138](c08.xhtml#Page_138)'
- en: '`Point` class, [153](c09.xhtml#Page_153)'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`Point` 类, [153](c09.xhtml#Page_153)'
- en: '`Point` object, [156](c09.xhtml#Page_156)'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '`Point` 对象, [156](c09.xhtml#Page_156)'
- en: '`Polygon` class, [153](c09.xhtml#Page_153)'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`Polygon` 类, [153](c09.xhtml#Page_153)'
- en: '`Polygon` object, [156](c09.xhtml#Page_156)'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`Polygon` 对象, [156](c09.xhtml#Page_156)'
- en: polygons, [153](c09.xhtml#Page_153)
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 多边形, [153](c09.xhtml#Page_153)
- en: '`popleft()` method, [20](c02.xhtml#Page_20)'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '`popleft()` 方法, [20](c02.xhtml#Page_20)'
- en: '`predict()` method, [204](c12.xhtml#Page_204)'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '`predict()` 方法, [204](c12.xhtml#Page_204)'
- en: previously unseen data, [197](c12.xhtml#Page_197)
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 之前未见过的数据, [197](c12.xhtml#Page_197)
- en: primary keys, [76](c05.xhtml#Page_76)
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 主键, [76](c05.xhtml#Page_76)
- en: Pythonic way, [13](c01.xhtml#Page_13)
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: Pythonic 风格, [13](c01.xhtml#Page_13)
- en: '**Q**'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '**Q**'
- en: queue abstract data type, [19](c02.xhtml#Page_19)
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 队列抽象数据类型, [19](c02.xhtml#Page_19)
- en: '**R**'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '**R**'
- en: '`rb` parameter, [62](c04.xhtml#Page_62)'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`rb` 参数, [62](c04.xhtml#Page_62)'
- en: '`read_csv()` method, [54](c03.xhtml#Page_54), [138](c08.xhtml#Page_138)'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_csv()` 方法, [54](c03.xhtml#Page_54), [138](c08.xhtml#Page_138)'
- en: '`reader()` method, [60](c04.xhtml#Page_60)'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`reader()` 方法, [60](c04.xhtml#Page_60)'
- en: reader methods of pandas, [45](c03.xhtml#Page_45)
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 的 reader 方法, [45](c03.xhtml#Page_45)
- en: '`read_json()` method, [46](c03.xhtml#Page_46)'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_json()` 方法, [46](c03.xhtml#Page_46)'
- en: '`read()` method, [62](c04.xhtml#Page_62)'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '`read()` 方法, [62](c04.xhtml#Page_62)'
- en: '`read_sql()` method, [87](c05.xhtml#Page_87)'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_sql()` 方法, [87](c05.xhtml#Page_87)'
- en: record, [2](c01.xhtml#Page_2)
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 记录, [2](c01.xhtml#Page_2)
- en: in a database, [3](c01.xhtml#Page_3)
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库中, [3](c01.xhtml#Page_3)
- en: Redis, [89](c05.xhtml#Page_89)
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: Redis, [89](c05.xhtml#Page_89)
- en: regression, [53](c03.xhtml#Page_53), [195](c12.xhtml#Page_195)
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 回归, [53](c03.xhtml#Page_53), [195](c12.xhtml#Page_195)
- en: relational databases, [74](c05.xhtml#Page_74)
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 关系型数据库, [74](c05.xhtml#Page_74)
- en: '`rename()` method, [69](c04.xhtml#Page_69)'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`rename()` 方法, [69](c04.xhtml#Page_69)'
- en: '`request()` method, [65](c04.xhtml#Page_65)'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`request()` 方法, [65](c04.xhtml#Page_65)'
- en: requests, HTTP, [63](c04.xhtml#Page_63)
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 请求, HTTP, [63](c04.xhtml#Page_63)
- en: '`requests.get()`, [67](c04.xhtml#Page_67)'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '`requests.get()`, [67](c04.xhtml#Page_67)'
- en: Requests library, [67](c04.xhtml#Page_67)
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: Requests 库, [67](c04.xhtml#Page_67)
- en: '`reset_index()` method, [45](c03.xhtml#Page_45), [69](c04.xhtml#Page_69), [83](c05.xhtml#Page_83)'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`reset_index()` 方法, [45](c03.xhtml#Page_45), [69](c04.xhtml#Page_69), [83](c05.xhtml#Page_83)'
- en: '`Response` object, [67](c04.xhtml#Page_67)'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '`Response` 对象, [67](c04.xhtml#Page_67)'
- en: responses, HTTP, [63](c04.xhtml#Page_63)
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 响应, HTTP, [63](c04.xhtml#Page_63)
- en: right join, [115](c07.xhtml#Page_115), [122](c07.xhtml#Page_122)
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 右连接, [115](c07.xhtml#Page_115), [122](c07.xhtml#Page_122)
- en: '`rolling()` method, [166](c10.xhtml#Page_166)'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '`rolling()` 方法, [166](c10.xhtml#Page_166)'
- en: rolling window calculations, [166](c10.xhtml#Page_166)
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动窗口计算, [166](c10.xhtml#Page_166)
- en: '**S**'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '**S**'
- en: '`scatter()` method, [141](c08.xhtml#Page_141)'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '`scatter()` 方法, [141](c08.xhtml#Page_141)'
- en: scikit-learn, [52](c03.xhtml#Page_52)
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: scikit-learn, [52](c03.xhtml#Page_52)
- en: '`select()` function, [210](c12.xhtml#Page_210)'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '`select()` 函数, [210](c12.xhtml#Page_210)'
- en: '`SELECT` statement, [81](c05.xhtml#Page_81)'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '`SELECT` 语句, [81](c05.xhtml#Page_81)'
- en: semistructured data, [4](c01.xhtml#Page_4)
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 半结构化数据, [4](c01.xhtml#Page_4)
- en: sentiment analysis, [11](c01.xhtml#Page_11), [198](c12.xhtml#Page_198)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 情感分析, [11](c01.xhtml#Page_11), [198](c12.xhtml#Page_198)
- en: series, [40](c03.xhtml#Page_40)
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 序列, [40](c03.xhtml#Page_40)
- en: '`Series()` constructor, [43](c03.xhtml#Page_43)'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`Series()` 构造函数, [43](c03.xhtml#Page_43)'
- en: method, [41](c03.xhtml#Page_41)
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 方法, [41](c03.xhtml#Page_41)
- en: '`setdefault()` method, [29](c02.xhtml#Page_29), [35](c02.xhtml#Page_35)'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '`setdefault()` 方法, [29](c02.xhtml#Page_29), [35](c02.xhtml#Page_35)'
- en: '`setex()` method, [90](c05.xhtml#Page_90)'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '`setex()` 方法, [90](c05.xhtml#Page_90)'
- en: '`set_index()` method, [45](c03.xhtml#Page_45)'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '`set_index()` 方法, [45](c03.xhtml#Page_45)'
- en: sets, [32](c02.xhtml#Page_32)
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 集合, [32](c02.xhtml#Page_32)
- en: '`set_size_inches()` method, [135](c08.xhtml#Page_135)'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '`set_size_inches()` 方法, [135](c08.xhtml#Page_135)'
- en: Shapely, [150](c09.xhtml#Page_150)
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: Shapely, [150](c09.xhtml#Page_150)
- en: Shapely library, [153](c09.xhtml#Page_153)
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: Shapely 库, [153](c09.xhtml#Page_153)
- en: '`shift()` method, [165](c10.xhtml#Page_165), [169](c10.xhtml#Page_169)'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '`shift()` 方法, [165](c10.xhtml#Page_165), [169](c10.xhtml#Page_169)'
- en: '`size()` method, [205](c12.xhtml#Page_205)'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`size()` 方法, [205](c12.xhtml#Page_205)'
- en: '`slice()` function, [103](c06.xhtml#Page_103)'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`slice()` 函数, [103](c06.xhtml#Page_103)'
- en: '`slice(None)`, [104](c06.xhtml#Page_104)'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`slice(None)`, [104](c06.xhtml#Page_104)'
- en: slice notation, [18](c02.xhtml#Page_18)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 切片表示法, [18](c02.xhtml#Page_18)
- en: slicing, [43](c03.xhtml#Page_43), [103](c06.xhtml#Page_103)
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 切片, [43](c03.xhtml#Page_43), [103](c06.xhtml#Page_103)
- en: '`sorted()` function, [33](c02.xhtml#Page_33)'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`sorted()` 函数, [33](c02.xhtml#Page_33)'
- en: '`sort_index()` method, [122](c07.xhtml#Page_122)'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '`sort_index()` 方法, [122](c07.xhtml#Page_122)'
- en: sources of data, [6](c01.xhtml#Page_6)
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 数据源, [6](c01.xhtml#Page_6)
- en: S&P 500, [12](c01.xhtml#Page_12)
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 标普500, [12](c01.xhtml#Page_12)
- en: data, [207](c12.xhtml#Page_207)
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 数据, [207](c12.xhtml#Page_207)
- en: index, [71](c04.xhtml#Page_71)
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 索引, [71](c04.xhtml#Page_71)
- en: spaCy, [22](c02.xhtml#Page_22)
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: spaCy, [22](c02.xhtml#Page_22)
- en: spatial analysis, [146](c09.xhtml#Page_146), [150](c09.xhtml#Page_150)
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 空间分析, [146](c09.xhtml#Page_146), [150](c09.xhtml#Page_150)
- en: SQL, [75](c05.xhtml#Page_75)
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: SQL, [75](c05.xhtml#Page_75)
- en: request, [8](c01.xhtml#Page_8)
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 请求, [8](c01.xhtml#Page_8)
- en: statements, [75](c05.xhtml#Page_75)
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 语句, [75](c05.xhtml#Page_75)
- en: stack, [20](c02.xhtml#Page_20)
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 堆栈, [20](c02.xhtml#Page_20)
- en: statistical model, [197](c12.xhtml#Page_197)
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 统计模型, [197](c12.xhtml#Page_197)
- en: storage, [12](c01.xhtml#Page_12)
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 存储, [12](c01.xhtml#Page_12)
- en: '`strip()` method, [59](c04.xhtml#Page_59)'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '`strip()` 方法, [59](c04.xhtml#Page_59)'
- en: structured data, [2](c01.xhtml#Page_2)
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化数据, [2](c01.xhtml#Page_2)
- en: Structured Query Language. *See* SQL
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 结构化查询语言。*见* SQL
- en: '`subplots()` function, [134](c08.xhtml#Page_134)'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '`subplots()` 函数, [134](c08.xhtml#Page_134)'
- en: '`sum()` function, [52](c03.xhtml#Page_52), [115](c07.xhtml#Page_115)'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '`sum()` 函数, [52](c03.xhtml#Page_52), [115](c07.xhtml#Page_115)'
- en: supervised learning, [194](c12.xhtml#Page_194)
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 有监督学习, [194](c12.xhtml#Page_194)
- en: support, [177](c11.xhtml#Page_177)
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 支持, [177](c11.xhtml#Page_177)
- en: '**T**'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '**T**'
- en: table, [2](c01.xhtml#Page_2)
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 表格, [2](c01.xhtml#Page_2)
- en: tabular data file, [59](c04.xhtml#Page_59)
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 表格数据文件, [59](c04.xhtml#Page_59)
- en: '`target` array, [210](c12.xhtml#Page_210)'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '`target` 数组, [210](c12.xhtml#Page_210)'
- en: taxi service example, [146](c09.xhtml#Page_146), [150](c09.xhtml#Page_150)
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 出租车服务示例, [146](c09.xhtml#Page_146), [150](c09.xhtml#Page_150)
- en: Telegram Bot API, [147](c09.xhtml#Page_147)
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: Telegram Bot API, [147](c09.xhtml#Page_147)
- en: third-party libraries, [37](c03.xhtml#Page_37)
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 第三方库, [37](c03.xhtml#Page_37)
- en: 3D dataset, [101](c06.xhtml#Page_101)
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 3D 数据集, [101](c06.xhtml#Page_101)
- en: '`timedelta` object, [90](c05.xhtml#Page_90)'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`timedelta` 对象, [90](c05.xhtml#Page_90)'
- en: time series data, [5](c01.xhtml#Page_5), [161](c10.xhtml#Page_161)
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列数据, [5](c01.xhtml#Page_5), [161](c10.xhtml#Page_161)
- en: timestamped data, [161](c10.xhtml#Page_161)
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 带时间戳的数据, [161](c10.xhtml#Page_161)
- en: training set, [194](c12.xhtml#Page_194), [201](c12.xhtml#Page_201)
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 训练集, [194](c12.xhtml#Page_194), [201](c12.xhtml#Page_201)
- en: training the model, [203](c12.xhtml#Page_203)
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 训练模型, [203](c12.xhtml#Page_203)
- en: '`train_test_split()` function, [54](c03.xhtml#Page_54), [56](c03.xhtml#Page_56),
    [202](c12.xhtml#Page_202), [210](c12.xhtml#Page_210)'
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: '`train_test_split()` 函数, [54](c03.xhtml#Page_54), [56](c03.xhtml#Page_56),
    [202](c12.xhtml#Page_202), [210](c12.xhtml#Page_210)'
- en: '`TransactionEncoder` object, [179](c11.xhtml#Page_179)'
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: '`TransactionEncoder` 对象, [179](c11.xhtml#Page_179)'
- en: transformation, [11](c01.xhtml#Page_11)
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 转换, [11](c01.xhtml#Page_11)
- en: '`transpose()` method, [118](c07.xhtml#Page_118)'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '`transpose()` 方法, [118](c07.xhtml#Page_118)'
- en: trigger, [74](c05.xhtml#Page_74)
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 触发器, [74](c05.xhtml#Page_74)
- en: '`try` clause, [80](c05.xhtml#Page_80)'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: '`try` 子句, [80](c05.xhtml#Page_80)'
- en: '`try/except` block, [80](c05.xhtml#Page_80)'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: '`try/except` 块, [80](c05.xhtml#Page_80)'
- en: '*.tsv*, [59](c04.xhtml#Page_59)–[60](c04.xhtml#Page_60)'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: '*.tsv*, [59](c04.xhtml#Page_59)–[60](c04.xhtml#Page_60)'
- en: tuple, [27](c02.xhtml#Page_27), [110](c07.xhtml#Page_110)
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 元组, [27](c02.xhtml#Page_27), [110](c07.xhtml#Page_110)
- en: types of machine learning, [194](c12.xhtml#Page_194)
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习类型, [194](c12.xhtml#Page_194)
- en: '**U**'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '**U**'
- en: UCI Machine Learning Repository, [53](c03.xhtml#Page_53)
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: UCI机器学习数据集, [53](c03.xhtml#Page_53)
- en: unordered collections, [28](c02.xhtml#Page_28)
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 无序集合, [28](c02.xhtml#Page_28)
- en: unstructured data, [2](c01.xhtml#Page_2)
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 非结构化数据, [2](c01.xhtml#Page_2)
- en: unsupervised learning, [195](c12.xhtml#Page_195)
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 无监督学习, [195](c12.xhtml#Page_195)
- en: urllib3 library, [65](c04.xhtml#Page_65)
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: urllib3库, [65](c04.xhtml#Page_65)
- en: '**V**'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '**V**'
- en: '`values()` method, [62](c04.xhtml#Page_62)'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '`values()` 方法, [62](c04.xhtml#Page_62)'
- en: '`values` property, [54](c03.xhtml#Page_54)'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '`values` 属性, [54](c03.xhtml#Page_54)'
- en: '`VARCHAR` type, [78](c05.xhtml#Page_78)'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '`VARCHAR` 类型, [78](c05.xhtml#Page_78)'
- en: visual data analysis, [12](c01.xhtml#Page_12)
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化数据分析, [12](c01.xhtml#Page_12)
- en: visualizations, [127](c08.xhtml#Page_127)
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化, [127](c08.xhtml#Page_127)
- en: visualizing association rules, [182](c11.xhtml#Page_182)
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化关联规则, [182](c11.xhtml#Page_182)
- en: '**W**'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '**W**'
- en: web pages, [7](c01.xhtml#Page_7)
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 网页, [7](c01.xhtml#Page_7)
- en: web scraping, [7](c01.xhtml#Page_7)
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 网络爬虫, [7](c01.xhtml#Page_7)
- en: '`WHERE` clause, [81](c05.xhtml#Page_81)'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '`WHERE` 子句, [81](c05.xhtml#Page_81)'
- en: '`while` loop, [20](c02.xhtml#Page_20)'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '`while` 循环, [20](c02.xhtml#Page_20)'
- en: '`within()` method, [154](c09.xhtml#Page_154)'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '`within()` 方法, [154](c09.xhtml#Page_154)'
- en: '`with` keyword, [59](c04.xhtml#Page_59)'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: '`with` 关键字, [59](c04.xhtml#Page_59)'
- en: '`writer.writerow()` method, [63](c04.xhtml#Page_63)'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '`writer.writerow()` 方法, [63](c04.xhtml#Page_63)'
- en: '**Y**'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: '**Y**'
- en: Yahoo Finance API, [10](c01.xhtml#Page_10)
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: Yahoo Finance API, [10](c01.xhtml#Page_10)
- en: yfinance library, [10](c01.xhtml#Page_10), [45](c03.xhtml#Page_45), [82](c05.xhtml#Page_82),
    [168](c10.xhtml#Page_168), [207](c12.xhtml#Page_207)
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: yfinance库, [10](c01.xhtml#Page_10), [45](c03.xhtml#Page_45), [82](c05.xhtml#Page_82),
    [168](c10.xhtml#Page_168), [207](c12.xhtml#Page_207)
