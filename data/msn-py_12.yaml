- en: '**12'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**12'
- en: DANGER! DANGER! ADDING HAZARDS**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**危险！危险！添加危险物体**'
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: When the space station systems fail, all kinds of threats emerge. In this chapter,
    you’ll see the air start to leak from the station and will discover moving hazards
    in some of the rooms, including rogue robots, balls of energy, and toxic puddles.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当空间站系统故障时，各种威胁会出现。在本章中，你将看到空气开始从站内泄漏，并会在某些房间发现移动的危险物体，包括流氓机器人、能量球和有毒的积水。
- en: I’ve put the dangers last so you can test the game up to this point without
    worrying about your time or energy running out. In this chapter, we’ll start the
    air leak and draw a timer bar to let you know how much air you have left. We’ll
    also add hazards that can harm you and drain your energy. Finally, we’ll clean
    up the game and get it ready to play!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我把危险的部分放在最后，这样你就可以在此之前测试游戏，而不必担心时间或能量耗尽。在本章中，我们将启动空气泄漏并绘制一个计时条，以告诉你剩余的空气量。我们还会添加可以伤害你并消耗你能量的危险。最后，我们将清理游戏并准备好开始游戏！
- en: '**ADDING THE AIR COUNTDOWN**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加空气倒计时**'
- en: 'There are two ways for the player to fail in the game: their air can run out
    or their energy can run out. At the bottom of the screen, two bars show players
    how much air and how much energy they have remaining (see [Figure 12-1](ch12.xhtml#ch12fig1)).'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中玩家失败的方式有两种：空气用尽或能量耗尽。屏幕底部的两个条形图显示玩家剩余的空气和能量（见[图12-1](ch12.xhtml#ch12fig1)）。
- en: '![image](../images/fig12-1.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig12-1.jpg)'
- en: '*Figure 12-1: Two bars at the bottom of the screen show your remaining air
    and energy.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-1：屏幕底部的两个条形图显示你剩余的空气和能量。*'
- en: You lose energy when you walk over toxic spills or are hit by moving hazards,
    and the air gradually runs out because of the leak in the space station wall.
    If you put on a space suit, you can buy more time, but the air in the suit’s canister
    will eventually run out too. Some of your toughest decisions could be deciding
    when to top up your air and use food to restore your energy.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你会因为走过有毒的溢出物或被移动的危险物体撞到而失去能量，同时由于空间站墙壁的泄漏，空气也会逐渐耗尽。如果你穿上宇航服，你可以延长生存时间，但宇航服中的空气罐最终也会耗尽。你最艰难的决定之一可能就是决定何时补充空气以及何时使用食物来恢复能量。
- en: '**DISPLAYING THE AIR AND ENERGY BARS**'
  id: totrans-10
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**显示空气和能量条**'
- en: We’ll create a new section of the program called AIR, which you need to place
    after the DOORS section but before the START section at the end of the program.
    Add the new code shown in [Listing 12-1](ch12.xhtml#ch12list1) to your final listing
    from the previous chapter (*listing11-7.py*). Save your file as *listing12-1.py*.
    If you run the program, it won’t do anything new yet, but this code creates the
    function for drawing the air and energy bars.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个新的程序部分，称为AIR，你需要将其放在DOORS部分之后，但在程序末尾的START部分之前。将[列表12-1](ch12.xhtml#ch12list1)中的新代码添加到上一章的最终清单中（*listing11-7.py*）。将文件保存为*listing12-1.py*。如果你运行程序，它目前不会做任何新事情，但这段代码创建了用于绘制空气和能量条的功能。
- en: '*listing12-1.py*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-1.py*'
- en: --snip--
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: objects[21][0] = frames[airlock_door_frame]
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: objects[21][0] = frames[airlock_door_frame]
- en: objects[21][1] = shadow_frames[airlock_door_frame]
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: objects[21][1] = shadow_frames[airlock_door_frame]
- en: '###############'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##    AIR    ##'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '##    AIR    ##'
- en: '###############'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'def draw_energy_air():'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 'def draw_energy_air():'
- en: box = Rect((20, 765), (350, 20))
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: box = Rect((20, 765), (350, 20))
- en: '➊     screen.draw.filled_rect(box, BLACK) # Clear air bar.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '➊     screen.draw.filled_rect(box, BLACK) # 清空空气条。'
- en: ➋     screen.draw.text("AIR", (20, 766), color=BLUE)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     screen.draw.text("AIR", (20, 766), color=BLUE)
- en: ➌     screen.draw.text("ENERGY", (180, 766), color=YELLOW)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ➌     screen.draw.text("ENERGY", (180, 766), color=YELLOW)
- en: '➍     if air > 0:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '➍     if air > 0:'
- en: ➎         box = Rect((50, 765), (air, 20))
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ➎         box = Rect((50, 765), (air, 20))
- en: '➏         screen.draw.filled_rect(box, BLUE) # Draw new air bar.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '➏         screen.draw.filled_rect(box, BLUE) # 绘制新的空气条。'
- en: '➐     if energy > 0:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '➐     if energy > 0:'
- en: box = Rect((250, 765), (energy, 20))
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: box = Rect((250, 765), (energy, 20))
- en: 'screen.draw.filled_rect(box, YELLOW) # Draw new energy bar.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 'screen.draw.filled_rect(box, YELLOW) # 绘制新的能量条。'
- en: '###############'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '##   START   ##'
- en: '###############'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-1: Drawing the air and energy bars*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表12-1：绘制空气和能量条*'
- en: We begin the new draw_energy_air() function by drawing a black box over the
    status area at the bottom of the screen to clear it ➊. We then add the AIR label
    in blue ➋, and the ENERGY label in yellow ➌. This function will use the air and
    energy variables, which are already set to 100 in the VARIABLES part of the program.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过在屏幕底部的状态区域绘制一个黑色框来清除它 ➊，开始新的 draw_energy_air() 函数。接着，我们以蓝色 ➋ 添加 AIR 标签，并以黄色
    ➌ 添加 ENERGY 标签。这个函数将使用空气和能量变量，这些变量已经在程序的 VARIABLES 部分设置为 100。
- en: If the player has some air left (if the variable air is more than 0) ➍, a box
    is created that uses the air variable for its width ➎. The box is then filled
    with the color blue ➏. This draws the AIR indicator bar, which starts off being
    100 pixels wide and gets smaller as the AIR variable decreases.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家还有一些空气（即空气变量大于 0） ➍，则创建一个框，使用空气变量作为其宽度 ➎。然后该框被填充为蓝色 ➏。这将绘制 AIR 指示条，起初它的宽度是
    100 像素，随着 AIR 变量的减少而变小。
- en: We use similar instructions to draw the energy bar ➐, but the bar’s start position
    is farther to the right (the *x* position is 250 instead of 50).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用类似的指令来绘制能量条 ➐，但能量条的起始位置更偏右（*x* 位置是 250 而不是 50）。
- en: '**ADDING THE AIR COUNTDOWN FUNCTIONS**'
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加空气倒计时功能**'
- en: We’ll make three functions to enable the air countdown. The end_the_game() function
    runs when you’re out of air. It displays the reason the player failed the mission,
    plays some sound effects, and shows a large GAME OVER message in the middle of
    the game window.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建三个函数来启用空气倒计时。当你没有空气时，end_the_game() 函数会执行。它会显示玩家未完成任务的原因，播放一些音效，并在游戏窗口中央显示一个大型的
    GAME OVER 消息。
- en: The air_countdown() function saps the air supply. We’ll also add an alarm()
    function that runs shortly after the game begins to warn the player that their
    air is failing.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: air_countdown() 函数会消耗空气。我们还将添加一个 alarm() 函数，它会在游戏开始后不久运行，提醒玩家他们的空气即将耗尽。
- en: These three functions are in [Listing 12-2](ch12.xhtml#ch12list2). Add the new
    code shown here in the AIR section of the program, after the draw_energy_air()
    function you just added. Save your program as *listing12-2.py*. You can run this
    program using pgzrun listing12-2.py, but you won’t see anything new yet.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个函数在 [列表 12-2](ch12.xhtml#ch12list2) 中。将这里显示的新代码添加到程序的 AIR 部分，位于你刚刚添加的 draw_energy_air()
    函数之后。将你的程序保存为 *listing12-2.py*。你可以使用 pgzrun listing12-2.py 运行这个程序，但你还看不到任何新内容。
- en: '*listing12-2.py*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-2.py*'
- en: --snip--
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: 'if energy > 0:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果能量大于 0：
- en: box = Rect((250, 765), (energy, 20))
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: box = Rect((250, 765), (energy, 20))
- en: 'screen.draw.filled_rect(box, YELLOW) # Draw new energy bar.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 'screen.draw.filled_rect(box, YELLOW) # 绘制新的能量条。'
- en: '➊ def end_the_game(reason):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ def end_the_game(reason):'
- en: global game_over
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: global game_over
- en: ➋     show_text(reason, 1)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     show_text(reason, 1)
- en: ➌     game_over = True
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: ➌     game_over = True
- en: sounds.say_mission_fail.play()
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_mission_fail.play()
- en: sounds.gameover.play()
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.gameover.play()
- en: ➍     screen.draw.text("GAME OVER", (120, 400), color = "white",
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: ➍     screen.draw.text("GAME OVER", (120, 400), color = "white",
- en: fontsize = 128, shadow = (1, 1), scolor = "black")
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 字体大小 = 128, 阴影 = (1, 1), 颜色 = "black")
- en: '➎ def air_countdown():'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '➎ def air_countdown():'
- en: global air, game_over
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: global air, game_over
- en: 'if game_over:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 game_over：
- en: 'return # Don''t sap air when they''re already dead.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 'return # 如果玩家已经死了，就不再消耗空气。'
- en: ➏     air -= 1
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: ➏     空气 -= 1
- en: '➐     if air == 20:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ➐     如果空气等于 20：
- en: sounds.say_air_low.play()
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_air_low.play()
- en: 'if air == 10:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果空气等于 10：
- en: sounds.say_act_now.play()
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_act_now.play()
- en: ➑     draw_energy_air()
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: ➑     draw_energy_air()
- en: '➒     if air < 1:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: ➒     如果空气少于 1：
- en: end_the_game("You're out of air!")
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: end_the_game("你没空气了！")
- en: '➓ def alarm():'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '➓ def alarm():'
- en: show_text("Air is running out, " + PLAYER_NAME
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("空气快没了，" + PLAYER_NAME
- en: + "! Get to safety, then radio for help!", 1)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: + "! 快去安全地点，然后呼叫求救！", 1)
- en: sounds.alarm.play(3)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.alarm.play(3)
- en: sounds.say_breach.play()
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_breach.play()
- en: '###############'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 12-2: Adding the air countdown*'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-2：添加空气倒计时*'
- en: The air_countdown() function ➎ reduces the air variable’s value by 1 each time
    it runs ➏. If the value is equal to 20 ➐ or 10, a warning sound effect plays to
    let the player know their air is low.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: air_countdown() 函数 ➎ 每次运行时都会减少空气变量的值 ➏。如果值等于 20 ➐ 或 10，系统会播放警告音效，提醒玩家空气不足。
- en: The draw_energy_air() function you added in [Listing 12-1](ch12.xhtml#ch12list1)
    updates the air and energy display ➑. If the air has run out ➒, the end_the_game()
    function runs and displays the string "You're out of air!".
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 你在 [列表 12-1](ch12.xhtml#ch12list1) 中添加的 draw_energy_air() 函数会更新空气和能量显示 ➑。如果空气用尽
    ➒，end_the_game() 函数会运行，并显示字符串 "你没空气了！"。
- en: '**TIP**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: Sound files must be stored in the *sounds* folder and should be in *.wav* or
    *.ogg* format. To play a sound called *bang.wav*, you would use sounds.bang.play().
    As with images, you don’t need to tell Pygame Zero the file extension or where
    the sound is stored. Why not try recording and adding your own sound effects for
    various points in the game?
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 音频文件必须存储在*sounds*文件夹中，并且应该是*.wav*或*.ogg*格式。要播放名为*bang.wav*的音效，可以使用sounds.bang.play()。与图片一样，你无需告知Pygame
    Zero文件的扩展名或音频文件存储的位置。为什么不尝试录制并添加你自己的音效，应用到游戏的不同环节中呢？
- en: In the end_the_game() function ➊, we use the variable reason for the information
    it receives, and display that on the screen as the reason for death ➋. The game_over
    variable is set to True ➌. Other functions use this variable to know when the
    game has finished so everything can come to a stop. The end_the_game() function
    then draws the words GAME OVER in large text in the middle of the screen. The
    text is drawn at position *x* = 120, *y* = 400 in white text using a font size
    of 128 ➍. We also add a drop shadow under the text for effect, which is offset
    by 1 pixel in each direction and is colored black (see [Figure 12-2](ch12.xhtml#ch12fig2)).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在end_the_game()函数中 ➊，我们使用变量reason来接收信息，并将其显示在屏幕上作为死亡原因 ➋。game_over变量被设置为True
    ➌。其他函数会利用这个变量来判断游戏是否结束，从而使一切停止。end_the_game()函数随后在屏幕中央绘制“GAME OVER”字样，字体大小为128
    ➍，位置为*x* = 120, *y* = 400，颜色为白色。我们还为文字添加了一个投影效果，偏移量为1像素，颜色为黑色（参见[图12-2](ch12.xhtml#ch12fig2)）。
- en: '![image](../images/fig12-2.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig12-2.jpg)'
- en: '*Figure 12-2: Oh no! You’re out of air!*'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-2：糟糕！你没有空气了！*'
- en: The final function in this section, alarm() ➓, plays the alarm sound and displays
    a message telling you to radio for help. It uses the player’s name in the warning
    to personalize it.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的最后一个函数alarm() ➓，播放警报声音并显示一条信息，告诉你需要通过无线电请求帮助。它会在警告中使用玩家的名字，以此来个性化提示。
- en: The number in parentheses in the sounds.alarm.play() command is the number of
    times the sound should be played (in [Listing 12-2](ch12.xhtml#ch12list2), it’s
    three).
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.alarm.play()命令中括号内的数字表示音效播放的次数（在[Listing 12-2](ch12.xhtml#ch12list2)中是三次）。
- en: '**STARTING THE AIR COUNTDOWN AND SOUNDING THE ALARM**'
  id: totrans-86
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**启动空气倒计时并触发警报**'
- en: We haven’t set the three new functions to run yet. To do that, we need to add
    some instructions to the START section of the program, which is (perhaps confusingly!)
    at the end of the program listing. Add the new instructions shown in [Listing
    12-3](ch12.xhtml#ch12list3), and save it as *listing12-3.py*.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有设置三个新函数的运行。为此，我们需要在程序的START部分添加一些指令，START部分（也许会有些令人困惑！）位于程序列表的末尾。添加在[Listing
    12-3](ch12.xhtml#ch12list3)中显示的新指令，并将其保存为*listing12-3.py*。
- en: '*listing12-3.py*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-3.py*'
- en: --snip--
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '###############'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: clock.schedule_interval(game_loop, 0.03)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_interval(game_loop, 0.03)
- en: generate_map()
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: generate_map()
- en: clock.schedule_interval(adjust_wall_transparency, 0.05)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_interval(adjust_wall_transparency, 0.05)
- en: clock.schedule_unique(display_inventory, 1)
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_unique(display_inventory, 1)
- en: clock.schedule_unique(draw_energy_air, 0.5)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_unique(draw_energy_air, 0.5)
- en: clock.schedule_unique(alarm, 10)
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_unique(alarm, 10)
- en: A higher number below gives a longer time limit.
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更高的数字会给出更长的时间限制。
- en: clock.schedule_interval(air_countdown, 5)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_interval(air_countdown, 5)
- en: '*Listing 12-3: Starting the air countdown*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-3: 启动空气倒计时*'
- en: Now the game has a time limit. When the air runs out, the game ends. Run the
    program using pgzrun listing12-3.py, and you should see your air supply slowly
    go down.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 现在游戏有了时间限制。当空气用尽时，游戏结束。使用pgzrun运行程序listing12-3.py，你应该会看到空气供应慢慢减少。
- en: If you find the game too difficult when you’re playing the final version, you
    can give yourself more time by changing the 5 in the final line in [Listing 12-3](ch12.xhtml#ch12list3)
    to a higher number. This number decides how often the air_countdown() function
    saps your air supply, and is measured in seconds. In particular, if you’re using
    a Raspberry Pi 2, the time limit might be challenging because the game runs a
    bit more slowly there. It’s still possible to complete the game, but you can increase
    the number 5 to give yourself a little more, ahem, breathing space.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得玩最终版本的游戏太困难，可以通过将[Listing 12-3](ch12.xhtml#ch12list3)最后一行中的5改为更大的数字，给自己更多时间。这个数字决定了air_countdown()函数每隔多少秒消耗一次空气供应。特别是，如果你使用的是Raspberry
    Pi 2，时间限制可能会比较具有挑战性，因为该设备上的游戏运行较慢。完成游戏还是有可能的，不过你可以增加这个数字5，给自己多一点，嗯，呼吸空间。
- en: '**TRAINING MISSION #1**'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: When your air supply reaches 0, you should see the GAME OVER message and find
    that you can no longer move the astronaut. Your energy goes down by 1 percent
    every 5 seconds, so it’ll take about 8.5 minutes (500 seconds) to run out. Can
    you work out how to make the air leak more often, so you can more easily test
    what happens when the air runs out?
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的空气供应达到 0 时，你应该会看到“游戏结束”信息，并且发现你无法再移动宇航员。你的能量每 5 秒下降 1%，所以大约需要 8.5 分钟（500
    秒）才能耗尽。你能找出如何让空气泄漏更频繁，这样你就可以更轻松地测试空气耗尽时会发生什么吗？
- en: 'After completing the training mission, make sure you change the program back
    again: otherwise, you’ll find your mission rather hard to complete!'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 完成训练任务后，确保将程序恢复：否则，你会发现任务相当难以完成！
- en: '**ADDING THE MOVING HAZARDS**'
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加移动障碍物**'
- en: 'There are three types of moving hazards in the game: two types of energy balls
    and a flying drone that’s gone rogue.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏中有三种类型的移动障碍物：两种类型的能量球和一只已经失控的飞行无人机。
- en: '[Figure 12-3](ch12.xhtml#ch12fig3) shows the direction numbers the moving hazards
    use.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 12-3](ch12.xhtml#ch12fig3) 显示了移动障碍物所使用的方向编号。'
- en: Hazards move in a straight line until they hit something, and then we add a
    number to change their direction. The number we add will decide the hazard’s movement
    pattern. For example, if we add 1 to the direction number, the hazard moves in
    a clockwise pattern (up, right, down, left). If we add -1 to the direction number,
    the hazard moves in a counterclockwise pattern (left, down, right, up). If we
    add 2, it will bounce between going left and right (2 and 4) or up and down (1
    and 3). Take a look at [Figure 12-3](ch12.xhtml#ch12fig3) and check this makes
    sense to you. Each hazard can have its own pattern of movement.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 障碍物沿直线移动，直到碰到某物，然后我们加一个数值来改变其方向。我们加的这个数值将决定障碍物的运动模式。例如，如果我们加 1 到方向编号，障碍物将按顺时针方向（上、右、下、左）移动。如果我们加
    -1 到方向编号，障碍物将按逆时针方向（左、下、右、上）移动。如果我们加 2，它将在左和右之间（2 和 4）或上下之间（1 和 3）反弹。看看 [图 12-3](ch12.xhtml#ch12fig3)，并检查这是否对你有意义。每个障碍物都可以有自己的运动模式。
- en: '![image](../images/fig12-3.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig12-3.jpg)'
- en: '*Figure 12-3: The direction numbers the moving hazards use are numbered in
    a clockwise order.*'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 12-3：移动障碍物所使用的方向编号按顺时针顺序编号。*'
- en: If the addition results in a number that’s higher than 4, we subtract 4\. For
    example, if a hazard is moving clockwise, we add 1 to its direction number each
    time it hits something. If it’s going down (direction 3), we add 1 when it hits
    something, so it starts to move left (direction 4). The next time it hits something,
    we add 1, but that makes the direction number 5\. So we subtract 4, and that gives
    us a direction number of 1\. As [Figure 12-3](ch12.xhtml#ch12fig3) shows, that’s
    the next direction number after 4, going around in a clockwise pattern.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果加法结果大于 4，我们会减去 4。例如，如果一个障碍物按顺时针方向移动，每当它碰到某物时，我们将其方向编号加 1。如果它向下移动（方向 3），我们加
    1 后它将开始向左移动（方向 4）。下次它碰到某物时，我们加 1，但这使得方向编号变为 5。因此，我们减去 4，得到方向编号 1。如 [图 12-3](ch12.xhtml#ch12fig3)
    所示，这就是顺时针方向上从 4 开始的下一个方向编号。
- en: '[Table 12-1](ch12.xhtml#ch12tab1) summarizes the numbers we can use to get
    different movement patterns.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 12-1](ch12.xhtml#ch12tab1) 总结了我们可以使用的不同运动模式的编号。'
- en: '**Table 12-1:** How to Change Direction When a Hazard Hits Something'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 12-1：** 障碍物碰到某物时如何改变方向'
- en: '| **Movement pattern** |  | **Number to add to the direction number** |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| **运动模式** |  | **需要加到方向编号的数值** |'
- en: '| --- | --- | --- |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Clockwise | ![image](../images/f0203-01.jpg) | 1 |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| 顺时针 | ![image](../images/f0203-01.jpg) | 1 |'
- en: '| Counterclockwise | ![image](../images/f0203-02.jpg) | -1 |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| 逆时针 | ![image](../images/f0203-02.jpg) | -1 |'
- en: '| Left/right | ![image](../images/f0203-03.jpg) | 2 |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| 左/右 | ![image](../images/f0203-03.jpg) | 2 |'
- en: '| Up/down | ![image](../images/f0203-04.jpg) | 2 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| 上/下 | ![image](../images/f0203-04.jpg) | 2 |'
- en: '**RED ALERT**'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Take care not to mix up the two numbers that describe the movement. The direction
    number (see [Figure 12-3](ch12.xhtml#ch12fig3)) tells the program which direction
    a hazard is moving in. The number we add to the direction number (see [Table 12-1](ch12.xhtml#ch12tab1))
    tells the program which way the hazard should bounce when it hits something.*'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '*小心不要混淆描述运动的两个编号。方向编号（见 [图 12-3](ch12.xhtml#ch12fig3)）告诉程序障碍物正在朝哪个方向移动。我们加到方向编号的数值（见
    [表 12-1](ch12.xhtml#ch12tab1)）告诉程序障碍物碰到某物时应该朝哪个方向反弹。*'
- en: '**ADDING THE HAZARD DATA**'
  id: totrans-124
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加障碍数据**'
- en: Between the AIR and START sections, we’ll add a new section to the program called
    HAZARDS. [Listing 12-4](ch12.xhtml#ch12list4) shows you the hazard data. Add it
    to your program, and save it as *listing12-4.py*. If you run the program, it won’t
    do anything new yet, but you can check that you don’t get any error messages in
    the command line window.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在 AIR 和 START 部分之间，我们将向程序添加一个新的部分，称为 HAZARDS。[Listing 12-4](ch12.xhtml#ch12list4)
    显示了危险数据。将其添加到程序中，并保存为 *listing12-4.py*。如果你运行程序，它暂时不会做任何新事情，但你可以检查是否没有出现错误信息。
- en: '*listing12-4.py*'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-4.py*'
- en: --snip--
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: sounds.alarm.play(3)
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.alarm.play(3)
- en: sounds.say_breach.play()
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_breach.play()
- en: '###############'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##  HAZARDS  ##'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '##  HAZARDS  ##'
- en: '###############'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: hazard_data = {
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_data = {
- en: '# room number: [[y, x, direction, bounce addition to direction]]'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '# 房间编号：[[y, x, 方向, 碰撞后方向变化量]]'
- en: '➊     28: [[1, 8, 2, 1], [7, 3, 4, 1]], 32: [[1, 5, 1, 1]],'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '➊     28: [[1, 8, 2, 1], [7, 3, 4, 1]], 32: [[1, 5, 1, 1]],'
- en: '34: [[5, 1, 1, 1], [5, 5, 1, 2]], 35: [[4, 4, 1, 2], [2, 5, 2, 2]],'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '34: [[5, 1, 1, 1], [5, 5, 1, 2]], 35: [[4, 4, 1, 2], [2, 5, 2, 2]],'
- en: '36: [[2, 1, 2, 2]], 38: [[1, 4, 3, 2], [5, 8, 1, 2]],'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '36: [[2, 1, 2, 2]], 38: [[1, 4, 3, 2], [5, 8, 1, 2]],'
- en: '40: [[3, 1, 3, 1], [6, 5, 2, 2], [7, 5, 4, 2]],'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '40: [[3, 1, 3, 1], [6, 5, 2, 2], [7, 5, 4, 2]],'
- en: '41: [[4, 5, 2, 2], [6, 3, 4, 2], [8, 1, 2, 2]],'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '41: [[4, 5, 2, 2], [6, 3, 4, 2], [8, 1, 2, 2]],'
- en: '42: [[2, 1, 2, 2], [4, 3, 2, 2], [6, 5, 2, 2]],'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '42: [[2, 1, 2, 2], [4, 3, 2, 2], [6, 5, 2, 2]],'
- en: '46: [[2, 1, 2, 2]],'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '46: [[2, 1, 2, 2]],'
- en: '48: [[1, 8, 3, 2], [8, 8, 1, 2], [3, 9, 3, 2]]'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '48: [[1, 8, 3, 2], [8, 8, 1, 2], [3, 9, 3, 2]]'
- en: '}'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '###############'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '##   START   ##'
- en: '###############'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-4: Adding the hazard data*'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-4: 添加危险数据*'
- en: We create a hazard_data dictionary that uses room numbers as dictionary keys.
    For each room, there is a list that contains the data for all the hazards. The
    data for each hazard is in a list that contains the hazard’s *y* position, *x*
    position, starting direction, and number to add when it hits something.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个 hazard_data 字典，使用房间编号作为字典的键。每个房间都有一个包含所有危险数据的列表。每个危险的数据是一个列表，包含了危险的
    *y* 位置、*x* 位置、起始方向以及碰到物体后加的数字。
- en: For example, room 28 ➊ has a hazard with the list data [7, 3, 4, 1]. This means
    the hazard starts at *y* = 7, *x* = 3\. It starts moving left (direction 4), and
    it moves clockwise when it hits something because we add 1 to its direction number.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，房间 28 ➊ 有一个危险，数据列表为 [7, 3, 4, 1]。这意味着该危险从 *y* = 7, *x* = 3 开始。它开始向左移动（方向
    4），当它碰到物体时，会顺时针旋转，因为我们会将方向数字加 1。
- en: 'Room 41 contains three hazards (in three lists), which are moving from left
    to right and back again. We know that because they start with a direction of 2
    or 4 (right or left) and add 2 to the direction when they hit something (making
    4 or 6: we know that 6 becomes 2 after we subtract 4).'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 房间 41 包含三个危险（在三个列表中），它们从左到右来回移动。我们知道这一点，因为它们的方向是 2 或 4（右或左），并且当它们碰到物体时会将方向加
    2（变成 4 或 6：我们知道，减去 4 后 6 会变成 2）。
- en: '**SAPPING THE PLAYER’S ENERGY**'
  id: totrans-152
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**消耗玩家能量**'
- en: After the hazard data, we need to add a function called deplete_energy(), which
    reduces the player’s energy when a hazard hits them. [Listing 12-5](ch12.xhtml#ch12list5)
    shows the new function. Add it after [Listing 12-4](ch12.xhtml#ch12list4) in the
    HAZARDS section of the program, and save your program as *listing12-5.py*. You
    can run the program to check for errors using pgzrun listing12-5.py, but it won’t
    do anything new.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在危险数据之后，我们需要添加一个名为 deplete_energy() 的函数，当危险击中玩家时，减少玩家的能量。[Listing 12-5](ch12.xhtml#ch12list5)
    显示了新的函数。将其添加到程序的 HAZARDS 部分，并保存为 *listing12-5.py*。你可以使用 pgzrun listing12-5.py
    运行程序来检查错误，但它不会有任何新变化。
- en: '*listing12-5.py*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-5.py*'
- en: --snip--
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '46: [[2, 1, 2, 2]],'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '46: [[2, 1, 2, 2]],'
- en: '48: [[1, 8, 3, 2], [8, 8, 1, 2], [3, 9, 3, 2]]'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '48: [[1, 8, 3, 2], [8, 8, 1, 2], [3, 9, 3, 2]]'
- en: '}'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: '➊ def deplete_energy(penalty):'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ def deplete_energy(penalty):'
- en: global energy, game_over
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: global energy, game_over
- en: 'if game_over:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 'if game_over:'
- en: 'return # Don''t sap energy when they''re already dead.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 'return # 当它们已经死掉时，不要消耗能量。'
- en: ➋     energy = energy - penalty
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     energy = energy - penalty
- en: draw_energy_air()
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: draw_energy_air()
- en: 'if energy < 1:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 'if energy < 1:'
- en: end_the_game("You're out of energy!")
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: end_the_game("你已经没有能量了！")
- en: '###############'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '##   START   ##'
- en: '###############'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-5: Reducing the player’s energy*'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-5: 减少玩家能量*'
- en: The deplete_energy() function accepts a number ➊ and uses that number to reduce
    the player’s energy variable ➋. As a result, we can use this function for hazards
    that drain different amounts of energy.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: deplete_energy() 函数接受一个数字 ➊，并使用该数字减少玩家的能量变量 ➋。因此，我们可以使用此函数来处理不同能量消耗量的危险。
- en: '**STARTING AND STOPPING HAZARDS**'
  id: totrans-173
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**启动和停止危险物体**'
- en: When the player enters a new room, the function hazard_start() puts the hazards
    into the room. [Listing 12-6](ch12.xhtml#ch12list6) shows this function, which
    you need to add after the deplete_energy() function in the HAZARDS section of
    the program. Save your program as *listing12-6.py*. If you run it using pgzrun
    listing12-6.py, you shouldn’t notice any difference yet, because we haven’t set
    this function to run.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 当玩家进入新房间时，hazard_start() 函数会将危险物体放入房间。 [Listing 12-6](ch12.xhtml#ch12list6)
    显示了这个函数，你需要将它添加到程序中 HAZARDS 部分的 deplete_energy() 函数后面。将程序保存为 *listing12-6.py*。如果使用
    pgzrun listing12-6.py 运行它，暂时不会有任何变化，因为我们还没有设置这个函数来运行。
- en: '*listing12-6.py*'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-6.py*'
- en: --snip--
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'if energy < 1:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 'if energy < 1:'
- en: end_the_game("You're out of energy!")
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: end_the_game("你的能量耗尽了！")
- en: 'def hazard_start():'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 'def hazard_start():'
- en: global current_room_hazards_list, hazard_map
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: global current_room_hazards_list, hazard_map
- en: '➊     if current_room in hazard_data.keys():'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '➊      if current_room in hazard_data.keys():'
- en: ➋         current_room_hazards_list = hazard_data[current_room]
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: ➋          current_room_hazards_list = hazard_data[current_room]
- en: '➌         for hazard in current_room_hazards_list:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '➌          for hazard in current_room_hazards_list:'
- en: hazard_y = hazard[0]
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_y = hazard[0]
- en: hazard_x = hazard[1]
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x = hazard[1]
- en: ➍             hazard_map[hazard_y][hazard_x] = 49 + (current_room % 3)
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: ➍             hazard_map[hazard_y][hazard_x] = 49 + (current_room % 3)
- en: ➎         clock.schedule_interval(hazard_move, 0.15)
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: ➎          clock.schedule_interval(hazard_move, 0.15)
- en: '###############'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-6: Adding the hazards to the current room*'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-6：将危险物体添加到当前房间*'
- en: The hazard_start() function will run whenever the player enters a new room,
    so it begins by checking whether the current room has an entry in the hazard_data
    dictionary ➊. If it does, that room should have moving hazards in it, and the
    rest of the function runs. We put the hazard data for the room into a list called
    current_room_hazards_list ➋. The function then uses a loop ➌ to process each hazard
    in the list in turn.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 每当玩家进入新房间时，hazard_start() 函数就会运行，因此它首先检查当前房间在 hazard_data 字典中是否有条目 ➊。若有，该房间应有移动的危险物体，函数的其余部分将继续执行。我们将该房间的危险物体数据存入名为
    current_room_hazards_list 的列表 ➋。然后，函数使用循环 ➌ 逐个处理列表中的每个危险物体。
- en: The hazards use their own room map called hazard_map, so they can easily fly
    over objects on the floor without overwriting them in the room map. If the hazards
    used the same room map as the props, they would wipe out props as they flew over
    them, or we’d need a complicated way to remember what’s underneath the hazards.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 危险物体使用自己的房间地图，称为 hazard_map，这样它们可以轻松地飞过地板上的物体，而不会覆盖房间地图中的物体。如果危险物体使用与道具相同的房间地图，它们在飞过道具时会擦掉道具，或者我们需要一种复杂的方法来记住危险物体下方的内容。
- en: The three hazard objects have the numbers 49, 50, and 51 in the objects dictionary.
    The program uses a simple calculation to work out which one goes into a particular
    room. As you’ve seen before, Python’s % operator gives you the remainder after
    doing a division. When you divide any number by 3, the remainder will be 0, 1,
    or 2\. So the program divides the room number by 3 and adds the remainder to 49
    to pick an object number ➍. So, for example, if we were in room 34, the program
    would work out that 34 % 3 is 1, and add 1 to 49 to select hazard number 50 for
    all the hazards in that room.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这三个危险物体在对象字典中的编号是 49、50 和 51。程序通过简单的计算来确定哪个编号对应特定房间。正如你之前看到的，Python 的 % 运算符在进行除法运算后会返回余数。当你将任何数字除以
    3，余数只能是 0、1 或 2。所以程序将房间号除以 3，然后将余数加到 49 来选择一个物体编号 ➍。例如，如果我们在房间 34，程序会计算出 34 %
    3 为 1，然后将 1 加到 49，选择编号为 50 的危险物体，所有该房间的危险物体都将使用这个编号。
- en: This way of selecting hazard numbers ensures the hazard is always the same type
    when the player enters the room. Because the map is five rooms wide, it also guarantees
    that two directly connected rooms cannot have the same hazard in them. That adds
    a sense of variety to the map, although not all rooms have hazards, so in practice,
    players might still encounter the same hazard twice in a row, walking through
    some empty rooms in between.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这种选择危险物体编号的方式确保了玩家进入房间时，危险物体总是同一类型。由于地图宽度为五个房间，它还保证了两个直接相连的房间不能有相同的危险物体。这为地图增添了多样性，尽管并非所有房间都有危险物体，所以实际上玩家可能会连续遇到同一个危险物体，只是在它们之间穿过一些空房间。
- en: The function finishes by scheduling the hazard_move() function to run every
    0.15 seconds ➎.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数通过调度 hazard_move() 函数，每 0.15 秒运行一次 ➎。
- en: To start the hazard_start() function when the player enters a new room, add
    an instruction to the start_room() function, as shown in [Listing 12-7](ch12.xhtml#ch12list7).
    Save your program as *listing12-7.py*. This version of the program will freeze
    when you leave the start room, because we haven’t finished adding the code for
    the hazards yet.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在玩家进入新房间时启动 hazard_start() 函数，请在 start_room() 函数中添加指令，如 [列表 12-7](ch12.xhtml#ch12list7)
    所示。将程序保存为 *listing12-7.py*。这个版本的程序会在你离开起始房间时冻结，因为我们还没有完成添加危害的代码。
- en: '*listing12-7.py*'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-7.py*'
- en: --snip--
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '###############'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'GAME LOOP ##'
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 'GAME LOOP ##'
- en: '###############'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'def start_room():'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 'def start_room():'
- en: global airlock_door_frame
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: global airlock_door_frame
- en: 'show_text("You are here: " + room_name, 0)'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 'show_text("你在这里: " + room_name, 0)'
- en: 'if current_room == 26: # Room with self-shutting airlock door'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 'if current_room == 26: # 带有自关闭空气锁门的房间'
- en: airlock_door_frame = 0
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: airlock_door_frame = 0
- en: clock.schedule_interval(door_in_room_26, 0.05)
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_interval(door_in_room_26, 0.05)
- en: hazard_start()
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_start()
- en: --snip--
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 12-7: Starting hazards when the player enters the room*'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-7：当玩家进入房间时启动危害*'
- en: Not all rooms have hazards, so we will stop the hazards from moving when the
    player leaves a room. We previously added instructions in the game_loop() function
    to turn off the function that makes the hazards move when the player changes room.
    We commented them out because we weren’t ready for them yet.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有的房间都有危害，因此当玩家离开房间时，我们将停止危害的移动。我们之前在 game_loop() 函数中添加了指令，以便在玩家换房间时关闭使危害移动的功能。我们已经将它们注释掉，因为我们当时还没准备好。
- en: 'We’re ready for them now! Follow these steps to uncomment the instructions
    (you did something similar in [Chapter 8](ch08.xhtml#ch08)):'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们准备好了！按照以下步骤取消注释这些指令（你在 [第8章](ch08.xhtml#ch08) 中做过类似的操作）：
- en: Click **Edit** ▸ **Replace** (or press CTRL-H) in IDLE to show the Replace Text
    dialog box.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **编辑** ▸ **替换**（或按 CTRL-H）在 IDLE 中显示替换文本对话框。
- en: 'Type #clock.unschedule(hazard_move) into the Find box.'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '在查找框中键入 #clock.unschedule(hazard_move)。'
- en: Type clock.unschedule(hazard_move) into the Replace With box.
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“替换为”框中键入 clock.unschedule(hazard_move)。
- en: Click **Replace All**. IDLE should replace the instruction in four places, and
    jump to the last one in the listing. [Listing 12-8](ch12.xhtml#ch12list8) shows
    the new line that will be highlighted at the end of the process (you don’t need
    to type this listing in). Above this block of code, there are three similar blocks
    that also now stop the hazards moving when the player leaves the room through
    one of the exits.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **全部替换**。IDLE 应该会在四个位置替换指令，并跳转到列表中的最后一个位置。[列表 12-8](ch12.xhtml#ch12list8)
    显示了在过程结束时将被高亮的新行（你不需要键入这个列表）。在这段代码块的上方，有三个类似的代码块，它们现在也会在玩家通过一个出口离开房间时，停止危害的移动。
- en: '*listing12-8.py*'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-8.py*'
- en: --snip--
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: 'if player_y == -1: # through door at TOP'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 'if player_y == -1: # 通过顶部的门'
- en: clock.unschedule(hazard_move)
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: clock.unschedule(hazard_move)
- en: current_room -= MAP_WIDTH
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: current_room -= MAP_WIDTH
- en: generate_map()
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: generate_map()
- en: 'player_y = room_height - 1 # enter at bottom'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 'player_y = room_height - 1 # 从底部进入'
- en: 'player_x = int(room_width / 2) # enter at door'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 'player_x = int(room_width / 2) # 从门口进入'
- en: player_frame = 0
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: player_frame = 0
- en: start_room()
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: start_room()
- en: return
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: return
- en: --snip--
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 12-8: Stopping hazards when the player leaves the room*'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-8：当玩家离开房间时停止危害的移动*'
- en: Save your updated program as *listing12-8.py*. If you run this version of the
    program, you’ll see an error message in the console, and the game will freeze
    when you leave the room. The reason is that we haven’t added the hazard_move()
    function yet.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 将更新后的程序保存为 *listing12-8.py*。如果运行这个版本的程序，你将在控制台看到一个错误信息，且当你离开房间时游戏会冻结。原因是我们还没有添加
    hazard_move() 函数。
- en: '**SETTING UP THE HAZARD MAP**'
  id: totrans-233
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**设置危害地图**'
- en: We now need to make sure that when the room map is generated for scenery and
    props, an empty hazard map is also generated. The hazard_start() function will
    fill it with any hazards in the room.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要确保，在为场景和道具生成房间地图时，也会生成一个空的危害地图。hazard_start() 函数将会填充房间中的任何危害。
- en: Add the new code shown in [Listing 12-9](ch12.xhtml#ch12list9) at the end of
    the generate_map() function in the MAKE MAP section of the program. Place this
    new code just before the GAME LOOP section, and make sure you indent the first
    line by four spaces because it’s inside a function.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在程序的 MAKE MAP 部分，generate_map() 函数的末尾添加 [列表 12-9](ch12.xhtml#ch12list9) 中显示的新代码。将此新代码放置在
    GAME LOOP 部分之前，并确保将第一行缩进四个空格，因为它在一个函数内部。
- en: Save your program as *listing12-9.py*. When you run it, the program won’t work
    properly yet because it is still incomplete.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为 *listing12-9.py*。当你运行它时，程序仍然无法正常工作，因为它尚未完成。
- en: '*listing12-9.py*'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-9.py*'
- en: --snip--
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'for tile_number in range(1, image_width_in_tiles):'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 'for tile_number in range(1, image_width_in_tiles):'
- en: room_map[prop_y][prop_x + tile_number] = 255
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[prop_y][prop_x + tile_number] = 255
- en: 'hazard_map = [] # empty list'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 'hazard_map = [] # 空列表'
- en: 'for y in range(room_height):'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 'for y in range(room_height):'
- en: hazard_map.append( [0] * room_width )
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_map.append( [0] * room_width )
- en: '###############'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'GAME LOOP ##'
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '游戏循环 ##'
- en: '###############'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-9: Creating the empty hazard map*'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-9: 创建空的危害地图*'
- en: These new instructions create an empty list for the hazard map and fill it with
    rows of 0s that are as wide as the room width.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 这些新指令为危害地图创建了一个空列表，并用与房间宽度相同的 0 填充了若干行。
- en: '**MAKING THE HAZARDS MOVE**'
  id: totrans-250
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**让危害移动**'
- en: Now let’s add the missing hazard_move() function to make the hazards move. Put
    this at the end of the HAZARDS section of the program after the hazard_start()
    function, as shown in [Listing 12-10](ch12.xhtml#ch12list10). Save your program
    as *listing12-10.py*.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加缺失的 `hazard_move()` 函数，使得危害能够移动。将其放在程序中的 HAZARDS 部分，并紧跟在 `hazard_start()`
    函数之后，如 [列表 12-10](ch12.xhtml#ch12list10) 所示。将程序保存为 *listing12-10.py*。
- en: '*listing12-10.py*'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-10.py*'
- en: --snip--
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: hazard_map[hazard_y][hazard_x] = 49 + (current_room % 3)
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_map[hazard_y][hazard_x] = 49 + (current_room % 3)
- en: clock.schedule_interval(hazard_move, 0.15)
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_interval(hazard_move, 0.15)
- en: 'def hazard_move():'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 'def hazard_move():'
- en: global current_room_hazards_list, hazard_data, hazard_map
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: global current_room_hazards_list, hazard_data, hazard_map
- en: global old_player_x, old_player_y
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: global old_player_x, old_player_y
- en: 'if game_over:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 'if game_over:'
- en: return
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: return
- en: 'for hazard in current_room_hazards_list:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 'for hazard in current_room_hazards_list:'
- en: hazard_y = hazard[0]
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_y = hazard[0]
- en: hazard_x = hazard[1]
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x = hazard[1]
- en: hazard_direction = hazard[2]
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_direction = hazard[2]
- en: ➊         old_hazard_x = hazard_x
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: ➊         old_hazard_x = hazard_x
- en: old_hazard_y = hazard_y
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: old_hazard_y = hazard_y
- en: hazard_map[old_hazard_y][old_hazard_x] = 0
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_map[old_hazard_y][old_hazard_x] = 0
- en: '➋         if hazard_direction == 1: # up'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '➋         if hazard_direction == 1: # up'
- en: hazard_y -= 1
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_y -= 1
- en: 'if hazard_direction == 2: # right'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_direction == 2: # right'
- en: hazard_x += 1
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x += 1
- en: 'if hazard_direction == 3: # down'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_direction == 3: # down'
- en: hazard_y += 1
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_y += 1
- en: 'if hazard_direction == 4: # left'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_direction == 4: # left'
- en: hazard_x -= 1
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x -= 1
- en: hazard_should_bounce = False
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = False
- en: ➌         if (hazard_y == player_y and hazard_x == player_x) or \
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: ➌         if (hazard_y == player_y and hazard_x == player_x) or \
- en: (hazard_y == from_player_y and hazard_x == from_player_x
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: (hazard_y == from_player_y and hazard_x == from_player_x
- en: 'and player_frame > 0):'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 'and player_frame > 0):'
- en: sounds.ouch.play()
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.ouch.play()
- en: deplete_energy(10)
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: deplete_energy(10)
- en: hazard_should_bounce = True
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = True
- en: ➍         # Stop hazard going out of the doors
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '➍         # 防止危害越过门口'
- en: 'if hazard_x == room_width:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_x == room_width:'
- en: hazard_should_bounce = True
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = True
- en: hazard_x = room_width - 1
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x = room_width - 1
- en: 'if hazard_x == -1:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_x == -1:'
- en: hazard_should_bounce = True
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = True
- en: hazard_x = 0
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x = 0
- en: 'if hazard_y == room_height:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_y == room_height:'
- en: hazard_should_bounce = True
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = True
- en: hazard_y = room_height - 1
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_y = room_height - 1
- en: 'if hazard_y == -1:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_y == -1:'
- en: hazard_should_bounce = True
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = True
- en: hazard_y = 0
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_y = 0
- en: ➎         # Stop when hazard hits scenery or another hazard.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '➎         # 当危害碰到景物或其他危害时停止。'
- en: if room_map[hazard_y][hazard_x] not in items_player_may_stand_on \
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: if room_map[hazard_y][hazard_x] not in items_player_may_stand_on \
- en: 'or hazard_map[hazard_y][hazard_x] != 0:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 'or hazard_map[hazard_y][hazard_x] != 0:'
- en: hazard_should_bounce = True
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_should_bounce = True
- en: '➏         if hazard_should_bounce:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '➏         if hazard_should_bounce:'
- en: 'hazard_y = old_hazard_y # Move back to last valid position.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 'hazard_y = old_hazard_y # 返回到最后一个有效位置。'
- en: hazard_x = old_hazard_x
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_x = old_hazard_x
- en: ➐             hazard_direction += hazard[3]
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: ➐             hazard_direction += hazard[3]
- en: '➑             if hazard_direction > 4:'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '➑             if hazard_direction > 4:'
- en: hazard_direction -= 4
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_direction -= 4
- en: 'if hazard_direction < 1:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hazard_direction < 1:'
- en: hazard_direction += 4
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: hazard_direction += 4
- en: ➒             hazard[2] = hazard_direction
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: ➒             hazard[2] = hazard_direction
- en: ➓         hazard_map[hazard_y][hazard_x] = 49 + (current_room % 3)
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: ➓         hazard_map[hazard_y][hazard_x] = 49 + (current_room % 3)
- en: hazard[0] = hazard_y
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: hazard[0] = hazard_y
- en: hazard[1] = hazard_x
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: hazard[1] = hazard_x
- en: '###############'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '##   START   ##'
- en: '###############'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-10: Adding the hazard movement function*'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-10: 添加危害移动函数*'
- en: The hazard_move() function uses an idea similar to the player movement. The
    hazard’s position is stored in the old_hazard_x and old_hazard_y variables ➊.
    The hazard is then moved ➋.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`hazard_move()` 函数使用了类似于玩家移动的思路。障碍物的位置存储在 `old_hazard_x` 和 `old_hazard_y` 变量中
    ➊。然后障碍物会移动 ➋。'
- en: Then we check whether the hazard has hit the player ➌, gone out the door ➍,
    or hit the scenery or another hazard ➎. If it has ➏, then its position is reset
    to its old values, and we change its direction by adding the last number in its
    list of data to the direction number ➐. If adding this number increases the direction
    number to more than 4 ➑, the function subtracts 4, as we discussed earlier in
    this chapter, because 4 is the highest valid direction number. On the other hand,
    if adding this number decreases the direction number to less than 1, the function
    adds 4\. Finally, the new direction is saved in the hazard data ➒.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们检查障碍物是否碰到玩家 ➌，是否走出了门 ➍，或者是否撞到景物或其他障碍物 ➎。如果是 ➏，那么它的位置会重置为原来的值，并且通过将其数据列表中的最后一个数字加到方向数字上来改变其方向
    ➐。如果加上这个数字后，方向数字超过了 4 ➑，函数会减去 4，如本章前面所述，因为 4 是最大有效的方向数字。另一方面，如果加上这个数字后，方向数字低于
    1，函数会加上 4。最后，将新的方向保存到障碍物的数据中 ➒。
- en: At the end of the function ➓, the hazard is put into the hazard map.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在函数的末尾 ➓，将障碍物放入障碍物地图中。
- en: You can run this program using pgzrun listing12-10.py. The first room with a
    hazard is the one to the right of your starting room. When you enter it, your
    energy will mysteriously go down sometimes, even though you can’t see anything
    dangerous. This is because we haven’t added code to draw the hazards yet.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `pgzrun listing12-10.py` 运行这个程序。第一个有障碍物的房间是你起始房间右边的那个房间。当你进入时，能量会神秘地减少，即使你看不见任何危险。这是因为我们还没有添加代码来绘制障碍物。
- en: '**TIP**'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: When a hazard hits you ➌, the deplete_energy() function reduces your energy
    by 10 percent. If you find the game too difficult, you can change this number
    to 5\. If you complete the game and want a tougher challenge the next time around,
    you could change it to 20!
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 当障碍物碰到你 ➌ 时，`deplete_energy()` 函数会减少你的能量 10%。如果你觉得游戏太难，可以将这个数值改为 5。如果你完成了游戏并想挑战更高难度，下次可以将其改为
    20！
- en: '**DISPLAYING HAZARDS IN THE ROOM**'
  id: totrans-323
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**在房间中显示障碍物**'
- en: It doesn’t seem fair to have invisible dangers, so let’s add a few lines to
    show the hazards in the room. [Listing 12-11](ch12.xhtml#ch12list11) shows three
    new lines to add to the draw() function in the DISPLAY section of the program.
    Put these near the end of the function, before the code to draw the player.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 隐形的危险看起来不太公平，所以我们来加几行代码，显示房间中的障碍物。[列表 12-11](ch12.xhtml#ch12list11) 显示了要在程序的
    DISPLAY 部分的 `draw()` 函数中添加的三行新代码。把这些代码放在函数的末尾，在绘制玩家角色的代码之前。
- en: Indent these instructions by a total of 12 spaces because they’re inside the
    draw() function (4 spaces), inside the y loop (another 4), and inside the x loop
    (another 4-space indentation). Save your program as *listing12-11.py*.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些指令在 `draw()` 函数内部（4个空格），在 `y` 循环内（另4个空格），以及在 `x` 循环内（再4个空格缩进），因此总共缩进 12
    个空格。将程序保存为 *listing12-11.py*。
- en: '*listing12-11.py*'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-11.py*'
- en: --snip--
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '# Use shadow across width of object.'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '# 在物体的宽度上使用阴影。'
- en: 'for z in range(0, shadow_width):'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: '`for z in range(0, shadow_width):`'
- en: draw_shadow(shadow_image, y, x+z)
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '`draw_shadow(shadow_image, y, x+z)`'
- en: 'else:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 否则：
- en: draw_shadow(shadow_image, y, x)
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: '`draw_shadow(shadow_image, y, x)`'
- en: hazard_here = hazard_map[y][x]
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: '`hazard_here = hazard_map[y][x]`'
- en: 'if hazard_here != 0: # If there''s a hazard at this position'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: '`if hazard_here != 0:` # 如果这个位置有障碍物'
- en: draw_image(objects[hazard_here][0], y, x)
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '`draw_image(objects[hazard_here][0], y, x)`'
- en: 'if (player_y == y):'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: '`if (player_y == y):`'
- en: draw_player()
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '`draw_player()`'
- en: --snip--
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-11: Displaying the moving hazards*'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-11：显示移动的障碍物*'
- en: This listing completes the moving hazards. Run your program using pgzrun listing12-11.py.
    Then start running for your life! You should now be able to see the moving hazards,
    such as the energy ball shown in [Figure 12-4](ch12.xhtml#ch12fig4).
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表完成了移动障碍物的功能。使用 `pgzrun listing12-11.py` 运行你的程序。然后开始拼命奔跑吧！现在你应该能看到移动的障碍物，例如
    [图 12-4](ch12.xhtml#ch12fig4) 中显示的能量球。
- en: '![image](../images/fig12-4.jpg)'
  id: totrans-341
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig12-4.jpg)'
- en: '*Figure 12-4: This energy ball bounces around the room in a counterclockwise
    pattern.*'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 12-4：这个能量球在房间内逆时针弹跳。*'
- en: '**TRAINING MISSION #2**'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #2**'
- en: Test that the moving hazards work correctly. Enter the room to the right of
    your start room (or teleport into room 32 if necessary). When the energy ball
    hits you, does your energy decrease? Does the energy ball bounce off you? Can
    you bounce the energy ball into both doorways to check that it stays in the room?
    Does the game end when you run out of energy?
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 测试移动危险物是否正常工作。进入你起始房间右侧的房间（或者如果需要，传送到房间32）。当能量球击中你时，你的能量是否减少？能量球是否会从你身上反弹？你能将能量球反弹进两个门口并检查它是否保持在房间内吗？当你的能量耗尽时，游戏是否结束？
- en: '**STOPPING THE PLAYER FROM WALKING THROUGH HAZARDS**'
  id: totrans-345
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**阻止玩家穿过危险物**'
- en: We also need to add a line to stop the player from walking into or through hazards.
    In practice, the hazard will usually bounce off the player, but without making
    the fix shown in [Listing 12-12](ch12.xhtml#ch12list12), it’s sometimes possible
    to pass through the hazard.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要添加一行代码来阻止玩家走入或穿过危险物。实际上，危险物通常会从玩家身上反弹，但如果不做出[Listing 12-12](ch12.xhtml#ch12list12)中的修复，有时玩家还是有可能穿过危险物。
- en: 'We already added the code we need in the game_loop() function, but we commented
    it out. Now it’s time to uncomment it by deleting the # symbol before the \ at
    the end of one line, and removing the # at the start of the next line.'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在game_loop()函数中添加了所需的代码，但我们将其注释掉了。现在是时候取消注释，通过删除行末\前的#符号，以及删除下一行开始的#符号来恢复这些代码。
- en: 'We also need to delete the colon after items_player_may_stand_on. A quick way
    to find the right part of the program is to press CTRL-F to open the search box,
    and then enter #\. [Listing 12-12](ch12.xhtml#ch12list12) shows you the lines
    to modify.'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要删除items_player_may_stand_on后面的冒号。快速找到程序中的正确部分的方法是按CTRL-F打开搜索框，然后输入#\。 [Listing
    12-12](ch12.xhtml#ch12list12)展示了你需要修改的行。
- en: '*listing12-12.py*'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-12.py*'
- en: --snip--
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '# If the player is standing somewhere they shouldn''t, move them back.'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: '# 如果玩家站在不该站的位置，将其移回。'
- en: if room_map[player_y][player_x] not in items_player_may_stand_on \
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 如果room_map[player_y][player_x]不在items_player_may_stand_on中 \
- en: 'or hazard_map[player_y][player_x] != 0:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 或者hazard_map[player_y][player_x] != 0：
- en: player_x = old_player_x
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: player_x = old_player_x
- en: player_y = old_player_y
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: player_y = old_player_y
- en: player_frame = 0
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: player_frame = 0
- en: --snip--
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-12: Stopping the player from passing through hazards*'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-12：阻止玩家穿过危险物*'
- en: Save your program as *listing12-12.py* and run it with pgzrun listing12-12.py.
    Can you track down all three types of flying hazards in the space station?
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为*listing12-12.py*并用`pgzrun listing12-12.py`运行它。你能在空间站中追踪到所有三种类型的飞行危险物吗？
- en: '**ADDING THE TOXIC SPILLS**'
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加有毒泄漏**'
- en: You might have noticed the green splash on the floor in [Figure 12-4](ch12.xhtml#ch12fig4).
    It’s a toxic spill, and it saps your energy when you walk on it. You’ll have to
    think strategically. Should you run through it to get somewhere faster? Or should
    you walk carefully around it, saving your energy for later but maybe slowing you
    down?
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到了[Figure 12-4](ch12.xhtml#ch12fig4)中的绿色地板溅出物。那是有毒泄漏，当你走在上面时会消耗你的能量。你需要考虑策略。你应该跑过去以便更快到达目的地吗？还是应该小心绕过它，节省能量以备后用，但可能会稍微拖慢你的速度？
- en: '[Listing 12-13](ch12.xhtml#ch12list13) shows the instructions to add to sap
    your energy when you’re walking on the toxic floor. These instructions go in the
    game_loop() function, just after the instructions you fixed in [Listing 12-12](ch12.xhtml#ch12list12).'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: '[Listing 12-13](ch12.xhtml#ch12list13)展示了在你走在有毒地板上时消耗能量的指令。这些指令放在game_loop()函数中，紧接在你在[Listing
    12-12](ch12.xhtml#ch12list12)中修复的指令后面。'
- en: Save your program as *listing12-13.py*. You can test that it works by running
    the program using pgzrun listing12-13.py and then walking on the toxic floor.
    The toxic floor is object 48 and is positioned as scenery in the room.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为*listing12-13.py*。你可以通过运行程序`pgzrun listing12-13.py`来测试它是否有效，然后在有毒地板上行走。这个有毒地板是对象48，并且被放置为房间中的景物。
- en: '*listing12-13.py*'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-13.py*'
- en: --snip--
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '# If the player is standing somewhere they shouldn''t, move them back.'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: '# 如果玩家站在不该站的位置，将其移回。'
- en: if room_map[player_y][player_x] not in items_player_may_stand_on \
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 如果room_map[player_y][player_x]不在items_player_may_stand_on中 \
- en: 'or hazard_map[player_y][player_x] != 0:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 或者hazard_map[player_y][player_x] != 0：
- en: player_x = old_player_x
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: player_x = old_player_x
- en: player_y = old_player_y
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: player_y = old_player_y
- en: player_frame = 0
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: player_frame = 0
- en: 'if room_map[player_y][player_x] == 48: # toxic floor'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '如果room_map[player_y][player_x] == 48: # 有毒地板'
- en: deplete_energy(1)
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: deplete_energy(1)
- en: 'if player_direction == "right" and player_frame > 0:'
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 如果player_direction == "right"并且player_frame > 0：
- en: player_offset_x = -1 + (0.25 * player_frame)
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: player_offset_x = -1 + (0.25 * player_frame)
- en: --snip--
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-13: Reducing the player’s energy when they walk on the toxic floor*'
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-13: 玩家走在有毒地板上时减少能量*'
- en: '**MAKING THE FINISHING TOUCHES**'
  id: totrans-378
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**完善细节**'
- en: The game is now nearly complete. Before you embark on your exploration of the
    space station, we need to remove some of the instructions we used while building
    and testing the game.
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏现在几乎完成。在你开始探索太空站之前，我们需要删除一些在构建和测试游戏时使用的指令。
- en: '**DISABLING THE TELEPORTER**'
  id: totrans-380
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**禁用传送器**'
- en: Mission rules forbid the use of the teleporter once your work on the space station
    begins. Find its instructions in the game_loop() function, highlight them using
    your mouse, and then click **Format** ▸ **Comment Out Region** to disable them.
    Your code should now look like [Listing 12-14](ch12.xhtml#ch12list14).
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 任务规则禁止在太空站工作开始后使用传送器。找到它在game_loop()函数中的指令，用鼠标选中它们，然后点击**格式** ▸ **注释掉区域**来禁用它们。你的代码现在应该像[Listing
    12-14](ch12.xhtml#ch12list14)一样。
- en: '*listing12-14.py*'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-14.py*'
- en: --snip--
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: Teleporter for testing
  id: totrans-384
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 用于测试的传送器
- en: Remove this section for the real game
  id: totrans-385
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 删除这一部分用于实际游戏
- en: '##    if keyboard.x:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '##    if keyboard.x:'
- en: '##        current_room = int(input("Enter room number:"))'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: '##        current_room = int(input("输入房间号："))'
- en: '##        player_x = 2'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: '##        player_x = 2'
- en: '##        player_y = 2'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '##        player_y = 2'
- en: '##        generate_map()'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '##        generate_map()'
- en: '##        start_room()'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '##        start_room()'
- en: '##        sounds.teleport.play()'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '##        sounds.teleport.play()'
- en: Teleport section ends
  id: totrans-393
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 传送门部分结束
- en: --snip--
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 12-14: The teleporter is turned off.*'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-14: 传送器已关闭。*'
- en: '**CLEANING UP THE DATA**'
  id: totrans-396
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**清理数据**'
- en: While testing the game, you might have changed the contents of some of the variables
    and lists. The game should look like [Figure 12-5](ch12.xhtml#ch12fig5) when it
    begins. If it doesn’t, look at the VARIABLES section of the program and make sure
    the current_room variable is set to 31.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试游戏时，你可能已经更改了一些变量和列表的内容。游戏开始时应该像[图12-5](ch12.xhtml#ch12fig5)那样。如果不是，请查看程序中的VARIABLES部分，确保current_room变量设置为31。
- en: '![image](../images/fig12-5.jpg)'
  id: totrans-398
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig12-5.jpg)'
- en: '*Figure 12-5: The start of your mission*'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-5：任务开始时的画面*'
- en: 'If you’re carrying more than your yoyo, look at the PROPS part of the program
    and check that this line is correct:'
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你携带的物品超过了悠悠球，请查看程序中的PROPS部分，并确保这一行是正确的：
- en: in_my_pockets = [55]
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: in_my_pockets = [55]
- en: '**YOUR ADVENTURE BEGINS**'
  id: totrans-402
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**冒险开始**'
- en: 'It’s an exciting moment: your training is complete; the space station is ready;
    and your mission on Mars is about to begin. Let’s set a sci-fi fanfare to play
    when the game starts. [Listing 12-15](ch12.xhtml#ch12list15) shows the final instruction
    you’ll add to *Escape*.'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个激动人心的时刻：你的训练已经完成，太空站已经准备就绪，你的火星任务即将开始。让我们在游戏开始时播放一段科幻风格的音乐。[Listing 12-15](ch12.xhtml#ch12list15)展示了你将添加到*Escape*中的最后一条指令。
- en: '*listing12-15.py*'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing12-15.py*'
- en: --snip--
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: clock.schedule_unique(alarm, 10)
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_unique(alarm, 10)
- en: 'clock.schedule_interval(air_countdown, 11) # A higher number gives a longer'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 'clock.schedule_interval(air_countdown, 11) # 较大的数字会给出更长的倒计时'
- en: time limit.
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 时间限制。
- en: 'sounds.mission.play() # Intro music'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 'sounds.mission.play() # 任务音乐'
- en: '*Listing 12-15: A sci-fi fanfare plays when the game begins.*'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 12-15: 游戏开始时播放的科幻风格音乐。*'
- en: Save your final program as *escape.py*. You can now play the game using pgzrun
    escape.py. See “[Playing the Game](intro.xhtml#lev15)” on [page 11](intro.xhtml#page_11)
    for instructions.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 将最终程序保存为*escape.py*。现在，你可以通过pgzrun escape.py来玩游戏。查看[“玩游戏”](intro.xhtml#lev15)在[第11页](intro.xhtml#page_11)上的说明，了解如何操作。
- en: Congratulations on completing the space station construction. You’ve truly earned
    your place on this mission. It’s time to begin your work on the planet’s surface!
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你完成了太空站的建造。你确实配得上参加这次任务。现在是时候开始在行星表面展开工作了！
- en: '**YOUR NEXT MISSION: CUSTOMIZING THE GAME**'
  id: totrans-413
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你的下一个任务：自定义游戏**'
- en: 'Did you make it to safety in the *Escape* game? That was a close shave! For
    your next mission, try customizing the game. There are different ways to use this
    book, so you might already have made some customizations as you built the game.
    Here are some suggestions for modifying the game, starting with the easiest:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 你在*Escape*游戏中成功到达安全地点了吗？真是千钧一发！接下来的任务是尝试自定义游戏。使用这本书的方式有很多种，所以在你构建游戏时可能已经做了一些自定义。以下是一些修改游戏的建议，从最简单的开始：
- en: Change the names of the characters in the game to those of your friends. See
    [Listing 4-1](ch04.xhtml#ch04list1) on [page 63](ch04.xhtml#page_63) in [Chapter
    4](ch04.xhtml#ch04).
  id: totrans-415
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将游戏中的角色名称更改为你朋友的名字。查看[Listing 4-1](ch04.xhtml#ch04list1)在[第63页](ch04.xhtml#page_63)的[第4章](ch04.xhtml#ch04)中的内容。
- en: Customize the images. You can edit our images, or create your own. The game
    includes a whiteboard image that you can edit using your favorite art package.
    If you make your images the same size as ours, use the same filenames, and store
    them in the *images* folder, they should just drop into the game world with no
    problem.
  id: totrans-416
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义图片。你可以编辑我们的图片，或者创建你自己的。游戏中包含一个白板图片，你可以使用你喜欢的绘画软件进行编辑。如果你制作的图片与我们的尺寸相同，使用相同的文件名，并将其存储在*images*文件夹中，它们应该能够顺利地导入游戏世界。
- en: Redesign the room layouts. [Chapter 6](ch06.xhtml#ch06) explains how scenery
    is positioned in a room.
  id: totrans-417
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新设计房间布局。[第6章](ch06.xhtml#ch06) 解释了如何在房间中布置景物。
- en: Add your own objects to the game. Start by creating their images. Props should
    be 30 pixels square. Scenery items can be bigger and should touch the left and
    right sides of their tile spaces so that it doesn’t look odd when the player can’t
    get closer to the scenery than the tile next door. (For example, if your image
    is 30, 60, or 90 pixels wide and touches the ground at both sides, it should look
    fine.) You need to add the new items in the objects dictionary (see [Chapter 5](ch05.xhtml#ch05)).
    For help positioning scenery, see [Chapter 6](ch06.xhtml#ch06). For advice on
    positioning props, see [Chapter 9](ch09.xhtml#ch09).
  id: totrans-418
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向游戏中添加你自己的物品。首先创建它们的图片。道具应该是30像素见方。景物可以更大，并且应该触及其瓦片空间的左右两侧，这样当玩家无法靠近景物时，不会看起来很奇怪。（例如，如果你的图片宽度为30、60或90像素，并且触及地面两侧，它应该看起来没有问题。）你需要在物品字典中添加这些新项目（参见[第5章](ch05.xhtml#ch05)）。有关定位景物的帮助，请参见[第6章](ch06.xhtml#ch06)。有关定位道具的建议，请参见[第9章](ch09.xhtml#ch09)。
- en: Create your own space station map (see [Chapter 4](ch04.xhtml#ch04)).
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建你自己的太空站地图（参见[第4章](ch04.xhtml#ch04)）。
- en: Use the game engine to make your own game. You can replace the images and maps,
    and code your own puzzles to make a new game based on the *Escape* code. The USE
    OBJECTS section is where the game puzzles are programmed. It details what happens
    when objects are used, individually or in combination with other objects. It might
    be useful to keep the code for combining objects (recipes) and just update it
    (see [Chapter 10](ch10.xhtml#ch10)); keep the code for displaying standard responses
    (see [Chapter 10](ch10.xhtml#ch10)); and keep the code for opening doors (see
    [Chapter 11](ch11.xhtml#ch11)).
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用游戏引擎制作你自己的游戏。你可以替换图片和地图，编写自己的谜题代码，基于*Escape*代码制作一个全新的游戏。**使用物品**部分是编程游戏谜题的地方。它详细描述了当物品被单独使用或与其他物品组合时会发生什么。保留组合物品的代码（配方）并仅更新它可能会有用（参见[第10章](ch10.xhtml#ch10)）；保留显示标准响应的代码（参见[第10章](ch10.xhtml#ch10)）；以及保留开门的代码（参见[第11章](ch11.xhtml#ch11)）。
- en: If you make any changes that affect room 26, you’ll need to disable the code
    for its pressure pad (see [Chapter 11](ch11.xhtml#ch11)).
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你做出任何影响26号房间的更改，你需要禁用其压力垫的代码（参见[第11章](ch11.xhtml#ch11)）。
- en: Bear in mind that any changes you make might break the puzzles in the original
    *Escape* game, making it impossible to complete. For example, it might become
    impossible to find important tools. I recommend saving any changes you make separately,
    so you can always come back to the original code.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你所做的任何更改都可能会破坏原始*Escape*游戏中的谜题，导致无法完成。例如，可能无法找到重要的工具。我建议你将所做的任何更改单独保存，以便你始终可以返回原始代码。
- en: '**SHARING YOUR CUSTOMIZATIONS**'
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: '**分享你的自定义内容**'
- en: I’d love to hear about your customizations! You can find me on Twitter at @musicandwords
    or visit my website at *[www.sean.co.uk](http://www.sean.co.uk)*, which includes
    bonus content for the book. If you share your modified *Escape* game with others
    or share your own games built using its code, sounds, or images, please credit
    this book and its author, and make it clear that you’ve modified the code. Thank
    you!
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 我很想听听你们的自定义内容！你可以在Twitter上找到我，用户名是@musicandwords，或者访问我的网站*[www.sean.co.uk](http://www.sean.co.uk)*，该网站包括本书的附加内容。如果你将你修改过的*Escape*游戏与他人分享，或者分享你基于其代码、声音或图片制作的游戏，请注明本书及其作者，并明确表示你已修改了代码。谢谢！
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-425
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你适合飞行吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框来确认你已经学习了本章的关键内容。
- en: '![Images](../images/box.jpg)  You can use Pygame Zero to draw text with a shadow
    underneath it and can adjust the size of the text displayed.'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 你可以使用Pygame Zero绘制带有阴影的文字，并调整显示文本的大小。'
- en: '![Images](../images/box.jpg)  You can play a sound multiple times by putting
    the number of times in parentheses in its sounds.sound_name.play() instruction.'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  你可以通过在 sounds.sound_name.play() 指令中将播放次数放在括号中，来让声音播放多次。'
- en: '![Images](../images/box.jpg)  The moving hazards’ directions are numbered from
    1 at the top, moving clockwise. To create a movement pattern for a hazard, you
    provide the number you want to add to its direction number when it hits something.'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  移动中的危险物体的方向编号从顶部的 1 开始，按顺时针方向编号。要为一个危险物体创建移动模式，你需要提供一个数字，该数字会在它碰到障碍物时添加到它的方向编号上。'
- en: '![Images](../images/box.jpg)  The deplete_energy() function reduces the player’s
    energy.'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  deplete_energy() 函数会减少玩家的能量。'
- en: '![Images](../images/box.jpg)  Hazards use their own room map called hazard_map.
    This enables them to more easily move over objects on the floor.'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  危险物体使用自己专用的房间地图，称为 hazard_map。这使得它们能更容易地穿越地板上的物体。'
- en: '![Images](../images/box.jpg)  Before playing the game, check that the starting
    variables are correct.'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  在开始游戏之前，检查起始变量是否正确。'
- en: '![image](../images/f0216-01.jpg)'
  id: totrans-433
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0216-01.jpg)'
