- en: '[Introduction](nsp-venkitachalam503045-0008.xhtml#rintro)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[简介](nsp-venkitachalam503045-0008.xhtml#rintro)'
- en: '![](images/nsp-venkitachalam503045-circle-image.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-circle-image.jpg)'
- en: Welcome to the second edition of *Python Playground*! Within these pages, you’ll
    find 15 exciting projects designed to encourage you to explore the world of programming
    with Python. The projects cover a wide range of topics, such as drawing Spirograph-like
    patterns, 3D rendering, projecting laser patterns in sync with music, and speech
    recognition using machine learning. In addition to being fun in and of themselves,
    these projects offer a lot of room for expansion and are designed to be jumping-off
    points for you to explore your own ideas.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*Python Playground*的第二版！在这本书中，你将发现15个令人兴奋的项目，旨在鼓励你探索Python编程的世界。这些项目涵盖了广泛的主题，如绘制涡旋图样式的图案、3D渲染、与音乐同步投射激光图案以及使用机器学习进行语音识别。这些项目不仅本身很有趣，而且提供了大量扩展的空间，旨在成为你探索自己创意的起点。
- en: '[Who Is This Book For?](nsp-venkitachalam503045-0008.xhtml#rahintro01)'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[这本书适合谁？](nsp-venkitachalam503045-0008.xhtml#rahintro01)'
- en: '*Python Playground* was written for anyone curious about how to use programming
    to understand and explore ideas. The projects in this book assume that you know
    basic Python syntax and basic programming concepts and that you’re familiar with
    high school mathematics. I’ve done my best to explain in detail the math you need
    for all projects.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*Python Playground*是为任何好奇如何通过编程理解和探索想法的人写的。本书中的项目假设你已经掌握了基本的Python语法和编程概念，并且熟悉高中数学。我尽力详细解释了所有项目所需的数学内容。'
- en: This book isn’t intended to be your first book on Python. I won’t walk you through
    the basics. I will, however, show you how to use Python to solve a variety of
    real-world problems in a series of nontrivial projects. As you work through the
    projects, you’ll explore the nuances of the Python programming language and learn
    how to work with some popular Python libraries. But perhaps even more important,
    you’ll learn how to break down a problem into parts, develop an algorithm to solve
    that problem, and then implement a solution from the ground up using Python.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书并非为你的第一本Python书籍设计。我不会带你走过基础知识。然而，我会展示如何使用Python解决一系列实际问题。通过这些项目，你将深入了解Python编程语言的细节，并学习如何使用一些流行的Python库。但或许更重要的是，你将学会如何将一个问题分解为多个部分，开发一个算法来解决该问题，然后从头开始使用Python实现解决方案。
- en: It can be difficult to solve real-world problems because they are often open-ended
    and require expertise in various domains. But Python offers the tools to facilitate
    problem-solving. Overcoming difficulties and finding solutions to real problems
    are the most important parts of your journey on the way to becoming an expert
    programmer.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 解决现实世界的问题可能是困难的，因为这些问题通常是开放式的，并且需要在多个领域拥有专业知识。但Python提供了促进问题解决的工具。克服困难并找到解决实际问题的方案是你成为一名专家程序员道路上最重要的部分。
- en: '[What’s in This Book?](nsp-venkitachalam503045-0008.xhtml#rahintro02)'
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[本书内容](nsp-venkitachalam503045-0008.xhtml#rahintro02)'
- en: Let’s take a quick tour through the chapters in this book. [Part I](nsp-venkitachalam503045-0011.xhtml#pt01)
    features a few projects to get you started.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们快速浏览一下本书的章节。[第一部分](nsp-venkitachalam503045-0011.xhtml#pt01)包含了一些入门项目，帮助你开始。
- en: '[Chapter 1](nsp-venkitachalam503045-0012.xhtml#ch01): The Koch Snowflake Uses
    recursive functions and `turtle` graphics to draw an interesting fractal shape'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](nsp-venkitachalam503045-0012.xhtml#ch01)：科赫雪花 使用递归函数和`turtle`图形绘制一个有趣的分形图形。'
- en: '[Chapter 2](nsp-venkitachalam503045-0013.xhtml#ch02): Spirographs Harnesses
    parametric equations and `turtle` graphics to draw curves like the ones generated
    with the toy Spirograph'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](nsp-venkitachalam503045-0013.xhtml#ch02)：涡旋图 使用参数方程和`turtle`图形绘制类似玩具涡旋图产生的曲线。'
- en: '[Part II](nsp-venkitachalam503045-0014.xhtml#pt02) features projects that use
    mathematical models to create computer simulations of real-world phenomena.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二部分](nsp-venkitachalam503045-0014.xhtml#pt02)包含使用数学模型创建计算机模拟现实世界现象的项目。'
- en: '[Chapter 3](nsp-venkitachalam503045-0015.xhtml#ch03): Conway’s Game of Life
    Implements a famous cellular automaton using `numpy` and `matploblib`, producing
    an evolving, lifelike system based on a few simple rules'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](nsp-venkitachalam503045-0015.xhtml#ch03)：康威的生命游戏 使用`numpy`和`matplotlib`实现一个著名的细胞自动机，基于几个简单的规则，生成一个不断演化、栩栩如生的系统。'
- en: '[Chapter 4](nsp-venkitachalam503045-0016.xhtml#ch04): Musical Overtones with
    Karplus-Strong Realistically simulates the sound of a plucked string instrument
    and plays back the sounds with `pyaudio`'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](nsp-venkitachalam503045-0016.xhtml#ch04)：卡尔普斯-斯特朗音阶利用该算法逼真地模拟拨弦乐器的声音，并通过`pyaudio`播放这些声音。'
- en: '[Chapter 5](nsp-venkitachalam503045-0017.xhtml#ch05): Flocking Boids Uses `numpy`
    and `matplotlib` to implement the Boids algorithm and simulate the flocking behavior
    of birds'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](nsp-venkitachalam503045-0017.xhtml#ch05)：群体行为使用`numpy`和`matplotlib`实现Boids算法，并模拟鸟类的群体行为。'
- en: The projects in [Part III](nsp-venkitachalam503045-0018.xhtml#pt03) will introduce
    you to reading and manipulating 2D images with Python.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三部分](nsp-venkitachalam503045-0018.xhtml#pt03)中的项目将介绍如何使用Python读取和操作2D图像。'
- en: '[Chapter 6](nsp-venkitachalam503045-0019.xhtml#ch06): ASCII Art Introduces
    `Pillow`, a fork of the Python Imaging Library (PIL), by converting images into
    text-based ASCII art'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](nsp-venkitachalam503045-0019.xhtml#ch06)：ASCII艺术通过将图像转换为基于文本的ASCII艺术，介绍了`Pillow`，它是Python图像库（PIL）的一个分支。'
- en: '[Chapter 7](nsp-venkitachalam503045-0020.xhtml#ch07): Photomosaics Stitches
    together a grid of smaller images to create a recognizable larger image'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](nsp-venkitachalam503045-0020.xhtml#ch07)：照片拼贴通过拼接一系列较小的图像来创建一个可以识别的大图像。'
- en: '[Chapter 8](nsp-venkitachalam503045-0021.xhtml#ch08): Autostereograms Uses
    depth maps and pixel manipulation to embed the illusion of a 3D image in a 2D
    image'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](nsp-venkitachalam503045-0021.xhtml#ch08)：自适应立体图使用深度图和像素操作将3D图像的幻觉嵌入到2D图像中。'
- en: In [Part IV](nsp-venkitachalam503045-0022.xhtml#pt04), you’ll learn to use shaders
    and the OpenGL library to quickly and efficiently render 3D graphics by working
    directly with your graphics processing unit (GPU).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第四部分](nsp-venkitachalam503045-0022.xhtml#pt04)中，你将学习如何使用着色器和OpenGL库，通过直接操作图形处理单元（GPU）快速高效地渲染3D图形。
- en: '[Chapter 9](nsp-venkitachalam503045-0023.xhtml#ch09): Understanding OpenGL
    Introduces the basics of using OpenGL to create simple 3D graphics'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](nsp-venkitachalam503045-0023.xhtml#ch09)：理解OpenGL介绍了使用OpenGL创建简单3D图形的基础。'
- en: '[Chapter 10](nsp-venkitachalam503045-0024.xhtml#ch10): Conway’s Game of Life
    on a Torus Revisits the simulation from [Chapter 3](nsp-venkitachalam503045-0015.xhtml#ch03)
    and brings it to life on the surface of a 3D torus'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](nsp-venkitachalam503045-0024.xhtml#ch10)：环面上的康威生命游戏回顾了[第3章](nsp-venkitachalam503045-0015.xhtml#ch03)的模拟，并将其呈现在3D环面表面上。'
- en: '[Chapter 11](nsp-venkitachalam503045-0025.xhtml#ch11): Volume Rendering Implements
    a volume ray casting algorithm to render volumetric data, a technique commonly
    used for medical imaging such as MRI and CT scans'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](nsp-venkitachalam503045-0025.xhtml#ch11)：体积渲染实现体积光线投射算法以渲染体积数据，这是一种常用于医学影像（如MRI和CT扫描）的技术。'
- en: Finally, in [Part V](nsp-venkitachalam503045-0026.xhtml#pt05), you’ll work with
    a Raspberry Pi and other electronic components to deploy Python on embedded systems.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在[第五部分](nsp-venkitachalam503045-0026.xhtml#pt05)中，你将与树莓派及其他电子元件一起工作，将Python部署到嵌入式系统中。
- en: '[Chapter 12](nsp-venkitachalam503045-0027.xhtml#ch12): Karplus-Strong on a
    Raspberry Pi Pico Creates a playable electronic instrument by implementing the
    Karplus-Strong algorithm from [Chapter 4](nsp-venkitachalam503045-0016.xhtml#ch04)
    on a tiny Raspberry Pi Pico microcontroller using MicroPython'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](nsp-venkitachalam503045-0027.xhtml#ch12)：树莓派Pico上的卡尔普斯-斯特朗通过在微型树莓派Pico微控制器上实现[第4章](nsp-venkitachalam503045-0016.xhtml#ch04)中的卡尔普斯-斯特朗算法，创建一个可演奏的电子乐器，使用MicroPython。'
- en: '[Chapter 13](nsp-venkitachalam503045-0028.xhtml#ch13): Laser Audio Display
    with a Raspberry Pi Harnesses Python on a Raspberry Pi to control two rotating
    mirrors and a laser, producing a laser light show that responds to sound'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](nsp-venkitachalam503045-0028.xhtml#ch13)：树莓派激光音频显示利用树莓派上的Python控制两个旋转镜子和激光器，生成与声音响应的激光光秀。'
- en: '[Chapter 14](nsp-venkitachalam503045-0029.xhtml#ch14): IoT Garden Uses Bluetooth
    Low Energy to connect a Raspberry Pi with Adafruit hardware running CircuitPython,
    creating an IoT system to monitor temperature and humidity levels in your garden'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[第14章](nsp-venkitachalam503045-0029.xhtml#ch14)：物联网花园使用蓝牙低能耗将树莓派与运行CircuitPython的Adafruit硬件连接，创建一个物联网系统以监控你花园中的温度和湿度水平。'
- en: '[Chapter 15](nsp-venkitachalam503045-0030.xhtml#ch15): Audio ML on Pi Introduces
    the exciting world of machine learning with TensorFlow by implementing a speech
    recognition system on your Raspberry Pi'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[第15章](nsp-venkitachalam503045-0030.xhtml#ch15)：树莓派上的音频机器学习通过在树莓派上实现语音识别系统，介绍了使用TensorFlow的激动人心的机器学习世界。'
- en: Each chapter ends with an “Experiments!” section featuring suggestions for how
    you can expand the project or further explore the topic at hand.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 每章的结尾都有一个“实验！”部分，提供了如何扩展项目或进一步探索当前主题的建议。
- en: '[What’s New to the Second Edition?](nsp-venkitachalam503045-0008.xhtml#rahintro03)'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[第二版的新内容](nsp-venkitachalam503045-0008.xhtml#rahintro03)'
- en: This second edition features five new projects, including the Koch snowflake
    project in [Chapter 1](nsp-venkitachalam503045-0012.xhtml#ch01) and the 3D version
    of Conway’s Game of Life in [Chapter 10](nsp-venkitachalam503045-0024.xhtml#ch10).
    The most significant updates are in the hardware section, which has been streamlined
    to focus exclusively on Raspberry Pi–based systems, rather than a mix of Raspberry
    Pi and Arduino. As such, every project in [Part V](nsp-venkitachalam503045-0026.xhtml#pt05)
    either is new ([Chapter 12](nsp-venkitachalam503045-0027.xhtml#ch12), [Chapter
    14](nsp-venkitachalam503045-0029.xhtml#ch14), [Chapter 15](nsp-venkitachalam503045-0030.xhtml#ch15))
    or has been thoroughly redesigned ([Chapter 13](nsp-venkitachalam503045-0028.xhtml#ch13)).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第二版新增了五个项目，包括[第1章](nsp-venkitachalam503045-0012.xhtml#ch01)中的科赫雪花项目和[第10章](nsp-venkitachalam503045-0024.xhtml#ch10)中的康威生命游戏3D版本。最显著的更新出现在硬件部分，该部分已简化，专注于基于Raspberry
    Pi的系统，而不再是Raspberry Pi和Arduino的混合。因此，[第V部分](nsp-venkitachalam503045-0026.xhtml#pt05)中的每个项目要么是新的（[第12章](nsp-venkitachalam503045-0027.xhtml#ch12)、[第14章](nsp-venkitachalam503045-0029.xhtml#ch14)、[第15章](nsp-venkitachalam503045-0030.xhtml#ch15)），要么已被彻底重设计（[第13章](nsp-venkitachalam503045-0028.xhtml#ch13)）。
- en: Relying just on Raspberry Pi simplifies the setup process for the hardware projects,
    and it keeps the book’s focus on Python programming. There’s no longer a need
    to switch between Python and code written in the Arduino programming language
    (a version of C++). With the updated [Part V](nsp-venkitachalam503045-0026.xhtml#pt05),
    you’ll also get a taste for programming with MicroPython and CircuitPython, two
    flavors of Python optimized for running on resource-constrained embedded systems.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 仅依赖Raspberry Pi简化了硬件项目的设置过程，同时也保持了书籍对Python编程的关注。你不再需要在Python和用Arduino编程语言（C++的一种变体）编写的代码之间切换。通过更新后的[第V部分](nsp-venkitachalam503045-0026.xhtml#pt05)，你还将体验使用MicroPython和CircuitPython进行编程，它们是为资源受限的嵌入式系统优化的两种Python变体。
- en: 'Other significant updates to the second edition include:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 第二版的其他重要更新包括：
- en: • Using `pyaudio` rather than `pygame` to play WAV files in [Chapter 4](nsp-venkitachalam503045-0016.xhtml#ch04)
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在[第4章](nsp-venkitachalam503045-0016.xhtml#ch04)中，使用`pyaudio`而不是`pygame`来播放WAV文件。
- en: • Comparing the performance of a linear search algorithm and a k-d tree data
    structure when finding the best image matches for the photomosaic in [Chapter
    7](nsp-venkitachalam503045-0020.xhtml#ch07)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在[第7章](nsp-venkitachalam503045-0020.xhtml#ch07)中，比较线性搜索算法和k-d树数据结构在查找最佳图像匹配时的性能，用于光栅拼图。
- en: • Guidance on how to create your own depth maps for generating autostereograms
    in [Chapter 8](nsp-venkitachalam503045-0021.xhtml#ch08)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在[第8章](nsp-venkitachalam503045-0021.xhtml#ch08)中，提供了如何创建自己的深度图以生成自动立体图的指南。
- en: • Streamlined installation instructions in [Appendix A](nsp-venkitachalam503045-0031.xhtml#appa)
    using the standard Anaconda Distribution of Python
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: • 在[附录A](nsp-venkitachalam503045-0031.xhtml#appa)中，简化了使用标准Anaconda发行版Python的安装说明。
- en: Beyond these specific updates, the entire text has been reviewed, corrected,
    and clarified, and the code has been updated as needed to reflect changes to Python
    since the first edition was released.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些具体的更新外，整个文本已被审查、修正和澄清，代码也根据需要进行了更新，以反映自第一版发布以来Python的变化。
- en: '[Why Python?](nsp-venkitachalam503045-0008.xhtml#rahintro04)'
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[为什么选择Python？](nsp-venkitachalam503045-0008.xhtml#rahintro04)'
- en: Python is an ideal language for exploring programming. As a multiparadigm language,
    it provides you with a lot of flexibility in how you structure your programs.
    You can use Python as a *scripting* language to simply execute code, as a *procedural*
    language to organize your program into a collection of functions that call one
    another, or as an *object-oriented* language that uses classes, inheritance, and
    modules to build up a hierarchy. This flexibility allows you to choose the programming
    style most suited to a particular project.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Python是探索编程的理想语言。作为一种多范式语言，它为你提供了大量的灵活性来组织程序。你可以将Python用作*脚本*语言，简单地执行代码，也可以用作*过程式*语言，将程序组织成互相调用的函数集合，或者用作*面向对象*语言，通过类、继承和模块建立层次结构。这种灵活性使你能够选择最适合特定项目的编程风格。
- en: When you develop using a more traditional language like C or C++, you have to
    compile and link your code before you can run it. With Python, you can run it
    directly after editing. (Under the hood, Python compiles your code into an intermediate
    bytecode that is then run by the Python interpreter, but these processes are transparent
    to you, the user.) In practice, the process of modifying and running your code
    over and over is much less cumbersome with Python.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用像 C 或 C++ 这样更传统的语言进行开发时，你必须先编译和链接代码才能运行。而在 Python 中，你可以在编辑后直接运行代码。（在后台，Python
    会将你的代码编译成中间字节码，然后由 Python 解释器运行，但这些过程对你作为用户是透明的。）实际上，使用 Python 修改和反复运行代码的过程要简单得多。
- en: Python has a very small set of simple and powerful data structures. If you already
    understand strings, lists, tuples, dictionaries, list comprehensions, and basic
    control structures such as `for` and `while` loops, you’re off to a great start.
    Python’s succinct and expressive syntax makes it easy to do complex operations
    with just a few lines of code. And once you’re familiar with Python’s built-in
    and third-party modules, you’ll have an arsenal of tools to tackle real problems
    like the ones covered in this book. There are standard ways to call C/C++ code
    from Python and vice versa, and because you can find libraries to do almost anything
    in Python, it’s easy to combine Python with other language modules in bigger projects.
    This is why Python is considered a great *glue* language—it makes it easy to combine
    diverse software components. The 3D graphics projects in [Part IV](nsp-venkitachalam503045-0022.xhtml#pt04)
    demonstrate how Python can work side by side with the C-like OpenGL Shading Language,
    and in [Chapter 14](nsp-venkitachalam503045-0029.xhtml#ch14) you’ll even mix in
    a little bit of HTML, CSS, and JavaScript to create a web interface for your IoT
    garden monitor. Real software projects often use a mix of software technologies,
    and Python fits very well into such layered architectures.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Python 提供了一组非常简单且强大的数据结构。如果你已经理解了字符串、列表、元组、字典、列表推导式以及 `for` 和 `while` 循环等基本控制结构，那么你已经迈出了很好的第一步。Python
    简洁而富有表现力的语法使得你可以用少量的代码行执行复杂的操作。一旦你熟悉了 Python 内建和第三方模块，你将拥有一整套工具来解决像本书中讨论的实际问题。Python
    提供了标准的方式来从 Python 调用 C/C++ 代码，反之亦然，并且因为你可以找到几乎能做任何事的 Python 库，所以将 Python 与其他语言模块结合在更大的项目中非常容易。这就是为什么
    Python 被认为是一个出色的 *粘合剂* 语言——它使得将不同的软件组件组合起来变得轻而易举。在 [第 IV 部分](nsp-venkitachalam503045-0022.xhtml#pt04)
    中的 3D 图形项目展示了 Python 如何与类似 C 的 OpenGL 着色语言并肩工作，而在 [第14章](nsp-venkitachalam503045-0029.xhtml#ch14)
    中，你甚至会将一些 HTML、CSS 和 JavaScript 混合在一起，为你的物联网花园监控器创建一个 Web 界面。实际的软件项目通常使用多种软件技术的组合，Python
    在这样的分层架构中非常合适。
- en: 'Python also provides a handy tool in the form of the Python interpreter. It
    lets you easily check code syntax, do quick computations, and even test code under
    development. When I write Python code, I keep three windows open: a text editor,
    a shell, and a Python interpreter. As I develop code in the editor, I import my
    functions or classes into the interpreter and test them as I go.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Python 还提供了一个方便的工具——Python 解释器。它让你可以轻松检查代码语法，进行快速计算，甚至测试正在开发中的代码。当我编写 Python
    代码时，我会同时打开三个窗口：一个文本编辑器，一个终端，和一个 Python 解释器。当我在编辑器中开发代码时，我会将我的函数或类导入到解释器中并实时测试。
- en: 'I also use the interpreter to get a feel for new modules before I incorporate
    them into my code. For example, while developing code for the IoT garden project
    in [Chapter 14](nsp-venkitachalam503045-0029.xhtml#ch14), I wanted to test the
    `sqlite3` database module. I brought up the Python interpreter and tried the following
    to make sure I understood how to create and add entries to a database:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我还使用解释器来了解新模块的使用方式，随后再将它们整合到我的代码中。例如，在开发 [第14章](nsp-venkitachalam503045-0029.xhtml#ch14)
    中的物联网花园项目时，我想测试 `sqlite3` 数据库模块。我启动了 Python 解释器，并尝试了以下操作，以确保我理解如何创建和添加数据库条目：
- en: '>>> `import sqlite3`'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `import sqlite3`'
- en: '>>> `con = sqlite3.connect(''test.db'')`'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `con = sqlite3.connect(''test.db'')`'
- en: '>>> `cur = con.cursor()`'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `cur = con.cursor()`'
- en: '>>> `cur.execute("CREATE TABLE sensor_data (TS datetime, ID text, VAL numeric)")`'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `cur.execute("CREATE TABLE sensor_data (TS datetime, ID text, VAL numeric)")`'
- en: '>>> `for i in range(10):`'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `for i in range(10):`'
- en: '...   `cur.execute("INSERT into sensor_data VALUES (datetime(''now''),''ABC'', ?)",
    (i, ))`'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '...   `cur.execute("INSERT into sensor_data VALUES (datetime(''now''),''ABC'',  ?)",
    (i, ))`'
- en: '>>> `con.commit()`'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `con.commit()`'
- en: '>>> `con.close()`'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `con.close()`'
- en: '>>> `exit()`'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '>>> `exit()`'
- en: 'Then, to make sure it worked, I did the following to retrieve some of the data
    I added:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为了确保它正常工作，我执行了以下操作来检索我添加的一些数据：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This example demonstrates the practical use of the Python interpreter as a powerful
    tool for development. You don’t need to write a complete program to do quick experiments;
    just open up the interpreter and get going. This is just one of the many reasons
    why I love Python and why I think you will too.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例展示了Python解释器作为一个强大开发工具的实际应用。你不需要编写完整的程序来做快速实验；只需打开解释器，开始实验。这只是我喜欢Python的众多原因之一，也是我认为你也会喜欢Python的原因。
- en: '[The Code in This Book](nsp-venkitachalam503045-0008.xhtml#rahintro05)'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[本书中的代码](nsp-venkitachalam503045-0008.xhtml#rahintro05)'
- en: I’ve done my best throughout this book to walk you through the code for each
    project in detail, piece by piece. You can either enter the code yourself or download
    the complete source code (using the Download Zip option) for all programs in the
    book at [https://github.com/mkvenkit/pp2e](https://github.com/mkvenkit/pp2e).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我已经尽力详细地带领你逐步走过每个项目的代码。你可以自己输入代码，或者通过[https://github.com/mkvenkit/pp2e](https://github.com/mkvenkit/pp2e)下载本书中所有程序的完整源代码（使用下载Zip选项）。
- en: You’ll find several exciting projects in the following pages. I hope you have
    as much fun playing with them as I had creating them. Don’t forget to explore
    further with the experiments presented at the end of each project. I wish you
    many happy hours of programming with *Python Playground*!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几页中，你将会看到几个令人兴奋的项目。我希望你在玩这些项目时能像我创建它们时一样开心。别忘了通过每个项目结尾处的实验进一步探索。我祝你在使用*Python
    Playground*编程时度过许多快乐的时光！
