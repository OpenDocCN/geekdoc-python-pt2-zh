- en: '**INTRODUCTION**'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**导言**'
- en: '![image](../images/common01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: Welcome to *Impractical Python Projects*! Here, you’ll use the Python programming
    language to explore Mars, Jupiter, and the farthest reaches of the galaxy; the
    souls of poets; the world of high finance; the underworld of espionage and vote
    tampering; the trickery of game shows; and more. You’ll use techniques such as
    Markov chain analysis to write haiku, Monte Carlo simulation to model financial
    markets, image stacking to improve your astrophotography, and genetic algorithms
    to breed an army of gigantic rats, all while gaining experience with modules like
    `pygame`, Pylint, pydocstyle, `tkinter`, `python-docx`, `matplotlib`, and `pillow`.
    And most of all, you’ll have fun.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到*不切实际的 Python 项目*！在这里，你将使用 Python 编程语言探索火星、木星以及银河系的最远端；诗人的灵魂；金融的世界；间谍活动和选举舞弊的黑暗面；游戏节目的骗局；等等。你将运用马尔可夫链分析写出俳句，使用蒙特卡洛模拟来建模金融市场，采用图像堆叠技术来提升你的天文摄影水平，运用遗传算法繁育出一支巨型老鼠军队，同时还会获得使用
    `pygame`、Pylint、pydocstyle、`tkinter`、`python-docx`、`matplotlib` 和 `pillow` 等模块的经验。最重要的是，你会玩得很开心。
- en: '**Who This Book Is For**'
  id: totrans-3
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**本书适合谁阅读**'
- en: You can think of this as your second Python book. It’s designed to follow and
    complement either a complete beginner’s book or an introductory class. You’ll
    be able to continue self-training using a project-based approach, without wasting
    your money or shelf space on a thorough rehashing of concepts you’ve already learned.
    But don’t worry, I won’t leave you hanging; all the code is annotated and explained.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以把这本书当作你的第二本 Python 书籍。它旨在跟进并补充一本完整的初学者书籍或入门课程。你将能够继续通过基于项目的方法进行自学，而无需浪费金钱或书架空间来重新学习你已经掌握的概念。放心，我不会让你感到迷茫；所有的代码都有注释和解释。
- en: These projects are for anyone who wants to use programming to conduct experiments,
    test theories, simulate nature, or just have fun. This includes people who use
    programming as part of their jobs (like scientists and engineers) but who aren’t
    programmers per se, as well as those I call the “determined non-specialists”—dilettantes
    and dabblers who enjoy programming problems as a fun pastime. If you’ve wanted
    to toy with the concepts presented here but found starting potentially complicated
    projects from scratch too daunting or time-consuming, this book is for you.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这些项目适合任何希望通过编程进行实验、验证理论、模拟自然，或仅仅是为了乐趣的人。这包括那些将编程作为工作一部分的人（比如科学家和工程师），但并非专业程序员的人，还有我所称之为“坚定的非专业人士”的人——那些喜欢将编程问题作为一种有趣消遣的业余爱好者。如果你一直想尝试本书中介绍的概念，却发现从零开始复杂的项目太令人畏惧或耗时，那么本书就是为你准备的。
- en: '**What’s in This Book**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**本书内容**'
- en: As you work through the projects, you’ll increase your knowledge of useful Python
    libraries and modules; learn more shortcuts, built-in functions, and helpful techniques;
    and practice designing, testing, and optimizing programs. Additionally, you’ll
    be able to relate what you’re doing to real-world applications, datasets, and
    issues.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在完成项目的过程中，你将增加对有用的 Python 库和模块的了解；学习更多快捷键、内置函数和有用的技巧；并练习设计、测试和优化程序。此外，你还能够将你所做的与现实世界中的应用、数据集和问题联系起来。
- en: To quote Ralph Waldo Emerson, “Nothing great was ever achieved without enthusiasm.”
    This includes the learning experience. The ultimate goal of this book is to spark
    your imagination and lead you to develop interesting projects of your own. Don’t
    worry if they seem too ambitious at first; a little diligence and a lot of googling
    can work miracles—and faster than you think.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 引用拉尔夫·沃尔多·爱默生的话：“没有热情，就没有伟大的成就。”这同样适用于学习体验。本书的最终目标是激发你的想象力，引导你开发自己感兴趣的项目。如果一开始这些项目看起来过于雄心勃勃，不要担心；一点点努力和大量的谷歌搜索可以创造奇迹——而且比你想象的更快。
- en: The following is an overview of the chapters in this book. You don’t have to
    work through them sequentially, but the easiest projects are at the beginning,
    and I explain new concepts, modules, and techniques more thoroughly when they’re
    first introduced.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是本书各章节的概述。你不必按顺序完成它们，但最简单的项目在前面，当新概念、模块和技术首次引入时，我会更详细地解释。
- en: '**[Chapter 1](ch01.xhtml#ch01): Silly Name Generator** This warm-up project
    introduces the Python PEP 8 and PEP 257 style guides as well as the Pylint and
    pydocstyle modules, which analyze your code’s conformance to these guidelines.
    The end product is a goofy-name generator inspired by the USA Network TV show
    *Psych*.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第一章](ch01.xhtml#ch01)：傻名字生成器** 这个热身项目介绍了Python的PEP 8和PEP 257风格指南，以及Pylint和pydocstyle模块，它们分析你的代码是否符合这些指南。最终产品是一个受美国网络电视节目*Psych*启发的傻名字生成器。'
- en: '**[Chapter 2](ch02.xhtml#ch02): Finding Palingram Spells** Learn how to profile
    your code while saving DC Comics sorceress Zatanna from a painful death. Search
    online dictionaries for the magical palingrams that Zatanna needs to beat a time-reversing
    villain.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第二章](ch02.xhtml#ch02)：寻找回文咒语** 学习如何在保存DC漫画中的女巫扎塔娜免于痛苦死亡的过程中分析你的代码。在在线词典中搜索扎塔娜需要用来击败一个逆时间反派的魔法回文。'
- en: '**[Chapter 3](ch03.xhtml#ch03): Solving Anagrams** Write a program that helps
    a user create a phrase anagram from their name; for example, *Clint Eastwood*
    yields *old west action*. Then help Tom Marvolo Riddle derive his anagram, “I
    am Lord Voldemort,” using linguistic sieves.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第三章](ch03.xhtml#ch03)：解决字谜** 编写一个程序，帮助用户根据他们的名字创建一个短语字谜；例如，*Clint Eastwood*
    变成 *old west action*。然后帮助汤姆·马沃罗·里德尔（Tom Marvolo Riddle）用语言筛选器推导出他的字谜，“I am Lord
    Voldemort”（我是伏地魔）。'
- en: '**[Chapter 4](ch04.xhtml#ch04): Decoding American Civil War Ciphers** Investigate
    and crack one of the most successful military ciphers in history, the Union route
    cipher. Then help spies on both sides send and decode secret messages using the
    zig-zagging rail fence cipher.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第四章](ch04.xhtml#ch04)：破解美国内战密码** 调查并破解历史上最成功的军事密码之一——联邦路线密码。然后帮助双方间谍使用之字形铁丝栅栏密码发送和解码秘密消息。'
- en: '**[Chapter 5](ch05.xhtml#ch05): Encoding English Civil War Ciphers** Read a
    message hidden in plain sight by decoding a null cipher from the English Civil
    War. Then save the head of Mary, Queen of Scots, by designing and implementing
    code to accomplish the more difficult task of *writing* a null cipher.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第五章](ch05.xhtml#ch05)：编码英国内战密码** 通过解码英国内战的空白密码读取一个显而易见的隐藏信息。然后，通过设计并实现代码，完成更困难的任务——*编写*一个空白密码，从而拯救苏格兰玛丽女王的头颅。'
- en: '**[Chapter 6](ch06.xhtml#ch06): Writing in Invisible Ink** Help a corporate
    mole betray Sherlock Holmes’s dad and evade detection with invisible electronic
    ink. This chapter is based on an episode of the CBS television show *Elementary*.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第六章](ch06.xhtml#ch06)：写不可见墨水** 帮助一名公司内鬼背叛福尔摩斯的父亲，并使用不可见的电子墨水逃避侦查。本章基于CBS电视节目*Elementary*的一集。'
- en: '**[Chapter 7](ch07.xhtml#ch07): Breeding Giant Rats with Genetic Algorithms**
    Use genetic algorithms—inspired by Darwinian evolution—to breed a race of super-rats
    the size of female bullmastiffs. Then help James Bond crack a safe with 10 billion
    possible combinations in the blink of an eye.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第七章](ch07.xhtml#ch07)：利用遗传算法繁殖巨型大鼠** 使用受达尔文进化启发的遗传算法，培育出一种体型与雌性獒犬相当的超级大鼠种群。然后帮助詹姆斯·邦德在眨眼之间破解一个具有100亿种可能组合的保险箱。'
- en: '**[Chapter 8](ch08.xhtml#ch08): Counting Syllables for Haiku Poetry** Teach
    your computer to count syllables in English as a prelude to writing Japanese poetry,
    or haiku, in the next chapter.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第八章](ch08.xhtml#ch08)：为俳句诗歌计数音节** 教你的计算机计算英语中的音节，为下一章写作日本俳句诗歌做准备。'
- en: '**[Chapter 9](ch09.xhtml#ch09): Writing Haiku with Markov Chain Analysis**
    Teach your computer to write *haiku* by combining the syllable-counting module
    from [Chapter 8](ch08.xhtml#ch08) with Markov chain analysis and a training corpus
    of several hundred ancient and modern haiku.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第九章](ch09.xhtml#ch09)：通过马尔可夫链分析写俳句** 教你的计算机通过将[第八章](ch08.xhtml#ch08)中的音节计数模块与马尔可夫链分析结合，以及使用几百首古代和现代俳句的训练语料库，写出俳句。'
- en: '**[Chapter 10](ch10.xhtml#ch10): Are We Alone? Exploring the Fermi Paradox**
    Investigate the absence of alien radio signals using Drake’s equation, the dimensions
    of the Milky Way galaxy, and assumptions about the size of detectable “emissions
    bubbles.” Learn and use the popular `tkinter` module to build a graphical display
    of the galaxy and Earth’s own radio bubble.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第十章](ch10.xhtml#ch10)：我们是孤单的吗？探索费米悖论** 使用德雷克方程、银河系的维度和可探测的“发射气泡”大小的假设，研究外星无线电信号的缺失。学习并使用流行的`tkinter`模块构建银河系和地球无线电气泡的图形显示。'
- en: '**[Chapter 11](ch11.xhtml#ch11): The Monty Hall Problem** Help the world’s
    smartest woman win the Monty Hall problem argument. Then use object-oriented programming
    (OOP) to build a version of Monty’s famous game with a fun graphical interface.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第11章](ch11.xhtml#ch11)：蒙提霍尔问题** 帮助世界上最聪明的女人赢得蒙提霍尔问题的辩论。然后使用面向对象编程（OOP）构建一个蒙提著名游戏的版本，并加入有趣的图形界面。'
- en: '**[Chapter 12](ch12.xhtml#ch12): Securing Your Nest Egg** Plan your (or your
    parents’) secure retirement using a Monte Carlo–based financial simulation.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第12章](ch12.xhtml#ch12)：保障你的退休金** 使用基于蒙特卡洛的金融模拟来规划你（或你父母）的安全退休生活。'
- en: '**[Chapter 13](ch13.xhtml#ch13): Simulating an Alien Volcano** Use `pygame`
    to simulate a volcanic eruption on Io, one of Jupiter''s moons.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第13章](ch13.xhtml#ch13)：模拟外星火山** 使用`pygame`模拟木星卫星欧罗巴上的火山爆发。'
- en: '**[Chapter 14](ch14.xhtml#ch14): Mapping Mars with the Mars Orbiter** Build
    a gravity-based arcade game and nudge a satellite into a circular mapping orbit
    without running out of fuel or burning up in the atmosphere. Display readouts
    of key parameters, track orbital paths, add the planet’s shadow, and spin Mars
    slowly on its axis, all while learning orbital mechanics!'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第14章](ch14.xhtml#ch14)：使用火星轨道器绘制火星地图** 创建一个基于重力的街机游戏，推动卫星进入圆形的地图轨道，同时避免燃料耗尽或在大气中燃烧。显示关键参数的读数，追踪轨道路径，添加行星的阴影，并缓慢旋转火星轴心，同时学习轨道力学！'
- en: '**[Chapter 15](ch15.xhtml#ch15): Improving Your Astrophotography with Planet
    Stacking** Reveal Jupiter’s cloud bands and Great Red Spot by optically stacking
    poor-quality video images using the Python imaging library. Learn how to work
    with files, folders, and directory paths using the built-in `os` and `shutil`
    modules.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第15章](ch15.xhtml#ch15)：通过行星堆叠提升你的天文摄影技巧** 通过使用Python图像库对低质量视频图像进行光学堆叠，揭示木星的云带和大红斑。学习如何使用内置的`os`和`shutil`模块处理文件、文件夹和目录路径。'
- en: '**[Chapter 16](ch16.xhtml#ch16): Finding Frauds with Benford’s Law** Use *Benford’s
    law* to investigate vote tampering in the 2016 presidential election. Use `matplotlib`
    to summarize the results in a chart.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**[第16章](ch16.xhtml#ch16)：利用本福德定律发现欺诈行为** 使用*本福德定律*调查2016年总统选举中的投票篡改。使用`matplotlib`将结果总结成图表。'
- en: Each chapter ends with at least one Practice Project or Challenge Project. Each
    Practice Project comes with a solution. That doesn’t mean it’s the *best* solution—you
    may come up with a better one on your own, so don’t peek ahead!
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每章结束时至少会有一个实践项目或挑战项目。每个实践项目都附有解决方案。但这并不意味着它是*最佳*解决方案——你可能会自己想出更好的方法，所以不要提前查看！
- en: With the Challenge Projects, however, you’re truly on your own. When Cortez
    invaded Mexico in 1519, he burned his caravels so that his conquistadors would
    realize there was no going back; they would have to face the Aztecs with grim
    and unwavering determination. Thus, the expression “burn your boats” has come
    to represent wholeheartedness or full commitment to a task. This is how you should
    face the Challenge Projects—as if your boat were burned—and if you do, you’re
    likely to learn more from these exercises than from any other part of the book!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在挑战项目中，你将真正独立完成任务。当科尔特斯于1519年入侵墨西哥时，他烧毁了自己的卡拉维尔船只，以使他的征服者们意识到无法回头；他们必须以坚定不移的决心面对阿兹特克人。因此，“烧掉你的船”这一表达成为了全身心投入或完全承诺一项任务的代名词。这就是你面对挑战项目时应有的态度——就好像你的船已经被烧掉——如果你这样做，你很可能会从这些练习中学到比书中的任何其他部分更多的知识！
- en: '***Python Version, Platform, and IDE***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***Python版本、平台和IDE***'
- en: 'I constructed each of the projects in this book with Python v3.5 in a Microsoft
    Windows 10 environment. If you’re using a different operating system, no problem:
    I suggest compatible modules for other platforms, where appropriate.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我在本书中构建的每个项目都是在Microsoft Windows 10环境下使用Python v3.5完成的。如果你使用的是不同的操作系统，也没问题：我会在适当的地方为其他平台建议兼容的模块。
- en: The code examples and screen captures in this book are from either the Python
    IDLE text editor or the interactive shell. IDLE stands for *integrated development
    and learning environment*. It’s an *integrated development environment (IDE)*
    with an *L* added so that the acronym references Eric Idle of *Monty Python* fame.
    The interactive shell, also called the *interpreter*, is a window that lets you
    immediately execute commands and test code without needing to create a file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的代码示例和屏幕截图来自Python IDLE文本编辑器或交互式shell。IDLE代表*集成开发与学习环境*。它是一个*集成开发环境（IDE）*，加上一个*L*，使得这个首字母缩略词参考了*Monty
    Python*的埃里克·艾德尔。交互式shell，也称为*解释器*，是一个窗口，允许你立即执行命令并测试代码，而无需创建文件。
- en: IDLE has numerous drawbacks, such as the lack of a line-number column, but it
    is free and bundled with Python, so everyone has access to it. You are welcome
    to use whichever IDE you wish. There are many choices available online, such as
    Geany (pronounced *genie*), PyCharm, and PyScripter. Geany works with a wide range
    of operating systems, including Unix, macOS, and Windows. PyCharm works with Linux,
    Windows, and macOS. PyScripter works with Windows. For an extensive listing of
    available Python development tools and compatible platforms, visit *[https://wiki.python.org/moin/DevelopmentTools/](https://wiki.python.org/moin/DevelopmentTools/)*.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: IDLE有许多缺点，比如没有行号列，但它是免费的，并且与Python一起捆绑提供，因此每个人都可以使用它。你可以随意使用任何你喜欢的IDE。网上有很多选择，比如Geany（发音为*genie*）、PyCharm和PyScripter。Geany适用于多种操作系统，包括Unix、macOS和Windows。PyCharm适用于Linux、Windows和macOS。PyScripter适用于Windows。有关可用的Python开发工具及其兼容平台的详细信息，请访问*[https://wiki.python.org/moin/DevelopmentTools/](https://wiki.python.org/moin/DevelopmentTools/)。
- en: '***The Code***'
  id: totrans-32
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***代码***'
- en: Every line of code is provided for each project in this book, and I recommend
    you enter it by hand whenever possible. A college professor once told me that
    we “learn through our hands,” and I have to agree that keying in code forces you
    to pay maximum attention to what’s going on.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的每个项目都提供了完整的代码，我建议你尽可能手动输入这些代码。一位大学教授曾经告诉我，我们是通过“手”来学习的，我不得不承认，亲自输入代码会迫使你最大程度地关注代码的每一部分。
- en: But if you want to complete a project quickly or you accidentally delete all
    your work, you can download all of the code, including solutions to the Practice
    Projects, from *[https://www.nostarch.com/impracticalpython/](https://www.nostarch.com/impracticalpython/)*.
    This site also contains the book’s errata sheet, in the event of future updates
    or changes.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，如果你想快速完成项目，或者不小心删除了所有工作，你可以从*[https://www.nostarch.com/impracticalpython/](https://www.nostarch.com/impracticalpython/)*下载所有代码，包括练习项目的解决方案。该网站还包含本书的勘误表，以便进行未来的更新或更改。
- en: '***Coding Style***'
  id: totrans-35
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***编码风格***'
- en: This book is about problem solving and beginner-level fun, so the code may deviate
    at times from best practices and peak efficiency. Occasionally, you may use list
    comprehension or a special operator, but for the most part, you’ll focus on simple,
    approachable code that’s easy to learn.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的重点是问题解决和初学者的趣味性，因此代码有时可能会偏离最佳实践和最高效的实现方式。有时你可能会使用列表推导式或特殊运算符，但大多数时候，你将专注于简单、易学的代码。
- en: Keeping things simple is important for the programming nonprogrammers who read
    this book. Much of their code may be “Kleenex code”—used once or twice for a specific
    purpose and then thrown away. This is the type of code that might be shared with
    colleagues, or thrust upon them during staff changes, so it should be easy to
    pick up and understand.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 保持简洁对于那些阅读本书的非程序员来说非常重要。他们的代码很多可能是“一次性代码”——只为特定目的使用一两次，之后就被丢弃。这类代码可能会与同事共享，或在员工更替时交给他们，因此应该易于理解和上手。
- en: All of the main project code is annotated and explained in a stand-alone manner,
    and it generally follows the style recommendations from *Python Enhancement Proposal
    8*, otherwise known as *PEP 8*. Details on PEP 8, and software to help you honor
    these guidelines, are in [Chapter 1](ch01.xhtml#ch01).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有主要项目代码都有注释，并以独立的方式进行解释，通常遵循*Python增强提案 8*，也就是*PEP 8*的风格建议。关于PEP 8的详细信息，以及帮助你遵循这些指南的软件，详见[第1章](ch01.xhtml#ch01)。
- en: '**Where to Get Help**'
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**获取帮助的途径**'
- en: Taking on a programming challenge can be, well, challenging. Coding isn’t always
    something that you can intuitively figure out—even with a language as friendly
    as Python. Throughout the following chapters, I will provide links and references
    to useful sources of information, but for projects you formulate on your own,
    nothing can beat online searches.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 承接编程挑战可能会是非常具有挑战性的。编程并不总是你可以凭直觉就能解决的事情——即便是像Python这样友好的语言。在接下来的章节中，我将提供有用信息来源的链接和参考，但对于你自己设计的项目，在线搜索无疑是最好的解决方式。
- en: The key to successful searching is knowing what to ask. This can be quite frustrating
    at first, but think of it as a game of Twenty Questions. Keep honing your keywords
    with each successive search until you find an answer or reach a point of diminishing
    returns.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 成功搜索的关键是知道该问什么。这一过程一开始可能会让人感到沮丧，但把它看作是一场“二十个问题”的游戏。随着每次搜索的推进，继续改进你的关键词，直到找到答案或达到收效递减的地步。
- en: 'If books and online searches fail, then the next step is to ask someone. You
    can do this online, either for a fee or at free forums like Stack Overflow (*[https://stackoverflow.com/](https://stackoverflow.com/)*).
    But be warned: the members of these sites don’t suffer fools gladly. Be sure to
    read their “How do I ask a good question?” pages before posting; for example,
    you can find the one for Stack Overflow at *[http://stackoverflow.com/help/how-to-ask/](http://stackoverflow.com/help/how-to-ask/)*.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果书籍和在线搜索都没能解决问题，那么下一步就是请教别人。你可以在线提问，既可以付费，也可以在像 Stack Overflow (*[https://stackoverflow.com/](https://stackoverflow.com/)*)
    这样的免费论坛上提问。但需要注意的是：这些网站的成员对愚蠢的问题可不太宽容。在发布问题之前，务必阅读他们的“如何提问？”页面；例如，你可以在 *[http://stackoverflow.com/help/how-to-ask/](http://stackoverflow.com/help/how-to-ask/)*
    找到 Stack Overflow 的相关内容。
- en: '**Onward!**'
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**前进！**'
- en: Thanks for taking the time to read the Introduction! You clearly want to get
    as much as possible from this book, and you’re off to a good start. When you reach
    the other end, you’ll be more adept at Python and better prepared to solve challenging
    real-world problems. Let’s get to work.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你花时间阅读介绍部分！你显然希望从本书中获得尽可能多的知识，而且你已经迈出了一个好的开始。当你完成阅读时，你将更加熟练于 Python，并且更好地准备好解决具有挑战性的实际问题。让我们开始吧。
