- en: '**2'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**2'
- en: LISTS CAN SAVE YOUR LIFE**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 列表能救你的命**
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/common01.jpg)'
- en: Astronauts live by lists. The safety checklists they use help make sure all
    systems are working before they entrust their lives to those systems. For example,
    emergency checklists tell the astronauts what to do in dire situations to prevent
    them from panicking. Procedural checklists confirm that they’re using their equipment
    correctly so nothing breaks and prevents them from returning home. These lists
    just might save their lives one day.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 宇航员的生活离不开列表。他们使用的安全检查单有助于确保所有系统在他们将生命托付给这些系统之前正常运作。例如，紧急检查单告诉宇航员在紧急情况下该怎么做，以防止他们慌乱。程序性检查单确认他们正确使用设备，以防设备出现故障，阻碍他们回到家园。这些列表有可能在某天拯救他们的生命。
- en: In this chapter, you’ll learn how to manage lists in Python and how to use them
    for checklists, maps, and almost anything in the universe. When you build the
    *Escape* game, you’ll use lists to store information about the space station layout.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何在 Python 中管理列表，以及如何将它们用于检查单、地图和几乎宇宙中的任何事物。当你制作 *Escape* 游戏时，你将使用列表来存储空间站的布局信息。
- en: '**MAKING YOUR FIRST LIST: THE TAKE-OFF CHECKLIST**'
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建你的第一个列表：起飞检查单**'
- en: 'Take-off is one of the most dangerous aspects of space travel. When you’re
    strapped to a rocket, you want to double-check everything before it launches.
    A simple checklist for take-off might contain the following steps:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 起飞是太空旅行中最危险的环节之一。当你被绑在火箭上时，你会想在发射前对一切进行仔细检查。一个简单的起飞检查单可能包含以下步骤：
- en: '![Images](../images/box.jpg)  Put on suit'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  穿上宇航服'
- en: '![Images](../images/box.jpg)  Seal hatch'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  密封舱口'
- en: '![Images](../images/box.jpg)  Check cabin pressure'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  检查舱内压力'
- en: '![Images](../images/box.jpg)  Fasten seatbelt'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  系好安全带'
- en: 'Python has the perfect way to store this information: the Python *list* is
    like a variable that stores multiple items. As you’ll see, you can use it for
    numbers and text as well as a combination of both.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python 有一种完美的方式来存储这些信息：Python *列表* 就像一个变量，存储多个项目。如你所见，你可以将其用于数字和文本，甚至是数字与文本的组合。
- en: 'Let’s make a list in Python called `take_off_checklist` for our astronauts
    to use. Because we’re just practicing with a short example, we’ll enter the code
    in the Python shell rather than creating a program. (If you need a refresher on
    how to use the Python shell, see “[Introducing the Python Shell](ch01.xhtml#lev20)”
    on [page 15](ch01.xhtml#page_15).) Enter the following in the IDLE shell, pressing
    ENTER at the end of each line to start a new line in the list:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在 Python 中创建一个名为 `take_off_checklist` 的列表供宇航员使用。因为我们只是用一个简短的例子进行练习，所以我们将在
    Python shell 中输入代码，而不是创建一个程序。（如果你需要复习如何使用 Python shell，请参阅 [第15页](ch01.xhtml#page_15)
    中的 “[介绍 Python Shell](ch01.xhtml#lev20)”）。在 IDLE shell 中输入以下内容，在每一行结束时按 ENTER
    键开始新的一行：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**RED ALERT**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Make sure the brackets, quote marks, and commas in your code are precise.
    If you get any errors, enter the list code again, and double-check that the brackets,
    quotes, and commas are in the correct places. To avoid having to retype the code,
    use your mouse to highlight the text in the shell, right-click the text, select
    **Copy**, right-click again, and select **Paste**.*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*确保代码中的括号、引号和逗号都准确无误。如果遇到任何错误，请重新输入列表代码，并仔细检查括号、引号和逗号是否放置正确。为了避免重新输入代码，可以使用鼠标高亮选中
    shell 中的文本，右键点击选中的文本，选择 **复制**，然后再次右键点击并选择 **粘贴**。*'
- en: Let’s take a closer look at how the `take_off_checklist` list is made. You mark
    the start of the list with an opening square bracket. Python knows the list is
    not finished until it detects the final closing square bracket. This means you
    can press ENTER at the end of each line to continue typing the instruction, and
    Python will know you’re not finished until you’ve given it the final bracket.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更仔细地看看 `take_off_checklist` 列表是如何创建的。你通过一个开括号标记列表的开始，Python 会知道列表尚未结束，直到它检测到最终的闭括号。这意味着你可以在每一行结束时按
    ENTER 键继续输入指令，Python 会知道你还没有完成，直到你输入了最终的括号。
- en: Quote marks tell Python that you’re giving it some text and where each piece
    of text starts and ends. Each entry needs its own opening and closing quote marks.
    You also need to separate the different pieces of text with commas. The last entry
    doesn’t need a comma after it, because there isn’t another list item following
    it.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 引号告诉 Python 你给它的是文本，并且标明每段文本的开始和结束。每个条目需要自己的开引号和闭引号。你还需要用逗号分隔不同的文本项。最后一个条目后面不需要逗号，因为它后面没有其他列表项。
- en: '**SEEING YOUR LIST**'
  id: totrans-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**查看你的列表**'
- en: 'To see your checklist, you can use the `print()` function, as we did in [Chapter
    1](ch01.xhtml#ch01). Add the name of your list to the `print()` function, like
    this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看你的检查清单，你可以像我们在[第1章](ch01.xhtml#ch01)中做的那样使用`print()`函数。将你的列表名称添加到`print()`函数中，像这样：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You don’t need quotes around `take_off_checklist`, because it’s the name of
    a list, not a piece of text. If you do put quotes around it, Python will just
    write the text `take_off_checklist` onscreen instead of giving you back your list.
    Try it to see what happens.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你不需要在`take_off_checklist`周围加上引号，因为它是一个列表的名称，而不是一段文本。如果你加上引号，Python会直接在屏幕上输出文本`take_off_checklist`，而不是返回你的列表。试试看会发生什么。
- en: '**ADDING AND REMOVING ITEMS**'
  id: totrans-22
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**添加和删除项目**'
- en: 'Even after you’ve created a list, you can add an item to it using the `append()`
    command. The word *append* means to add something at the end (think of an appendix,
    at the end of a book). You use the `append()` command like this:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 即使在你创建了一个列表之后，你仍然可以使用`append()`命令向其中添加一个项目。*append*这个词的意思是将某样东西添加到末尾（想象一下书籍的附录，在书的最后）。你可以像这样使用`append()`命令：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You enter the name of the list (without quote marks) followed by a period and
    the `append()` command, and then put the item to add in parentheses. The item
    will be added to the end of the list, as you’ll see when you print the list again:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你输入列表的名称（不加引号），然后加上一个点，再加上`append()`命令，然后将要添加的项目放在圆括号中。该项目将被添加到列表的末尾，如你再次打印列表时所看到的：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'You can also take items out of the list using the `remove()` command. Let’s
    remove the `Seal hatch` item:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`remove()`命令从列表中删除项目。让我们删除`Seal hatch`项目：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Again, you enter the name of the list followed by a period and the `remove()`
    command, and then specify the item you want to remove inside the parentheses.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，你输入列表的名称，后面跟一个点，再加上`remove()`命令，然后在圆括号中指定你要删除的项目。
- en: '**RED ALERT**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*When you’re removing an item from a list, make sure what you type matches
    the item exactly, including capital letters and any punctuation. Otherwise, Python
    won’t recognize it and will give you an error.*'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你从列表中删除一个项目时，确保你输入的内容与该项目完全匹配，包括大写字母和标点符号。否则，Python将无法识别它并给你一个错误。*'
- en: '**USING INDEX NUMBERS**'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用索引号**'
- en: Hmm, we should probably put the `Seal hatch` check back into the list before
    anyone at Mission Control notices. You can insert an item in a specific position
    in the list by using that item’s index number. The *index* is the position of
    the item in the list. Python starts counting at 0, not 1, so the first item in
    the list always has an index of 0, the second item has an index of 1, and so on.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 嗯，我们可能应该把`Seal hatch`检查项重新放回列表中，以免任务控制中心的任何人注意到。你可以通过使用该项目的索引号在列表中的特定位置插入一个项目。*索引*是项目在列表中的位置。Python从0开始计数，而不是从1，所以列表中的第一个项目总是索引0，第二个项目的索引是1，以此类推。
- en: '**INSERTING AN ITEM**'
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**插入一个项目**'
- en: 'Using the position index, we’ll put `Seal hatch` back where it belongs:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用位置索引，我们将把`Seal hatch`放回它该在的位置：
- en: '[PRE5]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Phew! I think we got away with it. Because the index starts at 0, when we inserted
    `Seal hatch`, we placed it at position 1, the second item in the list. The rest
    of the list items shifted down in the list to make room, increasing their index
    numbers, as shown in [Figure 2-1](ch02.xhtml#ch02fig1).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 呼！我想我们挺过来了。因为索引从0开始，当我们插入`Seal hatch`时，我们把它放在了位置1，即列表中的第二个项目。列表中的其他项目向下移动，以腾出空间，它们的索引号也随之增加，如[图
    2-1](ch02.xhtml#ch02fig1)所示。
- en: '![image](../images/fig2-1.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig2-1.jpg)'
- en: '*Figure 2-1: Inserting an item at index 1\. Top row: before insertion. Bottom
    row: after insertion.*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-1：在索引1处插入一个项目。上排：插入前。下排：插入后。*'
- en: '**ACCESSING AN INDIVIDUAL ITEM**'
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**访问单个项目**'
- en: 'You can also access a particular item in a list using the list name with the
    index number of the item you want to access in square brackets. For example, to
    print particular items in the list, you can enter the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过使用列表名称和你想访问的项目的索引号，在方括号内访问列表中的特定项目。例如，要打印列表中的特定项目，你可以输入以下内容：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now you can see individual items in the list!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以看到列表中的各个项目了！
- en: '**RED ALERT**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Don’t mix up your brackets. Roughly speaking: Use square brackets when you’re
    telling Python which list item to use. Use parentheses when you’re doing something
    to the list or items in it, such as printing the list or appending items to it.
    Every opening bracket needs a closing bracket of the same type.*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要混淆你的括号。大致来说：当你告诉Python使用哪个列表项目时，使用方括号。当你对列表或其中的项目执行某些操作时，比如打印列表或将项目附加到列表时，使用圆括号。每一个开括号都需要有一个相同类型的闭括号。*'
- en: '**REPLACING AN ITEM**'
  id: totrans-46
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**替换项目**'
- en: 'You can also replace an item if you know its index number. Simply enter the
    list name followed by the index of the item you want to replace, and then use
    an equal sign (`=`) to tell Python what you want at that index, like this:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过索引号替换项。只需输入列表名称，后跟你要替换的项的索引，然后使用等号 (`=`) 告诉 Python 你希望在该索引位置插入什么，例如：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The old item at index 3 is removed and replaced with the new item. Be aware
    that when you replace an item, Python forgets the original. Recall your training
    to put it back, like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 索引为 3 的旧项被删除，并被新项替换。请注意，当你替换一项时，Python 会忘记原来的项。回想你的训练，把它放回去，如下所示：
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**DELETING AN ITEM**'
  id: totrans-51
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**删除项目**'
- en: 'If you know where an item is in a list, you can delete it using its index number
    too, like this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道列表中某项的位置，也可以通过它的索引号删除该项，例如：
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The `"Check cabin pressure"` item disappears from the list.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`"检查舱内压力"` 这一项从列表中消失了。'
- en: '**TRAINING MISSION #1**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: It’s time to practice your skills! We just deleted item 2 in the list. Can you
    insert it back into the list in the correct position? Print the list to check
    that it worked.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候练习你的技能了！我们刚刚删除了列表中的第 2 项。你能把它重新插入列表并放到正确的位置吗？打印列表以检查它是否成功。
- en: '**CREATING THE SPACEWALK CHECKLIST**'
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**创建太空行走检查清单**'
- en: 'As you know from [Chapter 1](ch01.xhtml#ch01), another dangerous activity for
    an astronaut is venturing out into the black vacuum of space with just a suit
    to protect you and provide oxygen. Here is a checklist to help keep you safe when
    you’re spacewalking:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如你从[第 1 章](ch01.xhtml#ch01)中所知，对于宇航员来说，另一个危险的活动是仅凭宇航服保护自己，进入漆黑的太空真空中，宇航服为你提供氧气保护。以下是一个检查清单，帮助你在太空行走时保持安全：
- en: '![Images](../images/box.jpg)  Put on suit'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 穿上宇航服'
- en: '![Images](../images/box.jpg)  Check oxygen'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 检查氧气'
- en: '![Images](../images/box.jpg)  Seal helmet'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 密封头盔'
- en: '![Images](../images/box.jpg)  Test radio'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 测试无线电'
- en: '![Images](../images/box.jpg)  Open airlock'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 打开气闸'
- en: 'Let’s make this checklist into a Python list. We’ll call it `spacewalk_checklist`,
    like this:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把这个检查清单转换成 Python 列表。我们将其命名为 `spacewalk_checklist`，如以下代码所示：
- en: '[PRE10]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Remember to be careful with the commas and brackets.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 记得小心处理逗号和括号。
- en: '**TRAINING MISSION #2**'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #2**'
- en: It’s always a good idea to test your code so you know it’s working as it should.
    Can you try printing all the list items to check that they’re in the right place?
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 测试你的代码总是一个好主意，这样你就能确保它按预期工作。你能尝试打印所有列表项，以检查它们是否在正确的位置吗？
- en: '**A LIST OF LISTS: THE FLIGHT MANUAL**'
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**列表中的列表：飞行手册**'
- en: 'We have two checklists now: one for take-off and one for spacewalking. We can
    organize them by putting them into another list to create our “flight manual.”
    Think of the flight manual as a folder that contains two sheets of paper, and
    each piece of paper has one list on it.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有两个检查清单：一个是起飞清单，一个是太空行走清单。我们可以通过将它们放入另一个列表中来组织它们，从而创建我们的“飞行手册”。可以把飞行手册想象成一个文件夹，里面有两张纸，每张纸上有一个清单。
- en: '**MAKING A LIST OF LISTS**'
  id: totrans-71
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**创建列表中的列表**'
- en: 'Here is how we make the flight manual list of lists:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们创建飞行手册列表的方式：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We give IDLE the `flight_manual` list name, use the equal sign (`=`), and then
    add the two lists we want to put in the `flight_manual` list inside square brackets.
    As we did earlier when making lists, we separate the two items with a comma. The
    new `flight_manual` list has two items in it: the `take_off_checklist` and the
    `spacewalk_checklist`. When you print `flight_manual`, it looks like this:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们给 IDLE 提供 `flight_manual` 列表名称，使用等号 (`=`)，然后将我们希望放入 `flight_manual` 列表的两个列表放入方括号中。就像我们之前创建列表时一样，用逗号分隔两个项。新的
    `flight_manual` 列表包含两个项：`take_off_checklist` 和 `spacewalk_checklist`。当你打印 `flight_manual`
    时，它会显示如下：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**TIP**'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: Remember that you don’t need to use quote marks around list names; you use them
    only when you’re entering text into a list.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，列表名称不需要加引号；只有在你向列表中输入文本时才需要使用引号。
- en: '**RED ALERT**'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*If you don’t see* ''Check cabin pressure'' *in your list, it’s because you
    skipped Training Mission #1\. To make it easier to follow along, I recommend you
    go back and complete that mission. You can check the training mission answers
    at the end of the chapter if you need to.*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你在列表中没有看到* ''检查舱内压力'' *，那是因为你跳过了训练任务 #1。为了更容易跟上进度，我建议你回去完成那个任务。如果需要，你可以在章节末尾查看训练任务的答案。*'
- en: 'The output looks messy! To work out what’s going on, look closely at the brackets.
    Square brackets mark the start and end of each list. If you strip out the list
    items, the output looks like this:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 输出看起来很乱！要弄清楚发生了什么，仔细看看括号。方括号标记了每个列表的开始和结束。如果你去掉列表项，输出看起来是这样的：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the middle, you can see where the first list ends with a closed bracket followed
    by a comma before the next list begins with an opening bracket. So what happens
    when you try to print the first item in the `flight_manual` list?
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在中间部分，你可以看到第一个列表以一个闭括号结束，然后是一个逗号，接着下一个列表以开括号开始。那么，当你尝试打印 `flight_manual` 列表中的第一个项目时会发生什么呢？
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The first item is the `take_off_checklist`, so the output looks like this:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个项目是`take_off_checklist`，因此输出看起来是这样的：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**TRAINING MISSION #3**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #3**'
- en: Try adding other checklists to `flight_manual` and printing them. For example,
    you could add a checklist for landing on a planet or docking with another spaceship.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试将其他清单添加到 `flight_manual` 中并打印出来。例如，你可以添加一个着陆或与其他飞船对接的清单。
- en: '**FINDING AN ITEM IN THE FLIGHT MANUAL**'
  id: totrans-88
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**在飞行手册中查找项目**'
- en: 'If you want to look at a particular item in one of the lists in `flight_manual`,
    you must give Python two pieces of information: the list the item is in, and the
    index of the item in the list, in that order. For each piece of information, you
    can use index numbers, like this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看 `flight_manual` 中某个特定项目，你必须给 Python 提供两项信息：该项目所在的列表以及该项目在列表中的索引，顺序不能错。对于每一项信息，你可以使用索引数字，像这样：
- en: '[PRE16]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Check your result against the printout of your checklist higher up in the shell.
    The `Seal hatch` item is in the first list (index 0), which is the `take_off_checklist`,
    and it’s the second item in that list (index 1). Those are the two index numbers
    we used to find it. Let’s choose an item from the second list:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的结果与上面打印出的清单进行对比。`Seal hatch` 项目位于第一个列表（索引 0）中，即 `take_off_checklist`，它是该列表中的第二个项目（索引
    1）。这就是我们用来找到它的两个索引号码。接下来我们从第二个列表中选择一个项目：
- en: '[PRE17]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This time, we’re printing from the second list (index 1), and from that list,
    we’re printing the fourth item (index 3). Although it might seem confusing that
    Python starts counting at 0, soon it will become second nature to subtract one
    from the position number you want. Be careful that you don’t end up buying one
    fewer of everything when you go shopping!
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们从第二个列表（索引 1）中打印，并且从该列表中打印第四个项目（索引 3）。虽然看起来可能有些困惑，因为 Python 是从 0 开始计数的，但很快你会习惯从你想要的位置减去一。小心，不要在购物时少买了一件东西！
- en: '**TIP**'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**小贴士**'
- en: 'To print a list or variable on the screen, you can leave out the `print()`
    command when you’re typing into the shell, like so:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要在屏幕上打印一个列表或变量，当你在 shell 中输入时，可以省略 `print()` 命令，像这样：
- en: '[PRE18]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This only works in the shell, though, and not in a program. Often, you’ll have
    many ways to do the same thing in Python. This book focuses on the techniques
    that will most help you make the *Escape* game. As you learn Python, you’ll find
    your own style and preferences.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这种方法只在 shell 中有效，而不适用于程序。通常，你在 Python 中会有多种方式做同一件事。本书聚焦于那些最能帮助你制作 *Escape*
    游戏的技巧。在学习 Python 的过程中，你会找到自己的风格和偏好。
- en: '**COMBINING LISTS**'
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**合并列表**'
- en: 'You can join two lists using a plus sign (`+`) to combine them into a single
    list. Let’s make a list of all the skills needed for take-off and spacewalking
    and call it `skills_list`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用加号（`+`）将两个列表合并成一个列表。让我们创建一个包含起飞和太空行走所需技能的列表，并称之为 `skills_list`：
- en: '[PRE19]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The output you see here is a single list containing the skills astronauts need
    from the two lists we already made. We can also add more skills to the list by
    entering the combined list’s name and using `+=` to add single items or other
    lists to the end of it. (In [Chapter 1](ch01.xhtml#ch01), you learned how to use
    `+=` to add a number to a variable’s value.)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你在这里看到的输出是一个包含来自我们已经创建的两个列表的宇航员所需技能的单一列表。我们还可以通过输入合并后的列表名称并使用 `+=` 来将单个项目或其他列表添加到末尾。
    （在[第 1 章](ch01.xhtml#ch01)中，你学会了如何使用 `+=` 来为变量的值添加一个数字。）
- en: Few people get to go into space, so a big part of an astronaut’s role is to
    share that experience. Let’s add a list called `pr_list` for public relations
    (PR) skills that an astronaut might need. I think there might be a place for selfie
    skills after all!
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有人能进入太空，因此宇航员角色的一个重要部分是分享这种经历。让我们添加一个名为 `pr_list` 的列表，用于宇航员可能需要的公共关系（PR）技能。我想或许“自拍技能”真的有用处！
- en: '[PRE20]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The `skills_list` now has the items from `pr_list` added. The `skills_list`
    is still just a single list with individual items in it, unlike `flight_manual`,
    which has two separate lists inside it.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`skills_list` 现在包含了 `pr_list` 中的项目。`skills_list` 仍然是一个包含单个项目的简单列表，不像 `flight_manual`，它内部有两个独立的列表。'
- en: '**TIP**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: 'You might have noticed that this code line:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到这行代码：
- en: '[PRE21]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'is just a shorter way of writing this:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是更简洁的写法：
- en: '[PRE22]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: It’s a very useful shortcut!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常有用的快捷方式！
- en: '**MAKING MAPS FROM LISTS: THE EMERGENCY ROOM**'
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**从列表制作地图：急救室**'
- en: Navigation is an essential skill for an astronaut. You must always know where
    you are, where your nearest sanctuary is, and even where the air is so you’re
    always ready in an emergency. The *Escape* game will keep a map of the room the
    player is in, so it can draw the room correctly and enable the player to interact
    with objects. Let’s look at how we can use lists to make a map of the emergency
    supplies room.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 导航是宇航员的一项基本技能。你必须始终知道自己身处何地，最近的避难所在哪里，甚至空气的来源，以便在紧急情况下随时准备好。*逃生*游戏会记录玩家所在房间的地图，以便正确绘制房间并使玩家与物品互动。让我们来看一下如何使用列表制作急救物资室的地图。
- en: '**MAKING THE MAP**'
  id: totrans-113
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**制作地图**'
- en: Now that you know how to manage lists and lists inside lists, you can make maps.
    This time, we’ll create a program rather than working in the shell. At the top
    of the Python window, select **File** ▸ **New File** to open a new window.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道如何管理列表和嵌套列表，可以开始制作地图了。这一次，我们将创建一个程序，而不是在 shell 中工作。在 Python 窗口的顶部，选择
    **文件** ▸ **新建文件** 打开一个新窗口。
- en: 'Enter [Listing 2-1](ch02.xhtml#ch02list1) into your new program window:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 将 [Listing 2-1](ch02.xhtml#ch02list1) 输入到你的新程序窗口中：
- en: '*listing2-1.py*'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing2-1.py*'
- en: '[PRE23]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '*Listing 2-1: Setting up the emergency room*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 2-1：设置急救室*'
- en: 'Note that you don’t need a comma at the end of the last line in the list. This
    program creates and displays a list called `room_map`. Our new emergency room
    is five meters by five meters. The `room_map` list contains five lists. Each of
    those lists contains five numbers, which represent one row of the map. I’ve lined
    up the numbers in the code so it looks like the grid shown in [Figure 2-2](ch02.xhtml#ch02fig2),
    which shows a map of the room. Compare the diagram and the program; you’ll see
    that the first list is for the top row, the second list is for the second row,
    and so on. A 0 represents an empty space in the grid, and the numbers 1 to 4 are
    for various emergency items in the room. The numbers we’ll use in this chapter
    represent the following items:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，列表中的最后一行不需要逗号。此程序创建并显示一个名为 `room_map` 的列表。我们的新急救室是五米乘五米的。`room_map` 列表包含五个列表。每个列表包含五个数字，表示地图中的一行。我已经在代码中排列好数字，让它看起来像
    [图 2-2](ch02.xhtml#ch02fig2) 中显示的网格，这是房间的地图。比较图示和程序，你会发现第一个列表是顶行，第二个列表是第二行，依此类推。0
    代表网格中的空地，数字 1 到 4 用于表示房间中的各种急救物品。本章使用的数字代表以下物品：
- en: '![image](../images/fig2-2.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig2-2.jpg)'
- en: '*Figure 2-2: Our first simple map*'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2-2：我们的第一个简单地图*'
- en: Fertilizer
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 化肥
- en: Spare oxygen tanks
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 备用氧气瓶
- en: Scissors
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 剪刀
- en: Toothpaste
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 牙膏
- en: Emergency blankets
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 急救毯
- en: Emergency radio
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 紧急无线电
- en: '**RED ALERT**'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Make sure your brackets and commas are in the correct places. One reason for
    putting [Listing 2-1](ch02.xhtml#ch02list1) into a program instead of typing it
    into the shell is so you can easily make corrections if you make a mistake.*'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '*确保你的括号和逗号放在正确的位置。将 [Listing 2-1](ch02.xhtml#ch02list1) 放入程序中的原因之一是，如果你犯了错误，可以轻松进行更正，而不是直接在
    shell 中输入。*'
- en: 'Click **File** ▸ **Save** and save your program as *listing2-1.py*. This program
    doesn’t use Pygame Zero, so we can run it from IDLE. Click **Run** in the menu
    bar at the top of the window, and then click **Run Module**. You should see the
    following output in the shell window:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **文件** ▸ **保存**，并将你的程序保存为 *listing2-1.py*。此程序不使用 Pygame Zero，因此我们可以从 IDLE
    运行它。点击窗口顶部的 **运行**，然后点击 **运行模块**。你应该在 Shell 窗口中看到以下输出：
- en: '[PRE24]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'It’s hard to work out what you’re looking at when the list is shown like this,
    which is why I lined up the numbers in a grid in the program listing. But this
    shell output is the same map and the same data, so everything is where it should
    be: it’s just being presented in a different way. In [Chapter 3](ch03.xhtml#ch03),
    you’ll learn how to print this map data so it looks more like the listing we created.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 当列表以这种方式显示时，很难弄清楚你正在查看什么，这就是为什么我在程序清单中将数字排列成网格的原因。但是这个 shell 输出是相同的地图和相同的数据，因此一切都在应该在的位置：它只是以不同的方式呈现。在[第3章](ch03.xhtml#ch03)中，你将学习如何打印这个地图数据，使其看起来更像我们创建的清单。
- en: '**FINDING AN EMERGENCY ITEM**'
  id: totrans-133
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**寻找紧急物品**'
- en: To find out what item is at a particular point in the map, you need to give
    Python a coordinate to check. The *coordinates* are a combination of the *y* position
    (from top to bottom) and the *x* position (from left to right), in that order.
    The *y* position will be the list in `room_map` you want to check (the row in
    the grid). The *x* position will be the item in that list you want to look at
    (the column) (see [Figure 2-3](ch02.xhtml#ch02fig3)). As always, remember that
    index numbers start at 0.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出地图中特定点上的物品，你需要给Python一个坐标来检查。*坐标*是由 *y* 位置（从上到下）和 *x* 位置（从左到右）组成的，顺序是这样的。*y*
    位置将是你要检查的 `room_map` 中的列表（网格中的一行）。*x* 位置将是你想查看的该列表中的物品（该列）（请参见[图2-3](ch02.xhtml#ch02fig3)）。和往常一样，记住索引号从0开始。
- en: '![image](../images/fig2-3.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig2-3.jpg)'
- en: '*Figure 2-3: The y-coordinate indicates the list we want to look at. The x-coordinate
    indicates the item in that list.*'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2-3：y坐标表示我们要查看的列表。x坐标表示该列表中的物品。*'
- en: '**RED ALERT**'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*If you’ve used coordinates before, you know that you usually put the x-coordinate
    before the y-coordinate. We’re doing the opposite here because it makes the code
    simpler. If we put* x *first, we would have to make each list in* room_map *represent
    a column of the map, from top to bottom, instead of a row, from left to right.
    That would make the map look wrong in our code: the map would be on its side and
    a mirror image, which would be very confusing! Just remember that our map coordinates
    use* y *and then* x*.*'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果你以前使用过坐标系，你会知道通常将x坐标放在y坐标之前。我们这里做的是相反的，因为这样可以让代码更简单。如果我们将* x *放在前面，我们必须让每个*room_map*中的列表代表地图的一列，从上到下，而不是一行，从左到右。那样的话，我们的代码中的地图看起来会错乱：地图会被旋转并成为镜像图像，这会让人非常困惑！只要记住，我们的地图坐标是先*
    y *然后* x*。*'
- en: 'Let’s work through an example: we’ll find out what item is at the position
    marked 2 on our simple map diagram. We need to know the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个例子来做一下：我们将找出在简单地图图示中标记为2的位置上的物品。我们需要知道以下几点：
- en: 'The `2` is in the second row (from top to bottom), so it’s in the second list
    in `room_map`. The index starts at 0, so we subtract 1 from 2 to get the index
    number for the *y* position, which is `1`. Use [Figure 2-3](ch02.xhtml#ch02fig3)
    to check this index number: the index numbers for the rows are on the left of
    the grid in red.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`位于第二行（从上到下），因此它位于`room_map`中的第二个列表。索引从0开始，因此我们从2中减去1来得到 *y* 位置的索引号，结果是`1`。请使用[图2-3](ch02.xhtml#ch02fig3)来检查这个索引号：行的索引号显示在网格左侧的红色区域。'
- en: The `2` is in the fourth column (from left to right) of the list. Again, we
    subtract 1 to get the index number for the *x* position, which is `3`. Use [Figure
    2-3](ch02.xhtml#ch02fig3) to check this index number as well. The index numbers
    for the columns are shown across the top of the grid in red.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2`位于列表的第四列（从左到右）。同样，我们减去1来得到 *x* 位置的索引号，结果是`3`。请使用[图2-3](ch02.xhtml#ch02fig3)来检查此索引号。列的索引号显示在网格顶部的红色区域。'
- en: 'Go to the shell and enter the following `print()` command to view the number
    in that position on the map:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 转到shell并输入以下 `print()` 命令，以查看地图上该位置的数字：
- en: '[PRE25]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: As expected, the result is the number 2, which happens to be spare oxygen tanks.
    You’ve successfully navigated your first map!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，结果是数字2，它恰好是备用氧气罐。你已经成功地浏览了你的第一个地图！
- en: '**TRAINING MISSION #4**'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #4**'
- en: 'Try to predict the output before you enter the following command into the shell:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在你将以下命令输入到shell之前，尝试预测输出：
- en: '[PRE26]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Refer to the map in [Figure 2-2](ch02.xhtml#ch02fig2) and your code listing
    to make your prediction. If you need more help, look at [Figure 2-3](ch02.xhtml#ch02fig3).
    Then check your answer by entering the instruction in the shell.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 参考[图2-2](ch02.xhtml#ch02fig2)中的地图和你的代码清单来做出预测。如果你需要更多的帮助，可以查看[图2-3](ch02.xhtml#ch02fig3)。然后通过在shell中输入指令来检查你的答案。
- en: '**SWAPPING ITEMS IN THE ROOM**'
  id: totrans-149
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '**交换房间中的物品**'
- en: 'You can also change items in the room. Let’s check which item is at the top-left
    position of the map, using the shell again:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以改变房间中的物品。我们来检查一下地图左上角的位置存放的是什么物品，再次使用 shell：
- en: '[PRE27]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The 1 is fertilizer. We don’t need fertilizer in the emergency room, so let’s
    change that item to emergency blankets in the map. We’ll use a 5 to represent
    them. Remember how we used an equal sign (`=`) to change the value of an item
    in a list? We can do the same to change the number in the map, like this:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 1是肥料。我们在急诊室不需要肥料，所以我们将把地图中的该物品改成急救毯，用5来表示它们。还记得我们是如何用等号 (`=`) 来改变列表中项目的值吗？我们可以同样用它来改变地图中的数字，像这样：
- en: '[PRE28]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'We enter the coordinates and then enter a new number to replace the original
    number. We can check that the code worked by printing the value at that coordinate
    again, which was 1 a moment ago. Let’s also print `room_map` and confirm that
    the emergency blankets appear in the correct position:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们输入坐标后，输入一个新数字来替换原有的数字。我们可以通过再次打印该坐标的值来检查代码是否有效，刚才的值是1。我们还可以打印 `room_map`，确认急救毯是否出现在正确的位置：
- en: '[PRE29]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Perfect! The emergency blankets are stored in the top-left corner of the room.
    Item 5 is the first item in the first list.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 完美！急救毯存放在房间的左上角。物品5是第一个列表中的第一个物品。
- en: '**TRAINING MISSION #5**'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #5**'
- en: Space is precious in the emergency room! Replace the toothpaste (4) with an
    emergency radio (6). You’ll need to find the coordinates of the 4 first and then
    enter the command to change it. Refer to [Figure 2-2](ch02.xhtml#ch02fig2) and
    [Figure 2-3](ch02.xhtml#ch02fig3) if you need more help with the index numbers.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在急诊室，空间是宝贵的！将牙膏（4）替换为急救无线电（6）。你需要先找到4的坐标，然后输入命令来改变它。如果需要更多帮助，参考 [图2-2](ch02.xhtml#ch02fig2)
    和 [图2-3](ch02.xhtml#ch02fig3)，这些内容涉及索引号。
- en: In the *Escape* game, the `room_map` list is used to remember the items in the
    room the player is currently in. The map stores the number of the object that
    appears at each position on the map, or a 0 if the floor space is empty. The rooms
    in the game will be bigger than this 5 × 5 grid, so the size of the `room_map`
    will vary depending on the width and height of the room the player is in.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Escape* 游戏中，`room_map` 列表用于记住玩家当前所在房间中的物品。地图存储每个位置上的物品编号，或者如果该位置为空地则存储0。游戏中的房间将比这个5
    × 5的网格大，因此 `room_map` 的大小会根据玩家所处房间的宽度和高度而有所不同。
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你适合飞行吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框以确认你已掌握本章的关键内容。
- en: '![Images](../images/box.jpg)  Python lists store words, numbers, or a mixture
    of both.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) Python 列表可以存储单词、数字或两者的混合。'
- en: '![Images](../images/box.jpg)  To see an item in a list, use its index number
    in square brackets: for example, `print(take_off_checklist[2])`.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 要查看列表中的项目，使用其索引号并放在方括号中：例如，`print(take_off_checklist[2])`。'
- en: '![Images](../images/box.jpg)  The `append()` function adds items to the end
    of a list.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) `append()` 函数将项目添加到列表的末尾。'
- en: '![Images](../images/box.jpg)  The `remove()` function removes items from a
    list: for example, `spacewalk _checklist.remove("Seal helmet")`.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) `remove()` 函数可以从列表中删除项目：例如，`spacewalk _checklist.remove("Seal
    helmet")`。'
- en: '![Images](../images/box.jpg)  You can use index numbers to delete or insert
    an item at a particular position in a list.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 你可以使用索引号来删除或插入列表中特定位置的项。'
- en: '![Images](../images/box.jpg)  Index numbers start at 0.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 索引号从0开始。'
- en: '![Images](../images/box.jpg)  You can change an item in a list using the equal
    sign (`=`): for example, `take_off_checklist[3] = "Test comms"`.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 你可以使用等号 (`=`) 来改变列表中的项目：例如，`take_off_checklist[3]
    = "Test comms"`。'
- en: '![Images](../images/box.jpg)  You can make a list that contains other lists
    to build a simple map.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 你可以创建一个包含其他列表的列表来构建一个简单的地图。'
- en: '![Images](../images/box.jpg)  You can check which item is in your map using
    coordinates: for example, use `room_map[`y coordinate`][`x coordinate`]`.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 你可以使用坐标查看地图中的物品：例如，使用 `room_map[`y 坐标`][`x 坐标`]`。'
- en: '![Images](../images/box.jpg)  Be sure to use *y* first and then *x* for your
    coordinates. In space, everything is upside down.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 一定要先使用 *y* 再使用 *x* 来表示坐标。在太空中，一切都是颠倒的。'
- en: '![Images](../images/box.jpg)  The coordinates are index numbers, so both start
    at 0, not 1.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg) 坐标是索引号，因此两者都是从0开始的，而不是1。'
- en: '![Images](../images/box.jpg)  You can use `+=` to add an item to a list, or
    to join two lists.'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg) 你可以使用`+=`将一个项目添加到列表中，或者将两个列表连接起来。'
- en: '![image](../images/f0046-01.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0046-01.jpg)'
