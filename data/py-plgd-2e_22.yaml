- en: '[B](nsp-venkitachalam503045-0008.xhtml#rappb)'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[B](nsp-venkitachalam503045-0008.xhtml#rappb)'
- en: Raspberry Pi Setup
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Raspberry Pi 设置
- en: '![](images/nsp-venkitachalam503045-circle-image.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-circle-image.jpg)'
- en: This appendix covers setting up a Raspberry Pi so you can use it for the projects
    in [Chapters 13](nsp-venkitachalam503045-0028.xhtml#ch13), [14](nsp-venkitachalam503045-0029.xhtml#ch14),
    and [15](nsp-venkitachalam503045-0030.xhtml#ch15). The projects work with a Raspberry
    Pi 3 Model B+ or Raspberry Pi 4 Model B. The setup instructions are the same for
    both. In addition to the board, you’ll need a compatible power supply and a micro
    SD card with a 16GB capacity or higher.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本附录介绍如何设置 Raspberry Pi，以便你可以使用它进行[第 13 章](nsp-venkitachalam503045-0028.xhtml#ch13)、[第
    14 章](nsp-venkitachalam503045-0029.xhtml#ch14)和[第 15 章](nsp-venkitachalam503045-0030.xhtml#ch15)中的项目。这些项目适用于
    Raspberry Pi 3 Model B+ 或 Raspberry Pi 4 Model B，两个型号的设置方法相同。除了主板，你还需要一个兼容的电源和一张容量为
    16GB 或更大的 micro SD 卡。
- en: '[Setting Up the Software](nsp-venkitachalam503045-0008.xhtml#rah1901)'
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[设置软件](nsp-venkitachalam503045-0008.xhtml#rah1901)'
- en: 'There are several ways to set up your Pi. These steps outline one of the simplest
    methods, using Raspberry Pi Imager:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方式可以设置你的 Pi。这些步骤概述了最简单的方法之一，使用 Raspberry Pi Imager：
- en: 1\. Download the Raspberry Pi Imager from the Raspberry Pi website at [https://www.raspberrypi.com/software](https://www.raspberrypi.com/software/).
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1\. 从 Raspberry Pi 网站下载 Raspberry Pi Imager：[https://www.raspberrypi.com/software](https://www.raspberrypi.com/software/)。
- en: 2\. Insert your SD card into your computer. (Depending on your system, you may
    need a micro SD card adapter for this.)
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2\. 将 SD 卡插入计算机。（根据你的系统，可能需要一个 micro SD 卡适配器。）
- en: 3\. Open Pi Imager and click the **Choose OS** button. [Figure B-1](nsp-venkitachalam503045-0032.xhtml#fb001)
    shows the resulting dialog.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3\. 打开 Pi Imager 并点击**选择操作系统**按钮。[图 B-1](nsp-venkitachalam503045-0032.xhtml#fb001)显示了相应的对话框。
- en: '![](images/nsp-venkitachalam503045-fb001.jpg)'
  id: totrans-9
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb001.jpg)'
- en: 'Figure B-1: The Choose OS dialog in Raspberry Pi Imager'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-1：Raspberry Pi Imager 中的选择操作系统对话框
- en: 4\. Click the **Raspberry Pi OS** option.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 4\. 点击**Raspberry Pi OS**选项。
- en: 5\. Click the **Choose Storage** button. You should get a screen like the one
    in [Figure B-2](nsp-venkitachalam503045-0032.xhtml#fb002).
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 5\. 点击**选择存储**按钮。你应该会看到类似[图 B-2](nsp-venkitachalam503045-0032.xhtml#fb002)的屏幕。
- en: '![](images/nsp-venkitachalam503045-fb002.jpg)'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb002.jpg)'
- en: 'Figure B-2: The Choose Storage dialog in Raspberry Pi Imager'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-2：Raspberry Pi Imager 中的选择存储对话框
- en: 6\. The screen should list your SD card. Click it.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 6\. 屏幕应该列出你的 SD 卡。点击它。
- en: 7\. Click the gear icon to open the Advanced Options dialog, as shown in [Figure
    B-3](nsp-venkitachalam503045-0032.xhtml#fb003).
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 7\. 点击齿轮图标以打开高级选项对话框，如[图 B-3](nsp-venkitachalam503045-0032.xhtml#fb003)所示。
- en: '![](images/nsp-venkitachalam503045-fb003.jpg)'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb003.jpg)'
- en: 'Figure B-3: The Advanced Options dialog in Raspberry Pi Imager'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-3：Raspberry Pi Imager 中的高级选项对话框
- en: 8\. Enter a name for your Pi in the Set Hostname box. I’ve set the name to `audioml`
    in [Figure B-3](nsp-venkitachalam503045-0032.xhtml#fb003). Thanks to a service
    called Avahi that’s enabled on the Raspberry Pi OS installation by default, you’ll
    be able to reach your Pi over the local network by appending `.local` to the device
    name you choose—for example, `audioml.local`. This is much more convenient than
    remembering and using an IP address.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 8\. 在设置主机名框中输入你的 Pi 的名称。我在[图 B-3](nsp-venkitachalam503045-0032.xhtml#fb003)中将名称设置为`audioml`。由于
    Raspberry Pi OS 默认启用了名为 Avahi 的服务，你可以通过在设备名称后面添加 `.local` 来通过本地网络访问你的 Pi——例如，`audioml.local`。这比记住并使用
    IP 地址方便得多。
- en: 9\. In the same dialog, set your username and password, and enable SSH. Then
    scroll down to see the Wi-Fi connection options, as shown in [Figure B-4](nsp-venkitachalam503045-0032.xhtml#fb004).
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 9\. 在同一个对话框中，设置你的用户名和密码，并启用 SSH。然后滚动下方，查看 Wi-Fi 连接选项，如[图 B-4](nsp-venkitachalam503045-0032.xhtml#fb004)所示。
- en: '![](images/nsp-venkitachalam503045-fb004.jpg)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](images/nsp-venkitachalam503045-fb004.jpg)'
- en: 'Figure B-4: The Wi-Fi details in Raspberry Pi Imager'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 B-4：Raspberry Pi Imager 中的 Wi-Fi 详情
- en: 10\. Enter your Wi-Fi details, similar to what’s shown in [Figure B-4](nsp-venkitachalam503045-0032.xhtml#fb004).
    Once you’re done, click **Save**, and then click the **Write** button to write
    all this information to your SD card.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 10\. 输入你的 Wi-Fi 详情，类似于[图 B-4](nsp-venkitachalam503045-0032.xhtml#fb004)所示。完成后，点击**保存**，然后点击**写入**按钮将所有这些信息写入
    SD 卡。
- en: 11\. When the SD card is ready, insert it into your Pi. Then boot up your Pi
    and it will automatically connect to your Wi-Fi network.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 11\. 当 SD 卡准备好后，将其插入 Pi 中。然后启动你的 Pi，它会自动连接到你的 Wi-Fi 网络。
- en: Now you should be able to log in to your Pi remotely using Secure Shell (SSH),
    as we’ll discuss soon.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你应该能够通过 SSH 安全外壳远程登录到你的 Pi，稍后我们将讨论这一点。
- en: '[Testing Your Connection](nsp-venkitachalam503045-0008.xhtml#rah1902)'
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[测试你的连接](nsp-venkitachalam503045-0008.xhtml#rah1902)'
- en: 'To check whether your Pi is connected to the local network, enter `ping` at
    the command line on your computer, followed by your Pi’s device name. For example,
    here’s what a `ping` session looks like from a Windows command shell:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查你的 Pi 是否已连接到本地网络，可以在计算机的命令行中输入 `ping`，后跟你 Pi 的设备名称。例如，以下是在 Windows 命令行中执行
    `ping` 命令时的输出：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This `ping` output shows the number of bytes sent and the time it took to get
    a reply. If you see the message `Request timeout...` instead, then you know your
    Pi isn’t connected to the network. In this case, try searching the internet for
    troubleshooting strategies. On a Windows computer, for example, you might try
    opening a command prompt as an administrator and entering the `arp -d` command.
    This clears the ARP cache. (ARP is a protocol for detecting other computers over
    a network.) Then try the `ping` command again. If that fails, it might be a good
    idea to hook up a monitor and keyboard to your Pi to check if it’s really able
    to connect to the internet.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 `ping` 输出显示了发送的字节数以及接收回复所需的时间。如果你看到 `Request timeout...` 消息，那说明你的 Pi 没有连接到网络。在这种情况下，可以尝试在网上查找故障排除策略。例如，在
    Windows 计算机上，你可以尝试以管理员身份打开命令提示符并输入 `arp -d` 命令。这会清除 ARP 缓存。（ARP 是一种用于检测网络上其他计算机的协议。）然后再试一次
    `ping` 命令。如果仍然失败，最好连接一个显示器和键盘到你的 Pi，以检查它是否真的能连接到互联网。
- en: '[Logging in to Your Pi with SSH](nsp-venkitachalam503045-0008.xhtml#rah1903)'
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[通过 SSH 登录到你的 Pi](nsp-venkitachalam503045-0008.xhtml#rah1903)'
- en: You can hook up a keyboard, mouse, and monitor to your Pi to work with it directly,
    but for the purposes of this book, the most convenient way to work is to use SSH
    to log in to your Pi remotely from your desktop or laptop computer. If you do
    this not only frequently but also from the same computer, you’ll probably find
    it annoying to enter the password every single time. With the `ssh-keygen` utility
    that comes with SSH, you can set up a public/private key scheme so you can securely
    log in to your Pi without entering the password. For macOS and Linux users, follow
    the next procedure. (For Windows users, PuTTY lets you do something similar. Search
    for “Generating an SSH key with PuTTY” to learn more.)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将键盘、鼠标和显示器连接到 Pi 上直接使用，但为了本书的目的，最方便的方式是通过 SSH 从桌面或笔记本电脑远程登录到你的 Pi。如果你经常这么做，并且每次都从同一台计算机登录，你可能会觉得每次都输入密码非常麻烦。使用
    SSH 自带的 `ssh-keygen` 工具，你可以设置一个公钥/私钥方案，这样就可以安全地登录到 Pi，而无需输入密码。对于 macOS 和 Linux
    用户，按照以下步骤操作。（对于 Windows 用户，PuTTY 也能做类似的操作。搜索“使用 PuTTY 生成 SSH 密钥”了解更多信息。）
- en: '1\. From a terminal on your computer, enter the following to generate a key
    file:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1\. 在你的计算机的终端中，输入以下命令以生成密钥文件：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '2\. Copy the key file to the Pi. You can use the `scp` command for this, which
    is part of SSH. Enter the following, replacing your Pi’s IP address as appropriate:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 2\. 将密钥文件复制到 Pi 上。你可以使用 `scp` 命令，这是 SSH 的一部分。输入以下命令，并适当替换 Pi 的 IP 地址：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '3\. Log in to the Pi and verify the key file was copied over, again substituting
    your Pi’s IP address:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3\. 登录到 Pi 并验证密钥文件是否已被复制，同样替换为你 Pi 的 IP 地址：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The next time you log in to the Pi, you won’t be asked for a password. Also,
    note that I used an empty passphrase in `ssh-keygen` in this example, which isn’t
    secure. This setup may be fine for Raspberry Pi hardware projects in which you
    aren’t very concerned about security, but you may want to consider using a passphrase.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 下次登录到 Pi 时，你将不再需要输入密码。另外，请注意，在这个例子中，我在 `ssh-keygen` 中使用了一个空的密码短语，这并不安全。这个设置对于那些不太关心安全的
    Raspberry Pi 硬件项目来说可能是可以接受的，但你可能会考虑使用密码短语。
- en: '[Installing Python Modules](nsp-venkitachalam503045-0008.xhtml#rah1904)'
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[安装 Python 模块](nsp-venkitachalam503045-0008.xhtml#rah1904)'
- en: 'Most of the Python modules you need for the projects in [Chapters 13](nsp-venkitachalam503045-0028.xhtml#ch13),
    [14](nsp-venkitachalam503045-0029.xhtml#ch14), and [15](nsp-venkitachalam503045-0030.xhtml#ch15)
    are already part of the Raspberry Pi installation. For the rest, install them
    by running the following commands one by one after you SSH into your Pi:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第13章](nsp-venkitachalam503045-0028.xhtml#ch13)、[第14章](nsp-venkitachalam503045-0029.xhtml#ch14)和[第15章](nsp-venkitachalam503045-0030.xhtml#ch15)中的大部分
    Python 模块已经包含在 Raspberry Pi 安装中。对于其余的模块，在通过 SSH 连接到你的 Pi 后，依次运行以下命令进行安装：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This should get you going with all the projects that use the Raspberry Pi in
    the book.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该能帮助你开始书中所有使用树莓派的项目。
- en: '[Working Remotely with Visual Studio Code](nsp-venkitachalam503045-0008.xhtml#rah1905)'
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[使用 Visual Studio Code 远程工作](nsp-venkitachalam503045-0008.xhtml#rah1905)'
- en: Once you have SSH access to your Pi, you could edit your source code on your
    computer and transfer it to the Pi via the `scp` command, but this gets cumbersome
    quickly. There’s a better way. Visual Studio Code (VS Code) is a popular code
    editor from Microsoft. This software supports a huge number of plug-ins or extensions
    to enhance its capabilities. One of them, the Visual Studio Code Remote - SSH
    extension, will let you connect to your Pi and edit your files directly from your
    computer. You can find the installation details for this extension at [https://code.visualstudio.com/docs/remote/ssh](https://code.visualstudio.com/docs/remote/ssh).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你获得了对 Pi 的 SSH 访问权限，你可以在计算机上编辑源代码并通过 `scp` 命令将其传输到 Pi，但这很快会变得繁琐。其实有更好的方法。Visual
    Studio Code（VS Code）是微软出品的一个流行代码编辑器。这个软件支持大量的插件或扩展，以增强其功能。其中之一是 Visual Studio
    Code Remote - SSH 扩展，它可以让你连接到 Pi 并直接从计算机上编辑文件。你可以在 [https://code.visualstudio.com/docs/remote/ssh](https://code.visualstudio.com/docs/remote/ssh)
    找到该扩展的安装详情。
