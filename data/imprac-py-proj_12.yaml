- en: '**12'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**12'
- en: SECURING YOUR NEST EGG**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**确保你的退休基金**'
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: Baby boomers are Americans born between 1946 and 1964\. They form a large demographic
    cohort—about 20 percent of the American population—so they’ve had a huge influence
    on all aspects of American culture. The financial industry was quick to cater
    to their needs, which for decades concerned investment growth. But in 2011, the
    oldest boomers reached age 65 and began retiring in droves, at the rate of 10,000
    *per day*! With an average life span longer than that of preceding generations,
    a boomer may enjoy a retirement as long as their career. Funding this 30- to 40-year
    period is a big problem and a big business.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 婴儿潮一代是指1946年到1964年间出生的美国人。他们形成了一个庞大的群体——约占美国人口的20%——因此对美国文化的各个方面产生了巨大的影响。金融行业迅速迎合他们的需求，这些需求几十年来一直关注投资增长。但到了2011年，最年长的婴儿潮一代成员已满65岁，并开始大量退休，退休日均达到10,000人！由于平均寿命比前几代人更长，婴儿潮一代的退休期可能和他们的职业生涯一样长。为期30到40年的退休资金问题既是一个大问题，也是一个大商机。
- en: In the years when financial advisers were mainly focused on *growing* boomers’
    wealth, they relied on the simple “4 Percent Rule” for retirement planning. Simply
    stated, for every year you’re retired, if you spend an amount no larger than 4
    percent of the savings you had *in the first year of retirement*, you’ll never
    run out of money. But as Mark Twain observed, “All generalizations are false,
    including this one!” The value of our investments and the amount we spend are
    constantly in flux, often due to forces outside of our control.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融顾问主要关注*增长*婴儿潮一代财富的那些年，他们依赖于简单的“4%规则”进行退休规划。简而言之，对于每一年你退休的时间，如果你每年支出的金额不超过退休第一年储蓄的4%，你就永远不会用光资金。但正如马克·吐温所说，“所有的泛化都是错误的，包括这条！”我们投资的价值和支出的金额不断变化，往往是由于我们无法控制的外部因素。
- en: As a more sophisticated alternative to the 4 Percent Rule, the financial industry
    adopted Monte Carlo simulation (see [Chapter 11](ch11.xhtml#ch11) for an overview
    of MCS). With MCS, you can test and compare retirement strategies over thousands
    of lifetimes. The goal is to identify how much money you can spend each year in
    retirement, given your life expectancy, without exhausting your savings.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 作为4%规则的更复杂替代方案，金融行业采用了蒙特卡洛模拟（有关MCS的概述请参见[第11章](ch11.xhtml#ch11)）。通过MCS，你可以在数千个人生中测试和比较退休策略。目标是根据你的预期寿命，确定你每年在退休期间可以支出的金额，而不会耗尽储蓄。
- en: The advantage of MCS over other methods increases as the sources of uncertainty
    increase. In [Chapter 11](ch11.xhtml#ch11), you applied MCS to a single variable
    with a simple probability distribution. Here you’ll look at uncertainty around
    life spans, while capturing the true cyclicity and interdependency of the stock
    and bond markets and inflation. This will allow you to evaluate and compare different
    strategies for achieving a secure and happy retirement.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: MCS 相对于其他方法的优势随着不确定性来源的增加而增加。在[第11章](ch11.xhtml#ch11)中，你应用了 MCS 来分析具有简单概率分布的单一变量。在这里，你将关注寿命的不确定性，同时捕捉股票和债券市场以及通货膨胀的真实周期性和相互依赖性。这将帮助你评估并比较不同的策略，以实现安全和幸福的退休生活。
- en: '**Project #20: Simulating Retirement Lifetimes**'
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**项目#20：模拟退休寿命**'
- en: If you think you’re too young to worry about retirement, think again. The baby
    boomers thought the same thing, and now over half of them have insufficient savings
    for retirement. For most people, the difference between eating Kobe beef or dog
    food in retirement is how soon they start saving. Due to the magic of compounding
    interest, even modest savings can add up over decades. Knowing early the numbers
    you’ll need later enables you to set realistic goals for a painless transition
    to your golden years.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你认为自己太年轻，不必担心退休问题，那就再想一想吧。婴儿潮一代曾有同样的想法，现在他们当中超过一半的人没有足够的退休储蓄。对大多数人来说，退休后是吃神户牛肉还是狗粮，关键在于他们开始储蓄的时间有多早。由于复利的魔力，即使是适度的储蓄，也能在几十年后积累成可观的财富。早早知道你将来需要的数额，可以帮助你设定现实的目标，为顺利过渡到黄金岁月做好准备。
- en: '**THE OBJECTIVE**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标**'
- en: Build a Monte Carlo simulation for estimating the probability of running out
    of money in retirement. Treat years in retirement as a key uncertainty and use
    historical stock, bond, and inflation data to capture the observed cyclicity and
    dependency of these variables.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 构建一个蒙特卡洛模拟，估算退休期间资金用尽的概率。将退休期间的年份视为一个关键的不确定因素，并使用历史的股票、债券和通货膨胀数据来捕捉这些变量的周期性和相互依赖性。
- en: '**The Strategy**'
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**策略**'
- en: To plan your project, don’t hesitate to check out the competition. Numerous
    nest-egg calculators are available online for free. If you play with these, you’ll
    see that they display a high level of input-parameter variability.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了规划你的项目，不妨看看竞争对手。网上有许多免费的退休计算器。如果你试用这些，你会发现它们在输入参数方面有很高的可变性。
- en: Calculators with many parameters may seem better (see [Figure 12-1](ch12.xhtml#ch12fig1)),
    but with each added detail, you start going down rabbit holes, especially when
    it comes to the US’s complex tax code. When you’re predicting outcomes 30 to 40
    years into the future, details can become noise. So, you’re better off keeping
    it simple, focusing on the most important and controllable issues. You can control
    when you retire, your investment asset allocation, how much you save, and how
    much you spend, but you can’t control the stock market, interest rates, and inflation.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 具有许多参数的计算器看起来可能更好（见[图12-1](ch12.xhtml#ch12fig1)），但每增加一个细节，你就会开始深入复杂的问题，特别是在涉及美国复杂的税法时。当你预测未来30到40年的结果时，细节可能变成噪音。因此，你最好保持简洁，专注于最重要且可控的因素。你可以控制退休时间、投资资产配置、存款和支出金额，但你无法控制股市、利率和通货膨胀。
- en: '![image](../images/f0241-01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0241-01.jpg)'
- en: '*Figure 12-1: Example input panels for three online nest-egg calculators*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-1：三个在线退休计算器的输入面板示例*'
- en: When you can’t know the “correct” answer to a problem, looking at a range of
    scenarios and making decisions based on probabilities is best. For decisions that
    involve a “fatal error,” like running out of money, desirable solutions are those
    that lower the likelihood of that event.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当你无法知道问题的“正确”答案时，查看一系列情景并基于概率做出决策是最好的方法。对于涉及“致命错误”的决策，如资金耗尽，理想的解决方案是降低这种事件发生的可能性。
- en: 'Before you get started, you need to speak the language, so I put together a
    list of the financial terms you’ll use in this project:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，你需要了解相关术语，因此我整理了一份你在这个项目中将使用的财务术语列表：
- en: '**Bonds** A bond is debt investment in which you loan money to an entity—usually
    a government or corporation—for a set length of time. The borrower pays you an
    agreed-upon rate of interest (the bond’s *yield*) and, at the end of the term,
    returns the full value of the loan, assuming the issuing entity doesn’t go broke
    and default. The value of bonds can go up and down over time, so you may lose
    money if you sell a bond early. Bonds are appealing to retirees, as they offer
    safe, steady, predictable returns. Treasury bonds, issued by the US government,
    are considered the safest of all. Unfortunately, most bond returns tend to be
    low, so they are vulnerable to inflation.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**债券** 债券是一种债务投资，您将钱贷给一个实体——通常是政府或公司——一段固定的时间。借款方按照约定的利率（债券的*收益率*）支付利息，并在期限结束时归还贷款的全部金额，前提是发行实体没有破产或违约。债券的价值可能会随时间波动，因此如果你提前卖出债券，可能会亏损。债券对于退休人员来说具有吸引力，因为它们提供安全、稳定、可预测的回报。美国政府发行的国债被认为是最安全的。然而，不幸的是，大多数债券的回报率较低，因此它们容易受到通货膨胀的影响。'
- en: '**Effective tax rate** This is the average rate at which an individual or married
    couple is taxed. It includes local, state, and federal taxes. Taxes can be complicated,
    with large variances in state and local tax rates, many opportunities for deductions
    and adjustments, and variable rates for different types of income (such as short-
    versus long-term capital gains). The tax code is also *progressive*, which means
    you pay proportionally more as your income increases. According to The Motley
    Fool, a financial services company, the average American’s overall income-based
    tax rate was 29.8 percent in 2015\. And this excludes sales and property taxes!
    You can also count on Congress to tinker with these rates at least once in a 30-year
    retirement. Due to these complexities, for this project you should adjust your
    *withdrawal* (spending) parameter to account for taxes.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**有效税率** 这是个人或已婚夫妇所缴纳税款的平均税率。它包括地方税、州税和联邦税。税收制度可能很复杂，州和地方税率差异巨大，扣除和调整的机会很多，不同类型的收入（如短期与长期资本利得）的税率也不同。税法还是*累进的*，这意味着随着收入的增加，你所缴纳的税款也会按比例增加。根据金融服务公司The
    Motley Fool的数据，2015年，美国普通人的总体收入税率为29.8%。而这还不包括销售税和财产税！你还可以指望国会至少在30年的退休生活中对这些税率进行调整。由于这些复杂性，在这个项目中，你应该调整你的*取款*（支出）参数来考虑税务问题。'
- en: '**Index** It is safest to invest in many assets, rather than putting all your
    (nest) eggs in one basket. An index is a hypothetical portfolio of securities,
    or group of baskets, designed to represent a broad part of a financial market.
    The Standard & Poor (S&P) 500, for example, represents the 500 largest US companies,
    which are mostly dividend-paying companies. Index-based investments—such as an
    index mutual fund—allow an investor to conveniently buy one thing that contains
    the stocks of hundreds of companies.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**指数** 投资于多种资产比将所有（储备）鸡蛋放在一个篮子里更安全。指数是一个假设的证券投资组合，或一组篮子，旨在代表金融市场的广泛部分。例如，标准普尔
    500（S&P 500）代表美国最大的 500 家公司，其中大多数是支付股息的公司。基于指数的投资——如指数型共同基金——允许投资者便捷地购买一个包含数百家公司股票的投资产品。'
- en: '**Inflation** This is the increase in prices over time due to increasing demand,
    currency devaluation, rising energy costs, and so on. Inflation is an insidious
    destroyer of wealth. The inflation rate is variable, but has averaged about 3
    percent annually since 1926\. At that rate, the value of money is halved every
    24 years. A little inflation (1 to 3 percent) generally indicates that the economy
    is growing and wages are going up. Higher inflation and negative inflation are
    both undesirable.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**通货膨胀** 通货膨胀是由于需求增加、货币贬值、能源成本上升等因素导致价格随时间上涨。通货膨胀是财富的潜在破坏者。通货膨胀率是可变的，但自 1926
    年以来平均约为 3% 年增长率。以该速度计算，货币的价值每 24 年就会减半。适度的通货膨胀（1 到 3%）通常表明经济在增长，工资在上升。较高的通货膨胀和负通货膨胀都是不受欢迎的。'
- en: '**Number of cases** These are the trials or runs performed during MCS; each
    case represents a single retirement lifetime and is simulated with a new set of
    randomly selected values. For the simulations you will be running, somewhere between
    50,000 and 100,000 cases should provide a suitably repeatable answer.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**案例数量** 这些是 MCS 过程中进行的试验或运行；每个案例代表一个单独的退休生命周期，并通过一组新的随机选择的值进行模拟。对于你将要运行的模拟，50,000
    到 100,000 个案例应该能够提供一个适当可重复的答案。'
- en: '**Probability of ruin** This is the probability of running out of money before
    the end of retirement. You can calculate it as the number of cases that end with
    no money divided by the total number of cases.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**破产概率** 破产概率是指在退休结束前用完资金的概率。可以通过将没有资金的案例数量除以总案例数来计算该概率。'
- en: '**Start value** The starting value is the total value of liquid investments,
    including checking accounts, brokerage accounts, tax-deferred Individual Retirement
    Accounts (IRAs), and so on, that are held at the start of retirement. It doesn’t
    equate to *net worth*, which includes assets like houses, cars, and Fabergé eggs.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**起始值** 起始值是退休开始时所持有的所有流动性投资的总值，包括支票账户、经纪账户、税延退休账户（IRA）等。这与*净资产*不同，净资产包括房产、汽车和法贝热蛋等资产。'
- en: '**Stocks** A stock is a security that signifies ownership in a corporation
    and represents a claim on part of the corporation’s assets and earnings. Many
    stocks pay *dividends*, a regular payment similar to the interest paid by a bond
    or a bank account. For the average person, stocks are the quickest way to grow
    wealth, but they’re not without risk. The price of a stock can go up and down
    rapidly over a short time—both because of the company’s performance and because
    of speculation arising from investor greed or fear. Retirees tend to invest in
    the largest dividend-paying US companies because they offer regular income and
    a less volatile stock price than do smaller companies.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**股票** 股票是一种证券，代表公司所有权，并表示对公司部分资产和收益的索赔。许多股票支付*股息*，这是一种类似于债券或银行账户支付的利息的定期支付。对于普通人来说，股票是快速增长财富的方式，但它们并非没有风险。股票价格可以在短时间内快速波动——既因为公司的业绩，也因为投资者的贪婪或恐惧引发的投机。退休人员倾向于投资于美国最大的支付股息的公司，因为它们提供定期收入，并且股票价格波动较小，风险小于小型公司。'
- en: '**Total returns** The sum of capital gains (changes in asset value, like stock
    price), interest, and dividends is considered the total return of an investment.
    It is usually quoted on an annual basis.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**总回报** 总回报是资本利得（资产价值的变化，如股票价格）、利息和股息的总和，通常以年度为单位报价。'
- en: '**Withdrawal** Also referred to as costs or spending, withdrawal is the pretax,
    gross income you’ll need to cover all expenses in a given year. For the 4 Percent
    Rule, this would represent 4 percent of the start value in the first year of retirement.
    This number should be adjusted for inflation in each subsequent year.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**取款** 也称为费用或支出，取款是你每年在税前所需的总收入，用以支付所有开支。对于4%规则来说，这代表了退休第一年起始值的4%。此数值应在之后的每一年根据通货膨胀进行调整。'
- en: '***Historical Returns Matter***'
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***历史回报很重要***'
- en: Nest-egg simulators that use constant values for investment returns and inflation
    (see [Figure 12-1](ch12.xhtml#ch12fig1)) grossly distort reality. Predictive ability
    is only as good as the underlying assumptions, and returns can be highly volatile,
    interdependent, and cyclical. This volatility impacts retirees the most when the
    start of retirement—or a large unexpected expense—coincides with the beginning
    of a big market downturn.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 使用固定投资回报和通货膨胀值的“蛋巢模拟器”（见[图12-1](ch12.xhtml#ch12fig1)）会严重扭曲现实。预测能力的好坏取决于基础假设，而回报可能会非常波动、相互依赖并且具有周期性。这种波动性对退休人员影响最大，特别是当退休开始的时刻或某个大的意外开支恰逢市场的大幅下跌时。
- en: The chart in [Figure 12-2](ch12.xhtml#ch12fig2) displays the annual returns
    for both the S&P 500 index of the largest US companies and the 10-year Treasury
    bond, which is a reasonably safe, medium-risk, fixed-income investment. It also
    includes annual inflation rates and significant financial events like the Great
    Depression.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[图12-2](ch12.xhtml#ch12fig2)中的图表显示了美国最大公司的标准普尔500指数与10年期国债的年回报，后者是一种相对安全的中等风险固定收益投资。图表还包括了年度通货膨胀率和重大金融事件，比如大萧条。'
- en: '![image](../images/f0243-01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0243-01.jpg)'
- en: '*Figure 12-2: Annual rate of inflation plus total returns for stock and bond
    markets, 1926 to 2013*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-2：1926年至2013年间，股票和债券市场的年通胀率加总回报*'
- en: 'Financial scholars’ long study of the trends in [Figure 12-2](ch12.xhtml#ch12fig2)
    have led to some useful observations about US markets:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 财务学者对[图12-2](ch12.xhtml#ch12fig2)中趋势的长期研究，提出了一些关于美国市场的有用观察：
- en: Upward-moving (bull) markets tend to last five times as long as downward-moving
    (bear) markets.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上涨的（牛市）市场通常持续的时间是下跌（熊市）市场的五倍。
- en: Harmful high inflation rates can persist for as long as a decade.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有害的高通货膨胀率可能会持续长达十年之久。
- en: Bonds tend to deliver low returns that struggle to keep up with inflation.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 债券通常提供低回报，难以跟上通货膨胀的步伐。
- en: Stock returns outpace inflation easily, but at the cost of great volatility
    in prices.
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股票回报轻松超过通货膨胀，但代价是价格的大幅波动。
- en: Stock and bond returns are often inversely correlated; this means that bond
    returns decrease as stock returns increase, and vice versa.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股票和债券的回报通常是反向相关的；这意味着，当股票回报上升时，债券回报会下降，反之亦然。
- en: Neither the stocks of large companies nor Treasury bonds can guarantee you a
    smooth ride.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无论是大公司的股票还是国债，都无法保证你能顺利度过每一段时间。
- en: Based on this information, financial advisers recommend that most retirees hold
    a diversified portfolio that includes multiple investment types. This strategy
    uses one investment type as a “hedge” against another, dampening the highs but
    raising the lows, theoretically reducing volatility.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些信息，财务顾问建议大多数退休人员持有一个多元化的投资组合，其中包括多种投资类型。这种策略使用一种投资类型作为另一种投资类型的“对冲”，既能减少高点，又能提高低点，从理论上讲，降低了波动性。
- en: In [Figure 12-3](ch12.xhtml#ch12fig3), annual investment returns are plotted
    using both the S&P 500 and a hypothetical 40/50/10 percent blend of, respectively,
    the S&P 500, the 10-year Treasury bond, and cash. The three-month Treasury bill,
    which is a very short-term bond with a stable price and low yield (like money
    stuffed in your mattress), represents cash.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图12-3](ch12.xhtml#ch12fig3)中，年投资回报使用标准普尔500指数以及一种假设的40/50/10比例组合来绘制，分别代表标准普尔500指数、10年期国债和现金。三个月期国债是一种非常短期的债券，价格稳定且收益较低（类似于将钱塞进床垫里），代表现金。
- en: '![image](../images/f0244-01.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0244-01.jpg)'
- en: '*Figure 12-3: Annual returns of the S&P 500 versus a blend of the S&P 500,
    10-year Treasury bond, and cash, 1926 to 2013*'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-3：1926年至2013年间，标准普尔500指数与标准普尔500、10年期国债和现金的组合的年回报*'
- en: This diversified portfolio provides a smoother ride than the stock market alone,
    while still providing protection from inflation. But it will clearly produce different
    results than online calculators that assume returns are *always* constant and
    positive in value.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个多元化的投资组合提供比单纯的股市更平稳的走势，同时仍能提供通货膨胀的保护。但它显然会产生与假设回报*始终*恒定且为正的在线计算器不同的结果。
- en: 'By using historical data, you capture the true *measured* duration of good
    times and bad, along with the highest highs and the lowest lows. You also account
    for something completely ignored by the 4 Percent Rule: *the black swan*.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用历史数据，你可以捕捉到好时光和坏时光的真实*度量*持续时间，以及最高的高点和最低的低点。你还考虑到了4%规则完全忽视的一个因素：*黑天鹅事件*。
- en: Black swans are consequential, improbable events. These can be good, like meeting
    your spouse, or bad, like Black Monday, the stock market crash of October 1987\.
    An advantage of MCS is that it can factor in these unexpected events; a disadvantage
    is that you have to program them, and if they are truly unforeseeable, how can
    you know what to include?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 黑天鹅事件是具有重大影响且不太可能发生的事件。这些事件可以是好的，比如遇到你的配偶，或者是坏的，比如1987年10月的“黑色星期一”股市崩盘。MCS的一个优势是它能够考虑这些意外事件；缺点是你需要编程处理这些事件，如果它们确实是无法预见的，那你又怎么知道该包含哪些内容呢？
- en: Black swans that have already occurred, like the Great Depression, are captured
    in the annual values in lists of historical returns. So, a common approach is
    to use historical results and assume that nothing worse—or better—will occur in
    the future. When a simulation uses data from the Great Depression, the modeled
    portfolio will experience the same stock, bond, and inflation behavior as real
    portfolios at the time.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 已经发生的黑天鹅事件，例如大萧条，已经在历史回报列表中的年度数据中体现出来。因此，一个常见的方法是使用历史结果，并假设未来不会发生比现在更糟糕或更好的事情。当一个模拟使用大萧条时期的数据时，模拟的投资组合将经历与当时真实投资组合相同的股票、债券和通货膨胀行为。
- en: If using past data seems too restrictive, you can always edit the past results
    to reflect lower lows and higher highs. But most people are practical and are
    happier dealing with events they *know* have occurred—as opposed to zombie apocalypses
    or alien invasions—so true historical results offer a *credible* way to inject
    reality into financial planning.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用过去的数据感觉过于局限，你可以随时编辑过去的结果，以反映更低的低点和更高的高点。但大多数人是实际的，且更愿意处理他们*知道*已经发生的事件——而不是僵尸末日或外星人入侵——因此，真实的历史结果提供了一种*可信的*方式，将现实引入财务规划。
- en: Some economists argue that inflation and returns data before 1980 are of limited
    use, because the Federal Reserve now takes a more active role in monetary policy
    and the control of inflation. On the other hand, that is *exactly* the kind of
    thinking that leaves us exposed to black swans!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一些经济学家认为1980年之前的通货膨胀和回报数据的使用价值有限，因为美联储现在在货币政策和控制通货膨胀方面扮演着更为积极的角色。另一方面，正是这种*确切*的思维方式让我们暴露于黑天鹅事件之中！
- en: '***The Greatest Uncertainty***'
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***最大的不确定性***'
- en: The greatest uncertainty in retirement planning is the date you—or your surviving
    spouse—die, euphemistically referred to as “end of plan” by financial advisers.
    This uncertainty affects every retirement-related decision, such as when you retire,
    how much you spend in retirement, when you start taking Social Security, how much
    you leave your heirs, and so on.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 退休规划中最大的未知数是你——或者你幸存的配偶——去世的日期，金融顾问通常称之为“计划结束”。这种不确定性影响着与退休相关的每一个决策，比如你何时退休、退休后花费多少、何时开始领取社会保障、你会留给继承人多少等等。
- en: Insurance companies and the government deal with this uncertainty with *actuarial
    life tables*. Based on the mortality experience of a population, actuarial life
    tables predict the life expectancy at a given age, expressed as the average remaining
    number of years expected prior to death. You can find the Social Security table
    at *[https://www.ssa.gov/oact/STATS/table4c6.html](https://www.ssa.gov/oact/STATS/table4c6.html)*.
    Based on this table, a 60-year-old woman in 2014 would have a life expectancy
    of 24.48 years; this means end of plan would occur during her 84th year.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 保险公司和政府通过*精算寿命表*来应对这种不确定性。基于一个人群的死亡率经验，精算寿命表预测在给定年龄时的预期寿命，并表示为死亡前预期的平均剩余年数。你可以在*
    [https://www.ssa.gov/oact/STATS/table4c6.html](https://www.ssa.gov/oact/STATS/table4c6.html)
    *找到社会保障表。根据这个表格，2014年一位60岁的女性的预期寿命为24.48年；这意味着计划结束将发生在她的第84年。
- en: Actuarial tables work fine for large populations, but for individuals, they’re
    just a starting point. You should examine a range of values, tailored to family
    history and personal health issues, when preparing your own retirement plan.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 精算表对大群体来说非常有效，但对于个人而言，它们只是一个起点。在制定个人退休计划时，你应当根据家庭历史和个人健康问题，检查一系列的数值。
- en: To handle this uncertainty in your simulation, consider years in retirement
    a *random variable*, whose values are chosen at random from a frequency distribution.
    For example, you can enter the most likely, minimum, and maximum number of years
    you expect to be retired and use these values to build a triangular distribution.
    The most-likely value can come from an actuarial table, but the endpoints should
    be based on your personal health outlook and family history.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了处理模拟中的不确定性，可以将退休年数视为一个*随机变量*，其数值从频率分布中随机选择。例如，你可以输入预期退休的最可能年数、最小年数和最大年数，并利用这些数值构建三角分布。最可能的值可以参考精算表，但端点应基于你的个人健康预期和家庭历史。
- en: An example outcome, based on a triangular distribution for years in retirement
    for a 60-year-old man, is shown in [Figure 12-4](ch12.xhtml#ch12fig4). The minimum
    retirement period was set to 20 years, the most likely to 22 years, and the maximum
    to 40 years. The number of draws from the distribution was 1,000.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基于退休年数三角分布的例子，针对一位60岁男性的结果，展示在[图12-4](ch12.xhtml#ch12fig4)中。最小退休年数设定为20年，最可能年数为22年，最大年数为40年。此次模拟从该分布中抽取了1,000次。
- en: '![image](../images/f0246-01.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0246-01.jpg)'
- en: '*Figure 12-4: Number of lifetimes versus years in retirement based on 1,000
    draws from a triangular distribution*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-4：基于1,000次三角分布抽样的退休年数与寿命数量的关系*'
- en: As you can see, every possible time interval between the minimum and maximum
    values is available for simulation, but the intervals taper off in frequency from
    the most likely value to the maximum value, indicating that living to 100 is possible
    but unlikely. Note also that the plot is significantly skewed to the high side.
    This will ensure conservative results, since—from a financial perspective—dying
    early is an optimistic outcome and living longer than expected represents the
    greatest financial risk.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，最小值和最大值之间的每一个可能的时间间隔都可以进行模拟，但这些间隔的频率从最可能的值到最大值逐渐递减，这表明活到100岁是可能的，但不太可能。同时，注意到图表明显偏向高值的一侧。这将确保保守的结果，因为从财务角度来看，早逝是一个乐观的结果，而超出预期的长寿则代表着最大的财务风险。
- en: '***A Qualitative Way to Present Results***'
  id: totrans-59
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***一种定性展示结果的方法***'
- en: An issue with MCS is making sense of thousands of runs and presenting the results
    in an easily digestible manner. Most online calculators present outcomes using
    a chart like the one in [Figure 12-5](ch12.xhtml#ch12fig5). In this example, for
    a 10,000-run simulation, the calculator plots a few selected outcomes with age
    on the x-axis and investment value on the y-axis. The curves converge on the left
    at the starting value of the investments at retirement, and they end on the right
    with their value at end of plan. The overall probability of the money’s lasting
    through retirement may also be presented. Financial advisers consider probabilities
    below 80 to 90 percent risky.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: MCS的一个问题是如何理解成千上万次模拟的结果，并以易于理解的方式呈现结果。大多数在线计算器通过类似[图12-5](ch12.xhtml#ch12fig5)的图表展示结果。在这个例子中，针对10,000次模拟，计算器将选定的几个结果绘制出来，横轴表示年龄，纵轴表示投资价值。这些曲线在左侧汇聚，代表退休时的投资起始值，在右侧结束，代表计划结束时的投资价值。还可能会展示资金在退休期间能够持续的整体概率。财务顾问认为低于80%到90%的概率是有风险的。
- en: '![image](../images/f0247-01.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0247-01.jpg)'
- en: '*Figure 12-5: Example display from a typical financial industry retirement
    simulator*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-5：典型财务行业退休模拟器的示例显示*'
- en: 'The most important piece of information from this type of analysis is the probability
    of running out of money. It is also interesting to see the endpoint and average
    outcomes and a summary of the input parameters. In your Python simulator, you
    can print these in the interpreter window, as shown here:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此类分析中最重要的信息是资金耗尽的概率。观察终点和平均结果以及输入参数的总结也很有趣。在你的Python模拟器中，可以像下面这样在解释器窗口打印这些结果：
- en: 'Investment type: bonds'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 投资类型：债券
- en: 'Starting value: $1,000,000'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 起始金额：$1,000,000
- en: 'Annual withdrawal: $40,000'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 每年提取金额：$40,000
- en: 'Years in retirement (min-ml-max): 17-25-40'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 退休年数（最小-最可能-最大）：17-25-40
- en: 'Number of runs: 20,000'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟次数：20,000
- en: 'Odds of running out of money: 36.1%'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 资金耗尽的概率：36.1%
- en: 'Average outcome: $883,843'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 平均结果：$883,843
- en: 'Minimum outcome: $0'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最小结果：$0
- en: 'Maximum outcome: $7,607,789'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 最大结果：$7,607,789
- en: For a graphical presentation, rather than duplicate what others have done, let’s
    find a new way to present the outcomes. A subset of the results of each case—that
    is, the money remaining at the end of retirement—can be presented as a vertical
    line in a bar chart, as in [Figure 12-6](ch12.xhtml#ch12fig6).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图形展示，区别于别人所做的重复工作，让我们找一种新的方式来呈现结果。每个案例的部分结果——即退休结束时剩余的资金——可以在条形图中作为垂直线展示，如[图12-6](ch12.xhtml#ch12fig6)所示。
- en: '![image](../images/f0248-01.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0248-01.jpg)'
- en: '*Figure 12-6: The outcomes of simulated retirement periods displayed as vertical
    columns in a bar chart*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-6：模拟退休期间的结果以垂直柱状图形式展示*'
- en: In this chart, each bar represents the retirement portion of a single simulated
    lifetime, and the height of each bar represents the money remaining at the end
    of that life. Because each bar represents an individual category rather than intervals
    for continuous measurement, you can arrange the bars in any order without affecting
    the data. Gaps, representing cases that ran out of money, can be included in the
    order they occurred in the simulation. With the quantitative statistics recorded
    in the interpreter window, this diagram provides a qualitative way to present
    the results.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在这张图表中，每一条条形代表单一模拟寿命的退休部分，每个条形的高度代表该生命结束时剩余的资金。由于每个条形代表一个单独的类别，而不是连续测量的区间，因此你可以随意排列这些条形，而不会影响数据的呈现。可以将表示资金耗尽的间隙按它们在模拟中发生的顺序排列。通过解释器窗口中记录的定量统计数据，这个图表提供了一种定性的方式来展示结果。
- en: The peaks and valleys of this chart represent the changing fortunes of many
    possible futures. In one lifetime, you can die destitute; in the next, you’re
    a multimillionaire. It’s evocative of the old saying “There but for the grace
    of God go I.” But, on the other hand, it reinforces General Eisenhower’s observation
    that “plans are useless, but planning is indispensable.” Through financial planning,
    you can “raise the valleys” in the chart and eliminate or greatly reduce your
    odds of going broke in retirement.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图表的峰值和谷值代表许多可能未来的财富变动。在某一生中，你可能会一贫如洗；而在另一生中，你可能会是个百万富翁。这让人联想到古老的说法：“如果不是上帝的恩典，我也许就是那个命运多舛的人。”然而，从另一个角度看，它也印证了艾森豪威尔将军的观察：“计划无用，但规划不可或缺。”通过财务规划，你可以“提高”图表中的谷值，并消除或大大减少在退休中破产的概率。
- en: To make this chart, you’ll use matplotlib, a library that supports 2D plotting
    and rudimentary 3D plotting. To learn more about matplotlib and how to install
    it, see “[The Probability-of-Detection Code](ch10.xhtml#lev226)” on [page 194](ch10.xhtml#page_194).
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要绘制此图表，你将使用matplotlib，这是一个支持二维绘图和基本三维绘图的库。要了解更多有关matplotlib的信息以及如何安装它，请参阅[《检测概率代码》](ch10.xhtml#lev226)，位于[第194页](ch10.xhtml#page_194)。
- en: '**The Pseudocode**'
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**伪代码**'
- en: 'Based on the preceding discussion, the program design strategy should be to
    focus on a few important retirement parameters and simulate outcomes using the
    historical behavior of the financial markets. Here’s the high-level pseudocode:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的讨论，程序设计策略应聚焦于几个重要的退休参数，并使用金融市场的历史行为模拟结果。以下是高层次的伪代码：
- en: Get user input for investment type (all stocks, all bonds, or a blend)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户输入的投资类型（全股票、全债券或混合型）
- en: Map investment type choice to a list of historical returns
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 将投资类型选择映射到历史回报列表
- en: Get user input for the starting value of investments
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户输入的初始投资值
- en: Get user input for the initial yearly withdrawal amount
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户输入的初始年提款金额
- en: Get user input for the minimum, most likely, and maximum duration of retirement
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户输入的退休最短、最可能和最长时长
- en: Get user input on number of cases to run
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 获取用户输入的案例数量
- en: Start list to hold outcomes
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 启动列表以保存结果
- en: 'Loop through cases:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历所有案例：
- en: 'For each case:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 对每个案例：
- en: Extract random contiguous sample of returns list for duration period
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 从回报列表中提取随机的连续样本作为持续期
- en: Extract same interval from inflation list
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 从通货膨胀列表中提取相同的区间
- en: 'For each year in sample:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对每个年份进行处理：
- en: 'If year not equal to year 1:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果年份不等于年份 1：
- en: Adjust withdrawal for inflation
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 调整提款以应对通货膨胀
- en: Subtract withdrawal from investments
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 从投资中扣除提款
- en: Adjust investments for returns
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 调整投资以获得回报
- en: 'If investments <= 0:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果投资 <= 0：
- en: Investments = 0
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 投资 = 0
- en: Break
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 终止
- en: Append investments value to outcomes list
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 将投资值附加到结果列表中
- en: Display input parameters
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 显示输入参数
- en: Calculate and display the probability of ruin
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 计算并显示破产的概率
- en: Calculate and display statistics
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 计算并显示统计数据
- en: Display a subset of outcomes as a bar chart
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以条形图显示一部分结果
- en: '**Finding Historical Data**'
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**查找历史数据**'
- en: You can find returns and inflation information on numerous websites (see “[Further
    Reading](ch12.xhtml#lev289)” on [page 263](ch12.xhtml#page_263) for some examples),
    but I have already compiled the information you need as a series of downloadable
    text files. If you choose to compile your own lists, be aware that estimates of
    both inflation and returns may vary slightly from site to site.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在许多网站上找到回报和通货膨胀信息（例如，参见“[进一步阅读](ch12.xhtml#lev289)”在[第263页](ch12.xhtml#page_263)的示例），但我已经将你所需要的信息整理为一系列可下载的文本文件。如果你选择自己编制列表，请注意，通货膨胀和回报的估算值可能会略有不同，具体取决于不同网站。
- en: 'For returns, I used three investment vehicles: the S&P 500 stock index, the
    10-year Treasury bond, and the three-month Treasury bill, all for the period 1926
    to 2013 (1926–1927 values for the Treasury bill are estimates). I used this data
    to generate additional blended returns for the same period. The following list
    describes the filenames and contents:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 对于回报，我使用了三种投资工具：标准普尔 500 指数、10 年期国债和三个月期国库券，数据覆盖了 1926 到 2013 年（1926–1927 年国库券的数据为估算值）。我使用这些数据生成了额外的混合回报数据，涵盖了相同的时间段。以下是文件名和内容的说明：
- en: '***SP500_returns_1926-2013_pct.txt*** Total returns for the S&P 500 (1926–2013)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '***SP500_returns_1926-2013_pct.txt*** 标准普尔 500 指数的总回报（1926–2013）'
- en: '***10-yr_TBond_returns_1926-2013_pct.txt*** Total returns for the 10-year Treasury
    bond (1926–2013)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '***10-yr_TBond_returns_1926-2013_pct.txt*** 10 年期国债的总回报（1926–2013）'
- en: '***3_mo_TBill_rate_1926-2013_pct.txt*** Rate of three-month Treasury bill (1926–2013)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '***3_mo_TBill_rate_1926-2013_pct.txt*** 三个月期国库券利率（1926–2013）'
- en: '***S-B_blend_1926-2013_pct.txt*** 50/50 percent mix of S&P 500 and 10-year
    Treasury bond (1926–2013)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '***S-B_blend_1926-2013_pct.txt*** 50/50 百分比混合的标准普尔 500 指数和 10 年期国债（1926–2013）'
- en: '***S-B-C_blend_1926-2013_pct.txt*** 40/50/10 percent mix of S&P 500, 10-year
    Treasury bond, three-month Treasury bill (1926–2013)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '***S-B-C_blend_1926-2013_pct.txt*** 40/50/10 百分比混合的标准普尔 500 指数、10 年期国债和三个月期国库券（1926–2013）'
- en: '***annual_infl_rate_1926-2013_pct.txt*** Average annual US inflation rate (1926–2013)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '***annual_infl_rate_1926-2013_pct.txt*** 美国年均通货膨胀率（1926–2013）'
- en: 'Here’s an example of the first seven lines of the S&P 500 text file:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是标准普尔 500 指数文本文件的前七行示例：
- en: '11.6'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '11.6'
- en: '37.5'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '37.5'
- en: '43.8'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '43.8'
- en: '-8.3'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '-8.3'
- en: '-25.1'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '-25.1'
- en: '-43.8'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '-43.8'
- en: '-8.6'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '-8.6'
- en: The values are percentages, but you’ll change them to decimal values when you
    load them in the code. Note that years aren’t included, as the values are in chronological
    order. If all the files cover the same time interval, the actual years are irrelevant,
    though you should include them in the filename for good bookkeeping.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这些值是百分比，但在代码中加载时你需要将它们转换为小数值。请注意，年份没有包含在内，因为这些值是按时间顺序排列的。如果所有文件涵盖相同的时间段，实际的年份并不重要，但为了便于记账，你应在文件名中包含年份。
- en: '**The Code**'
  id: totrans-123
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**代码**'
- en: Name your retirement nest-egg simulator *nest_egg_mcs.py*. You’ll need the text
    files described in “[Finding Historical Data](ch12.xhtml#lev278)” on [page 249](ch12.xhtml#page_249).
    Download these files from *[https://www.nostarch.com/impracticalpython/](https://www.nostarch.com/impracticalpython/)*
    and keep them in the same folder as *nest_egg_mcs.py*.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 将你的退休储蓄模拟器命名为 *nest_egg_mcs.py*。你将需要在“[查找历史数据](ch12.xhtml#lev278)”中描述的文本文件，位于[第249页](ch12.xhtml#page_249)。从
    *[https://www.nostarch.com/impracticalpython/](https://www.nostarch.com/impracticalpython/)*
    下载这些文件，并将它们保存在与 *nest_egg_mcs.py* 相同的文件夹中。
- en: '***Importing Modules and Defining Functions to Load Data and Get User Input***'
  id: totrans-125
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***导入模块并定义函数以加载数据并获取用户输入***'
- en: '[Listing 12-1](ch12.xhtml#ch12list1) imports modules and defines a function
    to read the historical returns and inflation data, as well as another function
    to get the user’s input. Feel free to alter or add to the historical data to conduct
    experiments after the program is up and running.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 12-1](ch12.xhtml#ch12list1) 导入模块并定义一个函数，用于读取历史回报和通货膨胀数据，以及另一个函数用于获取用户输入。在程序启动后，您可以自由修改或添加历史数据以进行实验。'
- en: '*nest_egg_mcs.py,* part 1'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py*，第一部分'
- en: import sys
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 导入 sys
- en: import random
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 导入随机库
- en: ➊ import matplotlib.pyplot as plt
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ 导入 matplotlib.pyplot 作为 plt
- en: '➋ def read_to_list(file_name):'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '➋ 定义 read_to_list 函数（file_name）:'
- en: '"""Open a file of data in percent, convert to decimal & return a list."""'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '"""打开一个百分比数据文件，将其转换为小数并返回列表。"""'
- en: '➌ with open(file_name) as in_file:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '➌ 使用 open(file_name) 作为 in_file:'
- en: ➍ lines = [float(line.strip()) for line in in_file]
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ lines = [float(line.strip()) for line in in_file]
- en: ➎ decimal = [round(line / 100, 5) for line in lines]
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ decimal = [round(line / 100, 5) for line in lines]
- en: ➏ return decimal
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: ➏ 返回小数
- en: '➐ def default_input(prompt, default=None):'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '➐ 定义默认输入函数（prompt, default=None）:'
- en: '"""Allow use of default values in input."""'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '"""允许在输入中使用默认值。"""'
- en: '➑     prompt = ''{} [{}]: ''.format(prompt, default)'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '➑     prompt = ''{} [{}]: ''.format(prompt, default)'
- en: ➒     response = input(prompt)
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: ➒     response = input(prompt)
- en: '➓     if not response and default:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '➓     if not response and default:'
- en: return default
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: return default
- en: 'else:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: return response
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: return response
- en: '*Listing 12-1: Imports modules and defines functions to load data and get user
    input*'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-1：导入模块并定义函数以加载数据并获取用户输入*'
- en: The import statements should all be familiar. The matplotlib library is needed
    to build the bar chart of results. You only need the plotting functionality, as
    specified in the import statement ➊.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 导入语句应该都很熟悉。需要使用 matplotlib 库来构建结果的柱状图。你只需要导入图形功能，如导入语句中所指定的 ➊。
- en: Next, define a function called read_to_list() to load a data file and process
    its contents ➋. You’ll pass it the name of the file as an argument.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，定义一个名为 read_to_list() 的函数来加载数据文件并处理其内容 ➋。你将传递文件名作为参数。
- en: Open the file using with, which will automatically close it ➌, and then use
    list comprehension to build a list of the contents ➍. Immediately convert the
    list items, which are in percents, to decimal values rounded to five decimal places
    ➎. Historical returns are usually presented to two decimal places at most, so
    rounding to five should be sufficient. You may notice more accuracy in the values
    of some of the data files used here, but that’s just the result of some preprocessing
    in Excel. End by returning the decimal list ➏.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 with 打开文件，这样会自动关闭文件 ➌，然后使用列表推导式构建文件内容的列表 ➍。立即将列表项（以百分比形式）转换为五位小数的十进制值 ➎。历史回报通常最多以两位小数表示，因此四舍五入到五位小数应该足够。你可能会注意到一些数据文件中的值更精确，但那只是经过
    Excel 预处理后的结果。最后返回十进制列表 ➏。
- en: Now, define a function called default_input() to get the user’s input ➐. The
    function takes a prompt and a default value as arguments. The prompt and default
    will be specified when the function is called, and the program will display the
    default in brackets ➑. Assign a response variable to the user’s input ➒. If the
    user enters nothing and a default value exists, the default value is returned;
    otherwise, the user’s response is returned ➓.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，定义一个名为 default_input() 的函数来获取用户输入 ➐。该函数接受提示和默认值作为参数。在调用该函数时，会指定提示和默认值，并且程序会在括号中显示默认值
    ➑。将响应变量赋值为用户的输入 ➒。如果用户未输入任何内容且存在默认值，则返回默认值；否则，返回用户的响应 ➓。
- en: '***Getting the User Input***'
  id: totrans-150
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***获取用户输入***'
- en: '[Listing 12-2](ch12.xhtml#ch12list2) loads the data files, maps the resulting
    lists to simple names using a dictionary, and gets the user’s input. The dictionary
    will be used to present the user with multiple choices for an investment type.
    Overall, user input consists of:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表 12-2](ch12.xhtml#ch12list2) 加载数据文件，使用字典将结果列表映射为简单名称，并获取用户输入。字典将用于向用户提供多个投资类型的选择。总体来说，用户输入包括：'
- en: The type of investment to use (stocks, bonds, or a blend of both)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用的投资类型（股票、债券或两者的组合）
- en: The starting value of their retirement savings
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们退休储蓄的起始金额
- en: A yearly withdrawal, or spending, amount
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每年提取或支出的金额
- en: The minimum, most likely, and maximum number of years they expect to live in
    retirement
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们预期退休后生活的最小、最可能和最大年数
- en: The number of cases to run
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要运行的案例数量
- en: '*nest_egg_mcs.py,* part 2'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py,* 第二部分'
- en: '# load data files with original data in percent form'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '# 使用原始数据加载数据文件，数据以百分比形式表示'
- en: '➊ print("\nNote: Input data should be in percent, not decimal!\n")'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ print("\n注意：输入数据应以百分比表示，而非小数！\n")
- en: 'try:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 'try:'
- en: bonds = read_to_list('10-yr_TBond_returns_1926-2013_pct.txt')
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: bonds = read_to_list('10-yr_TBond_returns_1926-2013_pct.txt')
- en: stocks = read_to_list('SP500_returns_1926-2013_pct.txt')
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: stocks = read_to_list('SP500_returns_1926-2013_pct.txt')
- en: blend_40_50_10 = read_to_list('S-B-C_blend_1926-2013_pct.txt')
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: blend_40_50_10 = read_to_list('S-B-C_blend_1926-2013_pct.txt')
- en: blend_50_50 = read_to_list('S-B_blend_1926-2013_pct.txt')
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: blend_50_50 = read_to_list('S-B_blend_1926-2013_pct.txt')
- en: infl_rate = read_to_list('annual_infl_rate_1926-2013_pct.txt')
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: infl_rate = read_to_list('annual_infl_rate_1926-2013_pct.txt')
- en: 'except IOError as e:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 'except IOError as e:'
- en: print("{}. \nTerminating program.".format(e), file=sys.stderr)
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: print("{}. \n程序终止。".format(e), file=sys.stderr)
- en: sys.exit(1)
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: sys.exit(1)
- en: '# get user input; use dictionary for investment-type arguments'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '# 获取用户输入；使用字典作为投资类型参数'
- en: '➋ investment_type_args = {''bonds'': bonds, ''stocks'': stocks,'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '➋ investment_type_args = {''bonds'': bonds, ''stocks'': stocks,'
- en: '''sb_blend'': blend_50_50, ''sbc_blend'': blend_40_50_10}'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '''sb_blend'': blend_50_50, ''sbc_blend'': blend_40_50_10}'
- en: '➌ # print input legend for user'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '➌ # 为用户打印输入说明'
- en: print("   stocks = SP500")
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: print("   stocks = SP500")
- en: print("    bonds = 10-yr Treasury Bond")
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: print("    bonds = 10年期国债")
- en: print(" sb_blend = 50% SP500/50% TBond")
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: print(" sb_blend = 50% SP500/50% TBond")
- en: print("sbc_blend = 40% SP500/50% TBond/10% Cash\n")
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: print("sbc_blend = 40% SP500/50% TBond/10% Cash\n")
- en: print("Press ENTER to take default value shown in [brackets]. \n")
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: print("按 ENTER 键接受显示在[括号]中的默认值。\n")
- en: '# get user input'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '# 获取用户输入'
- en: '➍ invest_type = default_input("Enter investment type: (stocks, bonds, sb_blend,"\'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ invest_type = default_input("请输入投资类型：（stocks, bonds, sb_blend，"\
- en: '" sbc_blend): \n", ''bonds'').lower()'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '" sbc_blend)：\n", ''bonds'').lower()'
- en: '➎ while invest_type not in investment_type_args:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '➎ while invest_type not in investment_type_args:'
- en: invest_type = input("Invalid investment. Enter investment type " \
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: invest_type = input("无效投资类型。请输入投资类型 " \
- en: '"as listed in prompt: ")'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '"如提示中列出：")'
- en: 'start_value = default_input("Input starting value of investments: \n", \'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: start_value = default_input("输入投资的起始金额：\n", \
- en: '''2000000'')'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '''2000000'')'
- en: '➏ while not start_value.isdigit():'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '➏ while not start_value.isdigit():'
- en: 'start_value = input("Invalid input! Input integer only: ")'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: start_value = input("无效输入！仅输入整数：")
- en: ➐ withdrawal = default_input("Input annual pre-tax withdrawal" \
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: ➐ withdrawal = default_input("输入年度税前取款金额" \
- en: '" (today''s $): \n", ''80000'')'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '"（今天的$）：\n", ''80000'')'
- en: 'while not withdrawal.isdigit():'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not withdrawal.isdigit():'
- en: 'withdrawal = input("Invalid input! Input integer only: ")'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: withdrawal = input("无效输入！仅输入整数：")
- en: 'min_years = default_input("Input minimum years in retirement: \n", ''18'')'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: min_years = default_input("输入退休的最小年数：\n", '18')
- en: 'while not min_years.isdigit():'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not min_years.isdigit():'
- en: 'min_years = input("Invalid input! Input integer only: ")'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: min_years = input("无效输入！仅输入整数：")
- en: 'most_likely_years = default_input("Input most-likely years in retirement: \n",'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: most_likely_years = default_input("输入退休时最可能的年数：\n",
- en: '''25'')'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '''25'')'
- en: 'while not most_likely_years.isdigit():'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not most_likely_years.isdigit():'
- en: 'most_likely_years = input("Invalid input! Input integer only: ")'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: most_likely_years = input("无效输入！仅输入整数：")
- en: 'max_years = default_input("Input maximum years in retirement: \n", ''40'')'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: max_years = default_input("输入退休的最大年数：\n", '40')
- en: 'while not max_years.isdigit():'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not max_years.isdigit():'
- en: 'max_years = input("Invalid input! Input integer only: ")'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: max_years = input("无效输入！仅输入整数：")
- en: 'num_cases = default_input("Input number of cases to run: \n", ''50000'')'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: num_cases = default_input("输入运行案例的数量：\n", '50000')
- en: 'while not num_cases.isdigit():'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not num_cases.isdigit():'
- en: 'num_cases = input("Invalid input! Input integer only: ")'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: num_cases = input("无效输入！仅输入整数：")
- en: '*Listing 12-2: Loads data, maps choices to lists, and gets user input*'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单12-2：加载数据，将选择映射到列表，并获取用户输入*'
- en: After printing a warning that input data should be in percent form, use the
    read_to_list() function to load the six data files ➊. Use try when opening the
    files to catch exceptions related to missing files or incorrect filenames. Then
    handle the exceptions with an except block. If you need a refresher on try and
    except, refer to “[Handling Exceptions When Opening Files](ch02.xhtml#lev34)”
    on [page 21](ch02.xhtml#page_21).
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在打印警告提示输入数据应以百分比形式给出后，使用 read_to_list() 函数加载六个数据文件 ➊。使用 try 打开文件以捕获与缺失文件或文件名错误相关的异常。然后使用
    except 块处理这些异常。如果你需要复习 try 和 except，请参考 “[Handling Exceptions When Opening Files](ch02.xhtml#lev34)”
    第21页中的内容。
- en: 'The user will have a choice of investment vehicles to test. To allow them to
    type in simple names, use a dictionary to map the names to the lists of data you
    just loaded ➋. Later, you’ll pass a function this dictionary and its key to serve
    as an argument: montecarlo(investment_type_args[invest_type]). Before asking for
    input, print a legend to aid the user ➌.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 用户将有选择不同投资工具进行测试的机会。为了让他们输入简单的名称，使用字典将这些名称映射到你刚刚加载的数据列表 ➋。稍后，你将把这个字典及其键作为参数传递给一个函数：montecarlo(investment_type_args[invest_type])。在请求输入之前，先打印一个图例帮助用户
    ➌。
- en: Next, get the user’s investment choice ➍. Use the default_input() function and
    list the names of the choices, which are mapped back to the data lists. Set the
    default to 'bonds', in order to see how this supposedly “safe” choice performs.
    Be sure to tack on the .lower() method in case the user accidently includes an
    uppercase letter or two. For other possible input errors, use a while loop to
    check the input versus the names in the investment_type_args dictionary; if you
    don’t find the input, prompt the user for a correct answer ➎.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，获取用户的投资选择 ➍。使用 default_input() 函数列出可选的投资类型，这些类型会映射回数据列表。将默认值设置为 'bonds'，以便查看这个所谓的“安全”选择的表现。一定要加上
    .lower() 方法，以防用户不小心输入了大写字母。对于其他可能的输入错误，使用 while 循环检查输入是否与 investment_type_args
    字典中的名称匹配；如果未找到匹配项，提示用户输入正确的答案 ➎。
- en: Continue gathering the input and use the default values to guide the user to
    reasonable inputs. For example, $80,000 is 4 percent of the starting value of
    $2,000,000; also, 25 years is a good most-likely value for women entering retirement
    at 60, a maximum value of 40 will allow them to reach 100, and 50,000 cases should
    quickly yield a good estimate of the probability of ruin.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 继续收集输入，并使用默认值引导用户合理输入。例如，$80,000 是 $2,000,000 启动值的 4%；另外，对于60岁开始退休的女性，25 年是一个较好的最可能值，最大值设为
    40 年可让她们活到 100 岁，而 50,000 个案例应该能快速得出破产概率的良好估计。
- en: For numerical inputs, use a while loop to check that the input is a digit, just
    in case the user includes a dollar sign ($) or commas in the number ➏. And for
    the withdrawal amount, use the prompt to guide the user by letting them know to
    input *today’s* dollars and not to worry about inflation ➐.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数值输入，使用 while 循环检查输入是否为数字，以防用户在数字中加入美元符号（$）或逗号 ➏。对于提款金额，使用提示引导用户，告知他们输入的是*今天*的金额，而不必担心通货膨胀
    ➐。
- en: '***Checking for Other Erroneous Input***'
  id: totrans-211
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***检查其他错误输入***'
- en: '[Listing 12-3](ch12.xhtml#ch12list3) checks for additional input errors. The
    order of the minimum, most likely, and maximum years in retirement should be logical,
    and a maximum length of 99 years is enforced. Allowing for a long time in retirement
    permits the optimistic user to evaluate cases where medical science makes significant
    advances in anti-aging treatments!'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 12-3](ch12.xhtml#ch12list3) 检查是否存在其他输入错误。退休的最小、最可能和最大年数应该是合乎逻辑的，并且强制规定最大年数为
    99 年。允许较长的退休时间可以让乐观的用户评估医学科学在抗衰老治疗方面取得重大进展的情况！'
- en: '*nest_egg_mcs.py,* part 3'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py,* 第 3 部分'
- en: '# check for other erroneous input'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '# 检查其他错误输入'
- en: ➊ if not int(min_years) < int(most_likely_years) < int(max_years) \
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ if not int(min_years) < int(most_likely_years) < int(max_years) \
- en: 'or int(max_years) > 99:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '或者 int(max_years) > 99:'
- en: ➋ print("\nProblem with input years.", file=sys.stderr)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ print("\n输入年数有问题。", file=sys.stderr)
- en: print("Requires Min < ML < Max with Max <= 99.", file=sys.stderr)
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: print("要求最小 < 最可能 < 最大，并且最大年数 <= 99。", file=sys.stderr)
- en: sys.exit(1)
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: sys.exit(1)
- en: '*Listing 12-3: Checks for errors and sets limits in the retirement years input*'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-3：检查退休年数输入中的错误并设置限制*'
- en: Use a conditional to ensure that the minimum years input is less than the most
    likely, the most likely is less than the maximum, and the maximum does not exceed
    99 ➊. If a problem is encountered, alert the user ➋, provide some clarifying instructions,
    and exit the program.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 使用条件判断确保最小年数输入小于最可能年数，最可能年数小于最大年数，并且最大年数不超过 99 ➊。如果遇到问题，提示用户 ➋，提供一些澄清说明，并退出程序。
- en: '***Defining the Monte Carlo Engine***'
  id: totrans-222
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***定义蒙特卡罗引擎***'
- en: '[Listing 12-4](ch12.xhtml#ch12list4) defines the first part of the function
    that will run the Monte Carlo simulation. The program uses a loop to run through
    each case, and the number of years in retirement inputs will be used to sample
    the historical data. For both the returns and inflation lists, the program chooses
    a starting year, or index, at random. The number of years in retirement, assigned
    to a duration variable, is drawn from a triangular distribution built from the
    user’s input. If 30 is chosen, then 30 is added to this starting index to create
    the ending index. The random starting year will determine the retiree’s financial
    fortunes for the rest of their life! Timing is everything, as they say.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 12-4](ch12.xhtml#ch12list4) 定义了运行蒙特卡罗模拟的函数的第一部分。程序使用循环运行每个案例，并且退休年数的输入将用于抽取历史数据。对于回报和通货膨胀列表，程序随机选择一个起始年份或索引。退休年数，将其分配给一个持续时间变量，是从用户输入的三角分布中抽取的。如果选择了
    30 年，那么 30 年会被加到这个起始索引上，创建结束索引。随机的起始年将决定退休者未来一生的财务命运！正如人们所说，时机就是一切。'
- en: '*nest_egg_mcs.py,* part 4'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py,* 第 4 部分'
- en: '➊ def montecarlo(returns):'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ def montecarlo(returns):'
- en: '"""Run MCS and return investment value at end-of-plan and bankrupt count."""'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '"""运行蒙特卡罗模拟并返回计划结束时的投资值和破产计数。"""'
- en: ➋ case_count = 0
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ case_count = 0
- en: bankrupt_count = 0
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: bankrupt_count = 0
- en: outcome = []
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: outcome = []
- en: '➌ while case_count < int(num_cases):'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '➌ while case_count < int(num_cases):'
- en: investments = int(start_value)
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: investments = int(start_value)
- en: ➍ start_year = random.randrange(0, len(returns))
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ start_year = random.randrange(0, len(returns))
- en: ➎ duration = int(random.triangular(int(min_years), int(max_years),
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ duration = int(random.triangular(int(min_years), int(max_years),
- en: int(most_likely_years)))
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: int(most_likely_years)))
- en: ➏ end_year = start_year + duration
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: ➏ end_year = start_year + duration
- en: ➐ lifespan = [i for i in range(start_year, end_year)]
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: ➐ lifespan = [i for i in range(start_year, end_year)]
- en: bankrupt = 'no'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: bankrupt = 'no'
- en: '# build temporary lists for each case'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '# 为每个案例构建临时列表'
- en: ➑ lifespan_returns = []
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: ➑ lifespan_returns = []
- en: lifespan_infl = []
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: lifespan_infl = []
- en: 'for i in lifespan:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 'for i in lifespan:'
- en: ➒ lifespan_returns.append(returns[i % len(returns)])
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: ➒ lifespan_returns.append(returns[i % len(returns)])
- en: lifespan_infl.append(infl_rate[i % len(infl_rate)])
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: lifespan_infl.append(infl_rate[i % len(infl_rate)])
- en: '*Listing 12-4: Defines the Monte Carlo function and starts a loop through cases*'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 12-4：定义蒙特卡罗函数并开始循环遍历各个案例*'
- en: The montecarlo() function takes a returns list as an argument ➊. The first step
    is to start a counter to keep track of which case is being run ➋. Remember that
    you don’t need to use actual dates; the first year in the lists is index 0, rather
    than 1926\. In addition, start a counter for the number of cases that run out
    of money early. Then start an empty list to hold the outcomes of each run, which
    will be the amount of money remaining at the end of the run.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '`montecarlo()` 函数将回报列表作为参数 ➊。第一步是启动一个计数器，用来跟踪当前正在运行的是哪个案例 ➋。记住，你不需要使用实际的日期；列表中的第一年是索引
    0，而不是 1926 年。此外，启动一个计数器来记录提前用尽资金的案例数。然后，启动一个空列表，用来保存每次运行的结果，也就是每次运行结束时剩余的金额。'
- en: Begin the while loop that will run through the cases ➌. Assign a new variable,
    called investments, to the starting investment value that the user specified.
    Since the investments variable will change constantly, you need to preserve the
    original input variable to reinitialize each case. And since all the user input
    came in as strings, you need to convert the values to integers before using them.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 开始运行将遍历各个案例的 `while` 循环 ➌。为开始投资值指定一个新的变量 `investments`，该值由用户指定。由于 `investments`
    变量会不断变化，因此你需要保留原始输入变量以在每个案例中重新初始化。而且，由于所有用户输入的值都是字符串类型，你需要在使用它们之前将这些值转换为整数。
- en: Next, assign a start_year variable and pick a value at random from the range
    of available years ➍. To get the time spent in retirement for this simulated life,
    use the random module’s triangular() method to draw from a triangular distribution
    defined by the user’s min_years, most_likely_years, and max_years inputs ➎. According
    to the documentation, triangular() returns a random floating-point number *N*
    such that low <= *N* <= high and with the specified *mode* between those bounds.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，指定一个 `start_year` 变量，并从可用年份范围中随机选择一个值 ➍。为了获得模拟寿命中的退休时间，使用 `random` 模块的 `triangular()`
    方法从一个由用户的 `min_years`、`most_likely_years` 和 `max_years` 输入定义的三角分布中抽取数据 ➎。根据文档，`triangular()`
    会返回一个随机的浮动值 *N*，使得低值 <= *N* <= 高值，并且模式位于这两个边界之间。
- en: Add this duration variable to the start_year variable and assign the result
    to an end_year variable ➏. Now, make a new list, named lifespan, that captures
    all the indexes between the starting year and the ending year ➐. These indexes
    will be used to match the retirement period to the historical data. Next, assign
    a bankrupt variable to 'no'. Bankrupt means you’ve run out of money, and later
    this outcome will end the while loop early, using a break statement.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 将这个持续时间变量加到 `start_year` 变量上，并将结果赋值给 `end_year` 变量 ➏。现在，创建一个新的列表，命名为 `lifespan`，该列表包含从起始年份到结束年份之间的所有索引
    ➐。这些索引将用来将退休期与历史数据匹配。接下来，将 `bankrupt` 变量赋值为 'no'。`bankrupt` 意味着你已用尽资金，稍后此结果将通过
    `break` 语句提前结束 `while` 循环。
- en: Use two lists to store the applicable returns and inflation data for the chosen
    lifespan ➑. Populate these lists using a for loop that uses each item in lifespan
    as the index for the returns and inflation lists. If the lifespan index is out
    of range compared to the other lists, use the modulo (%) operator to wrap the
    indexes ➒.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 使用两个列表来存储所选寿命 ➑ 的适用回报和通货膨胀数据。使用 `for` 循环填充这些列表，循环使用寿命中的每个项目作为回报和通货膨胀列表的索引。如果寿命索引相对于其他列表超出范围，则使用模运算符（%）来包装索引
    ➒。
- en: Let’s cover a little more background on this listing. The randomly selected
    start_year variable and the calculated end_year variable determine how the returns
    and inflation lists are sampled. The sample is a continuous piece of financial
    history and constitutes a case. Selecting an *interval* at random distinguishes
    this program from online calculators that select individual *years* at random
    and may use a *different year* for each asset class and inflation! Market results
    aren’t pure chaos; bull and bear markets are cyclic, as are inflationary trends.
    The same events that cause stocks to decline also impact the price of bonds and
    the rate of inflation. Picking years at random ignores this interdependency and
    disrupts known behaviors, leading to unrealistic results.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们稍微补充一些关于这个列表的背景信息。随机选择的 start_year 变量和计算得到的 end_year 变量决定了回报和通货膨胀列表的采样方式。该样本是一段连续的金融历史，并构成一个案例。随机选择一个*区间*将这个程序与选择单独*年份*的在线计算器区分开来，后者可能会为每个资产类别和通货膨胀使用*不同的年份*！市场结果不是纯粹的混乱；牛市和熊市是周期性的，通货膨胀趋势也是如此。导致股票下跌的同样事件也会影响债券价格和通货膨胀率。随机选择年份忽略了这种相互依赖性，扰乱了已知的行为，导致不现实的结果。
- en: In [Figure 12-7](ch12.xhtml#ch12fig7), the retiree (known as Case 1) has chosen
    to retire in 1965—at the start of the Great Inflation—and to invest in bonds.
    Because the end year occurs before the end of the returns list, the retirement
    span fits nicely in the list. Both returns and inflation are sampled over the
    same interval.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图12-7](ch12.xhtml#ch12fig7)中，退休人员（案例1）选择在1965年退休——即大通货膨胀的开始——并投资于债券。由于结束年份发生在回报列表的结束之前，退休时间段恰好适合这个列表。回报和通货膨胀在相同的区间内被采样。
- en: '![image](../images/f0255-01.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0255-01.jpg)'
- en: '*Figure 12-7: Graph of bond and inflation lists, with a retirement starting
    in 1965 annotated*'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-7：债券和通货膨胀列表的图示，标注了1965年开始的退休情况*'
- en: In [Figure 12-8](ch12.xhtml#ch12fig8), the retiree, or Case 2, has chosen to
    retire in 2000\. Because the list ends in 2013, the 30-year sample taken by the
    MCS function must “wrap around” and cover years 1926 through 1941\. This forces
    the retiree to endure two recessions and a depression.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在[图12-8](ch12.xhtml#ch12fig8)中，退休人员或案例2选择在2000年退休。由于列表在2013年结束，MCS函数所取的30年样本必须“环绕”并覆盖1926年到1941年的年份。这迫使退休人员经历两次衰退和一次大萧条。
- en: '![image](../images/f0256-01.jpg)'
  id: totrans-255
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0256-01.jpg)'
- en: '*Figure 12-8: Graph of bonds and inflation lists, with segments used in Case
    2 annotated*'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-8：债券和通货膨胀列表的图示，标注了案例2中使用的区间*'
- en: The program will need to simulate the wrap-around segment you see in Case 2—hence
    the use of the modulo operator, which allows you to treat the lists as endless
    loops.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 程序需要模拟你在案例2中看到的环绕区间——因此使用模运算符，它允许你将列表视为无限循环。
- en: '***Simulating Each Year in a Case***'
  id: totrans-258
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***模拟案例中的每一年***'
- en: '[Listing 12-5](ch12.xhtml#ch12list5) continues the montecarlo() function and
    loops through each year of retirement for a given case, increasing or decreasing
    the investment value based on the returns for that year, subtracting the inflation-adjusted
    withdrawal amount from the investments, and checking whether the investments are
    exhausted. The program saves the final investment value—representing the savings
    remaining at death—to a list so that the overall probability of ruin can be calculated
    at the end.'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '[列表12-5](ch12.xhtml#ch12list5)继续执行 montecarlo() 函数，并循环通过给定案例的每一年退休期间，根据该年份的回报增加或减少投资值，从投资中减去调整过通货膨胀的取款金额，并检查投资是否已耗尽。程序将最终的投资值——表示死亡时剩余的储蓄——保存到一个列表中，以便在最后计算整体的破产概率。'
- en: '*nest_egg_mcs.py,* part 5'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py,* 第5部分'
- en: '# loop through each year of retirement for each case run'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '# 对每个案例运行的退休每一年进行循环'
- en: '➊ for index, i in enumerate(lifespan_returns):'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ 对于 index, i 在 enumerate(lifespan_returns) 中：
- en: ➋ infl = lifespan_infl[index]
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ infl = lifespan_infl[index]
- en: '➌ # don''t adjust for inflation the first year'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '➌ # 第一年的通货膨胀不调整'
- en: 'if index == 0:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 index == 0：
- en: withdraw_infl_adj = int(withdrawal)
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: withdraw_infl_adj = int(withdrawal)
- en: 'else:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: withdraw_infl_adj = int(withdraw_infl_adj * (1 + infl))
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: withdraw_infl_adj = int(withdraw_infl_adj * (1 + infl))
- en: ➍ investments -= withdraw_infl_adj
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ investments -= withdraw_infl_adj
- en: investments = int(investments * (1 + i))
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: investments = int(investments * (1 + i))
- en: '➎ if investments <= 0:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ 如果投资 <= 0：
- en: bankrupt = 'yes'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: bankrupt = 'yes'
- en: break
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: break
- en: '➏ if bankrupt == ''yes'':'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: ➏ 如果 bankrupt == 'yes'：
- en: outcome.append(0)
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: outcome.append(0)
- en: bankrupt_count += 1
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: bankrupt_count += 1
- en: 'else:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: outcome.append(investments)
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: outcome.append(investments)
- en: ➐ case_count += 1
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: ➐ case_count += 1
- en: ➑ return outcome, bankrupt_count
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: ➑ 返回 outcome, bankrupt_count
- en: '*Listing 12-5: Simulates results for each year in retirement (per case)*'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-5: 模拟退休期间每一年的结果（每种情况）*'
- en: Start the for loop that will run through all the years in a case ➊. Use enumerate()
    on the returns list and use the index that enumerate() produced to get the year’s
    average inflation value from the inflation list ➋. Use a conditional to start
    applying inflation after the first year ➌. This will slowly increase or decrease
    the withdrawal amount over time, depending on whether you’re in inflationary or
    deflationary times.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 开始一个 for 循环，遍历每种情况中的所有年份 ➊。对 returns 列表使用 enumerate()，并使用 enumerate() 生成的索引从
    inflation 列表中获取该年的平均通胀值 ➋。使用条件语句在第一年之后开始应用通胀 ➌。这将根据你是否处于通货膨胀或通货紧缩时期，逐渐增加或减少提款金额。
- en: Subtract the inflation-adjusted withdrawal value from the investments variable,
    then adjust investments for the year’s returns ➍. Check that the value of investments
    is greater than 0\. If it’s not, set the bankrupt variable to 'yes' and end the
    loop ➎. For a bankrupt case, append 0 to the outcome list ➏. Otherwise, the loop
    continues until the duration of retirement is reached, so you append the remaining
    value of investments to outcome.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 从调整过通胀的提款金额中减去投资金额，然后根据该年的回报调整投资金额 ➍。检查投资金额是否大于 0。如果不是，则将 bankrupt 变量设为“是”并结束循环
    ➎。对于破产情况，向 outcome 列表中追加 0 ➏。否则，循环继续直到退休年限结束，因此将投资的剩余金额追加到 outcome 中。
- en: 'A human life has just ended: 30 to 40 years’ worth of vacations, grandkids,
    bingo games, and illnesses gone in much less than a second. So, advance the case
    counter before looping through the next lifetime ➐. End the function by returning
    the outcome and bankrupt_count variables ➑.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 一个人的生命刚刚结束：30到40年的假期、孙子、宾果游戏和疾病都在不到一秒钟的时间里消失。因此，在进入下一个生命周期之前，先将案例计数器推进 ➐。通过返回
    outcome 和 bankrupt_count 变量来结束函数 ➑。
- en: '***Calculating the Probability of Ruin***'
  id: totrans-285
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***计算破产概率***'
- en: '[Listing 12-6](ch12.xhtml#ch12list6) defines a function that calculates the
    probability of running out of money, also known as the “probability of ruin.”
    If you’re risk averse or want to leave a sizeable sum to your heirs, you probably
    want this number to be less than 10 percent. Those with a greater appetite for
    risk may be content with up to 20 percent or more. After all, you can’t take it
    with you!'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 12-6](ch12.xhtml#ch12list6) 定义了一个计算破产概率的函数，也被称为“破产概率”。如果你比较厌恶风险或想要留下相当大的一笔遗产给你的继承人，你可能希望这个数字小于
    10%。而那些风险偏好较高的人，可能会接受高达 20% 或更多的概率。毕竟，你不能把它带走！'
- en: '*nest_egg_mcs.py,* part 6'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py，* 第 6 部分'
- en: '➊ def bankrupt_prob(outcome, bankrupt_count):'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ def bankrupt_prob(outcome, bankrupt_count):'
- en: '"""Calculate and return chance of running out of money & other stats."""'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '"""计算并返回破产的机会及其他统计数据。"""'
- en: ➋ total = len(outcome)
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ total = len(outcome)
- en: ➌ odds = round(100 * bankrupt_count / total, 1)
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: ➌ odds = round(100 * bankrupt_count / total, 1)
- en: '➍ print("\nInvestment type: {}".format(invest_type))'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '➍ print("\n投资类型: {}".format(invest_type))'
- en: 'print("Starting value: ${:,}".format(int(start_value)))'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("起始值: ${:,}".format(int(start_value)))'
- en: 'print("Annual withdrawal: ${:,}".format(int(withdrawal)))'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("年提款金额: ${:,}".format(int(withdrawal)))'
- en: 'print("Years in retirement (min-ml-max): {}-{}-{}"'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: print("退休年份（最小-最可能-最大）：{}-{}-{}"
- en: .format(min_years, most_likely_years, max_years))
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: .format(min_years, most_likely_years, max_years))
- en: 'print("Number of runs: {:,}\n".format(len(outcome)))'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("运行次数: {:,}\n".format(len(outcome)))'
- en: 'print("Odds of running out of money: {}%\n".format(odds))'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("破产概率: {}%\n".format(odds))'
- en: 'print("Average outcome: ${:,}".format(int(sum(outcome) / total)))'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("平均结果: ${:,}".format(int(sum(outcome) / total)))'
- en: 'print("Minimum outcome: ${:,}".format(min(i for i in outcome)))'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("最小结果: ${:,}".format(min(i for i in outcome)))'
- en: 'print("Maximum outcome: ${:,}".format(max(i for i in outcome)))'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 'print("最大结果: ${:,}".format(max(i for i in outcome)))'
- en: ➎ return odds
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ return odds
- en: '*Listing 12-6: Calculates and displays the “probability of ruin” and other
    statistics*'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-6: 计算并显示“破产概率”及其他统计数据*'
- en: Define a function called bankrupt_prob() that takes the outcome list and bankrupt_count
    variable returned from the montecarlo() function as arguments ➊. Assign the length
    of the outcome list to a variable named total ➋. Then, calculate the probability
    of running out of money as a percentage rounded to one decimal place by dividing
    the number of bankrupt cases by the total number of cases ➌.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个名为 bankrupt_prob() 的函数，接受从 montecarlo() 函数返回的 outcome 列表和 bankrupt_count
    变量作为参数 ➊。将 outcome 列表的长度赋值给一个名为 total 的变量 ➋。然后，通过将破产案例数除以总案例数 ➌，计算破产概率并将其四舍五入到小数点后一位。
- en: Now, display the input parameters and results of the simulation ➍. You saw an
    example of this text printout in “[A Qualitative Way to Present Results](ch12.xhtml#lev276)”
    on [page 246](ch12.xhtml#page_246). Finish by returning the odds variable ➎.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，显示输入参数和模拟结果 ➍。你在“[定性方式呈现结果](ch12.xhtml#lev276)”一节中看到过这种文本输出示例，见[第246页](ch12.xhtml#page_246)。最后返回
    odds 变量 ➎。
- en: '***Defining and Calling the main() Function***'
  id: totrans-306
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***定义并调用 main() 函数***'
- en: '[Listing 12-7](ch12.xhtml#ch12list7) defines the main() function that calls
    the montecarlo() and bankrupt_count() functions and creates the bar chart display.
    The outcomes for the various cases can have a large variance—sometimes you go
    broke, and other times you’re a multimillionaire! If the printed statistics don’t
    make this clear, the bar chart certainly will.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: '[示例 12-7](ch12.xhtml#ch12list7) 定义了 main() 函数，调用 montecarlo() 和 bankrupt_count()
    函数并创建柱状图显示。各种案例的结果可能有很大差异——有时你破产了，有时你成了百万富翁！如果打印的统计数据没有清楚地说明这一点，柱状图肯定能显示出来。'
- en: '*nest_egg_mcs.py,* part 7'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py,* 第7部分'
- en: '➊ def main():'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ def main():'
- en: '"""Call MCS & bankrupt functions and draw bar chart of results."""'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '"""调用 MCS 和 bankrupt 函数并绘制结果的柱状图。"""'
- en: ➋ outcome, bankrupt_count = montecarlo(investment_type_args[invest_type])
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ outcome, bankrupt_count = montecarlo(investment_type_args[invest_type])
- en: odds = bankrupt_prob(outcome, bankrupt_count)
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: odds = bankrupt_prob(outcome, bankrupt_count)
- en: ➌ plotdata = outcome[:3000]  # only plot first 3000 runs
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: '➌ plotdata = outcome[:3000]  # 仅绘制前 3000 次运行'
- en: ➍ plt.figure('Outcome by Case (showing first {} runs)'.format(len(plotdata)),
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ plt.figure('按案例结果（显示前{}次运行）'.format(len(plotdata)),
- en: figsize=(16, 5))  # size is width, height in inches
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 'figsize=(16, 5))  # 大小是宽度，高度单位为英寸'
- en: ➎ index = [i + 1 for i in range(len(plotdata))]
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ index = [i + 1 for i in range(len(plotdata))]
- en: ➏ plt.bar(index, plotdata, color='black')
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: ➏ plt.bar(index, plotdata, color='black')
- en: plt.xlabel('Simulated Lives', fontsize=18)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: plt.xlabel('模拟生命数', fontsize=18)
- en: plt.ylabel('$ Remaining', fontsize=18)
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: plt.ylabel('$ 剩余', fontsize=18)
- en: ➐ plt.ticklabel_format(style='plain', axis='y')
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: ➐ plt.ticklabel_format(style='plain', axis='y')
- en: ➑ ax = plt.gca()
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: ➑ ax = plt.gca()
- en: 'ax.get_yaxis().set_major_formatter(plt.FuncFormatter(lambda x, loc: "{:,}"'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 'ax.get_yaxis().set_major_formatter(plt.FuncFormatter(lambda x, loc: "{:,}"'
- en: .format(int(x))))
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: .format(int(x))))
- en: plt.title('Probability of running out of money = {}%'.format(odds),
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: plt.title('资金耗尽的概率 = {}%'.format(odds),
- en: fontsize=20, color='red')
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: fontsize=20, color='red')
- en: ➒ plt.show()
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: ➒ plt.show()
- en: '# run program'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '# 运行程序'
- en: '➓ if __name__ == ''__main__'':'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: '➓ if __name__ == ''__main__'':'
- en: main()
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: main()
- en: '*Listing 12-7: Defines and calls the* main() *function*'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: '*示例 12-7: 定义并调用 main() 函数*'
- en: Define a main() function, which requires no arguments ➊, and immediately call
    the montecarlo() function to get the outcome list and the bankrupt_count() function
    ➋. Use the dictionary mapping of investment names to returns lists that you made
    in [Listing 12-2](ch12.xhtml#ch12list2). The argument you pass to the montecarlo()
    function is the dictionary name, investment_type_args, with the user’s input,
    invest_type, as the key. Feed the returned values to the bankrupt_prob() function
    to get the odds of running out of money.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个不需要参数的 main() 函数 ➊，并立即调用 montecarlo() 函数来获取 outcome 列表和 bankrupt_count()
    函数 ➋。使用你在[示例 12-2](ch12.xhtml#ch12list2)中创建的投资名称到回报列表的字典映射。你传递给 montecarlo() 函数的参数是字典名称
    investment_type_args，并以用户输入的 invest_type 作为键。将返回的值传递给 bankrupt_prob() 函数以获取资金耗尽的概率。
- en: Assign a new variable, plotdata, to the first 3,000 items in the outcome list
    ➌. The bar chart can accommodate many more items, but displaying them will be
    slow as well as unnecessary. As the results are stochastic, you won’t gain a lot
    of extra information by showing more cases.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 将新变量 plotdata 指定为 outcome 列表中的前 3,000 项 ➌。柱状图可以容纳更多项，但显示它们会很慢且不必要。由于结果是随机的，通过显示更多的案例，你不会获得太多额外的信息。
- en: Now you’ll use matplotlib to create and show the bar chart. Start by making
    a plot figure ➍. The text entry will be the title of the new window. The figsize
    parameter is the width and height of the window, in inches. You can scale this
    by adding a dots-per-inch argument, such as dpi=200.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你将使用 matplotlib 创建并显示柱状图。从创建一个绘图窗口 ➍ 开始。文本条目将作为新窗口的标题。figsize 参数是窗口的宽度和高度，以英寸为单位。你可以通过添加每英寸点数（dpi）参数来调整大小，例如
    dpi=200。
- en: Next, use list comprehension to build indexes, starting with 1 for year one,
    based on the length of the plotdata list ➎. The x-axis location of each vertical
    bar will be defined by the index, and the height of each bar will be the corresponding
    plotdata item, which represents the money remaining at the end of each simulated
    life. Pass these to the plt.bar() method and set the bar color to black ➏. Note
    that there are additional display options for bars, such as changing the color
    of the bar outline (edgecolor='black') or its thickness (linewidth=0).
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用列表推导式根据plotdata列表的长度，构建索引，从第1年开始 ➎。每个垂直条形的x轴位置将由索引定义，每个条形的高度将是对应的plotdata项，表示每个模拟生命结束时剩余的钱。将这些传递给plt.bar()方法，并将条形的颜色设置为黑色
    ➏。请注意，条形还有其他显示选项，例如改变条形轮廓的颜色（edgecolor='black'）或其厚度（linewidth=0）。
- en: Provide labels for the x- and y-axes and set the font size to 18\. Outcomes
    can reach into the millions, and by default, matplotlib will use scientific notation
    when it annotates the y-axis. To override this, call the ticklabel_format() method
    and set the y-axis style to 'plain' ➐. This takes care of scientific notation,
    but there are no thousand separators, making the numbers hard to read. To fix
    this, first get the current axes using plt.gca() ➑. Then, in the next line, get
    the y-axis and use the set_major_formatter() and Func_Formatter() methods and
    a lambda function to apply Python’s string-formatting technique for comma separators.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 为x轴和y轴提供标签，并将字体大小设置为18。结果可以达到百万级别，默认情况下，matplotlib在标注y轴时会使用科学计数法。为了覆盖这个设置，可以调用ticklabel_format()方法，将y轴的样式设置为'plain'
    ➐。这样可以处理科学计数法，但没有千位分隔符，使得数字难以阅读。为了解决这个问题，首先使用plt.gca()获取当前坐标轴 ➑。然后，在下一行中，获取y轴并使用set_major_formatter()和Func_Formatter()方法，以及一个lambda函数，应用Python的字符串格式化技术来添加逗号分隔符。
- en: For the plot’s title, display the probability of running out of money—captured
    in the odds variable—with a large font in eye-catching red. Then draw the chart
    to the screen with plt.show() ➒. Back in the global space, finish with the code
    that allows the program to be imported as a module or run in stand-alone mode
    ➓.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图表的标题，使用引人注目的红色大字体显示用以表达资金耗尽概率的变量——odds。然后，用plt.show() ➒将图表绘制到屏幕上。在全局空间中，最后编写允许程序作为模块导入或以独立模式运行的代码
    ➓。
- en: '**Using the Simulator**'
  id: totrans-337
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**使用模拟器**'
- en: The *nest_egg_mcs.py* program greatly simplifies the complex world of retirement
    planning, but don’t hold that against it. Simple models add value by challenging
    assumptions, raising awareness, and focusing questions. It’s easy to get lost
    in the details of retirement planning—or any complex issue—so you’re better off
    starting with a lay of the land.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs.py*程序大大简化了退休规划的复杂世界，但不要因此而对它有所偏见。简单的模型通过挑战假设、提高意识并聚焦问题，创造了价值。在退休规划或任何复杂问题中，很容易陷入细节，所以最好从了解大致情况开始。'
- en: Let’s work an example that assumes a starting value of $2,000,000, a “safe and
    secure” bond portfolio, a 4 percent withdrawal rate (equal to $80,000 per year),
    a 29-30-31 retirement range, and 50,000 cases. If you run this scenario, you should
    get results similar to those in [Figure 12-9](ch12.xhtml#ch12fig9). You run out
    of money almost half the time! Because of relatively low yields, bonds can’t keep
    pace with inflation—remember, you can’t blindly apply the 4 Percent Rule, because
    your asset allocation matters.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个假设的例子来工作，假设初始值为$2,000,000，采用“安全可靠”的债券投资组合，4%的提款率（即每年$80,000），退休年限为29-30-31年，模拟50,000个案例。如果运行这个场景，结果应该和[图12-9](ch12.xhtml#ch12fig9)类似。你几乎每次都要耗尽资金！由于相对较低的收益率，债券无法跟上通货膨胀的步伐——记住，你不能盲目地应用4%规则，因为你的资产配置很重要。
- en: '![image](../images/f0260-01.jpg)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/f0260-01.jpg)'
- en: '*Figure 12-9: Bar chart made with* matplotlib *to represent a Monte Carlo simulation
    of a bond-only portfolio*'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '*图12-9：使用* matplotlib *制作的条形图，表示一个仅包含债券的投资组合的蒙特卡洛模拟*'
- en: Note that the $80,000 withdrawal is *pretax*. Assuming a 25 percent effective
    tax rate, this leaves a net income of only $60,000\. According to the Pew Research
    Center, the median disposable (after-tax) income of the American middle class
    is currently $60,884, so you’re hardly living high on the hog, despite being a
    millionaire. If you want $80,000 in *disposable* income, you must divide by 1
    minus the effective tax rate; in this case, that’s $80,000 / (1 – 0.25) = $106,667\.
    This requires withdrawing slightly over 5 percent per year, with a 20 to 70 percent
    chance of going broke, depending on the investment type!
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，$80,000 的提款是*税前*的。假设有效税率为 25%，这将导致净收入仅为 $60,000。根据皮尤研究中心的数据，美国中产阶级的中位数可支配（税后）收入目前为
    $60,884，因此，尽管你是百万富翁，但并不算是高枕无忧。如果你想要 $80,000 的*可支配*收入，你必须除以 1 减去有效税率；在这种情况下，即 $80,000
    / (1 – 0.25) = $106,667。为了做到这一点，你需要每年提取超过 5% 的金额，而破产的概率根据投资类型的不同，可能在 20% 到 70%
    之间！
- en: '[Table 12-1](ch12.xhtml#ch12tab1) records the results of varying the previous
    scenario for asset type and withdrawal rate. Results that would be widely considered
    safe are shaded in gray. If you avoid an all-bond portfolio, the 4 Percent Rule
    holds up well. Above 4 percent, the growth potential of stocks offers the best
    chance—of the options considered—to reduce the probability of ruin, and with less
    risk than most people assume. That’s why financial advisers recommend including
    a healthy dose of stocks in your retirement portfolio.'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '[表 12-1](ch12.xhtml#ch12tab1) 记录了变化资产类型和提款率的前述情境的结果。被广泛认为安全的结果以灰色标示。如果你避免使用全债券投资组合，那么
    4% 法则的效果很好。超过 4% 时，股票的增长潜力提供了最好的机会——在考虑的选项中——减少破产的概率，而且风险比大多数人认为的要小。这就是为什么理财顾问建议在退休投资组合中包含一定比例的股票。'
- en: '**Table 12-1:** Probability of Ruin by Asset Type and Withdrawal Rate for 30-Year
    Retirement'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 12-1：** 30 年退休期内，按资产类型和提款率的破产概率'
- en: '| **Asset type** | **Annual (pretax) withdrawal percentage** |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| **资产类型** | **年度（税前）提款百分比** |'
- en: '| --- | --- |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '|  | **3%** | **4%** | **5%** | **6%** |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '|  | **3%** | **4%** | **5%** | **6%** |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 10-year Treasury bond | 0.135 | 0.479 | 0.650 | 0.876 |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| 10年期国债 | 0.135 | 0.479 | 0.650 | 0.876 |'
- en: '| S&P 500 stocks | 0 | 0.069 | 0.216 | 0.365 |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| 标普 500 股票 | 0 | 0.069 | 0.216 | 0.365 |'
- en: '| 50/50 blend | 0 | 0.079 | 0.264 | 0.466 |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| 50/50 混合 | 0 | 0.079 | 0.264 | 0.466 |'
- en: '| 40/50/10 blend | 0 | 0.089 | 0.361 | 0.591 |'
  id: totrans-352
  prefs: []
  type: TYPE_TB
  zh: '| 40/50/10 混合 | 0 | 0.089 | 0.361 | 0.591 |'
- en: 'Financial advisers also advise against overdoing it in the early years of retirement.
    A few cruises for the extended family, a posh new house, or an expensive new hobby
    can push you over the cliff in your later years. To investigate this, copy *nest_egg_mcs.py*
    and name the copy *nest_egg_mcs_1st_5yrs.py*; adjust the code as described in
    [Listings 12-8](#ch12list8), [12-9](#ch12list9), and [12-10](#ch12list10):'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 理财顾问还建议在退休初期不要过度支出。为大家庭安排几次邮轮旅行，购买豪华新房，或开始一个昂贵的新爱好，可能会在你后期生活中导致破产。为了研究这一点，复制
    *nest_egg_mcs.py* 并将副本命名为 *nest_egg_mcs_1st_5yrs.py*；按照 [清单 12-8](#ch12list8)、[12-9](#ch12list9)
    和 [12-10](#ch12list10) 中描述的方式调整代码：
- en: '*nest_egg_mcs_1st_5yrs.py,* part 1'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs_1st_5yrs.py*，第1部分'
- en: 'start_value = default_input("Input starting value of investments: \n", \'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: start_value = default_input("输入投资的初始金额：\n"，\
- en: '''2000000'')'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: '''2000000'')'
- en: 'while not start_value.isdigit():'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not start_value.isdigit():'
- en: 'start_value = input("Invalid input! Input integer only: ")'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: start_value = input("无效输入！请输入整数：")
- en: ➊ withdrawal_1 = default_input("Input annual pre-tax withdrawal for " \
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ withdrawal_1 = default_input("输入年度税前提款金额（单位：") \
- en: '"first 5 yrs(today''s $): \n", ''100000'')'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: '"前5年（今天的$）：\n"，''100000'')'
- en: 'while not withdrawal_1.isdigit():'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not withdrawal_1.isdigit():'
- en: 'withdrawal_1 = input("Invalid input! Input integer only: ")'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: withdrawal_1 = input("无效输入！请输入整数：")
- en: ➋ withdrawal_2 = default_input("Input annual pre-tax withdrawal for " \
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ withdrawal_2 = default_input("输入年度税前提款金额（单位：") \
- en: '"remainder (today''s $): \n", ''80000'')'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '"其余部分（今天的$）：\n"，''80000'')'
- en: 'while not withdrawal_2.isdigit():'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 'while not withdrawal_2.isdigit():'
- en: 'withdrawal_2 = input("Invalid input! Input integer only: ")'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: withdrawal_2 = input("无效输入！请输入整数：")
- en: 'min_years = default_input("Input minimum years in retirement: \n", ''18'')'
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: min_years = default_input("输入退休最少年数：\n"，'18')
- en: '*Listing 12-8: Breaks the user’s withdrawal input into two parts*'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 12-8：将用户的提款输入分为两部分*'
- en: In the user-input section, replace the original withdrawal variable with two
    withdrawal variables, and edit the prompt to request the first five years in the
    first ➊ and the remainder of retirement in the second ➋. Set the defaults to indicate
    that the user should expect higher withdrawals in the first five years. Include
    the while loops that validate user input.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户输入部分，将原来的取款变量替换为两个取款变量，并编辑提示信息，请求在前五年取款（➊）和剩余退休期间取款（➋）。设置默认值以表明用户应该预期前五年取款较高。包括验证用户输入的while循环。
- en: In the montecarlo() function, change the code that adjusts the withdrawal amount
    for inflation.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在montecarlo()函数中，更改调整取款金额以适应通货膨胀的代码。
- en: '*nest_egg_mcs_1st_5yrs.py,* part 2'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs_1st_5yrs.py，* 第二部分'
- en: '# don''t adjust for inflation the first year'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: '# 第一年的取款不调整通货膨胀'
- en: 'if index == 0:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 如果index == 0：
- en: ➊ withdraw_infl_adj_1 = int(withdrawal_1)
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: ➊ withdraw_infl_adj_1 = int(withdrawal_1)
- en: ➋ withdraw_infl_adj_2 = int(withdrawal_2)
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: ➋ withdraw_infl_adj_2 = int(withdrawal_2)
- en: 'else:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 否则：
- en: ➌ withdraw_infl_adj_1 = int(withdraw_infl_adj_1 * (1 + infl))
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: ➌ withdraw_infl_adj_1 = int(withdraw_infl_adj_1 * (1 + infl))
- en: ➍ withdraw_infl_adj_2 = int(withdraw_infl_adj_2 * (1 + infl))
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: ➍ withdraw_infl_adj_2 = int(withdraw_infl_adj_2 * (1 + infl))
- en: '➎ if index < 5:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: ➎ 如果index < 5：
- en: ➏ withdraw_infl_adj = withdraw_infl_adj_1
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: ➏ withdraw_infl_adj = withdraw_infl_adj_1
- en: 'else:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 否则：
- en: withdraw_infl_adj = withdraw_infl_adj_2
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: withdraw_infl_adj = withdraw_infl_adj_2
- en: investments -= withdraw_infl_adj
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: investments -= withdraw_infl_adj
- en: investments = int(investments * (1 + i))
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: investments = int(investments * (1 + i))
- en: '*Listing 12-9: Adjusts the two withdrawal variables for inflation and determines
    which to use*'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表12-9：调整两个取款变量以适应通货膨胀并确定使用哪一个*'
- en: Set the inflation-adjusted withdrawal equal to the input withdrawal for just
    the first year ➊➋. Otherwise, adjust both for inflation ➌➍. This way, the second
    withdrawal amount will be “ready” when you switch to it after five years.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 将通货膨胀调整后的取款设为仅适用于第一年的输入取款➊➋。否则，两个取款都要调整通货膨胀➌➍。这样，第二笔取款金额将在五年后切换时“准备好”。
- en: Use a conditional to specify when to apply each inflation-adjusted withdrawal
    ➎. Assign these to the existing withdraw_infl_adj variable so you won’t have to
    alter any more code ➏.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 使用条件语句来指定何时应用每个通货膨胀调整后的取款➎。将这些赋值给现有的withdraw_infl_adj变量，这样你就不需要修改更多代码了➏。
- en: Finally, update the printed statistics in the bankrupt_prob() function to include
    the new withdrawal values, as shown in [Listing 12-10](#ch12list10). These should
    replace the old withdrawal print statement.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在bankrupt_prob()函数中更新打印的统计数据，以包括新的取款值，如[列表12-10](#ch12list10)所示。这些应替换旧的取款打印语句。
- en: '*nest_egg_mcs_1st_5yrs.py,* part 3'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '*nest_egg_mcs_1st_5yrs.py，* 第三部分'
- en: 'print("Annual withdrawal first 5 yrs: ${:,}".format(int(withdrawal_1)))'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: print("前五年的年取款：${:,}".format(int(withdrawal_1)))
- en: 'print("Annual withdrawal after 5 yrs: ${:,}".format(int(withdrawal_2)))'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: print("5年后的年取款：${:,}".format(int(withdrawal_2)))
- en: '*Listing 12-10: Prints the withdrawal values for the two withdrawal periods*'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表12-10：打印两个取款期间的取款值*'
- en: You can now run the new experiment (see [Table 12-2](#ch12tab2)).
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以运行新的实验（请参见[表12-2](#ch12tab2)）。
- en: '**Table 12-2:** Probability of Ruin by Asset Type and Multiple Withdrawal Rates
    for 30-Year Retirement'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '**表12-2：** 30年退休期内按资产类型和多次取款率计算的破产概率'
- en: '| **Asset allocation** | **Annual (pretax) withdrawal percentage (first five
    years / remainder)** |'
  id: totrans-395
  prefs: []
  type: TYPE_TB
  zh: '| **资产配置** | **年取款百分比（前五年/剩余部分）** |'
- en: '| --- | --- |'
  id: totrans-396
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '|  | **4% / 4%** | **5% / 4%** | **6% / 4%** | **7% / 4%** |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '|  | **4% / 4%** | **5% / 4%** | **6% / 4%** | **7% / 4%** |'
- en: '| --- | --- | --- | --- | --- |'
  id: totrans-398
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- |'
- en: '| 10-year Treasury bond | 0.479 | 0.499 | 0.509 | 0.571 |'
  id: totrans-399
  prefs: []
  type: TYPE_TB
  zh: '| 10年期美国国债 | 0.479 | 0.499 | 0.509 | 0.571 |'
- en: '| S&P 500 stocks | 0.069 | 0.091 | 0.116 | 0.194 |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '| 标普500股票 | 0.069 | 0.091 | 0.116 | 0.194 |'
- en: '| 50/50 blend | 0.079 | 0.115 | 0.146 | 0.218 |'
  id: totrans-401
  prefs: []
  type: TYPE_TB
  zh: '| 50/50 混合配置 | 0.079 | 0.115 | 0.146 | 0.218 |'
- en: '| 40/50/10 blend | 0.089 | 0.159 | 0.216 | 0.264 |'
  id: totrans-402
  prefs: []
  type: TYPE_TB
  zh: '| 40/50/10 混合配置 | 0.089 | 0.159 | 0.216 | 0.264 |'
- en: Safe outcomes are shaded in gray in [Table 12-2](ch12.xhtml#ch12tab2), and the
    first column repeats the constant 4 percent results, as a control. With enough
    stocks in your portfolio, you can tolerate some early spending, and for this reason,
    some advisers replace the 4 Percent Rule with either the 4.5 Percent or 5 Percent
    Rule. But if you retire early—say, between age 55 and 60—your risk of going broke
    will be greater, whether you experience any high-spending years or not.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 安全的结果在[表12-2](ch12.xhtml#ch12tab2)中以灰色阴影标示，第一列重复了4%的常量结果，作为对照。通过增加股票比例，你可以承受一些早期支出，因此一些顾问用4.5%规则或5%规则替代了4%规则。但如果你提前退休——比如在55岁到60岁之间——无论你是否经历过高支出年份，破产的风险都会更大。
- en: If you run the simulator for the 50/50 blend of stocks and bonds, using different
    years in retirement, you should get results similar to those in [Table 12-3](ch12.xhtml#ch12tab3).
    Only one outcome (shaded gray) has a probability of ruin below 10 percent.
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你运行一个股票和债券的50/50组合模拟器，使用不同的退休年数，你应该得到与[表格12-3](ch12.xhtml#ch12tab3)相似的结果。只有一个结果（灰色阴影部分）的破产概率低于10%。
- en: '**Table 12-3:** Probability of Ruin vs. Retirement Duration for 4% Withdrawal
    Rate (50/50 Stock-Bond Blend)'
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: '**表格12-3：** 4%提款率下的破产概率与退休年限的关系（50/50股票-债券组合）'
- en: '| **Years in retirement** | **4% withdrawal** |'
  id: totrans-406
  prefs: []
  type: TYPE_TB
  zh: '| **退休年数** | **4% 提款率** |'
- en: '| --- | --- |'
  id: totrans-407
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| 30 | 0.079 |'
  id: totrans-408
  prefs: []
  type: TYPE_TB
  zh: '| 30 | 0.079 |'
- en: '| 35 | 0.103 |'
  id: totrans-409
  prefs: []
  type: TYPE_TB
  zh: '| 35 | 0.103 |'
- en: '| 40 | 0.194 |'
  id: totrans-410
  prefs: []
  type: TYPE_TB
  zh: '| 40 | 0.194 |'
- en: '| 45 | 0.216 |'
  id: totrans-411
  prefs: []
  type: TYPE_TB
  zh: '| 45 | 0.216 |'
- en: Running simulations like these forces people to face hard decisions and form
    realistic plans for a large segment of their lives. While the simulation “sells”
    assets every year to fund retirement, a better real-life solution is the *guardrail
    strategy*, where interest and dividends are spent first and a cash reserve is
    maintained to avoid having to sell assets during market lows. Assuming you can
    remain disciplined as an investor, this strategy will allow you to stretch your
    withdrawals a bit beyond what the simulator calculates as safe.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 像这样的模拟迫使人们面对艰难的决策，并为他们一生的大部分时间制定现实的计划。虽然该模拟每年都会“卖出”资产来资助退休，但一个更好的现实解决方案是 *护栏策略*，即首先支出利息和股息，并维持现金储备以避免在市场低谷时出售资产。假设你能保持投资者的纪律性，这个策略将使你能够在模拟器计算的安全提款额度之外，适当延长提款时间。
- en: '**Summary**'
  id: totrans-413
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**总结**'
- en: In this chapter, you wrote a Monte Carlo–based retirement calculator that realistically
    samples from historical financial data. You also used matplotlib to provide an
    alternative way of viewing the calculator output. While the example used could
    have been modeled deterministically, if you add more random variables—like future
    tax rates, Social Security payments, and health care costs—MCS quickly becomes
    the only practical approach for modeling retirement strategies.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你编写了一个基于蒙特卡罗的退休计算器，它从历史金融数据中进行现实的采样。你还使用了matplotlib提供了一种查看计算器输出的替代方法。虽然所使用的示例本可以是确定性建模，但如果你加入更多随机变量——如未来税率、社会保障支付和医疗费用——蒙特卡罗模拟很快就成为建模退休策略的唯一实用方法。
- en: '**Further Reading**'
  id: totrans-415
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**进一步阅读**'
- en: '*The Intelligent Investor: The Definitive Book on Value Investing, Revised
    Edition* (HarperBusiness, 2006) by Benjamin Graham is considered by many, including
    billionaire investor Warren Buffet, the greatest book on investing ever written.'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '*《聪明的投资者：价值投资的权威书籍，修订版》*（《哈珀商业出版社》，2006年）由本杰明·格雷厄姆所著，被许多人，包括亿万富翁投资者沃伦·巴菲特，认为是有史以来关于投资的最佳书籍。'
- en: '*Fooled by Randomness: The Hidden Role of Chance in Life and in the Markets,
    Revised Edition* (Random House Trade Paperbacks, 2005) by Nassim Nicholas Taleb
    is “an engaging look at the history and reasons for our predilection for self-deception
    when it comes to statistics.” It includes discussions on the use of Monte Carlo
    simulation in financial analysis.'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '*《被随机性愚弄：生活与市场中偶然性隐藏的作用，修订版》*（《随机之家贸易平装版》，2005年）由纳西姆·尼古拉斯·塔勒布（Nassim Nicholas
    Taleb）所著，是“对我们在统计学方面自我欺骗的历史和原因的生动剖析”。书中还讨论了蒙特卡罗模拟在金融分析中的应用。'
- en: '*The Black Swan: The Impact of the Highly Improbable, 2nd Edition* (Random
    House Trade Paperbacks, 2010) by Nassim Nicholas Taleb is a “delightful romp through
    history, economics, and the frailties of human nature” that also includes discussion
    of the use of Monte Carlo simulation in finance.'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '*《黑天鹅：高度不可能事件的影响，第2版》*（《随机之家贸易平装版》，2010年）由纳西姆·尼古拉斯·塔勒布所著，是“一部穿越历史、经济学和人类脆弱性的愉快之旅”，并讨论了蒙特卡罗模拟在金融中的应用。'
- en: You can find an overview of the 4 Percent Rule at *[https://www.investopedia.com/terms/f/four-percent-rule.asp](https://www.investopedia.com/terms/f/four-percent-rule.asp)*.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 *[https://www.investopedia.com/terms/f/four-percent-rule.asp](https://www.investopedia.com/terms/f/four-percent-rule.asp)*
    找到关于4%提款规则的概述。
- en: Possible exceptions to the 4 Percent Rule are discussed at *[https://www.cnbc.com/2015/04/21/the-4-percent-rule-no-longer-applies-for-most-retirees.html](https://www.cnbc.com/2015/04/21/the-4-percent-rule-no-longer-applies-for-most-retirees.html)*.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 4% 提款规则的可能例外情况可以参考 *[https://www.cnbc.com/2015/04/21/the-4-percent-rule-no-longer-applies-for-most-retirees.html](https://www.cnbc.com/2015/04/21/the-4-percent-rule-no-longer-applies-for-most-retirees.html)*。
- en: 'You can find historical financial data at the following websites:'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下网站找到历史金融数据：
- en: '*[http://pages.stern.nyu.edu/~adamodar/New_Home_Page/datafile/histretSP.html](http://pages.stern.nyu.edu/~adamodar/New_Home_Page/datafile/histretSP.html)*'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[http://pages.stern.nyu.edu/~adamodar/New_Home_Page/datafile/histretSP.html](http://pages.stern.nyu.edu/~adamodar/New_Home_Page/datafile/histretSP.html)*'
- en: '*[http://www.econ.yale.edu/~shiller/data.htm](http://www.econ.yale.edu/~shiller/data.htm)*'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[http://www.econ.yale.edu/~shiller/data.htm](http://www.econ.yale.edu/~shiller/data.htm)*'
- en: '*[http://www.moneychimp.com/features/market_cagr.htm](http://www.moneychimp.com/features/market_cagr.htm)*'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[http://www.moneychimp.com/features/market_cagr.htm](http://www.moneychimp.com/features/market_cagr.htm)*'
- en: '*[http://www.usinflationcalculator.com/inflation/historical-inflation-rates/](http://www.usinflationcalculator.com/inflation/historical-inflation-rates/)*'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[http://www.usinflationcalculator.com/inflation/historical-inflation-rates/](http://www.usinflationcalculator.com/inflation/historical-inflation-rates/)*'
- en: '*[https://inflationdata.com/Inflation/Inflation_Rate/HistoricalInflation.aspx](https://inflationdata.com/Inflation/Inflation_Rate/HistoricalInflation.aspx)*'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*[https://inflationdata.com/Inflation/Inflation_Rate/HistoricalInflation.aspx](https://inflationdata.com/Inflation/Inflation_Rate/HistoricalInflation.aspx)*'
- en: '**Challenge Projects**'
  id: totrans-427
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**挑战项目**'
- en: Become a chartered Certified Financial Analyst (CFA)^([1](footnote.xhtml#ch12fn1))
    by completing these challenge projects.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 通过完成这些挑战项目，成为注册认证财务分析师（CFA）^([1](footnote.xhtml#ch12fn1))。
- en: '***A Picture Is Worth a Thousand Dollars***'
  id: totrans-429
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***一图胜千言***'
- en: Imagine you’re a CFA and your prospective client, a wealthy Texas oil prospector,
    doesn’t understand your MCS results on his $10 million portfolio. “Tarnation,
    boy! What kind of durn fool contraption could have me goin’ broke in one case
    and worth 80 million in the next?”
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你是一个CFA，你的潜在客户是一个富有的德州石油勘探者，他不理解你对他1000万美元投资组合的MCS结果。“天啊，伙计！这是什么样的破机器，居然能让我在一个案例中破产，在下一个案例中变成8000万美元？”
- en: Make it clearer to him by editing the *nest_egg_mcs.py* program so it runs single,
    30-year cases using historical intervals that will result in bad and good results,
    such as starting at the beginning of the Great Depression versus the end of WWII,
    but only run the extreme cases. For each year in each case, print out the year,
    the returns rate, the inflation rate, and the outcome. Even better, edit the bar
    chart display to use each *year’s* outcome rather than each *case’s* outcome,
    for a convincing visual explanation.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 通过编辑 *nest_egg_mcs.py* 程序，使其运行单个30年期的案例，使用历史区间进行实验，这些区间将导致糟糕和良好的结果，例如从大萧条开始的年份与二战结束时的年份进行比较，但只运行极端案例。对于每一个年份，打印出年份、回报率、通货膨胀率以及结果。更好的是，编辑条形图显示，使其使用每个*年份*的结果，而不是每个*案例*的结果，以便给出一个有说服力的视觉解释。
- en: '***Mix and Match***'
  id: totrans-432
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***混搭组合***'
- en: Edit *nest_egg_mcs.py* so that the user can generate their own blend of investments.
    Use the S&P 500, 10-year Treasury bond, and three-month Treasury bill text files
    that I provided at the start of the chapter and add anything else you like, such
    as small-cap stocks, international stocks, or even gold. Just remember that the
    time intervals should be the same in each file or list.
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 *nest_egg_mcs.py* 使得用户可以生成自己的投资组合。使用我在本章开始时提供的标准普尔500指数、10年期国债和三个月期国库券文本文件，此外还可以添加其他任何你喜欢的内容，比如小型股票、国际股票或甚至黄金。只要记住，每个文件或列表中的时间区间应该保持一致。
- en: Have the user pick the investment types and percentage of each. Make sure their
    input adds up to 100 percent. Then create a blended list by weighting and adding
    the returns for each year. Finish it off by displaying the investment types and
    percentages at the top of the bar chart display.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 让用户选择投资类型和每种类型的百分比。确保他们的输入加起来为100%。然后通过加权和累加每年的回报，创建一个综合列表。最后，在条形图显示的顶部显示投资类型和百分比。
- en: '***Just My Luck!***'
  id: totrans-435
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***真是我的运气！***'
- en: Edit *nest_egg_mcs.py* to calculate the probability of encountering a Great
    Depression (1939–1949) or a Great Recession (2007–2009) during a 30-year retirement.
    You’ll need to identify which index numbers in the returns lists correspond to
    these events, then tally how many times they occur over however many cases are
    run. Display the results in the shell.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 *nest_egg_mcs.py* 来计算在30年的退休期间遭遇大萧条（1939–1949）或大衰退（2007–2009）的概率。你需要确定回报列表中哪些指数对应这些事件，然后统计它们在运行的所有案例中发生的次数。将结果显示在终端。
- en: '***All the Marbles***'
  id: totrans-437
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '***全盘赌注***'
- en: For a different way to view the results, copy and edit *nest_egg_mcs.py* so
    that the bar chart displays all the outcomes sorted from smallest to largest.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 为了以不同的方式查看结果，复制并编辑 *nest_egg_mcs.py*，使得条形图按从最小到最大排序显示所有结果。
