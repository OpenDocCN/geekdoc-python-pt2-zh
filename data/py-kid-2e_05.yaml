- en: '4'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '4'
- en: Drawing with Turtles
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 使用海龟绘图
- en: '![Image](Images/common.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/common.jpg)'
- en: A turtle in Python is not quite like a turtle in the real world. We know a turtle
    as a reptile that moves around very slowly and carries its house on its back.
    In the world of Python, a *turtle* is a small, black arrow that moves slowly around
    the screen. Actually, considering that a Python turtle leaves a trail as it moves
    around the screen, it’s less like a turtle and more like a snail or slug.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中的海龟与现实中的海龟有些不同。我们知道海龟是一种爬行动物，移动非常缓慢，并且背上背着自己的壳。在 Python 中，*海龟*是一个小的黑色箭头，缓慢地在屏幕上移动。实际上，考虑到
    Python 海龟在屏幕上移动时会留下痕迹，它更像是蜗牛或蛞蝓，而不太像海龟。
- en: In this chapter, we’ll use a Python turtle to learn the basics of computer graphics
    by drawing some simple shapes and lines.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用 Python 的 Turtle 库，通过绘制一些简单的形状和线条来学习计算机图形学的基础知识。
- en: Using Python’s Turtle Module
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 Python 的 Turtle 模块
- en: A *module* in Python is a way for programmers to make useful code available
    for other programmers to use. (Among other things, a module can contain *functions*
    we can use.) We’ll learn more about modules and functions in [Chapter 7](ch07.xhtml#ch07).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，*模块*是程序员为其他程序员提供有用代码的一种方式。（模块中可以包含我们可以使用的*函数*。）我们将在[第 7 章](ch07.xhtml#ch07)中深入学习模块和函数。
- en: The turtle is a special module in Python that we can use to learn how computers
    draw pictures on a screen. The turtle module is a way of programming vector graphics,
    which is basically just drawing with simple lines, dots, and curves.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 海龟是 Python 中的一个特殊模块，我们可以用它来学习计算机如何在屏幕上绘制图像。海龟模块是一种编程向量图形的方式，基本上就是用简单的线条、点和曲线进行绘图。
- en: '![Image](Images/f0044-01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f0044-01.jpg)'
- en: 'Let’s see how the turtle works. First, start the Python Shell. Next, tell Python
    to use the turtle by importing the turtle module, as follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看海龟是如何工作的。首先，启动 Python Shell。接下来，通过导入 turtle 模块告诉 Python 使用海龟，命令如下：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Importing a module tells Python that you want to use it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 导入一个模块告诉 Python 你想要使用它。
- en: Creating a Canvas
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建画布
- en: Now that we’ve imported the turtle module, we need to create a *canvas*—a blank
    space to draw on, like an artist’s canvas. To do so, we call the function Turtle
    from the turtle module, which automatically creates a canvas (we’ll learn more
    about what a function is in [Chapter 7](ch07.xhtml#ch07)).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了 turtle 模块，我们需要创建一个 *画布*——一个空白的绘图区域，就像艺术家的画布一样。为此，我们调用 turtle 模块中的
    Turtle 函数，它会自动创建一个画布（我们将在[第 7 章](ch07.xhtml#ch07)中了解更多关于函数的内容）。
- en: 'Enter this into the Python Shell:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python Shell 中输入以下内容：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You should see a blank box (the canvas), with an arrow in the center (similar
    to [Figure 4-1](ch04.xhtml#ch04fig01)). The arrow in the middle of the screen
    is the turtle, and you’re right—it isn’t very turtle-like.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到一个空白的框（画布），中央有一个箭头（类似于[图 4-1](ch04.xhtml#ch04fig01)）。屏幕中央的箭头就是海龟，而你是对的——它看起来并不像真正的海龟。
- en: '![Image](Images/04fig01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig01.jpg)'
- en: '*Figure 4-1: Running turtle in the Python Shell*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-1：在 Python Shell 中运行海龟*'
- en: '**NOTE**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*If the turtle module doesn’t appear to be working, there are some additional
    steps you can try in [Appendix C](app03.xhtml#app03).*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果 turtle 模块似乎没有正常工作，可以在[附录 C](app03.xhtml#app03)中尝试一些额外的步骤。*'
- en: Moving the Turtle
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 移动海龟
- en: 'You can send instructions to the turtle by using functions available on the
    variable t we just created, similar to using the Turtle function in the turtle
    module. For example, the forward instruction tells the turtle to move forward.
    To tell the turtle to advance 50 pixels, enter the following command:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用我们刚才创建的变量 t 上的函数来向海龟发送指令，这就像在 turtle 模块中使用 Turtle 函数一样。例如，`forward` 指令告诉海龟向前移动。要让海龟前进
    50 像素，可以输入以下命令：
- en: '![Image](Images/f0045-01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/f0045-01.jpg)'
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You should see something like [Figure 4-2](ch04.xhtml#ch04fig02).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到类似于[图 4-2](ch04.xhtml#ch04fig02)的内容。
- en: '![Image](Images/04fig02.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig02.jpg)'
- en: '*Figure 4-2: The turtle moving forward*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-2：海龟向前移动*'
- en: The turtle has moved forward 50 pixels. A *pixel* is a single point on the screen—the
    smallest element that can be represented. Everything you see on your computer
    monitor is made up of pixels, which are tiny, square dots. If you could zoom in
    on the canvas and the line drawn by the turtle, you would be able to see that
    the arrow representing the turtle’s path is just a bunch of pixels. This is the
    basis for simple computer graphics.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 海龟已经向前移动了50个像素。*像素*是屏幕上的一个点——它是可以表示的最小元素。你在计算机显示器上看到的所有内容，都是由像素组成的，它们是微小的正方形点。如果你能够放大画布并查看海龟画的线条，你会看到，表示海龟路径的箭头其实就是由一堆像素组成的。这是简单计算机图形学的基础。
- en: '![Image](Images/04fig03.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig03.jpg)'
- en: '*Figure 4-3: Pixels are dots!*'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-3：像素就是点！*'
- en: 'Now we’ll tell the turtle to turn 90 degrees to the left with the following
    command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将告诉海龟向左转90度，使用以下命令：
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you haven’t learned about *degrees* yet, imagine you’re standing in the
    center of a circle:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有学习过*度数*，可以想象你站在一个圆的中心：
- en: The direction you’re facing is 0 degrees.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你面朝的方向是 0 度。
- en: If you hold out your left arm, that’s 90 degrees left.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你伸出左臂，那就是向左90度。
- en: If you hold out your right arm, that’s 90 degrees right.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你伸出右臂，那就是向右90度。
- en: You can see this 90-degree turn to the left or right in [Figure 4-4](ch04.xhtml#ch04fig04).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[图 4-4](ch04.xhtml#ch04fig04)中看到这个 90 度的左转或右转。
- en: '![Image](Images/04fig04.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig04.jpg)'
- en: '*Figure 4-4: 90 degrees left and right*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-4：向左和向右90度*'
- en: If you continue around the circle to the right from where your right arm is
    pointing, 180 degrees is directly behind you, 270 degrees is the direction your
    left arm is pointing, and 360 degrees is back where you started; degrees go from
    0 to 360\. The degrees in a full circle, when turning to the right, can be seen
    in 45-degree increments in [Figure 4-5](ch04.xhtml#ch04fig05).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从右臂指向的方向继续沿着圆周向右转，180度是你身后的方向，270度是左臂指向的方向，360度是回到起点；度数从 0 到 360。顺时针旋转的度数增量可以在[图
    4-5](ch04.xhtml#ch04fig05)中看到，每次增量为 45 度。
- en: '![Image](Images/04fig05.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig05.jpg)'
- en: '*Figure 4-5: 45-degree increments*'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-5：45度增量*'
- en: When Python’s turtle turns left, it swivels around to face the new direction
    (just as if you turned your body to face where your arm is pointing 90 degrees
    left). The t.left(90) command points the arrow up (since it started by pointing
    to the right). You can see this in [Figure 4-6](ch04.xhtml#ch04fig06).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当 Python 的海龟向左转时，它会旋转并面向新的方向（就像你转身面向手臂指向的方向，向左转90度）。t.left(90) 命令将箭头指向上方（因为它最初指向的是右侧）。你可以在[图
    4-6](ch04.xhtml#ch04fig06)中看到这个效果。
- en: '![Image](Images/04fig06.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig06.jpg)'
- en: '*Figure 4-6: Turtle after turning left*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-6：海龟左转后的状态*'
- en: '**NOTE**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: '*When you call t.left(90), it’s the same as calling t.right(270) in terms of
    the direction the turtle ends up facing at the end. This is also true when calling
    t.right(90), which is the same as t.left(270). Just imagine that circle and follow
    along with the degrees.*'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*当你调用 t.left(90) 时，它的效果与调用 t.right(270) 在海龟最终朝向的方向上是相同的。当调用 t.right(90) 时，效果也与
    t.left(270) 相同。只需要想象那个圆，并跟随度数来理解。*'
- en: 'Now we’ll draw a square. Add the following code to the lines you’ve already
    entered:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将绘制一个正方形。将以下代码添加到你已经输入的代码中：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Your turtle should have drawn a square and should now be facing in the same
    direction it started, as seen in [Figure 4-7](ch04.xhtml#ch04fig07).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你的海龟应该已经画出了一个正方形，并且现在面朝它开始时的方向，如[图 4-7](ch04.xhtml#ch04fig07)所示。
- en: '![Image](Images/04fig07.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![Image](Images/04fig07.jpg)'
- en: '*Figure 4-7: Turtle drawing a square*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-7：海龟绘制正方形*'
- en: To erase the canvas, enter t.reset(). This clears the canvas and puts the turtle
    back at its starting position.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要清除画布，可以输入 t.reset()。这将清空画布，并将海龟恢复到起始位置。
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can also use t.clear(), which just clears the screen and leaves the turtle
    where it is.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 t.clear()，它只会清空屏幕，并让海龟保持当前位置。
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We can also turn our turtle right or move it backward. We can use up to lift
    the “pen” off the page (in other words, tell the turtle to stop drawing), and
    down to start drawing again. These functions are written in the same way as the
    others we’ve used.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以让海龟向右转或向后移动。我们可以使用 up 来抬起“画笔”（也就是说，告诉海龟停止绘图），使用 down 来重新开始绘制。这些功能的写法与我们之前使用的其他命令相同。
- en: 'Let’s try another drawing using some of these commands. This time, we’ll have
    the turtle draw two lines. Enter the following code:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试使用这些命令进行另一个绘图。这一次，我们将让海龟画两条线。请输入以下代码：
- en: '[PRE7]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: First, we clear the canvas and move the turtle back to its starting position
    with t.reset(). Next, we move the turtle backward 100 pixels with t.backward(100),
    and then use t.up() to pick up the pen and stop drawing.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们清空画布，并使用 t.reset() 将海龟移回起始位置。接着，我们使用 t.backward(100) 将海龟向后移动 100 像素，然后用
    t.up() 抬起画笔停止绘制。
- en: Then, with the t.right(90) command, we turn the turtle right 90 degrees to point
    down, toward the bottom of the screen, and with t.forward(20), we move forward
    20 pixels. Nothing is drawn because we used the up command on the third line.
    Next, we turn the turtle left 90 degrees to face right with t.left(90), and then
    we use the down command to tell the turtle to start drawing again. Lastly, we
    draw a line forward, parallel to the first line we drew, with t.forward(100).
    The two parallel lines we’ve drawn end up looking like [Figure 4-8](ch04.xhtml#ch04fig08).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，使用 t.right(90) 命令，我们将海龟向右转 90 度，指向屏幕底部，再用 t.forward(20) 向前移动 20 像素。由于在第三行我们使用了
    up 命令，所以没有绘制任何内容。接着，我们用 t.left(90) 将海龟向左转 90 度，面朝右侧，然后使用 down 命令让海龟重新开始绘制。最后，我们画出一条与我们之前绘制的第一条平行的线，使用
    t.forward(100)。这两条平行线最终看起来像[图 4-8](ch04.xhtml#ch04fig08)。
- en: '![Image](Images/f0050-01.jpg)![Image](Images/04fig08.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/f0050-01.jpg)![图片](Images/04fig08.jpg)'
- en: '*Figure 4-8: Turtle drawing parallel lines*'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-8：海龟绘制平行线*'
- en: What You Learned
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你学到了什么
- en: In this chapter, you learned how to use Python’s turtle module. We drew some
    simple lines, using left and right turns and forward and backward commands. You
    found out how to stop the turtle from drawing by using up, and start drawing again
    with the down command. You also discovered that the turtle turns by degrees.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何使用 Python 的海龟模块。我们绘制了一些简单的线条，使用了左转、右转以及向前和向后的命令。你了解了如何使用 up 命令停止海龟绘制，并使用
    down 命令重新开始绘制。你还发现海龟是按角度转动的。
- en: Programming Puzzles
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编程谜题
- en: Try drawing some of the following shapes with the turtle. The solutions can
    be found at *[http://python-for-kids.com](http://python-for-kids.com)*.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试用海龟绘制以下一些形状。解决方案可以在 *[http://python-for-kids.com](http://python-for-kids.com)*
    上找到。
- en: '#1: A Rectangle'
  id: totrans-68
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '#1：一个矩形'
- en: Create a new canvas using the turtle module’s Turtle function and then draw
    a rectangle.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用海龟模块的 Turtle 函数创建一个新的画布，然后绘制一个矩形。
- en: '#2: A Triangle'
  id: totrans-70
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '#2：一个三角形'
- en: Create another canvas and draw a triangle. Look back at the diagram of the circle
    with the degrees (“Moving the Turtle” on [page 45](ch04.xhtml#ch04lev1sec3)) to
    remind yourself which direction to turn the turtle.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 创建另一个画布并绘制一个三角形。回顾一下圆形的图示（“移动海龟”在[第 45 页](ch04.xhtml#ch04lev1sec3)），提醒自己应该将海龟转向哪个方向。
- en: '#3: A Box Without Corners'
  id: totrans-72
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '#3：没有角的框'
- en: Write a program to draw the four lines shown in [Figure 4-9](ch04.xhtml#ch04fig09)
    (the size isn’t important, just the shape).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个程序，绘制[图 4-9](ch04.xhtml#ch04fig09)中显示的四条线（大小不重要，形状最重要）。
- en: '![Image](Images/04fig09.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/04fig09.jpg)'
- en: '*Figure 4-9: A box without corners in Turtle*'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-9：海龟画的没有角的框*'
- en: '#4: A Tilted Box Without Corners'
  id: totrans-76
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: '#4：没有角的倾斜框'
- en: Write a program to draw the four lines shown in [Figure 4-10](ch04.xhtml#ch04fig10)
    (similar to the previous puzzle, but the box is tilted on its side). Again, the
    size of the box isn’t important—just the shape.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个程序，绘制[图 4-10](ch04.xhtml#ch04fig10)中显示的四条线（与之前的谜题类似，但框的方向倾斜）。同样，框的大小并不重要——只要形状正确即可。
- en: '![Image](Images/04fig10.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](Images/04fig10.jpg)'
- en: '*Figure 4-10: A tilted box without corners in Turtle*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 4-10：海龟画的没有角的倾斜框*'
