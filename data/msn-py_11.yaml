- en: '**11'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**11'
- en: ACTIVATING SAFETY DOORS**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**激活安全门**'
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: On the space station, doors restrict access to certain zones and ensure that
    astronauts can only get into areas where they’re qualified to work. Many doors
    require personal access passes to open, and the engineering bay doors can only
    be opened with a button in Mission Control. The engineering bay doors also have
    a timer that closes them automatically to increase security.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在太空站中，门限制了对某些区域的访问，确保宇航员只能进入他们有资格工作的区域。许多门需要个人通行证才能打开，而工程舱的门只能通过任务控制中的按钮打开。工程舱的门还设置了定时器，自动关闭它们以提高安全性。
- en: The doors also enforce safety rules that require astronauts to have a working
    suit before they can enter the airlock and to have a buddy with them before the
    door to the planet surface can open. Footage from the security camera suggests
    that some astronauts have found a way to bypass the buddy requirement so they
    can enjoy the serenity of a solo walk on the planet’s surface.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 门还执行安全规则，要求宇航员在进入气闸前必须穿着有效的宇航服，并且在打开通往行星表面的门之前，必须有一名伙伴陪伴。监控录像显示，一些宇航员已经找到了绕过伙伴要求的方法，这样他们就能享受在行星表面独自漫步的宁静。
- en: You installed the doors in the space station when you installed the props. In
    this chapter, you’ll add the code to open and close the doors, as well as add
    a few other tricks and puzzles to make the game more interesting.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 你在安装道具时就已经在太空站安装了门。在这一章中，你将添加打开和关闭门的代码，并且添加一些其他的技巧和谜题，使游戏更加有趣。
- en: '**PLANNING WHERE TO PUT SAFETY DOORS**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**规划安全门的位置**'
- en: 'Doors are clearly a vital part of the space station design, but they’re also
    important for the game’s design. Most obviously, they present a challenging puzzle:
    players need to find a way to open locked doors.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 门显然是太空站设计中的一个重要组成部分，但它们对游戏设计也至关重要。最明显的是，它们呈现了一个具有挑战性的谜题：玩家需要找到打开上锁门的方法。
- en: The doors also help us to tell a story, in which there are obstacles that the
    hero must overcome using their survival training and logical thinking. The game’s
    puzzles will only be satisfying if the player has to think about them a little
    bit. So it’s important that we can control when players see the different puzzle
    elements. Imagine you enter a room and there’s rampant fire blocking the other
    exit. If you’re already carrying a fire extinguisher, you just whip it out and
    use it. There’s no real challenge. It’s more intriguing if you see the threat
    (or the puzzle), and then have to figure out the solution. By sealing off parts
    of the map, we can guide players to see a problem before they see its solution.
    We can’t be certain they’ll notice everything we put in their path, but we can
    give them an opportunity to experience the game at its best.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 门还帮助我们讲述一个故事，其中有障碍，英雄必须利用他们的生存训练和逻辑思维来克服这些障碍。只有当玩家需要稍微思考一下时，游戏的谜题才会让人满意。因此，能够控制玩家何时看到不同的谜题元素非常重要。想象一下，你进入一个房间，另一侧的出口被肆虐的火焰阻挡。如果你已经携带了灭火器，你只需把它拿出来使用，根本没有什么挑战。如果你先看到威胁（或谜题），然后才需要想办法解决，那就更有趣了。通过封锁地图的一些区域，我们可以引导玩家先看到问题，再看到它的解决方案。我们不能确定他们会注意到我们为他们设置的每一个障碍，但我们可以给他们一个机会，体验到游戏的最佳状态。
- en: Doors also enable us to get more value from the map. Although it might not feel
    like it after typing it in, the game map isn’t huge. We can provide a richer experience
    and a longer game by requiring players to cross difficult rooms more than once.
    For example, if we put a key at the end of a corridor, we can direct the player
    to retrace their steps along the corridor and use the key in a door they passed
    on the way.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 门还使我们能够从地图中获得更多的价值。尽管输入地图后可能感觉不到，游戏地图其实并不大。通过要求玩家多次穿越困难的房间，我们可以提供更丰富的体验和更长的游戏时间。例如，如果我们把一把钥匙放在走廊的尽头，我们可以引导玩家沿着走廊倒回去，使用他们在途中经过的门上的钥匙。
- en: '[Figure 11-1](ch11.xhtml#ch11fig1) shows the location of doors in the game.
    Without giving too much away, players won’t be able to get into room 36 before
    they’ve gotten into the top-right section of the space station (via room 34).
    They won’t be able to visit room 27 until they’ve gotten into room 40, either.
    By strategically placing items in the locked rooms, including access cards, we
    can direct the player through the game and through the story.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-1](ch11.xhtml#ch11fig1)显示了游戏中门的位置。在不剧透太多的前提下，玩家在进入空间站的右上部分（通过房间 34）之前是无法进入房间
    36 的。在进入房间 40 之前，他们也无法访问房间 27。通过在锁定的房间中战略性地放置物品，包括访问卡，我们可以引导玩家通过游戏和故事的发展。'
- en: '![image](../images/fig11-1.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig11-1.jpg)'
- en: '*Figure 11-1: The game map with doors shown in red*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-1：显示红色门的游戏地图*'
- en: When you’re designing your own games, think carefully about where you put your
    props. It’s one of the most important elements in ensuring the game presents players
    with an enjoyable challenge.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当你设计自己的游戏时，仔细考虑物品的放置位置非常重要。这是确保游戏能为玩家提供一个有趣挑战的关键元素之一。
- en: '**POSITIONING THE DOORS**'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**门的位置**'
- en: I’ve positioned all the doors in *Escape* at the top or bottom exit of a room
    because of the game’s top-down perspective. If a door was in a side exit, players
    would only see its top surface, and we need to make sure something as important
    as a door can be clearly seen.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我将*逃脱*游戏中的所有门都放在房间的顶部或底部出口，这是因为游戏采用的是自上而下的视角。如果门位于侧面出口，玩家只能看到门的顶部表面，我们需要确保像门这样重要的元素能被清晰地看到。
- en: 'Most of the doors are at the top of the room and remain open after the player
    opens them. The exception is the door between rooms 32 and 27, which has a timer
    mechanism that shuts it automatically. This timer provides an additional challenge:
    the player must rush to get to the room from the switch that opens the door, before
    the door closes.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数门位于房间的顶部，并在玩家打开后保持打开状态。唯一的例外是房间 32 和房间 27 之间的门，它有一个定时器机制，会自动关闭。这种定时器提供了额外的挑战：玩家必须迅速从打开门的开关处赶到房间，才能在门关闭之前进入。
- en: The doors in *Escape* are objects 20 to 26\. Their images and descriptions are
    set up in the objects dictionary (see “[Making the Space Station Objects Dictionary](ch05.xhtml#lev79)”
    on [page 85](ch05.xhtml#page_85)). The door positions are set up in the props
    dictionary (see “[Adding the Props Information](ch09.xhtml#lev117)” on [page 151](ch09.xhtml#page_151)).
    Each door has an *x* position that puts it in the room’s doorway. To work out
    the *x* position for a door, just divide the room width by 2, round it down, and
    then subtract 1.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*逃脱*中的门是对象 20 到 26。它们的图像和描述在 objects 字典中设置（参见 “[制作空间站对象字典](ch05.xhtml#lev79)”
    第 85 页）。门的位置在 props 字典中设置（参见 “[添加道具信息](ch09.xhtml#lev117)” 第 151 页）。每个门都有一个 *x*
    位置，将其放置在房间的门口。要计算门的 *x* 位置，只需将房间宽度除以 2，向下取整，再减去 1。'
- en: Now let’s add some controls to enable players to open the doors.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加一些控制，让玩家能够打开门。
- en: '**ADDING ACCESS CONTROLS**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加访问控制**'
- en: To enable the player to open the doors, we need to add some instructions to
    the use_object() function in the USE OBJECTS part of the program. One new code
    snippet will open the timed door to the engineering bay when the player presses
    a button in one of the rooms. You’ll add this code between the instructions for
    handling objects 16 and 68.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让玩家能够打开门，我们需要在程序的 USE OBJECTS 部分的 use_object() 函数中添加一些指令。一段新的代码片段将在玩家按下某个房间的按钮时打开通往工程舱的定时门。你将把这段代码添加到处理对象
    16 和 68 的指令之间。
- en: 'The other new code addition will enable the player to use access cards to open
    the doors: put this after the code for using recipes.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一段新的代码将使玩家能够使用访问卡打开门：把它放在使用配方的代码后面。
- en: '[Listing 11-1](ch11.xhtml#ch11list1) shows the new code to add. Because these
    instructions are part of the use_object() function, the first one is indented
    by four spaces. Your new elif instruction should line up with the elif instruction
    above it.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 11-1](ch11.xhtml#ch11list1)显示了需要添加的新代码。因为这些指令是 use_object() 函数的一部分，所以第一个指令缩进了四个空格。你的新
    elif 指令应该与上面的 elif 指令对齐。'
- en: Open *listing10-7.py* from the previous chapter and add these new lines to it.
    Save your program as *listing11-1.py*. You can run it using pgzrun listing11-1.py,
    but we haven’t added all the code necessary to make the doors work properly yet.
    You shouldn’t see any error messages, though.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 打开*listing10-7.py*，并将这些新行添加到其中。将程序保存为 *listing11-1.py*。你可以通过 pgzrun listing11-1.py
    来运行它，但我们还没有添加所有必要的代码来使门正常工作。不过，你应该不会看到任何错误信息。
- en: '*listing11-1.py*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-1.py*'
- en: --snip--
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'elif item_player_is_on == 16:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_player_is_on == 16:'
- en: energy += 1
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: energy += 1
- en: 'if energy > 100:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '如果 energy > 100:'
- en: energy = 100
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: energy = 100
- en: use_message = "You munch the lettuce and get a little energy back"
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你吃掉了生菜，恢复了一些能量"
- en: draw_energy_air()
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: draw_energy_air()
- en: '➊     elif item_player_is_on == 42:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '➊      elif item_player_is_on == 42:'
- en: '➋         if current_room == 27:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '➋          如果 current_room == 27:'
- en: ➌             open_door(26)
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: ➌              open_door(26)
- en: '➍         props[25][0] = 0 # Door from RM32 to engineering bay'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '➍          props[25][0] = 0 # 从 RM32 到工程舱的门'
- en: 'props[26][0] = 0 # Door inside engineering bay'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 'props[26][0] = 0 # 工程舱内的门'
- en: ➎         clock.schedule_unique(shut_engineering_door, 60)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: ➎          clock.schedule_unique(shut_engineering_door, 60)
- en: use_message = "You press the button"
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你按下了按钮"
- en: show_text("Door to engineering bay is open for 60 seconds", 1)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("工程舱的门已经打开 60 秒", 1)
- en: sounds.say_doors_open.play()
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_doors_open.play()
- en: sounds.doors.play()
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.doors.play()
- en: 'elif item_carrying == 68 or item_player_is_on == 68:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 'elif item_carrying == 68 或 item_player_is_on == 68:'
- en: energy = 100
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: energy = 100
- en: use_message = "You use the food to restore your energy"
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你使用食物恢复了能量"
- en: remove_object(68)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: remove_object(68)
- en: draw_energy_air()
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: draw_energy_air()
- en: --snip--
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'for recipe in RECIPES:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 'for recipe in RECIPES:'
- en: ingredient1 = recipe[0]
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: ingredient1 = recipe[0]
- en: ingredient2 = recipe[1]
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: ingredient2 = recipe[1]
- en: --snip--
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: add_object(combination)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: add_object(combination)
- en: sounds.combine.play()
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.combine.play()
- en: '# {key object number: door object number}'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '# {钥匙物品编号: 门物品编号}'
- en: ➏     ACCESS_DICTIONARY = { 79:22, 80:23, 81:24 }
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ➏      ACCESS_DICTIONARY = { 79:22, 80:23, 81:24 }
- en: '➐     if item_carrying in ACCESS_DICTIONARY:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '➐      如果 item_carrying 在 ACCESS_DICTIONARY 中:'
- en: door_number = ACCESS_DICTIONARY[item_carrying]
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: door_number = ACCESS_DICTIONARY[item_carrying]
- en: '➑         if props[door_number][0] == current_room:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '➑          如果 props[door_number][0] == current_room:'
- en: use_message = "You unlock the door!"
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: use_message = "你解锁了门！"
- en: ➒             sounds.say_doors_open.play()
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: ➒              sounds.say_doors_open.play()
- en: sounds.doors.play()
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.doors.play()
- en: open_door(door_number)
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: open_door(door_number)
- en: show_text(use_message, 0)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: show_text(use_message, 0)
- en: time.sleep(0.5)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: time.sleep(0.5)
- en: --snip--
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 11-1: Adding the ability to open doors*'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 11-1：添加打开门的功能*'
- en: The button to open the door to the engineering bay is object 42\. There is one
    of these buttons outside the engineering bay to provide access, and another inside
    the engineering bay, so the player doesn’t get trapped inside.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 打开通往工程舱的门的按钮是物品 42。工程舱外面有一个这样的按钮用于提供访问权限，工程舱内也有一个按钮，以确保玩家不会被困在里面。
- en: If the player is using the button ➊, the code to open the door runs. If they’re
    using the button inside the room ➋, the open_door() function is used to show the
    door opening ➌. We’ll add that function shortly.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家正在使用按钮 ➊，则运行打开门的代码。如果他们正在使用房间内的按钮 ➋，则使用 open_door() 函数显示门打开 ➌。我们会很快添加这个函数。
- en: The props dictionary is updated to change the room number for the door to 0,
    removing the door from the room (and from the game) ➍. This door works on a timer,
    so the program schedules the function to close the door 60 seconds later ➎. If
    you find it too difficult to get to the room in time, you can change the number
    60 to a larger number. This number should give you just about enough time, whether
    you’re using a PC or Raspberry Pi 3; or a Raspberry Pi 2, where the game runs
    a little bit more slowly.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: props 字典被更新，以将门的房间号改为 0，从而将门移除房间（并从游戏中移除） ➍。这扇门是定时工作的，因此程序安排了一个函数，在 60 秒后关闭门
    ➎。如果你觉得很难及时到达房间，你可以将数字 60 改为更大的数字。这个数字应该足够让你有足够的时间，无论你是在使用 PC 还是 Raspberry Pi
    3，或者是 Raspberry Pi 2，那时游戏会运行得稍微慢一些。
- en: The second chunk of code enables players to use keys to open the doors. We create
    a new dictionary called ACCESS_DICTIONARY that uses the access card number as
    the dictionary key and the door number as the data ➏. So object 79 (an access
    card) is used to open door 22, for example.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 第二段代码使玩家能够使用钥匙打开门。我们创建了一个新的字典，叫做 ACCESS_DICTIONARY，它使用访问卡号作为字典键，门号作为数据➏。例如，物品
    79（访问卡）用于打开门 22。
- en: '**TIP**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: The objects used to open the doors in *Escape* are all access cards, but if
    you’re modifying the game, you could use any object. You could use a crowbar to
    pry doors open, or (if you make a game set in a fantasy world) you could use different
    magic spells. Just make sure players can reasonably work out what to use.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *Escape* 中，用于打开门的物品都是门禁卡，但如果你修改游戏，可以使用任何物品。你可以用撬棍撬开门，或者（如果你做的是一款奇幻世界设定的游戏）可以使用不同的魔法咒语。只要确保玩家能合理地推断出该使用什么物品。
- en: When the player presses U, the door opens if they have selected one of the items
    in the dictionary for unlocking doors ➐ and if they are standing in the same room
    as the door it unlocks ➑. We also play a sound effect of a computer voice saying
    “doors open” ➒. This is just a recording, like any other sound in the game.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当玩家按下 U 键时，如果他们已选择字典中用于解锁门的某个物品 ➐，并且站在与门解锁位置相同的房间内 ➑，门就会打开。同时，我们会播放一段计算机语音效果，播报“门已打开”
    ➒。这只是一个录音，就像游戏中的其他任何声音一样。
- en: '**MAKING THE DOORS OPEN AND CLOSE**'
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**制作门的开关动画**'
- en: We’ll place the functions for opening, closing, and animating the doors into
    a new DOORS section of the program. You need to add this section after the USE
    OBJECTS section but before the START section at the end.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把开门、关门和动画制作的函数放入程序的新 DOORS 部分。你需要在 USE OBJECTS 部分之后、START 部分之前添加这个新部分。
- en: '[Listing 11-2](ch11.xhtml#ch11list2) shows the first two functions you need
    to add to start the DOORS section. Add the new lines, and save your program as
    *listing11-2.py*. The DOORS section is still incomplete: you can run the program
    (using pgzrun listing11-2.py) to check for errors, but the doors won’t work yet.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[Listing 11-2](ch11.xhtml#ch11list2) 展示了你需要添加的前两个函数，以启动 DOORS 部分。添加新行并将程序保存为
    *listing11-2.py*。DOORS 部分仍然不完整：你可以运行程序（使用 pgzrun listing11-2.py）来检查错误，但门的功能尚未启用。'
- en: '*listing11-2.py*'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-2.py*'
- en: --snip--
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: sounds.completion.play()
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.completion.play()
- en: sounds.say_mission_complete.play()
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_mission_complete.play()
- en: '###############'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   DOORS   ##'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '##   DOORS   ##'
- en: '###############'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '➊ def open_door(opening_door_number):'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '➊ def open_door(opening_door_number):'
- en: global door_frames, door_shadow_frames
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: global door_frames, door_shadow_frames
- en: global door_frame_number, door_object_number
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: global door_frame_number, door_object_number
- en: ➋     door_frames = [images.door1, images.door2, images.door3,
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     door_frames = [images.door1, images.door2, images.door3,
- en: images.door4, images.floor]
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: images.door4, images.floor]
- en: '# (Final frame restores shadow ready for when door reappears).'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '# （最终帧恢复阴影，为门重新出现做准备）。'
- en: door_shadow_frames = [images.door1_shadow, images.door2_shadow,
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: door_shadow_frames = [images.door1_shadow, images.door2_shadow,
- en: images.door3_shadow, images.door4_shadow,
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: images.door3_shadow, images.door4_shadow,
- en: images.door_shadow]
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: images.door_shadow]
- en: door_frame_number = 0
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: door_frame_number = 0
- en: door_object_number = opening_door_number
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: door_object_number = opening_door_number
- en: ➌     do_door_animation()
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: ➌     do_door_animation()
- en: '➍ def close_door(closing_door_number):'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '➍ def close_door(closing_door_number):'
- en: global door_frames, door_shadow_frames
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: global door_frames, door_shadow_frames
- en: global door_frame_number, door_object_number, player_y
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: global door_frame_number, door_object_number, player_y
- en: ➎     door_frames = [images.door4, images.door3, images.door2,
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: ➎     door_frames = [images.door4, images.door3, images.door2,
- en: images.door1, images.door]
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: images.door1, images.door]
- en: door_shadow_frames = [images.door4_shadow, images.door3_shadow,
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: door_shadow_frames = [images.door4_shadow, images.door3_shadow,
- en: images.door2_shadow, images.door1_shadow,
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: images.door2_shadow, images.door1_shadow,
- en: images.door_shadow]
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: images.door_shadow]
- en: door_frame_number = 0
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: door_frame_number = 0
- en: door_object_number = closing_door_number
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: door_object_number = closing_door_number
- en: '# If player is in same row as a door, they must be in open doorway'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '# 如果玩家与门处于同一行，则必须处于开门口'
- en: '➏     if player_y == props[door_object_number][1]:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '➏     如果 player_y == props[door_object_number][1]:'
- en: '➐         if player_y == 0: # if in the top doorway'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '➐         如果 player_y == 0: # 如果在上方门口'
- en: '➑             player_y = 1 # move them down'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '➑             player_y = 1 # 将玩家向下移动'
- en: 'else:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: '➒             player_y = room_height - 2 # move them up'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '➒             player_y = room_height - 2 # 将玩家向上移动'
- en: ➓     do_door_animation()
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: ➓     do_door_animation()
- en: '###############'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '##   START   ##'
- en: '###############'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 11-2: Setting up the door animations*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 11-2: 设置门的动画*'
- en: The open_door() and close_door() functions set up the door animations for opening
    and closing. You’ve already seen open_door() ➊ mentioned in [Listing 11-1](ch11.xhtml#ch11list1).
    In [Listing 11-2](ch11.xhtml#ch11list2), we define that function so it can run
    if the player opens a door using a key, for example.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: open_door() 和 close_door() 函数设置了开门和关门的动画效果。你已经在 [Listing 11-1](ch11.xhtml#ch11list1)
    中见过 open_door() ➊ 的描述。在 [Listing 11-2](ch11.xhtml#ch11list2) 中，我们定义了这个函数，以便它在玩家使用钥匙开门时运行。
- en: The door animation has five frames, numbered 0 to 4, as shown in [Table 11-1](ch11.xhtml#ch11tab1).
    We store images for the animation in a list called door_frames ➋➎ and store the
    frame number in the variable door_frame_number. In the open_door() and close_door()
    functions, we set the frame number to 0, the first frame.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 门的动画有五帧，编号从0到4，如[表11-1](ch11.xhtml#ch11tab1)所示。我们将动画的图像存储在名为door_frames ➋➎的列表中，并将帧编号存储在变量door_frame_number中。在open_door()和close_door()函数中，我们将帧编号设置为0，即第一帧。
- en: In the variable door_object_number, we store the object number of the door that
    will be opening or closing. After the variables and list have been set up, the
    function do_door_animation() is started to carry out the animation using them
    ➌➓. We’ll add that function shortly.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在变量door_object_number中，我们存储将要开关的门的对象编号。在变量和列表设置完成后，启动do_door_animation()函数来执行动画
    ➌➓。我们稍后会添加这个函数。
- en: 'The function for closing the door ➍ is similar to the function for opening
    the door ➊ with two exceptions: the animation frames are different, and there
    is a check to stop the door from closing on top of the player.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭门的函数➍与开门函数➊类似，有两个不同点：动画帧不同，并且有检查来防止门关闭时覆盖玩家。
- en: If the player is in the same *y* position as the door ➏, it means the player
    is standing in the doorway. In that case, if the player is in the top row ➐, we
    set their *y* position to 1 ➑ to move them to the next row down. If the player
    is not in the top row, we set their *y* position to the second row from the bottom
    ➒, just inside the door.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家与门处于相同的*y*位置 ➏，则意味着玩家站在门口。在这种情况下，如果玩家在最上面一行 ➐，我们将他们的*y*位置设置为1 ➑，将他们移到下一行。如果玩家不在最上面一行，我们将他们的*y*位置设置为倒数第二行
    ➒，也就是门的内部。
- en: This means the astronaut jumps out of the way of the doors of their own accord,
    but it’s more realistic than them ending up inside the door!
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着宇航员会主动跳开门，更加逼真，而不是直接站在门里！
- en: '**Table 11-1:** The Animation Frames for the Doors'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**表11-1：** 门的动画帧'
- en: '| **Frame number** | **0** | **1** | **2** | **3** | **4** |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| **帧编号** | **0** | **1** | **2** | **3** | **4** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| **Opening** | ![image](../images/f0189-01.jpg) | ![image](../images/f0189-02.jpg)
    | ![image](../images/f0189-03.jpg) | ![image](../images/f0189-04.jpg) | **Final
    frame is a floor tile (no door).** |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| **开门** | ![image](../images/f0189-01.jpg) | ![image](../images/f0189-02.jpg)
    | ![image](../images/f0189-03.jpg) | ![image](../images/f0189-04.jpg) | **最后一帧是地板砖（没有门）。**
    |'
- en: '| **Closing** | ![image](../images/f0189-05.jpg) | ![image](../images/f0189-06.jpg)
    | ![image](../images/f0189-07.jpg) | ![image](../images/f0189-08.jpg) | ![image](../images/f0189-09.jpg)
    |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| **关门** | ![image](../images/f0189-05.jpg) | ![image](../images/f0189-06.jpg)
    | ![image](../images/f0189-07.jpg) | ![image](../images/f0189-08.jpg) | ![image](../images/f0189-09.jpg)
    |'
- en: '**ADDING THE DOOR ANIMATION**'
  id: totrans-129
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加门动画**'
- en: The do_door_animation() function will manage the animation of the doors opening
    and closing.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: do_door_animation()函数将管理门的开关动画。
- en: 'Place the do_door_animation() function inside the DOORS section of the program,
    after the close_door() function you added in [Listing 11-2](ch11.xhtml#ch11list2).
    Add the new lines in [Listing 11-3](ch11.xhtml#ch11list3), and save your program
    as *listing11-3.py*. You can run this version of the game using pgzrun listing11-3.py.
    The doors that are opened with a key should now be working. I’ll tell you how
    to test them in Training Mission #1 shortly.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 将do_door_animation()函数放在程序的DOORS部分，在你在[清单11-2](ch11.xhtml#ch11list2)中添加的close_door()函数之后。添加[清单11-3](ch11.xhtml#ch11list3)中的新行，并将程序保存为*listing11-3.py*。你可以使用pgzrun
    listing11-3.py运行这个版本的游戏。现在，使用钥匙打开的门应该可以正常工作。稍后我会告诉你如何在训练任务#1中测试它们。
- en: '*listing11-3.py*'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-3.py*'
- en: --snip--
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'player_y = room_height - 2 # move them up'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 'player_y = room_height - 2 # 将他们移动到上面'
- en: do_door_animation()
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: do_door_animation()
- en: 'def do_door_animation():'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 'def do_door_animation():'
- en: global door_frames, door_frame_number, door_object_number, objects
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: global door_frames, door_frame_number, door_object_number, objects
- en: ➊     objects[door_object_number][0] = door_frames[door_frame_number]
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: ➊     objects[door_object_number][0] = door_frames[door_frame_number]
- en: objects[door_object_number][1] = door_shadow_frames[door_frame_number]
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: objects[door_object_number][1] = door_shadow_frames[door_frame_number]
- en: ➋     door_frame_number += 1
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: ➋     door_frame_number += 1
- en: '➌     if door_frame_number == 5:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '➌     如果door_frame_number == 5:'
- en: '➍         if door_frames[-1] == images.floor:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '➍         如果door_frames[-1] == images.floor:'
- en: '➎             props[door_object_number][0] = 0 # remove door from props list'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '➎             props[door_object_number][0] = 0 # 从道具列表中移除门'
- en: '# Regenerate room map from the props'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '# 从道具重新生成房间地图'
- en: '# to put the door in the room if required.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '# 如果需要将门放入房间'
- en: ➏         generate_map()
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: ➏          generate_map()
- en: '➐     else:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '➐      else:'
- en: ➑         clock.schedule(do_door_animation, 0.15)
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: ➑          clock.schedule(do_door_animation, 0.15)
- en: '###############'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 11-3: Adding the door animation*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 11-3: 添加门的动画*'
- en: The objects dictionary contains, among other things, the image to use for a
    particular object. This new function starts by changing the door’s image in that
    dictionary to the current animation frame ➊. When the room is redrawn, it will
    now use that animation frame.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 对象字典包含了用于特定对象的图像等内容。这个新函数首先通过将字典中的门图像更改为当前的动画帧 ➊。重新绘制房间时，它将使用该动画帧。
- en: The function then increases the animation frame number by 1 ➋ so the next animation
    frame can be shown next time this function runs. If the frame is now 5, it means
    we’ve reached the end of the animation ➌. In that case, we check whether the door
    has opened (rather than closed) by seeing whether the final frame was a floor
    tile, showing no door ➍. (An index number of -1 gives you the last item in a list.)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 然后该函数将动画帧数加1 ➋，以便下一次运行此函数时显示下一个动画帧。如果帧数现在是5，说明我们已经到了动画的最后一帧 ➌。在这种情况下，我们检查门是否已打开（而不是关闭），通过检查最后一帧是否为地板砖，显示没有门
    ➍。（-1的索引值表示列表中的最后一个项。）
- en: If the door has now fully opened, the props data is updated to remove this door
    from the game by changing its room number to 0 ➎. If the current animation frame
    is the final frame, whether the door is opening or closing, a new room map is
    generated ➏, which ensures the door is added or removed correctly in the current
    room.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果门现在已经完全打开，props数据将被更新，通过将其房间编号更改为0来移除这扇门 ➎。如果当前的动画帧是最后一帧，无论门是打开还是关闭，都会生成一个新的房间地图
    ➏，以确保门在当前房间内正确添加或移除。
- en: If the current frame isn’t the final animation frame ➐, the function sets itself
    to run again in 0.15 seconds ➑ to show the next frame in the sequence.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前帧不是最后一个动画帧 ➐，函数会在0.15秒后重新运行 ➑，以显示序列中的下一帧。
- en: You may be wondering why I didn’t combine the two if instructions ➌➍. The reason
    is that the generate_map() function needs to run at the end of the animation,
    whether the door is opening or closing. If we combined the two if instructions,
    this function would only run when the door had opened.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，为什么我没有将两个if语句 ➌➍ 合并在一起。原因是generate_map()函数需要在动画结束时运行，无论门是打开还是关闭。如果我们将两个if语句合并，这个函数只会在门打开时运行。
- en: '**TRAINING MISSION #1**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: At this point in the program, the doors should be fully functional. Can you
    test that they work? Find the access card for the door in the community room and
    use it. Stand in the community room and use the access card for its door by selecting
    the access card in your inventory and pressing U. If you need a hint, look at
    the map in [Figure 11-1](ch11.xhtml#ch11fig1). The community room is number 39,
    and the key for it is in room 41\. Remember that people sometimes tidy things
    away, and the key might not be lying in plain sight.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在程序的这一部分，门应该已经完全正常工作了。您能测试它是否能正常工作吗？找到社区房间中门的通行卡并使用它。站在社区房间里，通过在物品栏中选择通行卡并按U来使用它。如果您需要提示，请查看[图11-1](ch11.xhtml#ch11fig1)中的地图。社区房间是编号39，它的钥匙在41号房间。记住，有时人们会整理东西，钥匙可能不会显眼地放着。
- en: '**SHUTTING THE TIMED DOOR**'
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**关闭定时门**'
- en: Next, we need to add a new function called shut_engineering_door() to shut the
    door to the engineering bay automatically. This function is set to run after a
    delay of 60 seconds when the door is opened (see [Listing 11-1](ch11.xhtml#ch11list1)),
    giving the player a minute to run from the button to the door before it shuts!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加一个名为shut_engineering_door()的新函数，用于自动关闭通往工程舱的门。该函数设置为在门打开后延迟60秒运行（参见[Listing
    11-1](ch11.xhtml#ch11list1)），给玩家一分钟的时间从按钮跑到门口，才会关闭门！
- en: Put this function in the DOORS section of the program after the do_door_animation()
    function you just added. Add the new lines in [Listing 11-4](ch11.xhtml#ch11list4),
    and save the program as *listing11-4.py*. Then run this program using pgzrun listing11-4.py.
    You should see no error messages. The timed door should be working now, but I’ll
    show you an easier way to test it shortly.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 将此函数放入程序中的DOORS部分，位于您刚才添加的do_door_animation()函数之后。在[Listing 11-4](ch11.xhtml#ch11list4)中添加新行，并将程序保存为*listing11-4.py*。然后使用pgzrun
    listing11-4.py运行此程序。您应该不会看到任何错误消息。定时门现在应该可以正常工作了，但稍后我会向您展示一种更简单的测试方法。
- en: '*listing11-4.py*'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-4.py*'
- en: --snip--
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'else:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: clock.schedule(do_door_animation, 0.15)
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule(do_door_animation, 0.15)
- en: 'def shut_engineering_door():'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 'def shut_engineering_door():'
- en: global current_room, door_room_number, props
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: global current_room, door_room_number, props
- en: '➊     props[25][0] = 32 # Door from room 32 to the engineering bay.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '➊     props[25][0] = 32 # 从32号房间到工程舱的门。'
- en: '➋     props[26][0] = 27 # Door inside engineering bay.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '➋     props[26][0] = 27 # 工程舱内的门。'
- en: '➌     generate_map() # Add door to room_map for if in affected room.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '➌     generate_map() # 如果在受影响的房间中，向room_map中添加门。'
- en: '➍     if current_room == 27:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '➍     if current_room == 27:'
- en: ➎         close_door(26)
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: ➎         close_door(26)
- en: '➏     if current_room == 32:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '➏     if current_room == 32:'
- en: ➐         close_door(25)
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: ➐         close_door(25)
- en: show_text("The computer tells you the doors are closed.", 1)
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("计算机告诉你门已关闭。", 1)
- en: sounds.say_doors_closed.play()
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_doors_closed.play()
- en: '###############'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 11-4: Adding the code to shut the engineering door automatically*'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 11-4：自动关闭工程门的代码*'
- en: The shut_engineering_door() function has two door props to work with, objects
    25 and 26, because the player can see this door from either side depending on
    which room they’re in. The first thing we do is update the props dictionary so
    these doors appear in the rooms ➊➋.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: shut_engineering_door()函数有两个门的道具来处理，即物体25和26，因为玩家可以根据他们所处的房间从任一侧看到这扇门。我们首先做的是更新道具字典，以便这些门出现在房间中➊➋。
- en: We then call the generate_map() function ➌. If the player is in a room with
    one of these doors, this function updates the room map for the current room. In
    other cases, the generate_map() function still runs, but nothing changes.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们调用generate_map()函数➌。如果玩家在有这些门的房间中，这个函数会更新当前房间的房间地图。在其他情况下，generate_map()函数仍然会运行，但没有任何变化。
- en: If the player is in the engineering bay (room 27) ➍, they need to see door 26
    closing ➎, so the program starts the animation. If the player is on the other
    side of the door, in room 32 ➏, we need to show them door 25 closing ➐.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家在工程舱（27号房间）中➍，他们需要看到26号门关闭➎，所以程序会启动动画。如果玩家在门的另一侧，处于32号房间➏，我们需要显示25号门关闭➐。
- en: '**RED ALERT**'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Don’t mix up door numbers and room numbers. Door numbers are object numbers
    and aren’t related to the room they’re in.*'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要混淆门的编号和房间的编号。门编号是物体编号，与它所在的房间无关。*'
- en: To test that the engineering bay door is working correctly, we’d have to run
    the game, press the button, and race to the engineering bay. So to save time,
    let’s engineer a solution that enables us to get around the space station more
    quickly.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试工程舱门是否正常工作，我们必须运行游戏，按下按钮，并冲向工程舱。所以为了节省时间，让我们设计一个解决方案，使我们能够更快速地在太空站中移动。
- en: '**ADDING A TELEPORTER**'
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加一个传送门**'
- en: While you’re still building the space station, you might find it helpful to
    be able to jump to any room in an instant. Using the latest in molecular transfer
    technology, we can install a *teleporter* that allows you to type in a room number
    and go straight there. This is a huge benefit when you’re testing the game, but
    it’s a restricted technology and isn’t approved for use in a real mission on the
    space station. You’ll need to remove it before you finish building the game. I’m
    trusting you with highly classified technology here.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 当你还在建造太空站时，能够瞬间跳转到任何房间会非常有帮助。利用最新的分子传输技术，我们可以安装一个*传送门*，让你输入房间号并直接传送过去。在测试游戏时，这对你来说是一个巨大的便利，但这项技术属于受限技术，在太空站的真实任务中不允许使用。你需要在完成游戏之前移除它。我将这项高度机密的技术交给你使用。
- en: Place the teleporter code with the other player controls in the game_loop()
    function, in the GAME LOOP part of the program. I recommend that you add it after
    the instructions for starting the use_object function. Because these instructions
    are inside a function, you need to indent the if instruction by four spaces and
    then indent the instructions under it by four more spaces.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 将传送门代码与游戏循环（game_loop()）中的其他玩家控制代码放在一起，位于程序的游戏循环部分。我建议你将其添加到开始使用物品（use_object）函数的指令后面。因为这些指令在函数内部，你需要将if指令缩进四个空格，然后将它下面的指令再缩进四个空格。
- en: Add the new instructions in [Listing 11-5](ch11.xhtml#ch11list5), and then save
    your file as *listing11-5.py*. You can run this program using pgzrun listing11-5.py.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 将新的指令添加到[列表 11-5](ch11.xhtml#ch11list5)，然后将文件保存为*listing11-5.py*。你可以使用pgzrun
    listing11-5.py来运行这个程序。
- en: '*listing11-5.py*'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-5.py*'
- en: --snip--
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: 'if keyboard.u:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 'if keyboard.u:'
- en: use_object()
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: use_object()
- en: '## Teleporter for testing'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '## 用于测试的传送门'
- en: '## Remove this section for the real game'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '## 对于真实的游戏，移除这一部分'
- en: '➊     if keyboard.x:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '➊     if keyboard.x:'
- en: ➋         current_room = int(input("Enter room number:"))
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: ➋         current_room = int(input("请输入房间号："))
- en: ➌         player_x = 2
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: ➌         player_x = 2
- en: player_y = 2
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: player_y = 2
- en: ➍         generate_map()
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: ➍         generate_map()
- en: ➎         start_room()
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: ➎         start_room()
- en: sounds.teleport.play()
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.teleport.play()
- en: '## Teleport section ends'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '## 传送部分结束'
- en: --snip--
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 11-5: Adding a teleporter*'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 11-5：添加传送门*'
- en: When you press the X key ➊, the program will ask you to type in a room number
    ➋. This request appears in the command line window where you type in your pgzrun
    instruction to run the program. You might need to click this window to bring it
    to the front and will need to click the game window to play again afterwards.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 当你按下 X 键 ➊ 时，程序会要求你输入一个房间号 ➋。此请求会显示在你输入 pgzrun 指令以运行程序的命令行窗口中。你可能需要点击该窗口将其置于前面，然后在之后需要点击游戏窗口重新开始游戏。
- en: The input() function takes whatever you enter and puts it in a string. Because
    we need the input as a number, we use the int() function to convert it to an integer
    (or whole number) ➋.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: input() 函数会将你输入的内容作为字符串处理。由于我们需要的是数字输入，因此我们使用 int() 函数将其转换为整数（或整数型） ➋。
- en: The number you enter goes into the current_room variable. There’s no error checking
    here, so the program might crash if you don’t enter a valid room number. If you
    enter text instead of a number, for example, the program freezes.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 你输入的数字会被存入 current_room 变量。这里没有错误检查，所以如果你输入无效的房间号，程序可能会崩溃。例如，如果你输入的是文字而不是数字，程序会卡死。
- en: You’re teleported to position *y* = 2, *x* = 2 ➌ inside the room you choose.
    This is usually a fairly safe place to be, but if the teleporter puts you inside
    some scenery, you can usually just walk out of it. The room map is regenerated
    ➍, and the room is restarted ➎, completing your teleportation to your new destination.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 你会被传送到房间内的 *y* = 2，*x* = 2 ➌ 位置。这个位置通常是一个相对安全的地方，但如果传送门将你传送到某个景物内，你通常可以直接走出去。房间地图会被重新生成
    ➍，房间会重新启动 ➎，完成你到达新目的地的传送。
- en: '**TRAINING MISSION #2**'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #2**'
- en: Use the teleporter to beam into room 27 so you can test the door in the engineering
    bay. Use the button at the top of the room to open the door (press U while walking
    into the button), and wait in the room until the door closes. Open the door again,
    but this time leave the room and check that the door still closes when seen from
    the other side. The door animation should work correctly.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 使用传送门传送到 27 号房间，以便测试工程舱的门。使用房间顶部的按钮来打开门（在走向按钮时按下 U），并在房间内等待直到门关闭。再次打开门，但这次离开房间并检查从另一侧看门是否仍然关闭。门的动画应该能正常工作。
- en: '**ACTIVATING THE AIRLOCK SECURITY DOOR**'
  id: totrans-216
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**激活气闸安全门**'
- en: As a safety feature, the airlock door to the planet’s surface uses a weight
    sensor to open it. One astronaut must stand on the pressure pad to open the door,
    enabling another one to walk through it. This design ensures that astronauts cannot
    go out onto the planet’s surface without support in the space station.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一项安全功能，通往行星表面的气闸门使用压力传感器来开启。一名宇航员必须站在压力垫上才能打开门，从而允许另一个人通过。这种设计确保了宇航员在空间站内没有支持的情况下无法进入行星表面。
- en: To enable this safety feature, we’ll need to add a new function to the program’s
    DOORS section. [Listing 11-6](ch11.xhtml#ch11list6) shows the code for the new
    function, which animates the door. Add this code after the shut_engineering_door()
    function you added in [Listing 11-4](ch11.xhtml#ch11list4). Save your updated
    program as *listing11-6.py*. You can run your program using pgzrun listing11-6.py,
    but the airlock door is not activated yet.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用这一安全功能，我们需要在程序的 DOORS 部分添加一个新函数。[清单 11-6](ch11.xhtml#ch11list6) 显示了新函数的代码，该函数用于动画化门的开关。将此代码添加到你在[清单
    11-4](ch11.xhtml#ch11list4)中添加的 shut_engineering_door() 函数之后。将更新后的程序保存为 *listing11-6.py*。你可以使用
    pgzrun listing11-6.py 来运行程序，但气闸门尚未被激活。
- en: '*listing11-6.py*'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-6.py*'
- en: --snip--
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: show_text("The computer tells you the doors are closed.", 1)
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("电脑告诉你门已关闭。", 1)
- en: sounds.say_doors_closed.play()
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: sounds.say_doors_closed.play()
- en: 'def door_in_room_26():'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 'def door_in_room_26():'
- en: global airlock_door_frame, room_map
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: global airlock_door_frame, room_map
- en: ➊     frames = [images.door, images.door1, images.door2,
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: ➊     frames = [images.door, images.door1, images.door2,
- en: images.door3,images.door4, images.floor
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: images.door3, images.door4, images.floor
- en: ']'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: ']'
- en: shadow_frames = [images.door_shadow, images.door1_shadow,
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: shadow_frames = [images.door_shadow, images.door1_shadow,
- en: images.door2_shadow, images.door3_shadow,
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: images.door2_shadow, images.door3_shadow,
- en: images.door4_shadow, None]
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: images.door4_shadow, None]
- en: '➋     if current_room != 26:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '➋     if current_room != 26:'
- en: clock.unschedule(door_in_room_26)
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: clock.unschedule(door_in_room_26)
- en: return
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: return
- en: '# prop 21 is the door in Room 26.'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '# 属性 21 是房间 26 中的门。'
- en: ➌     if ((player_y == 8 and player_x == 2) or props[63] == [26, 8, 2]) \
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: ➌     if ((player_y == 8 and player_x == 2) or props[63] == [26, 8, 2]) \
- en: 'and props[21][0] == 26:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '且 props[21][0] == 26:'
- en: ➍         airlock_door_frame += 1
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: ➍         airlock_door_frame += 1
- en: '➎         if airlock_door_frame == 5:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '➎         if airlock_door_frame == 5:'
- en: 'props[21][0] = 0 # Remove door from map when fully open.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 'props[21][0] = 0 # 当门完全打开时，将门从地图中移除。'
- en: room_map[0][1] = 0
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[0][1] = 0
- en: room_map[0][2] = 0
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[0][2] = 0
- en: room_map[0][3] = 0
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[0][3] = 0
- en: ➏     if ((player_y != 8 or player_x != 2) and props[63] != [26, 8, 2]) \
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: ➏     if ((player_y != 8 or player_x != 2) and props[63] != [26, 8, 2]) \
- en: 'and airlock_door_frame > 0:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 'and airlock_door_frame > 0:'
- en: 'if airlock_door_frame == 5:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 'if airlock_door_frame == 5:'
- en: '# Add door to props and map so animation is shown.'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '# 将门添加到属性和地图中，以便显示动画。'
- en: props[21][0] = 26
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: props[21][0] = 26
- en: room_map[0][1] = 21
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[0][1] = 21
- en: room_map[0][2] = 255
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[0][2] = 255
- en: room_map[0][3] = 255
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: room_map[0][3] = 255
- en: airlock_door_frame -= 1
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: airlock_door_frame -= 1
- en: ➐     objects[21][0] = frames[airlock_door_frame]
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: ➐     objects[21][0] = frames[airlock_door_frame]
- en: objects[21][1] = shadow_frames[airlock_door_frame]
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: objects[21][1] = shadow_frames[airlock_door_frame]
- en: '###############'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: '##   START   ##'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '##   开始   ##'
- en: '###############'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: --snip--
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: --snip--
- en: '*Listing 11-6: Adding the weight-activated door in the airlock*'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: '*列表 11-6：在气闸中添加压力感应门*'
- en: I’ve added the door_in_room_26() function to the game to enable a specific puzzle.
    To avoid telling you the solution and spoiling the puzzle, I won’t cover everything
    that’s in the code here, but I’m sure you can work it out if you want to!
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 我已将 `door_in_room_26()` 函数添加到游戏中，以启用一个特定的谜题。为了避免透露解决方案而破坏谜题的乐趣，我不会在此详细讲解代码中的所有内容，但我相信如果你愿意，自己一定能搞明白！
- en: We store the animation frames for the door in the list frames, including the
    first frame that shows the door shut and the final frame that shows an empty floor
    tile instead of the door ➊.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将门的动画帧存储在 `frames` 列表中，包括展示门关闭的第一帧和展示没有门的地板瓷砖的最后一帧 ➊。
- en: We store the animation frame for the airlock door in the airlock_door_frame
    variable. If the player is standing on the pressure pad (at position *y* = 8 and
    *x* = 2) and the door is in the room ➌, the animation frame number is increased
    to open the door a bit more ➍. If the animation frame is now 5 ➎, then the door
    is fully opened, and the props dictionary and room map are updated to remove the
    door from the room.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将气闸门的动画帧存储在 `airlock_door_frame` 变量中。如果玩家站在压力垫上（位置 *y* = 8，*x* = 2），并且门已经在房间
    ➌ 中，动画帧的数字会增加，使门继续打开 ➍。如果动画帧现在是 5 ➎，那么门就完全打开了，属性字典和房间地图将更新以将门从房间中移除。
- en: We add another section of code to close the door when the player is *not* standing
    on the pressure pad and the door is already at least partially open ➏, so the
    door closes if the player moves off the pressure pad. The program only displays
    props that are in the room map for the current room, so the first instructions
    put the door (object 21) into the room map, even though the first animation frame
    will show the door fully open.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了另一段代码，当玩家 *没有* 站在压力垫上且门已经至少部分打开时 ➏，门会关闭，因此当玩家离开压力垫时，门会关闭。程序只显示当前房间地图中存在的物品，所以前面的指令会将门（物品
    21）放入房间地图中，尽管第一帧的动画会显示门完全打开。
- en: Finally, we change the image file for the door in the objects dictionary to
    the current animation frame ➐. The door’s shadow image is also updated. As a result,
    when the room is drawn, the picture for the door shows its current animation frame.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将 `objects` 字典中门的图片文件更改为当前的动画帧 ➐。门的阴影图像也会更新。因此，当房间被绘制时，门的图片会显示其当前的动画帧。
- en: This airlock routine creates a smooth effect where the door slides open when
    the player steps on the pressure pad, but slides shut again the moment they walk
    off. If they step back onto the pad while the door is shutting, it starts to open
    again.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 这个气闸例程创建了一种平滑效果，当玩家站在压力垫上时，门会滑开，而当玩家走开时门会再次滑闭。如果玩家在门关闭时重新站回垫子上，门会重新打开。
- en: To make the airlock routine work, we also need to add the instruction to make
    the door_in_room_26() function run every 0.05 seconds when the player enters the
    room. When the door_in_room_26() function starts, it checks whether the player
    is still in room 26\. If the player has left the room, the instructions at ➋ in
    [Listing 11-6](ch11.xhtml#ch11list6) stop the function from running regularly
    and exit the function (using a return instruction) so that the door animation
    stops.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使气闸例程正常工作，我们还需要添加指令，使得door_in_room_26()函数每0.05秒运行一次，当玩家进入房间时。如果玩家离开房间，[Listing
    11-6](ch11.xhtml#ch11list6)中➋处的指令将停止该函数的定期运行并退出该函数（使用return指令），这样门的动画就会停止。
- en: We’ll put the code that starts the door_in_room_26() function into the start_room()
    function at the top of the GAME LOOP section. The start_room() function runs when
    the player enters a room. [Listing 11-7](ch11.xhtml#ch11list7) shows the new instructions
    to add.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把启动door_in_room_26()函数的代码放入GAME LOOP部分顶部的start_room()函数中。start_room()函数在玩家进入房间时运行。[Listing
    11-7](ch11.xhtml#ch11list7)显示了需要添加的新指令。
- en: '*listing11-7.py*'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-7.py*'
- en: --snip--
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '###############'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'GAME LOOP ##'
  id: totrans-270
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '游戏循环 ##'
- en: '###############'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '###############'
- en: 'def start_room():'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 'def start_room():'
- en: global airlock_door_frame
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: global airlock_door_frame
- en: 'show_text("You are here: " + room_name, 0)'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: show_text("你在这里：" + room_name, 0)
- en: 'if current_room == 26: # Room with self-shutting airlock door'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 'if current_room == 26: # 自关闭气闸门的房间'
- en: airlock_door_frame = 0
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: airlock_door_frame = 0
- en: clock.schedule_interval(door_in_room_26, 0.05)
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: clock.schedule_interval(door_in_room_26, 0.05)
- en: --snip--
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: --省略--
- en: '*Listing 11-7: Scheduling the door animation for the airlock*'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 11-7：为气闸调度门动画*'
- en: Save your program as *listing11-7.py* and run it using pgzrun listing11-7.py.
    In the game, press X to use the teleporter and beam into room 26\. Now you can
    test that the pressure pad works as expected (see [Figure 11-2](ch11.xhtml#ch11fig2)).
    Try walking on it, off it, and across it to see how the door behaves.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为*listing11-7.py*并使用pgzrun listing11-7.py运行。在游戏中，按X键使用传送器并传送到26号房间。现在你可以测试压力垫是否按预期工作（参见[图11-2](ch11.xhtml#ch11fig2)）。尝试走上它、离开它和穿过它，看看门的行为如何变化。
- en: Note that if you leave through the exit at the bottom of this room, a door appears
    that blocks your way back again. (Normally, you would only enter the airlock by
    opening that door and removing it from the game.) When you teleport into rooms,
    strange things like this might happen. It messes with the space-time continuum.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你从这个房间底部的出口离开，门会出现并阻挡你重新进入的路。（通常，你只会通过打开那扇门并将其从游戏中移除来进入气闸。）当你传送到房间时，像这样的奇怪事情可能会发生。这会干扰时空连续性。
- en: '![image](../images/fig11-2.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![图片](../images/fig11-2.jpg)'
- en: '*Figure 11-2: Standing on the pressure pad opens the door.*'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '*图11-2：站在压力垫上打开门。*'
- en: '**REMOVING EXITS FOR YOUR OWN GAME DESIGNS**'
  id: totrans-284
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**为你自己的游戏设计移除出口**'
- en: If you’re closing off exits for your own map designs, you might need to move
    or remove doors in those exits as well. To remove a door from the game, change
    the entry for that door in the props dictionary so its first number is a 0, or
    delete its entry from the dictionary.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在为自己的地图设计封闭出口，你可能还需要移动或移除这些出口中的门。要从游戏中移除门，请更改道具字典中该门的条目，使其第一个数字为0，或者从字典中删除该条目。
- en: If you’re customizing the game, you might also want to remove some of the custom
    code here that enables the special doors for the engineering bay and the airlock.
    To disable the pressure pad door, remove the new code in [Listings 11-6](ch11.xhtml#ch11list6)
    and [11-7](ch11.xhtml#ch11list7). To remove the timed door to the engineering
    bay, remove the code shown in [Listing 11-4](ch11.xhtml#ch11list4), and additionally
    remove the first chunk of new code in [Listing 11-1](ch11.xhtml#ch11list1) for
    pressing the button (using object 42).
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在定制游戏，你可能还需要移除一些自定义代码，这些代码启用了工程舱和气闸的特殊门。要禁用压力垫门，请移除[Listings 11-6](ch11.xhtml#ch11list6)和[11-7](ch11.xhtml#ch11list7)中的新代码。要移除通往工程舱的定时门，请移除[Listing
    11-4](ch11.xhtml#ch11list4)中显示的代码，并额外移除[Listing 11-1](ch11.xhtml#ch11list1)中按下按钮（使用对象42）的第一段新代码。
- en: '**MISSION ACCOMPLISHED?**'
  id: totrans-287
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**任务完成了吗？**'
- en: You’ve now finished building the space station, and it’s fully functional. It
    seems you can now settle into your new life, conducting experiments and exploring
    the red planet.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经完成了空间站的建造，并且它已经完全投入使用。看来你现在可以开始你的新生活，进行实验并探索红色星球。
- en: But, wait! What’s this? There could be trouble ahead.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，等等！这是什么？可能有麻烦在前方。
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-290
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你准备好飞行了吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下选项框以确认你已经学习了本章的关键内容。
- en: '![Images](../images/box.jpg)  Doors can seal off parts of the game map, so
    players can discover puzzle elements in the right order.'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  门可以封锁游戏地图的某些部分，让玩家按正确的顺序发现解谜元素。'
- en: '![Images](../images/box.jpg)  Doors need to go at the top or the bottom of
    a room.'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  门需要放置在房间的顶部或底部。'
- en: '![Images](../images/box.jpg)  Doors that are opened with access cards stay
    open.'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  用访问卡打开的门将保持开启状态。'
- en: '![Images](../images/box.jpg)  You can use the functions provided to add doors
    that close automatically, such as the door in the engineering bay.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  你可以使用提供的函数添加自动关闭的门，比如工程区的门。'
- en: '![Images](../images/box.jpg)  Doors are positioned using the props dictionary.
    Their images and descriptions are stored in the objects dictionary.'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  门的位置通过props字典进行设置。它们的图片和描述存储在objects字典中。'
- en: '![Images](../images/box.jpg)  To animate the door, the program changes its
    image in the objects dictionary. When the room is redrawn, the new image is used
    for the door.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  为了给门添加动画效果，程序会在objects字典中更改其图片。当房间被重绘时，会使用新的图片显示门。'
- en: '![Images](../images/box.jpg)  If a door can be seen from both sides, it needs
    to be represented with two door props: one in each of the rooms where it can be
    seen.'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  如果一扇门从两侧都能看到，则需要用两个门道具来表示：每个房间中都放置一个门道具。'
- en: '![Images](../images/box.jpg)  ACCESS_DICTIONARY is used to remember which access
    cards unlock which doors. You could use other objects to open doors by making
    changes in this dictionary.'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  ACCESS_DICTIONARY用于记住哪些访问卡解锁哪些门。你可以通过修改这个字典，使用其他对象来打开门。'
- en: '![Images](../images/box.jpg)  To adjust the difficulty of the game, you can
    change the delay before the engineering door slams shut.'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  为了调整游戏的难度，你可以改变工程门关闭前的延迟时间。'
- en: '![Images](../images/box.jpg)  The teleporter enables you to beam into any room
    for testing purposes.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  传送门允许你传送到任何房间进行测试。'
- en: '![Images](../images/box.jpg)  The input() function in Python treats what you
    enter as a string. To enable players to type in a number, use the int() function
    to convert what they enter to an integer.'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '![Images](../images/box.jpg)  Python中的input()函数将你输入的内容当作字符串处理。为了让玩家输入数字，可以使用int()函数将输入的内容转换为整数。'
