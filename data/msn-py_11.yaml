- en: '**11'
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**11'
- en: ACTIVATING SAFETY DOORS**
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 启动安全门**
- en: '![image](../images/common01.jpg)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/common01.jpg)'
- en: On the space station, doors restrict access to certain zones and ensure that
    astronauts can only get into areas where they’re qualified to work. Many doors
    require personal access passes to open, and the engineering bay doors can only
    be opened with a button in Mission Control. The engineering bay doors also have
    a timer that closes them automatically to increase security.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在空间站中，门限制了对某些区域的访问，确保宇航员只能进入他们有资格工作的区域。许多门需要个人访问卡才能打开，而工程舱的门只能通过任务控制室的按钮打开。工程舱的门还带有定时器，可以自动关闭，以增强安全性。
- en: The doors also enforce safety rules that require astronauts to have a working
    suit before they can enter the airlock and to have a buddy with them before the
    door to the planet surface can open. Footage from the security camera suggests
    that some astronauts have found a way to bypass the buddy requirement so they
    can enjoy the serenity of a solo walk on the planet’s surface.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这些门还执行安全规则，要求宇航员在进入气闸之前必须穿戴好宇航服，并且在行星表面的大门打开之前必须有一个同伴陪同。监控摄像头的录像显示，一些宇航员找到了绕过同伴要求的方法，这样他们就能独自享受在行星表面漫步的宁静。
- en: You installed the doors in the space station when you installed the props. In
    this chapter, you’ll add the code to open and close the doors, as well as add
    a few other tricks and puzzles to make the game more interesting.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装道具时，你在空间站里安装了这些门。在本章中，你将添加开关门的代码，并增加一些其他的技巧和谜题，让游戏更加有趣。
- en: '**PLANNING WHERE TO PUT SAFETY DOORS**'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**规划安全门的位置**'
- en: 'Doors are clearly a vital part of the space station design, but they’re also
    important for the game’s design. Most obviously, they present a challenging puzzle:
    players need to find a way to open locked doors.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 门显然是空间站设计中至关重要的一部分，但它们对游戏设计同样重要。最明显的是，它们呈现了一个具有挑战性的谜题：玩家需要找到一种方法来打开锁住的门。
- en: The doors also help us to tell a story, in which there are obstacles that the
    hero must overcome using their survival training and logical thinking. The game’s
    puzzles will only be satisfying if the player has to think about them a little
    bit. So it’s important that we can control when players see the different puzzle
    elements. Imagine you enter a room and there’s rampant fire blocking the other
    exit. If you’re already carrying a fire extinguisher, you just whip it out and
    use it. There’s no real challenge. It’s more intriguing if you see the threat
    (or the puzzle), and then have to figure out the solution. By sealing off parts
    of the map, we can guide players to see a problem before they see its solution.
    We can’t be certain they’ll notice everything we put in their path, but we can
    give them an opportunity to experience the game at its best.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这些门也帮助我们讲述一个故事，在这个故事中，英雄必须利用他们的生存训练和逻辑思维来克服障碍。只有当玩家稍微思考一下谜题时，游戏中的解谜才会令人满意。因此，控制玩家看到不同谜题元素的时机非常重要。想象一下，你进入一个房间，另一侧的出口被熊熊火焰阻挡。如果你已经拿着灭火器，你只需拿出来并使用，根本没有挑战。更吸引人的是，你看到威胁（或谜题），然后必须想出解决办法。通过封锁地图的部分区域，我们可以引导玩家在看到解决方案之前先看到问题。我们不能确定他们会注意到我们放在他们面前的每一项内容，但我们可以给他们一个体验游戏最佳状态的机会。
- en: Doors also enable us to get more value from the map. Although it might not feel
    like it after typing it in, the game map isn’t huge. We can provide a richer experience
    and a longer game by requiring players to cross difficult rooms more than once.
    For example, if we put a key at the end of a corridor, we can direct the player
    to retrace their steps along the corridor and use the key in a door they passed
    on the way.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 门还使我们能够从地图中获得更多的价值。尽管在输入后可能感觉不到，游戏地图并不巨大。通过要求玩家多次穿越困难的房间，我们可以提供更丰富的体验和更长的游戏时长。例如，如果我们把一把钥匙放在走廊的尽头，我们可以引导玩家沿着走廊重新走一遍，并使用他们之前经过的门上的钥匙。
- en: '[Figure 11-1](ch11.xhtml#ch11fig1) shows the location of doors in the game.
    Without giving too much away, players won’t be able to get into room 36 before
    they’ve gotten into the top-right section of the space station (via room 34).
    They won’t be able to visit room 27 until they’ve gotten into room 40, either.
    By strategically placing items in the locked rooms, including access cards, we
    can direct the player through the game and through the story.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[图 11-1](ch11.xhtml#ch11fig1) 显示了游戏中门的位置。虽然不想剧透太多，玩家在进入空间站的右上角区域（通过房间 34）之前，是无法进入房间
    36 的。玩家也无法在进入房间 40 之前访问房间 27。通过在锁住的房间中战略性地放置物品，包括访问卡，我们可以引导玩家进行游戏并推进故事情节。'
- en: '![image](../images/fig11-1.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig11-1.jpg)'
- en: '*Figure 11-1: The game map with doors shown in red*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 11-1：游戏地图，门用红色标出*'
- en: When you’re designing your own games, think carefully about where you put your
    props. It’s one of the most important elements in ensuring the game presents players
    with an enjoyable challenge.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当你设计自己的游戏时，要仔细考虑道具的摆放位置。这是确保游戏为玩家提供愉快挑战的最重要元素之一。
- en: '**POSITIONING THE DOORS**'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**门的位置设置**'
- en: I’ve positioned all the doors in *Escape* at the top or bottom exit of a room
    because of the game’s top-down perspective. If a door was in a side exit, players
    would only see its top surface, and we need to make sure something as important
    as a door can be clearly seen.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我在 *Escape* 中将所有门的位置都设置在房间的顶部或底部出口，这是因为游戏采用了自上而下的视角。如果门设置在侧边出口，玩家只能看到门的顶部表面，我们需要确保像门这样的关键元素能够清晰可见。
- en: 'Most of the doors are at the top of the room and remain open after the player
    opens them. The exception is the door between rooms 32 and 27, which has a timer
    mechanism that shuts it automatically. This timer provides an additional challenge:
    the player must rush to get to the room from the switch that opens the door, before
    the door closes.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数门都位于房间的顶部，且在玩家打开后保持开启。唯一的例外是房间 32 和房间 27 之间的门，它有一个定时器机制，会自动关闭。这一定时器带来了额外的挑战：玩家必须在门关闭前迅速从开门的开关处跑到房间。
- en: The doors in *Escape* are objects 20 to 26\. Their images and descriptions are
    set up in the `objects` dictionary (see “[Making the Space Station Objects Dictionary](ch05.xhtml#lev79)”
    on [page 85](ch05.xhtml#page_85)). The door positions are set up in the `props`
    dictionary (see “[Adding the Props Information](ch09.xhtml#lev117)” on [page 151](ch09.xhtml#page_151)).
    Each door has an *x* position that puts it in the room’s doorway. To work out
    the *x* position for a door, just divide the room width by 2, round it down, and
    then subtract 1.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*Escape* 中的门是对象 20 到 26。它们的图像和描述在 `objects` 字典中进行设置（参见 [第 85 页](ch05.xhtml#page_85)
    的 “[制作空间站对象字典](ch05.xhtml#lev79)”）。门的位置在 `props` 字典中进行设置（参见 [第 151 页](ch09.xhtml#page_151)
    的 “[添加道具信息](ch09.xhtml#lev117)”）。每扇门都有一个 *x* 坐标，它将门放置在房间的门口。要计算门的 *x* 坐标，只需将房间宽度除以
    2，向下取整，然后减去 1。'
- en: Now let’s add some controls to enable players to open the doors.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们添加一些控制，允许玩家打开门。
- en: '**ADDING ACCESS CONTROLS**'
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加访问控制**'
- en: To enable the player to open the doors, we need to add some instructions to
    the `use_object()` function in the `USE OBJECTS` part of the program. One new
    code snippet will open the timed door to the engineering bay when the player presses
    a button in one of the rooms. You’ll add this code between the instructions for
    handling objects 16 and 68.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让玩家能够打开门，我们需要在程序的 `USE OBJECTS` 部分的 `use_object()` 函数中添加一些指令。一个新的代码片段将在玩家按下某个房间内的按钮时打开通往工程区的定时门。你将在处理对象
    16 和 68 的指令之间添加这段代码。
- en: 'The other new code addition will enable the player to use access cards to open
    the doors: put this after the code for using recipes.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个新增的代码功能将使玩家能够使用访问卡打开门：将此代码放在使用配方的代码之后。
- en: '[Listing 11-1](ch11.xhtml#ch11list1) shows the new code to add. Because these
    instructions are part of the `use_object()` function, the first one is indented
    by four spaces. Your new `elif` instruction should line up with the `elif` instruction
    above it.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 11-1](ch11.xhtml#ch11list1) 显示了需要添加的新代码。因为这些指令是 `use_object()` 函数的一部分，所以第一条指令缩进了四个空格。你的新
    `elif` 指令应与其上方的 `elif` 指令对齐。'
- en: Open *listing10-7.py* from the previous chapter and add these new lines to it.
    Save your program as *listing11-1.py*. You can run it using pgzrun listing11-1.py,
    but we haven’t added all the code necessary to make the doors work properly yet.
    You shouldn’t see any error messages, though.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 打开上一章节中的*listing10-7.py*并将这些新代码行添加到其中。将程序保存为*listing11-1.py*。你可以使用pgzrun listing11-1.py来运行它，但我们还没有添加所有必要的代码来使门正常工作。不过，你应该不会看到任何错误消息。
- en: '*listing11-1.py*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-1.py*'
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '*Listing 11-1: Adding the ability to open doors*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 11-1：添加开门功能*'
- en: The button to open the door to the engineering bay is object 42\. There is one
    of these buttons outside the engineering bay to provide access, and another inside
    the engineering bay, so the player doesn’t get trapped inside.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 打开工程舱门的按钮是物品 42。工程舱外有一个按钮提供通道，工程舱内另有一个按钮，确保玩家不会被困在里面。
- en: If the player is using the button ➊, the code to open the door runs. If they’re
    using the button inside the room ➋, the `open_door()` function is used to show
    the door opening ➌. We’ll add that function shortly.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家使用按钮 ➊，打开门的代码会运行。如果他们使用房间内的按钮 ➋，则会使用`open_door()`函数来展示门的打开 ➌。我们很快会添加这个函数。
- en: The `props` dictionary is updated to change the room number for the door to
    0, removing the door from the room (and from the game) ➍. This door works on a
    timer, so the program schedules the function to close the door 60 seconds later
    ➎. If you find it too difficult to get to the room in time, you can change the
    number 60 to a larger number. This number should give you just about enough time,
    whether you’re using a PC or Raspberry Pi 3; or a Raspberry Pi 2, where the game
    runs a little bit more slowly.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`props`字典被更新，用于将门的房间号更改为0，从而将门从房间中移除（也从游戏中移除） ➍。这个门是基于计时器工作的，所以程序会安排在60秒后关闭门的函数
    ➎。如果你觉得在限定时间内赶到房间太困难，可以将60改为更大的数字。无论你使用的是PC、Raspberry Pi 3，还是运行稍微慢一点的Raspberry
    Pi 2，这个数字都应该足够给你足够的时间。'
- en: The second chunk of code enables players to use keys to open the doors. We create
    a new dictionary called `ACCESS_DICTIONARY` that uses the access card number as
    the dictionary key and the door number as the data ➏. So object 79 (an access
    card) is used to open door 22, for example.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分代码使玩家可以使用钥匙来打开门。我们创建了一个新的字典 `ACCESS_DICTIONARY`，该字典将门禁卡号作为键，门号作为数据 ➏。举例来说，物品
    79（门禁卡）用来打开门 22。
- en: '**TIP**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**提示**'
- en: The objects used to open the doors in *Escape* are all access cards, but if
    you’re modifying the game, you could use any object. You could use a crowbar to
    pry doors open, or (if you make a game set in a fantasy world) you could use different
    magic spells. Just make sure players can reasonably work out what to use.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在*Escape*中，用于打开门的物品都是门禁卡，但如果你修改游戏，可以使用任何物品。你可以使用撬棍来撬开门，或者（如果你制作的是一个幻想世界中的游戏）使用不同的魔法咒语。只要确保玩家能够合理地猜测该使用什么物品即可。
- en: When the player presses U, the door opens if they have selected one of the items
    in the dictionary for unlocking doors ➐ and if they are standing in the same room
    as the door it unlocks ➑. We also play a sound effect of a computer voice saying
    “doors open” ➒. This is just a recording, like any other sound in the game.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当玩家按下U键时，如果他们选择了字典中用于解锁门的某个物品 ➐，并且他们站在解锁门的同一房间里 ➑，门就会打开。我们还会播放一段计算机声音效果，提示“门已打开”
    ➒。这只是一个录音，像游戏中的任何其他声音一样。
- en: '**MAKING THE DOORS OPEN AND CLOSE**'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**制作门的开关功能**'
- en: We’ll place the functions for opening, closing, and animating the doors into
    a new `DOORS` section of the program. You need to add this section after the `USE
    OBJECTS` section but before the `START` section at the end.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把开门、关门和动画效果的函数放入程序的一个新部分 `DOORS`。你需要在`USE OBJECTS`部分之后、`START`部分之前添加这个新部分。
- en: '[Listing 11-2](ch11.xhtml#ch11list2) shows the first two functions you need
    to add to start the `DOORS` section. Add the new lines, and save your program
    as *listing11-2.py*. The `DOORS` section is still incomplete: you can run the
    program (using pgzrun listing11-2.py) to check for errors, but the doors won’t
    work yet.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '[清单 11-2](ch11.xhtml#ch11list2)展示了你需要添加的前两个函数，以启动`DOORS`部分。添加新的代码行，并将程序保存为*listing11-2.py*。`DOORS`部分仍不完整：你可以运行程序（使用pgzrun
    listing11-2.py）来检查错误，但门暂时还无法正常工作。'
- en: '*listing11-2.py*'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-2.py*'
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '*Listing 11-2: Setting up the door animations*'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 11-2：设置门的动画效果*'
- en: The `open_door()` and `close_door()` functions set up the door animations for
    opening and closing. You’ve already seen `open_door()` ➊ mentioned in [Listing
    11-1](ch11.xhtml#ch11list1). In [Listing 11-2](ch11.xhtml#ch11list2), we define
    that function so it can run if the player opens a door using a key, for example.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`open_door()` 和 `close_door()` 函数设置了门的开关动画。你已经在 [清单 11-1](ch11.xhtml#ch11list1)
    中见过 `open_door()` ➊。在 [清单 11-2](ch11.xhtml#ch11list2) 中，我们定义了该函数，这样它就能在玩家使用钥匙打开门时运行。'
- en: The door animation has five frames, numbered 0 to 4, as shown in [Table 11-1](ch11.xhtml#ch11tab1).
    We store images for the animation in a list called `door_frames` ➋➎ and store
    the frame number in the variable `door_frame_number`. In the `open_door()` and
    `close_door()` functions, we set the frame number to 0, the first frame.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 门的动画共有五帧，编号为 0 到 4，如 [表 11-1](ch11.xhtml#ch11tab1) 所示。我们将动画的图片存储在一个名为 `door_frames`
    的列表中 ➋➎，并将帧编号存储在变量 `door_frame_number` 中。在 `open_door()` 和 `close_door()` 函数中，我们将帧编号设置为
    0，即第一帧。
- en: In the variable `door_object_number`, we store the object number of the door
    that will be opening or closing. After the variables and list have been set up,
    the function `do_door_animation()` is started to carry out the animation using
    them ➌➓. We’ll add that function shortly.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在变量 `door_object_number` 中，我们存储将要开关的门的对象编号。在设置好变量和列表后，函数 `do_door_animation()`
    会开始执行并使用这些数据进行动画 ➌➓。我们稍后会添加该函数。
- en: 'The function for closing the door ➍ is similar to the function for opening
    the door ➊ with two exceptions: the animation frames are different, and there
    is a check to stop the door from closing on top of the player.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 关闭门 ➍ 的函数与开门 ➊ 的函数相似，只有两个区别：动画帧不同，并且有一个检查来防止门关上时压到玩家。
- en: If the player is in the same *y* position as the door ➏, it means the player
    is standing in the doorway. In that case, if the player is in the top row ➐, we
    set their *y* position to 1 ➑ to move them to the next row down. If the player
    is not in the top row, we set their *y* position to the second row from the bottom
    ➒, just inside the door.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家与门的 *y* 位置相同 ➏，这意味着玩家正站在门口。如果玩家位于顶部行 ➐，我们会将其 *y* 位置设置为 1 ➑，让他移到下一行。如果玩家不在顶部行，我们会将其
    *y* 位置设置为倒数第二行 ➒，也就是门的内部。
- en: This means the astronaut jumps out of the way of the doors of their own accord,
    but it’s more realistic than them ending up inside the door!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着宇航员会主动跳开门的路径，但比起他们被困在门里面，这样显得更为真实！
- en: '**Table 11-1:** The Animation Frames for the Doors'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**表 11-1：门的动画帧**'
- en: '| **Frame number** | **0** | **1** | **2** | **3** | **4** |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| **帧编号** | **0** | **1** | **2** | **3** | **4** |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| **Opening** | ![image](../images/f0189-01.jpg) | ![image](../images/f0189-02.jpg)
    | ![image](../images/f0189-03.jpg) | ![image](../images/f0189-04.jpg) | **Final
    frame is a floor tile (no door).** |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| **开门** | ![image](../images/f0189-01.jpg) | ![image](../images/f0189-02.jpg)
    | ![image](../images/f0189-03.jpg) | ![image](../images/f0189-04.jpg) | **最终帧为地面砖（没有门）。**
    |'
- en: '| **Closing** | ![image](../images/f0189-05.jpg) | ![image](../images/f0189-06.jpg)
    | ![image](../images/f0189-07.jpg) | ![image](../images/f0189-08.jpg) | ![image](../images/f0189-09.jpg)
    |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **关闭** | ![image](../images/f0189-05.jpg) | ![image](../images/f0189-06.jpg)
    | ![image](../images/f0189-07.jpg) | ![image](../images/f0189-08.jpg) | ![image](../images/f0189-09.jpg)
    |'
- en: '**ADDING THE DOOR ANIMATION**'
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加门的动画**'
- en: The `do_door_animation()` function will manage the animation of the doors opening
    and closing.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`do_door_animation()` 函数将管理门的开关动画。'
- en: 'Place the `do_door_animation()` function inside the `DOORS` section of the
    program, after the `close_door()` function you added in [Listing 11-2](ch11.xhtml#ch11list2).
    Add the new lines in [Listing 11-3](ch11.xhtml#ch11list3), and save your program
    as *listing11-3.py*. You can run this version of the game using pgzrun listing11-3.py.
    The doors that are opened with a key should now be working. I’ll tell you how
    to test them in Training Mission #1 shortly.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '将 `do_door_animation()` 函数放在程序的 `DOORS` 部分，紧跟着你在 [清单 11-2](ch11.xhtml#ch11list2)
    中添加的 `close_door()` 函数。添加 [清单 11-3](ch11.xhtml#ch11list3) 中的新行，并将程序保存为 *listing11-3.py*。你可以通过运行
    pgzrun listing11-3.py 来启动这个版本的游戏。现在，用钥匙打开的门应该已经能正常工作了。我会很快告诉你如何在训练任务 #1 中进行测试。'
- en: '*listing11-3.py*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-3.py*'
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '*Listing 11-3: Adding the door animation*'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 11-3：添加门的动画*'
- en: The `objects` dictionary contains, among other things, the image to use for
    a particular object. This new function starts by changing the door’s image in
    that dictionary to the current animation frame ➊. When the room is redrawn, it
    will now use that animation frame.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`objects`字典包含了许多内容，其中之一是用于特定物体的图像。这个新函数首先通过将字典中门的图像更改为当前的动画帧 ➊ 来开始。当房间被重新绘制时，它将使用该动画帧。'
- en: The function then increases the animation frame number by 1 ➋ so the next animation
    frame can be shown next time this function runs. If the frame is now 5, it means
    we’ve reached the end of the animation ➌. In that case, we check whether the door
    has opened (rather than closed) by seeing whether the final frame was a floor
    tile, showing no door ➍. (An index number of `-1` gives you the last item in a
    list.)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，该函数将动画帧编号增加1 ➋，以便下次函数运行时显示下一个动画帧。如果此时帧为5，意味着我们已经到达动画的结尾 ➌。在这种情况下，我们检查门是否已打开（而不是关闭），通过查看最后一帧是否是地板瓷砖，表示没有门
    ➍。(`-1`的索引会给你列表中的最后一项。)
- en: If the door has now fully opened, the props data is updated to remove this door
    from the game by changing its room number to 0 ➎. If the current animation frame
    is the final frame, whether the door is opening or closing, a new room map is
    generated ➏, which ensures the door is added or removed correctly in the current
    room.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果门现在已经完全打开，物品数据会被更新，通过将门的房间编号更改为0 ➎ 来从游戏中移除此门。如果当前动画帧是最后一帧，无论门是开还是关，都会生成一个新的房间地图
    ➏，确保门在当前房间中正确地被添加或移除。
- en: If the current frame isn’t the final animation frame ➐, the function sets itself
    to run again in 0.15 seconds ➑ to show the next frame in the sequence.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前帧不是最终的动画帧 ➐，该函数将在0.15秒后 ➑ 重新运行，以显示序列中的下一个帧。
- en: You may be wondering why I didn’t combine the two `if` instructions ➌➍. The
    reason is that the `generate_map()` function needs to run at the end of the animation,
    whether the door is opening or closing. If we combined the two `if` instructions,
    this function would only run when the door had opened.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会想，为什么我没有将两个`if`语句合并在一起 ➌➍。原因是`generate_map()`函数需要在动画结束时运行，无论门是开还是关。如果我们合并了这两个`if`语句，这个函数只会在门打开时运行。
- en: '**TRAINING MISSION #1**'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #1**'
- en: At this point in the program, the doors should be fully functional. Can you
    test that they work? Find the access card for the door in the community room and
    use it. Stand in the community room and use the access card for its door by selecting
    the access card in your inventory and pressing U. If you need a hint, look at
    the map in [Figure 11-1](ch11.xhtml#ch11fig1). The community room is number 39,
    and the key for it is in room 41\. Remember that people sometimes tidy things
    away, and the key might not be lying in plain sight.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在程序的这个阶段，门应该完全功能正常。你能测试它们是否正常工作吗？在社区房间找到门的门禁卡并使用它。站在社区房间里，通过选择库存中的门禁卡并按U键来使用它。如果你需要提示，可以查看[图
    11-1](ch11.xhtml#ch11fig1)中的地图。社区房间是39号，门禁卡在41号房间。记住，有时人们会把东西整理起来，钥匙可能不会明目张胆地摆在眼前。
- en: '**SHUTTING THE TIMED DOOR**'
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**关闭定时门**'
- en: Next, we need to add a new function called `shut_engineering_door()` to shut
    the door to the engineering bay automatically. This function is set to run after
    a delay of 60 seconds when the door is opened (see [Listing 11-1](ch11.xhtml#ch11list1)),
    giving the player a minute to run from the button to the door before it shuts!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加一个新函数，名为`shut_engineering_door()`，以便在工程舱门自动关闭时使用。这个函数设置为在门打开后的60秒延迟后运行（参见[Listing
    11-1](ch11.xhtml#ch11list1)），给玩家一分钟的时间从按钮跑到门口，门就会关闭！
- en: Put this function in the `DOORS` section of the program after the `do_door_animation()`
    function you just added. Add the new lines in [Listing 11-4](ch11.xhtml#ch11list4),
    and save the program as *listing11-4.py*. Then run this program using pgzrun listing11-4.py.
    You should see no error messages. The timed door should be working now, but I’ll
    show you an easier way to test it shortly.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 将此函数放在程序的`DOORS`部分，在你刚刚添加的`do_door_animation()`函数之后。添加[Listing 11-4](ch11.xhtml#ch11list4)中的新行，并将程序保存为*listing11-4.py*。然后使用`pgzrun
    listing11-4.py`运行此程序，你应该不会看到任何错误信息。定时门应该现在能正常工作，不过我稍后会向你展示一个更简单的测试方法。
- en: '*listing11-4.py*'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-4.py*'
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '*Listing 11-4: Adding the code to shut the engineering door automatically*'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 11-4: 自动关闭工程门的代码*'
- en: The `shut_engineering_door()` function has two door props to work with, objects
    25 and 26, because the player can see this door from either side depending on
    which room they’re in. The first thing we do is update the `props` dictionary
    so these doors appear in the rooms ➊➋.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`shut_engineering_door()`函数有两个门属性要操作，物体25和26，因为玩家可以根据所在房间的不同，从任何一侧看到这个门。我们首先要做的是更新`props`字典，以便这些门出现在房间中➊➋。'
- en: We then call the `generate_map()` function ➌. If the player is in a room with
    one of these doors, this function updates the room map for the current room. In
    other cases, the `generate_map()` function still runs, but nothing changes.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们调用`generate_map()`函数➌。如果玩家在包含这些门的房间中，该函数将更新当前房间的房间地图。在其他情况下，`generate_map()`函数仍会运行，但不会有任何变化。
- en: If the player is in the engineering bay (room 27) ➍, they need to see door 26
    closing ➎, so the program starts the animation. If the player is on the other
    side of the door, in room 32 ➏, we need to show them door 25 closing ➐.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果玩家在工程舱（房间27）➍，他们需要看到26号门关闭➎，因此程序启动动画。如果玩家在门的另一边，在房间32 ➏，我们需要展示25号门关闭➐。
- en: '**RED ALERT**'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**红色警报**'
- en: '*Don’t mix up door numbers and room numbers. Door numbers are object numbers
    and aren’t related to the room they’re in.*'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '*不要混淆门号和房间号。门号是物体编号，与它所在的房间无关。*'
- en: To test that the engineering bay door is working correctly, we’d have to run
    the game, press the button, and race to the engineering bay. So to save time,
    let’s engineer a solution that enables us to get around the space station more
    quickly.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为了测试工程舱门是否正常工作，我们需要运行游戏，按下按钮，然后快速跑到工程舱。因此，为了节省时间，我们将设计一种解决方案，使我们能够更快速地穿越空间站。
- en: '**ADDING A TELEPORTER**'
  id: totrans-76
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**添加传送门**'
- en: While you’re still building the space station, you might find it helpful to
    be able to jump to any room in an instant. Using the latest in molecular transfer
    technology, we can install a *teleporter* that allows you to type in a room number
    and go straight there. This is a huge benefit when you’re testing the game, but
    it’s a restricted technology and isn’t approved for use in a real mission on the
    space station. You’ll need to remove it before you finish building the game. I’m
    trusting you with highly classified technology here.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在你仍在构建空间站时，能够瞬间跳转到任何房间可能会对你有所帮助。利用最新的分子传输技术，我们可以安装一个*传送门*，允许你输入房间号并直接到达那里。这对测试游戏时是一个巨大的好处，但它是受限技术，在真实的空间站任务中并未批准使用。在你完成游戏构建之前，你需要将其移除。我信任你处理这种高度机密的技术。
- en: Place the teleporter code with the other player controls in the `game_loop()`
    function, in the `GAME LOOP` part of the program. I recommend that you add it
    after the instructions for starting the `use_object` function. Because these instructions
    are inside a function, you need to indent the `if` instruction by four spaces
    and then indent the instructions under it by four more spaces.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 将传送门代码与其他玩家控制代码放置在`game_loop()`函数中，即程序的`GAME LOOP`部分。我建议你在启动`use_object`函数的指令后添加它。因为这些指令在函数内部，你需要将`if`指令缩进四个空格，然后再将其下方的指令缩进四个空格。
- en: Add the new instructions in [Listing 11-5](ch11.xhtml#ch11list5), and then save
    your file as *listing11-5.py*. You can run this program using pgzrun listing11-5.py.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在[清单11-5](ch11.xhtml#ch11list5)中添加新的指令，然后将文件保存为*listing11-5.py*。你可以使用pgzrun
    listing11-5.py来运行这个程序。
- en: '*listing11-5.py*'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-5.py*'
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '*Listing 11-5: Adding a teleporter*'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单11-5：添加传送门*'
- en: When you press the X key ➊, the program will ask you to type in a room number
    ➋. This request appears in the command line window where you type in your `pgzrun`
    instruction to run the program. You might need to click this window to bring it
    to the front and will need to click the game window to play again afterwards.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 当你按下X键➊时，程序会要求你输入一个房间号➋。这个请求会出现在命令行窗口中，在这里你输入`pgzrun`指令来运行程序。你可能需要点击这个窗口将其置于前端，并且之后需要点击游戏窗口才能再次进行游戏。
- en: The `input()` function takes whatever you enter and puts it in a string. Because
    we need the input as a number, we use the `int()` function to convert it to an
    integer (or whole number) ➋.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`input()`函数会将你输入的内容存入一个字符串中。因为我们需要将输入转换为数字，所以我们使用`int()`函数将其转换为整数（或整数）➋。'
- en: The number you enter goes into the `current_room` variable. There’s no error
    checking here, so the program might crash if you don’t enter a valid room number.
    If you enter text instead of a number, for example, the program freezes.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 你输入的数字会进入`current_room`变量。这里没有错误检查，所以如果你没有输入有效的房间号，程序可能会崩溃。例如，如果你输入的是文本而不是数字，程序会冻结。
- en: You’re teleported to position *y* = 2, *x* = 2 ➌ inside the room you choose.
    This is usually a fairly safe place to be, but if the teleporter puts you inside
    some scenery, you can usually just walk out of it. The room map is regenerated
    ➍, and the room is restarted ➎, completing your teleportation to your new destination.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你会被传送到你选择的房间内的*y* = 2，*x* = 2 ➌位置。这通常是一个相对安全的地方，但如果传送器将你放置在一些场景中，你通常可以直接走出来。房间地图会重新生成
    ➍，房间会重新启动 ➎，完成你传送到新目的地的过程。
- en: '**TRAINING MISSION #2**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**训练任务 #2**'
- en: Use the teleporter to beam into room 27 so you can test the door in the engineering
    bay. Use the button at the top of the room to open the door (press U while walking
    into the button), and wait in the room until the door closes. Open the door again,
    but this time leave the room and check that the door still closes when seen from
    the other side. The door animation should work correctly.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 使用传送器传送到27号房间，以便测试工程舱中的门。使用房间顶部的按钮打开门（在走向按钮时按下U），并在房间里等待门关闭。再次打开门，但这次离开房间，检查从另一侧看到时门是否仍然会关闭。门的动画应该能正常工作。
- en: '**ACTIVATING THE AIRLOCK SECURITY DOOR**'
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**激活气闸安全门**'
- en: As a safety feature, the airlock door to the planet’s surface uses a weight
    sensor to open it. One astronaut must stand on the pressure pad to open the door,
    enabling another one to walk through it. This design ensures that astronauts cannot
    go out onto the planet’s surface without support in the space station.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个安全功能，通往星球表面的气闸门使用重量传感器来打开它。必须有一名宇航员站在压力垫上才能打开门，从而使另一名宇航员能够穿过它。这一设计确保了宇航员在没有空间站支援的情况下不能单独进入星球表面。
- en: To enable this safety feature, we’ll need to add a new function to the program’s
    `DOORS` section. [Listing 11-6](ch11.xhtml#ch11list6) shows the code for the new
    function, which animates the door. Add this code after the `shut_engineering_door()`
    function you added in [Listing 11-4](ch11.xhtml#ch11list4). Save your updated
    program as *listing11-6.py*. You can run your program using pgzrun listing11-6.py,
    but the airlock door is not activated yet.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为了启用这个安全功能，我们需要在程序的`DOORS`部分添加一个新函数。[清单 11-6](ch11.xhtml#ch11list6)显示了新函数的代码，用于动画化门。在你在[清单
    11-4](ch11.xhtml#ch11list4)中添加的`shut_engineering_door()`函数后添加这段代码。将更新后的程序保存为*listing11-6.py*。你可以使用`pgzrun
    listing11-6.py`来运行你的程序，但气闸门尚未激活。
- en: '*listing11-6.py*'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-6.py*'
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '*Listing 11-6: Adding the weight-activated door in the airlock*'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '*清单 11-6：在气闸中添加重量激活门*'
- en: I’ve added the `door_in_room_26()` function to the game to enable a specific
    puzzle. To avoid telling you the solution and spoiling the puzzle, I won’t cover
    everything that’s in the code here, but I’m sure you can work it out if you want
    to!
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经向游戏中添加了`door_in_room_26()`函数，以启用一个特定的谜题。为了避免直接告诉你解决方案并破坏谜题的乐趣，我在这里不会覆盖代码中的所有内容，但我相信如果你想的话，可以自己搞明白！
- en: We store the animation frames for the door in the list `frames`, including the
    first frame that shows the door shut and the final frame that shows an empty floor
    tile instead of the door ➊.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将门的动画帧存储在列表`frames`中，包括显示门关闭的第一帧和显示空地板瓷砖而不是门的最后一帧➊。
- en: We store the animation frame for the airlock door in the `airlock_door_frame`
    variable. If the player is standing on the pressure pad (at position *y* = 8 and
    *x* = 2) and the door is in the room ➌, the animation frame number is increased
    to open the door a bit more ➍. If the animation frame is now 5 ➎, then the door
    is fully opened, and the `props` dictionary and room map are updated to remove
    the door from the room.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将气闸门的动画帧存储在`airlock_door_frame`变量中。如果玩家站在压力垫上（位置*y* = 8，*x* = 2），且门在房间中➌，则动画帧编号会增加，门会稍微打开一些
    ➍。如果动画帧现在是5 ➎，则门完全打开，`props`字典和房间地图会更新，将门从房间中移除。
- en: We add another section of code to close the door when the player is *not* standing
    on the pressure pad and the door is already at least partially open ➏, so the
    door closes if the player moves off the pressure pad. The program only displays
    props that are in the room map for the current room, so the first instructions
    put the door (object 21) into the room map, even though the first animation frame
    will show the door fully open.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了另一段代码，用于在玩家*不*站在压力垫上且门已经至少部分打开时关闭门 ➏，因此当玩家离开压力垫时，门会关闭。程序只会显示当前房间地图中存在的道具，因此第一条指令将门（对象21）添加到房间地图中，尽管第一帧动画将显示门完全打开。
- en: Finally, we change the image file for the door in the `objects` dictionary to
    the current animation frame ➐. The door’s shadow image is also updated. As a result,
    when the room is drawn, the picture for the door shows its current animation frame.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将`objects`字典中门的图像文件更改为当前的动画帧 ➐。门的阴影图像也会更新。因此，当房间绘制时，门的图像会显示其当前的动画帧。
- en: This airlock routine creates a smooth effect where the door slides open when
    the player steps on the pressure pad, but slides shut again the moment they walk
    off. If they step back onto the pad while the door is shutting, it starts to open
    again.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这个气闸程序创建了一个平滑的效果，当玩家踩上压力垫时，门会滑开；但当玩家离开时，它又会迅速关闭。如果他们在门关闭时重新踩上垫子，门会重新打开。
- en: To make the airlock routine work, we also need to add the instruction to make
    the `door_in_room_26()` function run every 0.05 seconds when the player enters
    the room. When the `door_in_room_26()` function starts, it checks whether the
    player is still in room 26\. If the player has left the room, the instructions
    at ➋ in [Listing 11-6](ch11.xhtml#ch11list6) stop the function from running regularly
    and exit the function (using a `return` instruction) so that the door animation
    stops.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使气闸程序正常工作，我们还需要添加指令，让`door_in_room_26()`函数在玩家进入房间时每0.05秒运行一次。当`door_in_room_26()`函数启动时，它会检查玩家是否还在26号房间。如果玩家已经离开该房间，[Listing
    11-6](ch11.xhtml#ch11list6)中的第➋条指令会停止定期运行该函数并退出函数（使用`return`指令），以便门的动画停止。
- en: We’ll put the code that starts the `door_in_room_26()` function into the `start_room()`
    function at the top of the `GAME LOOP` section. The `start_room()` function runs
    when the player enters a room. [Listing 11-7](ch11.xhtml#ch11list7) shows the
    new instructions to add.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把启动`door_in_room_26()`函数的代码放入`start_room()`函数中，该函数位于`GAME LOOP`部分的顶部。`start_room()`函数在玩家进入房间时运行。[Listing
    11-7](ch11.xhtml#ch11list7)展示了需要添加的新指令。
- en: '*listing11-7.py*'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*listing11-7.py*'
- en: '[PRE6]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '*Listing 11-7: Scheduling the door animation for the airlock*'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '*Listing 11-7: 为气闸安排门动画*'
- en: Save your program as *listing11-7.py* and run it using pgzrun listing11-7.py.
    In the game, press X to use the teleporter and beam into room 26\. Now you can
    test that the pressure pad works as expected (see [Figure 11-2](ch11.xhtml#ch11fig2)).
    Try walking on it, off it, and across it to see how the door behaves.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 将程序保存为*listing11-7.py*，并使用pgzrun listing11-7.py运行它。在游戏中，按X键使用传送器并传送到26号房间。现在你可以测试压力垫是否按预期工作（参见[Figure
    11-2](ch11.xhtml#ch11fig2)）。尝试在上面走动、离开或穿过它，观察门的表现。
- en: Note that if you leave through the exit at the bottom of this room, a door appears
    that blocks your way back again. (Normally, you would only enter the airlock by
    opening that door and removing it from the game.) When you teleport into rooms,
    strange things like this might happen. It messes with the space-time continuum.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果你从房间底部的出口离开，门会出现并挡住你回来的路。（通常，你只会通过打开那扇门并将其从游戏中移除来进入气闸舱。）当你传送到房间时，像这样的奇怪情况可能会发生。它会扰乱时空连续性。
- en: '![image](../images/fig11-2.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![image](../images/fig11-2.jpg)'
- en: '*Figure 11-2: Standing on the pressure pad opens the door.*'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*Figure 11-2: 踩在压力垫上会打开门。*'
- en: '**REMOVING EXITS FOR YOUR OWN GAME DESIGNS**'
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**为你自己的游戏设计移除出口**'
- en: If you’re closing off exits for your own map designs, you might need to move
    or remove doors in those exits as well. To remove a door from the game, change
    the entry for that door in the `props` dictionary so its first number is a 0,
    or delete its entry from the dictionary.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在自己的地图设计中需要关闭出口，可能也需要移动或移除这些出口中的门。要从游戏中移除一扇门，可以在`props`字典中将该门的条目修改为其第一个数字为0，或者删除字典中的条目。
- en: If you’re customizing the game, you might also want to remove some of the custom
    code here that enables the special doors for the engineering bay and the airlock.
    To disable the pressure pad door, remove the new code in [Listings 11-6](ch11.xhtml#ch11list6)
    and [11-7](ch11.xhtml#ch11list7). To remove the timed door to the engineering
    bay, remove the code shown in [Listing 11-4](ch11.xhtml#ch11list4), and additionally
    remove the first chunk of new code in [Listing 11-1](ch11.xhtml#ch11list1) for
    pressing the button (using object 42).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在自定义游戏，你可能还想移除一些自定义代码，这些代码启用了工程舱和气闸的特殊门。要禁用压力垫门，请删除[Listings 11-6](ch11.xhtml#ch11list6)
    和 [11-7](ch11.xhtml#ch11list7) 中的新增代码。要移除通往工程舱的定时门，请删除[Listing 11-4](ch11.xhtml#ch11list4)
    中的代码，同时还需要移除[Listing 11-1](ch11.xhtml#ch11list1) 中的第一部分新代码（使用对象42按下按钮）。
- en: '**MISSION ACCOMPLISHED?**'
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**任务完成了吗？**'
- en: You’ve now finished building the space station, and it’s fully functional. It
    seems you can now settle into your new life, conducting experiments and exploring
    the red planet.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在已经完成了空间站的建设，并且它已经完全功能化。看来你现在可以开始新生活，进行实验并探索红色星球了。
- en: But, wait! What’s this? There could be trouble ahead.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 等等！这是什么？前方可能有麻烦。
- en: '**ARE YOU FIT TO FLY?**'
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**你准备好飞行了吗？**'
- en: Check the following boxes to confirm that you’ve learned the key lessons in
    this chapter.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选以下框以确认你已经学会了本章的关键知识点。
- en: '![Images](../images/box.jpg)  Doors can seal off parts of the game map, so
    players can discover puzzle elements in the right order.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  门可以封闭游戏地图的某些部分，因此玩家可以按正确的顺序发现谜题元素。'
- en: '![Images](../images/box.jpg)  Doors need to go at the top or the bottom of
    a room.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  门需要放置在房间的顶部或底部。'
- en: '![Images](../images/box.jpg)  Doors that are opened with access cards stay
    open.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  通过访问卡打开的门将保持打开状态。'
- en: '![Images](../images/box.jpg)  You can use the functions provided to add doors
    that close automatically, such as the door in the engineering bay.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  你可以使用提供的功能添加自动关闭的门，比如工程舱里的门。'
- en: '![Images](../images/box.jpg)  Doors are positioned using the `props` dictionary.
    Their images and descriptions are stored in the `objects` dictionary.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  门的位置是通过 `props` 字典进行设置的。它们的图像和描述存储在 `objects` 字典中。'
- en: '![Images](../images/box.jpg)  To animate the door, the program changes its
    image in the `objects` dictionary. When the room is redrawn, the new image is
    used for the door.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  为了给门添加动画，程序会更改 `objects` 字典中的门图像。当房间被重新绘制时，门会使用新的图像。'
- en: '![Images](../images/box.jpg)  If a door can be seen from both sides, it needs
    to be represented with two door props: one in each of the rooms where it can be
    seen.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  如果一扇门从两边都能看到，则需要用两个门道具表示：每个房间里各有一个门。'
- en: '![Images](../images/box.jpg)  `ACCESS_DICTIONARY` is used to remember which
    access cards unlock which doors. You could use other objects to open doors by
    making changes in this dictionary.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  `ACCESS_DICTIONARY` 用于记住哪些访问卡可以解锁哪些门。你可以通过在这个字典中做出修改，使用其他物品来打开门。'
- en: '![Images](../images/box.jpg)  To adjust the difficulty of the game, you can
    change the delay before the engineering door slams shut.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  要调整游戏的难度，你可以更改工程门关闭前的延迟时间。'
- en: '![Images](../images/box.jpg)  The teleporter enables you to beam into any room
    for testing purposes.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  传送器使你能够传送到任何房间进行测试。'
- en: '![Images](../images/box.jpg)  The `input()` function in Python treats what
    you enter as a string. To enable players to type in a number, use the `int()`
    function to convert what they enter to an integer.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](../images/box.jpg)  Python 中的 `input()` 函数将你输入的内容视为字符串。为了让玩家输入数字，可以使用
    `int()` 函数将输入内容转换为整数。'
