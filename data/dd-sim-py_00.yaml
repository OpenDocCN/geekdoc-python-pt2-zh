- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: '![](image_fi/book_art/chapterart.png)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![](image_fi/book_art/chapterart.png)'
- en: Python is a unique language. As a software developer, I have come to appreciate
    it for its particularities. There is a certain artistic beauty about a well-written
    Python program. I love when I find the most “Pythonic” solution to a problem and
    then look back and wonder how I thought any other answer would do.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一门独特的语言。作为一名软件开发人员，我已经开始欣赏它的独特性。一个写得好的 Python 程序具有某种艺术的美感。当我找到最“Pythonic”的解决方案时，我喜欢回过头来看，想知道我当时怎么会觉得其他答案会更好。
- en: Unfortunately, for years, I was crippled by an instinctual desire to view Python
    through the lens of the other languages I knew. Although I could read and write
    in Python, I failed to see the “obviousness” of a particular practice. It was
    like trying to speak Spanish using only a translation dictionary. I could write
    Python, but I couldn’t really *think* in Python. The essential qualities of the
    language were lost on me.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，多年来，我一直被一种本能的欲望所困扰，总是通过我所知道的其他语言的视角来看待 Python。虽然我能读写 Python，但我无法看出某些做法的“显而易见性”。就像用翻译词典说西班牙语一样。我能写
    Python，但我不能真正地*用 Python 思考*。这门语言的本质特性对我来说是迷失的。
- en: Once I started to truly understand Python—to think in it—I found a new delight
    in the language. Solutions became obvious. Design was a joy, rather than an enigma.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我开始真正理解 Python——用它思考——我在这门语言中找到了新的乐趣。解决方案变得显而易见。设计变成了享受，而不是谜题。
- en: When a brand-new developer cuts their teeth on Python, they have few preconceptions.
    They have no “native tongue” to hamper their introduction to the language. But
    for an established developer who picks up Python as a second or third language,
    the transition is in some ways far rougher. They must not only learn something
    new, but in many ways, they must *unlearn* something old.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个全新的开发者开始接触 Python 时，他们几乎没有什么先入为主的观念。他们没有“母语”来妨碍他们对这门语言的学习。但对于一个将 Python 作为第二或第三门语言学习的资深开发者来说，过渡在某些方面要困难得多。他们不仅需要学习新的东西，而且在许多方面，他们还必须*忘记*一些旧的东西。
- en: '*Dead Simple Python* is the guidebook for that journey.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 是那段旅程的指南。'
- en: Who Is This Book For?
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这本书适合谁阅读？
- en: If you are already familiar with another programming language and now wish to
    learn Python for the first time, without slogging through beginner-oriented courses,
    this book is for you. I’ll be focusing specifically on the “Pythonic” way of doing
    things, with minimal, targeted explanations of the underlying general programming
    concepts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经熟悉其他编程语言，并且现在希望第一次学习 Python，而不想通过面向初学者的课程来消耗时间，那么这本书适合你。我将特别关注“Pythonic”的做事方式，并对底层的一般编程概念进行最小、针对性的解释。
- en: If you’re an intermediate-level Python developer, you’ll also find this book
    useful. Although I’ve been working with Python for many years myself, some of
    these topics didn’t “click” for me until more recently. This book gives the explanations
    I wish I’d gotten.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是中级 Python 开发者，你也会发现这本书对你有帮助。尽管我自己已经使用 Python 很多年了，但有些话题直到最近才真正“触动”我。这本书提供了我希望当初能得到的解释。
- en: If you don’t already know programming, despair not. There are hundreds of excellent
    books and resources for learning Python as a first programming language. I particularly
    recommend either *Python Crash Course,* 2nd Edition, by Eric Matthes (No Starch
    Press, 2019) or *Automate the Boring Stuff with Python,* 2nd Edition, by Al Sweigart
    (No Starch Press, 2019). Afterward, you can return to this book to reinforce and
    expand upon your newfound knowledge.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还不懂编程，不要灰心。现在有数百本优秀的书籍和资源可以帮助你学习 Python 作为第一门编程语言。我特别推荐 Eric Matthes 的《*Python
    Crash Course*》第二版（No Starch Press, 2019）或 Al Sweigart 的《*Automate the Boring Stuff
    with Python*》第二版（No Starch Press, 2019）。然后，你可以回到本书中，巩固并扩展你刚刚学到的知识。
- en: What Does “Simple” Mean?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: “简单”意味着什么？
- en: The topics discussed herein may, at first blush, appear anything but simple.
    You may be wondering how simple a book this thick could actually be!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本书讨论的主题，乍一看，可能显得并不简单。你可能会想，这本书这么厚，怎么可能简单呢？
- en: When I titled this book *Dead Simple Python*, I was describing a retrospective
    view of the topics, rather than a forward-looking one. One should recognize that
    any topic worth learning, when first approached, will feel insurmountable. Similarly,
    any explanation worthy of an existing software developer should possess enough
    depth to utterly disqualify it from the forward-looking label of “simple.”
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 当我为本书命名为*死简单 Python*时，我描述的是对这些主题的回顾视角，而非前瞻性视角。应该认识到，任何值得学习的主题，在最初接触时都会显得难以逾越。同样，任何值得现有软件开发者学习的解释，都应该具有足够的深度，完全排除它作为“简单”的前瞻性标签。
- en: Instead, I aim to unpack each topic in such a manner that, by the conclusion
    of the section, the reader cannot help but feel the concept is altogether obvious.
    Regardless of the topic’s initial appearance of complexity, the reader should
    be ultimately left with an impression that it is actually “dead simple,” at which
    point, they may be assured they are thinking like a native Python developer.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，我的目标是以一种方式来剖析每个主题，使得在章节结束时，读者无法不觉得这个概念是完全显而易见的。无论主题最初看起来多么复杂，读者最终应该留下的印象是它其实是“死简单”的，到那时，他们就可以确信自己已经像一名本土Python开发者一样思考。
- en: To achieve this level of understanding, I generally start by unpacking the lowest-level,
    most explicit form of the topic. Once that is established, I add layer upon layer,
    ultimately reaching the implicit, idiomatic form most commonly used. In this way,
    I hope to help you, the reader, come away with a solid, comfortable understanding
    of precisely why and how each feature of the language works.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了达到这个理解水平，我通常从最底层、最明确的形式开始剖析每个主题。一旦基础建立，我会层层递进，最终达到大多数人常用的隐性、习惯用法。通过这种方式，我希望帮助你，读者，获得对每个语言特性为什么以及如何工作的扎实、舒适的理解。
- en: What’s in This Book?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书内容
- en: '*Dead Simple Python* is divided into five sections. Unlike many beginner-oriented
    courses, I’m going to assume you want to start writing production-quality code
    (rather than just oversimplified tutorial examples) as soon as possible. My approach
    requires you to do some initial work, but it pays off by ensuring you can apply
    your new knowledge to live projects more readily.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*死简单 Python* 被分为五个部分。与许多面向初学者的课程不同，我假设你想尽快开始编写生产质量的代码（而不仅仅是过于简化的教程示例）。我的方法要求你做一些初步的工作，但通过确保你能更轻松地将新知识应用于实际项目，它最终会带来回报。'
- en: 'Part I, “The Python Environment” (Chapters 1–4), firmly establishes you in
    the world of Python: its philosophy, tools, basic syntax, and project layout.
    This will provide a solid foundation for writing real, substantial code.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分，“Python环境”（第1-4章），为你扎实地奠定了Python世界的基础：其哲学、工具、基本语法和项目布局。这将为编写真正的、有意义的代码提供坚实的基础。
- en: Part II, “Essential Structures” (Chapters 5–8), explores Python’s basic structural
    elements—variables, functions, classes, and exceptions—and teaches you how to
    use them to their fullest potential.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第二部分，“基本结构”（第5-8章），探讨了Python的基本结构元素——变量、函数、类和异常——并教你如何最大化它们的潜力。
- en: Part III, “Data and Flow” (Chapters 9–12), covers the many unique ways of controlling
    execution flow and manipulating data. It discusses data structures, loops, iteration,
    generators, coroutines, files, and binary data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分，“数据与流”（第9-12章），涵盖了许多独特的控制执行流和操作数据的方法。它讨论了数据结构、循环、迭代、生成器、协程、文件和二进制数据。
- en: Part IV, “Advanced Concepts” (Chapters 13–17), unlocks advanced tactics that
    can make your code more powerful, including inheritance, introspection, and concurrency.
    It addresses many of the “scary” topics that are skimmed over by most courses
    and tutorials.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第四部分，“高级概念”（第13-17章），解锁了可以使你的代码更强大的高级技巧，包括继承、反射和并发。它涉及了许多大多数课程和教程都会略过的“可怕”主题。
- en: Part V, “Beyond the Code” (Chapters 18–20), teaches you how to test, debug,
    and deploy real-life projects.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第五部分，“超越代码”（第18-20章），教你如何测试、调试和部署真实项目。
- en: Finally, Chapter 21 provides an overview of the many directions you can take
    your Python development journey from here.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，第21章概述了你可以从这里开始的许多Python开发之路。
- en: What’s NOT in This Book
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本书不包括的内容
- en: Since this book is intended for existing programmers, I won’t be rehashing much
    general theory. Readers should already know (from a language-agnostic standpoint)
    what variables and functions are, what the difference is between classes and objects,
    and so forth. At most, I’ll briefly define those concepts that aren’t quite ubiquitous
    in the programming world.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本书面向的是已有编程经验的读者，我不会过多地重复一般性理论。读者应该已经知道（从语言无关的角度）什么是变量和函数，类和对象之间的区别等等。最多，我会简要定义那些在编程界并不完全普及的概念。
- en: My discussion of topics is far from exhaustive. I’m focusing more on the *why*
    and *how*, thereby providing a strong foundation. Readers are encouraged to broaden
    their understanding through additional, independent reading, so I’ll leave the
    comprehensive listing of library functions and the like to the documentation.
    Many popular features in the standard library, such as random numbers and datetime
    operations, are afforded little more than incidental explanation when they’re
    used in an example.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我的讨论内容远不全面。我更注重探讨 *为什么* 和 *如何*，从而提供一个坚实的基础。鼓励读者通过额外的独立阅读来扩展自己的理解，因此我会把库函数等的详尽列举留给文档。标准库中许多流行的功能，如随机数和日期时间操作，在例子中使用时往往只是得到简短的说明。
- en: To control the scope of this book, I also won’t be covering most third-party
    tools and libraries. I am frequently asked to discuss popular alternatives to
    the default tools in Python, but as these alternatives fall in and out of favor
    like the passing of the seasons, I will be sticking largely to the universal defaults.
    There are scattered exceptions, but only when a third-party tool has become practically
    ubiquitous in the ecosystem, eclipsing even the standard library.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了控制本书的范围，我也不会涉及大多数第三方工具和库。我经常被要求讨论与 Python 默认工具相对的流行替代品，但由于这些替代品像季节更替一样时有时无，我将主要坚持使用通用的默认工具。当然也有一些例外，只有在某个第三方工具已在生态系统中变得几乎无处不在，甚至超越了标准库时，我才会提及它。
- en: In general, when a third-party tool or library seems of particular note, I will
    refer the reader to its official documentation or website.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当一个第三方工具或库特别值得注意时，我会将读者引导到它的官方文档或网站。
- en: How to Read This Book
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何阅读本书
- en: '*Dead Simple Python* is intended more as a guided tour than a desk reference.
    I recommend starting here, at the beginning, and working your way through the
    chapters, in order. Whether you’re new to the language or have been trying to
    use it for a while without feeling like you “get it,” you’ll discover that this
    approach will fill in many knowledge gaps you never realized you had.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '*Dead Simple Python* 更像是一次引导式的旅程，而非桌面参考书。我建议从本书一开始读起，按顺序逐章阅读。无论你是刚接触这门语言的新手，还是已经尝试过一段时间却感觉自己始终没有“掌握”它的人，你会发现，这种方法能够填补你未曾意识到的许多知识空白。'
- en: However, if you know of a particular topic you need a better understanding of
    *right now*, you can skip directly to the chapter that deals with it. Most chapters
    are written to stand alone, but I will always assume that you have read and understand
    the material in the preceding chapters.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你知道自己 *现在* 需要更好理解某个特定话题，可以直接跳到相应的章节。大多数章节都是独立的，但我会始终假设你已经阅读并理解了前面章节的内容。
- en: About the Vocabulary
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于词汇
- en: Nearly any Python book or online article uses vocabulary borrowed from other
    languages, such as words like *element*, *body*, and *variable*. While this is
    often assumed to be helpful because it relates Python concepts to readers’ existing
    knowledge, I believe borrowing such vocabulary is ultimately counterproductive.
    Attempting to understand Python primarily in terms of other languages frustrates
    many attempts to write clear, idiomatic code. What’s more, if one gets in the
    habit of using the wrong vocabulary, one will find the official documentation
    profoundly difficult to read.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎所有的 Python 书籍或在线文章都会使用借自其他语言的词汇，例如 *element*（元素）、*body*（主体）和 *variable*（变量）等词汇。虽然这种做法常常被认为有助于将
    Python 概念与读者已有的知识关联，但我认为借用这些词汇最终是适得其反的。主要通过其他语言的术语来理解 Python 会让很多尝试编写清晰、规范代码的努力变得更加艰难。而且，如果习惯了使用错误的词汇，官方文档也会显得非常难以阅读。
- en: Therefore, I’ve decided to adhere doggedly to the official vocabulary, even
    if a majority of the community considers an approximate synonym acceptable. This
    may be one of the few books in print that takes this position, but I consider
    it important. To become a native, you must learn to speak the local dialect!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我决定坚持使用官方术语，即使大多数社区成员认为某些近似同义词是可以接受的。这可能是为数不多的坚持这一立场的书籍之一，但我认为这是非常重要的。要成为本地人，你必须学会讲当地的方言！
- en: Theory Recaps
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 理论回顾
- en: Depending on what languages you already know, there may be some gaps in your
    theory repertoire. For example, if you are a Haskell developer, you may be unfamiliar
    with object-oriented programming, or if you are a C++ developer, you may be unfamiliar
    with pure functional programming.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你已经掌握的语言，你的理论知识库中可能会有一些空白。例如，如果你是Haskell开发者，可能对面向对象编程不太熟悉；如果你是C++开发者，可能对纯函数式编程不太了解。
- en: To bridge these gaps, I provide occasional *Theory Recaps*, brief overviews
    of the essential theory and best practices related to certain programming paradigms
    and patterns. That way, if you already know a particular concept, you can skip
    over the Theory Recap and get right to the Python-specific stuff.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了弥补这些空白，我提供了偶尔的*理论回顾*，简要概述与某些编程范式和模式相关的基本理论和最佳实践。这样，如果你已经熟悉某个概念，你可以跳过理论回顾，直接进入与Python相关的内容。
- en: Objective or Opinionated?
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 客观还是有偏见？
- en: It’s almost impossible to keep personal opinions out of a technical book, especially
    one as focused on idiomatic practice as this one, but I like to think I’ve done
    my best to remain objective.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在一本技术书籍中，几乎不可能完全排除个人观点，尤其是像本书这样专注于惯用实践的书籍，但我希望自己尽力保持客观。
- en: '*Dead Simple Python* is not my personal take on Python, but rather it is the
    distilled collective wisdom of the Python community. I am not the same developer
    as when I started writing. My own development practices have changed drastically
    as a result of the two years of research, experimentation, and heated debate that
    went into this book.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*简单Python* 不是我个人对Python的看法，而是Python社区的集体智慧的浓缩。我不是开始写书时的那个开发者。经过两年的研究、实验和激烈辩论，我的开发实践发生了巨大的变化。'
- en: Even so, it’s impossible to please everybody all the time. At times, I’ve made
    particular note in the text about debates that never reached a satisfactory conclusion.
    Even matters I consider settled are likely to provoke strong negative reactions
    from some Python developers; indeed, some of them provoked strong reactions in
    me until I better understood them.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，永远无法让每个人都满意。有时候，我会在文中特别提到那些永远没有得出令人满意结论的争论。即使是我认为已经解决的问题，也可能会引起一些Python开发者的强烈反应；事实上，直到我更好地理解它们，一些问题也曾让我产生过强烈的反应。
- en: I recommend you go into this book with an open mind, even if you consider yourself
    reasonably familiar with programming or even with Python itself. I’ve made an
    effort to explain the justifications behind all the recommendations herein, and
    I would encourage you to expect at least the same degree of reasoning to accompany
    *any* valid recommendation.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议你以开放的心态阅读这本书，即使你认为自己对编程或甚至对Python本身已经相当熟悉。我已经努力解释书中所有建议的理由，并且鼓励你期待*任何*有效的建议都能附带相同程度的推理。
- en: The Examples
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 示例
- en: I’ve carefully constructed the majority of my examples in this book to demonstrate
    realistic (if simplified) use cases for whatever topic I’m discussing. In many
    situations, I’ll deliberately complicate the example to highlight issues and surprises
    that tutorials often gloss over. I’ve made an effort to point out all the times
    my examples get a bit convoluted, but you should know that I may oversimplify
    or otherwise tiptoe around anything irrelevant to the immediate topic.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我在书中大多数示例的构造上都经过了精心设计，旨在展示我所讨论的每个主题的实际（尽管是简化的）用例。在很多情况下，我会故意让示例变得复杂，以突出教程中常常忽视的问题和惊讶。我已经尽力指出每次我的示例变得有些复杂的地方，但你需要知道，我也可能会简化某些内容，或者避开与当前主题无关的部分。
- en: This approach also often necessitates longer examples than you may be used to
    from tutorials, so chapters may appear longer than they effectively are. Don’t
    be discouraged by page counts; take it one section at a time.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法也常常需要比你习惯的教程更长的示例，因此章节可能比实际内容看起来要长。不要被页面数量吓到，一次专注于一个部分。
- en: All the examples in this book run, or at least fail predictably, except as otherwise
    noted. I adhere to Python style conventions throughout. I highly recommend retyping
    each example yourself and experimenting with it.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有示例都可以运行，或者至少可以按预期失败，除非另有说明。我始终遵循 Python 风格规范。我强烈推荐你自己重新输入每个示例并进行实验。
- en: I’ve made an effort to label the segments of Python code meant to be saved in
    files as part of runnable examples. The filename is given, and the sections are
    numbered `:1`, `:2`, and so on. When a section is revised, I tack a letter on
    after the section, so section `:2b` would revise section `:2a`; the revisions
    themselves are in `bold`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经努力将 Python 代码中的部分保存到文件作为可运行示例的段落进行标注。每个文件名都有给出，段落也按 `:1`、`:2` 等编号。当某个段落被修改时，我会在段落后加一个字母，因此
    `:2b` 会修改 `:2a`；这些修改本身是用**粗体**标出的。
- en: 'Nearly all the examples in this book can be found on the book’s official GitHub
    repository: [https://github.com/codemouse92/DeadSimplePython.](https://github.com/codemouse92/DeadSimplePython)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的几乎所有示例都可以在本书的官方 GitHub 仓库中找到：[https://github.com/codemouse92/DeadSimplePython](https://github.com/codemouse92/DeadSimplePython)
- en: What About a Project?
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 那么项目怎么办？
- en: 'I’ve been asked why I don’t provide a comprehensive project that we can work
    through in this book, but the answer is fairly simple: I’m assuming that you’re
    probably here because you already have some project you want to use Python for.
    Instead of distracting you from that, I’ll focus on presenting material in a way
    that you can apply to your work.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾被问到为什么不提供一个完整的项目让我们在书中一起做，答案其实很简单：我假设你可能已经有一个想用 Python 完成的项目。与其让你分心，不如专注于以一种你能应用到自己工作中的方式呈现材料。
- en: 'If you *don’t* have a project in mind, now may be a great time to start one!
    Think of a problem you personally wish there were a solution (or a better solution)
    for, then build that solution. Pick one small part of the problem and start there.
    There’s no magic formula for creating the perfect first project, other than to
    make it something you’d personally use. Don’t worry about making it perfect, or
    even good, your first time around. There’s a truism in this industry: “You always
    throw the first one away.” Don’t be afraid to build it wrong at first! This book
    will give you the tools to go back and make it right.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你*没有*项目想法，现在可能是个很好的时机开始一个项目！想想一个你个人希望有解决方案（或更好的解决方案）的难题，然后去构建这个解决方案。挑选问题的一小部分，从那里开始。没有什么神奇的公式可以帮助你创建完美的第一个项目，唯一的原则就是它应该是你自己会使用的东西。不要担心第一次做的不完美，甚至做得不好。这个行业有句真理：“你总是会把第一个丢掉。”不要害怕一开始做错！这本书会给你工具，帮助你回过头来做对。
- en: Of course, if a project is completely impractical to you, you’ll do just fine
    working through this book’s examples.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果某个项目对你来说完全不可行，你只需要完成本书中的示例就能做得很好。
- en: In any case, I do ***strongly*** recommend creating a personal “firing range”
    project, for trying out Python in an environment where breaking things won’t have
    significant consequences. I’ll introduce running Python code in Chapters 2 and
    3, and I’ll cover project structure in Chapter 4. I’ll revisit project structure
    when I discuss packaging and distribution in Chapter 18.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，我***强烈***推荐你创建一个个人“靶场”项目，在一个能够尝试 Python 的环境中，在破坏东西不会有重大后果的情况下进行实验。我将在第二章和第三章介绍如何运行
    Python 代码，并在第四章讲解项目结构。第十八章中，我会再次讨论项目结构，讲解打包和分发。
- en: Prerequisites
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前提条件
- en: You should already know the essentials of programming in another language. This
    book teaches Python, not programming.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该已经了解另一种编程语言的基本知识。本书教授的是 Python，而不是编程。
- en: You should have access to a computer capable of running Python 3.7 or later.
    If you haven’t actually installed Python yet, don’t worry—we’ll be doing that
    in Chapter 2.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该有一台能够运行 Python 3.7 或更高版本的计算机。如果你还没有安装 Python，不用担心——我们将在第二章进行安装。
- en: You should know the basics of using the command line on your computer, especially
    relative and absolute paths, and navigating the filesystem. If you don’t understand
    all that, go learn it now. (I’ll wait.)
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该了解如何在计算机上使用命令行，特别是相对路径和绝对路径，以及如何浏览文件系统。如果你不理解这些，去学一下吧。（我等你。）
- en: You should have an internet connection, even a slow one, for viewing the documentation
    and occasionally downloading packages. However, I’ve tried to maximize the number
    of examples that work without internet.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你应该有网络连接，哪怕是较慢的网络，也能用来查看文档和偶尔下载软件包。不过，我尽力使得大部分示例都能在没有网络的情况下运行。
- en: Now, go get a cup of your favorite beverage and settle in at your computer with
    a notebook and pen. Let’s get started!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，去拿一杯你最喜欢的饮品，带上笔记本和钢笔，坐在电脑前。我们开始吧！
