- en: C
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: C
- en: Getting Help
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 寻求帮助
- en: '![](Images/chapterart.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/chapterart.png)'
- en: Everyone gets stuck at some point when they’re learning to program. So, one
    of the most important skills to learn as a programmer is how to get unstuck efficiently.
    This appendix outlines several ways to help you get going again when programming
    gets confusing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人在学习编程时都会遇到卡壳的情况。因此，作为程序员，最重要的技能之一就是如何高效地解决问题。这个附录概述了几种在编程遇到困惑时帮助你重新开始的方法。
- en: First Steps
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一步骤
- en: 'When you’re stuck, your first step should be to assess your situation. Before
    you ask for help from anyone else, answer the following three questions clearly:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当你遇到困难时，第一步应该是评估自己的情况。在向其他人寻求帮助之前，清晰地回答以下三个问题：
- en: What are you trying to do?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在尝试做什么？
- en: What have you tried so far?
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你到目前为止尝试了什么？
- en: What results have you been getting?
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你得到了什么结果？
- en: Make your answers as specific as possible. For the first question, explicit
    statements like “I’m trying to install the latest version of Python on my new
    Windows laptop” are detailed enough for others in the Python community to help
    you. Statements like “I’m trying to install Python” don’t provide enough information
    for others to offer much help.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让你的回答尽可能具体。对于第一个问题，像“我正在尝试在我的新 Windows 笔记本电脑上安装最新版本的 Python”这样的明确陈述已经足够详细，能够帮助
    Python 社区的其他人提供帮助。而像“我正在尝试安装 Python”这样的说法，则无法提供足够的信息，其他人也无法提供太多帮助。
- en: 'Your answer to the second question should provide enough detail so you won’t
    be advised to repeat what you’ve already tried: “I went to [https://python.org/downloads](https://python.org/downloads)
    and clicked the Download button for my system. Then I ran the installer” is more
    helpful than “I went to the Python website and downloaded something.”'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你对第二个问题的回答应该提供足够的细节，这样就不会建议你重复已经尝试过的步骤：“我去了[https://python.org/downloads](https://python.org/downloads)并点击了适合我系统的下载按钮。然后我运行了安装程序”比“我去了
    Python 网站下载了一些东西”更有帮助。
- en: For the third question, it’s helpful to know the exact error messages you received,
    so you can use them to search online for a solution or provide them when asking
    for help.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第三个问题，了解你收到的具体错误信息非常有帮助，这样你就可以利用这些信息在网上搜索解决方案，或者在寻求帮助时提供这些信息。
- en: 'Sometimes, just answering these three questions before you ask for help from
    others allows you to see something you’re missing, and helps get you unstuck without
    having to go any further. Programmers even have a name for this: *rubber duck
    debugging*. The idea is that if you clearly explain your situation to a rubber
    duck (or any inanimate object) and ask it a specific question, you’ll often be
    able to answer your own question. Some programming teams even keep a real rubber
    duck around to encourage people to “talk to the duck.”'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，仅仅在向他人寻求帮助之前回答这三个问题，就能让你发现自己遗漏的东西，并帮助你摆脱困境，而无需进一步寻求帮助。程序员甚至给这个过程起了个名字：*橡皮鸭调试*。这个想法是，如果你清楚地向一只橡皮鸭（或任何无生命的物体）解释你的情况，并向它提出一个具体的问题，你通常能够自己找到答案。有些编程团队甚至会保留一只真正的橡皮鸭，以鼓励大家“与鸭子交谈”。
- en: Try It Again
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 再试一次
- en: Just going back to the start and trying again can be enough to solve many problems.
    Say you’re trying to write a `for` loop based on an example in this book. You
    might have only missed something simple, like a colon at the end of the `for`
    line. Going through the steps again might help you avoid repeating the same mistake.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，回到一开始再试一次就能解决很多问题。比如，你正在尝试根据本书中的示例编写一个 `for` 循环。你可能只是错过了一些简单的东西，比如 `for`
    语句末尾的冒号。再走一遍步骤可能会帮助你避免重复相同的错误。
- en: Take a Break
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 休息一下
- en: 'If you’ve been working on the same problem for a while, taking a break is one
    of the best tactics you can try. When we work on the same task for long periods
    of time, our brains start to zero in on only one solution. We lose sight of the
    assumptions we’ve made, and taking a break helps us get a fresh perspective on
    the problem. It doesn’t need to be a long break, just something that gets you
    out of your current mindset. If you’ve been sitting for a long time, do something
    physical: take a short walk, go outside for a bit, or perhaps drink a glass of
    water or eat a light snack.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经在同一个问题上工作了一段时间，休息一下是你可以尝试的最佳策略之一。当我们长时间专注于同一任务时，大脑会开始只关注一种解决方案。我们失去了对我们所做假设的关注，而休息有助于我们从新的角度看待问题。这不一定需要很长时间的休息，只需要让你摆脱当前的思维模式。如果你已经坐了很长时间，可以做些身体活动：短暂散步、到外面走一走，或者喝杯水或吃点零食。
- en: If you’re getting frustrated, it might be worth putting your work away for the
    day. A good night’s sleep almost always makes a problem more approachable.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你感到沮丧，可能值得把工作放一放，休息一下。良好的睡眠几乎总能让问题变得更易于解决。
- en: Refer to This Book’s Resources
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请参考本书的资源
- en: The online resources for this book, available at [https://ehmatthes.github.io/pcc_3e](https://ehmatthes.github.io/pcc_3e),
    include a number of helpful sections about setting up your system and working
    through each chapter. If you haven’t done so already, take a look at these resources
    and see if there’s anything that helps your situation.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的在线资源，可以通过 [https://ehmatthes.github.io/pcc_3e](https://ehmatthes.github.io/pcc_3e)
    访问，包含了许多有助于设置系统和逐章操作的部分。如果你还没有查看过，请看一下这些资源，看看是否有对你情况有帮助的内容。
- en: Searching Online
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在线搜索
- en: Chances are good that someone else has had the same problem you’re having and
    has written about it online. Good searching skills and specific inquiries will
    help you find existing resources to solve the issue you’re facing. For example,
    if you’re struggling to install the latest version of Python on a new Windows
    system, searching for *install python windows* and limiting the results to resources
    from the last year might direct you to a clear answer.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 很有可能，别人已经遇到过你现在所遇到的问题，并在网上写下了解决方法。良好的搜索技能和具体的问题会帮助你找到现有的资源来解决你面临的问题。例如，如果你在新
    Windows 系统上安装最新版 Python 时遇到困难，搜索 *install python windows* 并将结果限定在过去一年内，可能会引导你找到一个清晰的答案。
- en: 'Searching the exact error message can be extremely helpful too. For example,
    say you get the following error when you try to run a Python program from a terminal
    on a new Windows system:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索确切的错误信息也能非常有帮助。例如，如果你在新 Windows 系统的终端中运行 Python 程序时遇到以下错误：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Searching for the full phrase, “Python was not found; run without arguments
    to install from the Microsoft Store,” will probably yield some good advice.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索完整的短语，“Python was not found; run without arguments to install from the Microsoft
    Store”，可能会得到一些有用的建议。
- en: When you start searching for programming-related topics, a few sites will appear
    repeatedly. I’ll describe some of these sites briefly, so you’ll know how helpful
    they’re likely to be.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始搜索与编程相关的主题时，几个网站会反复出现。我将简要描述这些网站，让你了解它们可能有多么有帮助。
- en: Stack Overflow
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Stack Overflow
- en: '*Stack Overflow* ([https://stackoverflow.com](https://stackoverflow.com)) is
    one of the most popular question-and-answer sites for programmers, and it will
    often appear in the first page of results on Python-related searches. Members
    post questions when they’re stuck, and other members try to give helpful responses.
    Users can vote for the responses they find most helpful, so the best answers are
    usually the first ones you’ll find.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*Stack Overflow* ([https://stackoverflow.com](https://stackoverflow.com)) 是程序员最受欢迎的问答网站之一，通常会出现在
    Python 相关搜索的结果第一页。会员们在遇到困难时发布问题，其他会员则尝试提供有帮助的回答。用户可以投票支持他们认为最有用的回答，因此最好的回答通常是你最先能找到的。'
- en: Many basic Python questions have very clear answers on Stack Overflow, because
    the community has refined them over time. Users are encouraged to post updates,
    too, so responses tend to stay relatively current. At the time of this writing,
    almost two million Python-related questions have been answered on Stack Overflow.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 许多基础的 Python 问题在 Stack Overflow 上都有非常清晰的答案，因为社区随着时间的推移已经将其完善。用户也被鼓励发布更新，因此回答通常保持相对的时效性。截止本文写作时，几乎有两百万个与
    Python 相关的问题在 Stack Overflow 上得到了回答。
- en: There’s one expectation you should be aware of before posting on Stack Overflow.
    Questions are meant to be the shortest example of the kind of issue you’re facing.
    If you post 5–20 lines of code that generate the error you’re facing, and if you
    address the questions mentioned in “First Steps” on page 477 earlier in this appendix,
    someone will probably help you. If you share a link to a project with multiple
    large files, people will be very unlikely to help. There’s a great guide to writing
    up a good question at [https://stackoverflow.com/help/how-to-ask](https://stackoverflow.com/help/how-to-ask).
    The suggestions in this guide are applicable to getting help in any community
    of programmers.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在你在 Stack Overflow 上发布问题之前，有一个期望需要了解。问题应该是你面临的情况的最简短示例。如果你发布 5 到 20 行代码，能够重现你遇到的错误，并且如果你在本附录第
    477 页中提到的“第一步”中回答了相关问题，通常会有人帮助你。如果你分享一个包含多个大型文件的项目链接，人们就很不可能提供帮助。这里有一个很好的指南，介绍了如何写出一个好的问题：[https://stackoverflow.com/help/how-to-ask](https://stackoverflow.com/help/how-to-ask)。这个指南中的建议适用于任何程序员社区求助时。
- en: The Official Python Documentation
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 官方 Python 文档
- en: The official Python documentation ([https://docs.python.org](https://docs.python.org))
    is a bit more hit-or-miss for beginners, because its purpose is more to document
    the language than to provide explanations. The examples in the official documentation
    should work, but you might not understand everything shown. Still, it’s a good
    resource to check when it comes up in your searches, and it will become more useful
    to you as you continue building your understanding of Python.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 官方 Python 文档（[https://docs.python.org](https://docs.python.org)）对于初学者来说可能有些难以掌握，因为它的目的更多是记录语言本身，而不是提供详细的解释。官方文档中的示例通常可以正常工作，但您可能无法理解其中的所有内容。不过，它仍然是一个在搜索中遇到时可以参考的好资源，并且随着您对
    Python 理解的加深，它将变得更加有用。
- en: Official Library Documentation
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 官方库文档
- en: If you’re using a specific library, such as Pygame, Matplotlib, or Django, links
    to the official documentation for it will often appear in searches. For example,
    [https://docs.djangoproject.com](https://docs.djangoproject.com) is very helpful
    when working with Django. If you’re planning to work with any of these libraries,
    it’s a good idea to become familiar with their official documentation.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是某个特定的库，例如 Pygame、Matplotlib 或 Django，相关的官方文档链接通常会出现在搜索结果中。例如，[https://docs.djangoproject.com](https://docs.djangoproject.com)
    在使用 Django 时非常有帮助。如果您计划使用这些库，熟悉它们的官方文档是一个不错的主意。
- en: r/learnpython
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: r/learnpython
- en: Reddit is made up of a number of subforums called *subreddits*. The *r/learnpython*
    subreddit ([https://reddit.com/r/learnpython](https://reddit.com/r/learnpython))
    is very active and supportive. You can read others’ questions and post your own
    as well. You will often get multiple perspectives about the questions you raise,
    which can be really helpful in gaining a deeper understanding of the topic you’re
    working on.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Reddit 由多个名为 *subreddit* 的子论坛组成。*r/learnpython* 子论坛（[https://reddit.com/r/learnpython](https://reddit.com/r/learnpython)）非常活跃且充满支持。您可以阅读他人的问题并发布自己的问题。通常您会得到多个不同的观点，这对于深入理解您正在研究的主题非常有帮助。
- en: Blog Posts
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 博客文章
- en: Many programmers maintain blogs and share posts about the parts of the language
    they’re working with. You should look for a date on the blog posts you find, to
    see how applicable the information is likely to be for the version of Python you’re
    using.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 许多程序员会维护博客并分享他们正在使用的语言部分的文章。您应该查看博客文章上的日期，以判断其信息是否适用于您正在使用的 Python 版本。
- en: Discord
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Discord
- en: '*Discord* is an online chat environment with a Python community where you can
    ask for help and follow Python-related discussions.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*Discord* 是一个在线聊天平台，拥有一个 Python 社区，您可以在这里寻求帮助并参与 Python 相关的讨论。'
- en: To check it out, head to [https://pythondiscord.com](https://pythondiscord.com)
    and click the **Discord** link at the upper right. If you already have a Discord
    account, you can log in with your existing account. If you don’t have an account,
    enter a username and follow the prompts to complete your Discord registration.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看它，请访问 [https://pythondiscord.com](https://pythondiscord.com) 并点击右上角的 **Discord**
    链接。如果您已经有 Discord 账户，可以使用现有账户登录。如果没有账户，请输入用户名并按照提示完成注册。
- en: If this is your first time visiting the Python Discord, you’ll need to accept
    the rules for the community before participating fully. Once you’ve done that,
    you can join any of the channels that interest you. If you’re looking for help,
    be sure to post in one of the Python Help channels.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是您第一次访问 Python Discord，您需要先接受社区规则才能完全参与。一旦完成，您可以加入任何您感兴趣的频道。如果您需要帮助，请确保在
    Python 帮助频道中发帖。
- en: Slack
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Slack
- en: '*Slack* is another online chat environment. It is often used for internal company
    communications, but there are also many public groups you can join. If you want
    to check out Python Slack groups, start with [https://pyslackers.com](https://pyslackers.com).
    Click the **Slack** link at the top of the page, then enter your email address
    to get an invitation.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*Slack* 是另一个在线聊天平台。它通常用于公司内部通讯，但也有许多公共小组您可以加入。如果您想查看 Python Slack 小组，可以从 [https://pyslackers.com](https://pyslackers.com)
    开始。点击页面顶部的 **Slack** 链接，然后输入您的电子邮件地址以获取邀请。'
- en: Once you’re in the Python Developers workspace, you’ll see a list of channels.
    Click **Channels** and then choose the topics that interest you. You might want
    to start with the *#help* and *#django* channels.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入 Python 开发者工作区，您将看到一个频道列表。点击 **Channels**，然后选择您感兴趣的话题。您可能希望从 *#help* 和 *#django*
    频道开始。
